/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IDappadStake,
  IDappadStakeInterface,
} from "../../../../../contracts/variants/PrivateSale/Interfaces.sol/IDappadStake";

const _abi = [
  {
    inputs: [],
    name: "getTierCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getUserTierIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IDappadStake__factory {
  static readonly abi = _abi;
  static createInterface(): IDappadStakeInterface {
    return new Interface(_abi) as IDappadStakeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IDappadStake {
    return new Contract(address, _abi, runner) as unknown as IDappadStake;
  }
}
