{"id":"e713ed70eda72d8e755fa23fb891f673","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the Merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates Merkle trees that are safe\n * against this attack out of the box.\n */\nlibrary MerkleProof {\n    /**\n     *@dev The multiproof provided is not valid.\n     */\n    error MerkleProofInvalidMultiproof();\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Calldata version of {verify}\n     */\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Calldata version of {processProof}\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Calldata version of {multiProofVerify}\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proofLen != totalHashes + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            if (proofPos != proofLen) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Calldata version of {processMultiProof}.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proofLen != totalHashes + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            if (proofPos != proofLen) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Sorts the pair (a, b) and hashes the result.\n     */\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\n    }\n\n    /**\n     * @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory.\n     */\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/core/DappadSale.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\nimport \"../interfaces/Interfaces.sol\";\nimport \"../errors/Errors.sol\";\n\ncontract DappadSale is AccessControl {\n    bytes32 public constant OWNER = keccak256(\"OWNER\");\n    bytes32 public constant ADMIN = keccak256(\"ADMIN\");\n\n    IDappadSale.Sale public sale;\n    IDappadSale.SaleStatistics public saleStatistics;\n\n    IERC20Extented public registerToken;\n    IERC20Extented public investmentToken;\n    IDappadStakeController public stakeControllerContract;\n    IDappadVesting public vestingContract;\n\n    mapping(address => IDappadSale.SaleRegisterDetails) public registerDetails;\n    mapping(uint256 => IDappadSale.SaleTierDetails) public tierDetails;\n    mapping(address => bool) public refunded;\n    mapping(address => uint256) public investmentAmounts;\n\n    event UserRegisteredSale(address user, uint256 tierIndex, uint256 registerTime, uint256 totalRegisters, uint256 totalRegisterTokenAmountLeft);\n    event UserJoinedSale(address user, uint256 tierIndex, uint256 amount, uint256 investmentAmount, uint256 totalInvestmentAmount, uint256 totalParticipants, uint256 joinedTime, uint256 nftBalance);\n    event UserJoinedFcfsSale(address user, uint256 tierIndex, uint256 amount, uint256 investmentAmount, uint256 totalInvestmentAmount, uint256 totalParticipants, uint256 joinedTime, uint256 nftBalance);\n    event UserRefundedSale(address user, uint256 userTierIndex, uint256 investmentAmount, uint256 totalInvestmentAmount, uint256 refundedTime);\n    event SalePausedUpdated(bool salePaused);\n    event SaleCompleted(address projectOwnerFeeAddress, uint256 projectOwnerFeeAmount, address launchpadFeeAddress, uint256 launchpadFeeAmount, uint256 completedTime);\n    event VestingContractUpdated(address vestingContractAddress);\n    event StakeControllerContractUpdated(address stakeControllerContractAddress);\n    event SaleAddressesUpdated(IDappadSale.SaleAddresses newSaleAddresses);\n    event SaleDetailsUpdated(IDappadSale.SaleDetails newSaleDetails);\n    event SaleFcfsDetailsUpdated(IDappadSale.SaleFcfsDetails newFcfsDetails);\n    event SaleRefundDetailsUpdated(IDappadSale.SaleRefundDetails newRefundDetails);\n    event SaleTicketDetailsUpdated(IDappadSale.SaleTicketDetails newTicketDetails);\n    event SaleTierDetailsUpdated(uint256 tierIndex, IDappadSale.SaleTierDetails newTierDetails);\n    event SaleTierDetailsBatchUpdated(IDappadSale.SaleTierDetails[] newTierDetails);\n\n    constructor(IDappadSale.SaleParams memory saleParams) \n        notZeroAddress(saleParams.sale.saleAddresses.investmentTokenAddress) \n        notZeroAddress(saleParams.sale.saleAddresses.factoryContractAddress) \n        notZeroAddress(saleParams.sale.saleAddresses.ownerAddress) \n        notZeroAddress(saleParams.sale.saleAddresses.adminAddress) \n    {\n        _setRoleAdmin(OWNER, OWNER);\n        _setRoleAdmin(ADMIN, OWNER);\n\n        _grantRole(OWNER, saleParams.sale.saleAddresses.ownerAddress);\n        _grantRole(ADMIN, saleParams.sale.saleAddresses.adminAddress);\n        \n        if(bytes(saleParams.sale.saleDetails.saleName).length == 0) revert Errors.EmptySaleNameError();\n        if (saleParams.sale.saleDetails.saleStart < block.timestamp) revert Errors.InvalidSaleStartDateError();\n        if (saleParams.sale.saleDetails.saleEnd < block.timestamp) revert Errors.InvalidSaleEndDateError();\n        if (saleParams.sale.saleDetails.saleStart >= saleParams.sale.saleDetails.saleEnd) revert Errors.InvalidSaleDurationError();\n        if (saleParams.sale.saleDetails.maxInvestmentAmount <= 0) revert Errors.InvalidMaxInvestmentAmountError();\n        if (saleParams.tierDetails.length == 0) revert Errors.EmptyTierDetailsError();\n\n        sale = saleParams.sale;\n\n        if(saleParams.sale.saleAddresses.registerTokenAddress != address(0)) registerToken = IERC20Extented(saleParams.sale.saleAddresses.registerTokenAddress);\n        \n        investmentToken = IERC20Extented(saleParams.sale.saleAddresses.investmentTokenAddress);\n\n        if (saleParams.sale.saleAddresses.stakeControllerContractAddress != address(0)) {\n            stakeControllerContract = IDappadStakeController(sale.saleAddresses.stakeControllerContractAddress);\n        }\n\n        for(uint256 i = 0; i < saleParams.tierDetails.length; i++) {\n            tierDetails[i] = saleParams.tierDetails[i];\n        }\n    }\n\n    modifier notZeroAddress(address _address) {\n        _notZeroAddress(_address);\n        _;\n    }\n\n    modifier onlyOwner(address _address) {\n        _onlyOwner(_address);\n        _;\n    }\n\n    modifier onlyOwnerOrAdmin(address _address) {\n        _onlyOwnerOrAdmin(_address);\n        _;\n    }\n\n    modifier whenSaleIsNotPaused() {\n        _whenSaleIsNotPaused();\n        _;\n    }\n\n    modifier hasEnoughAllowance(IERC20Extented token, address userAddress, uint256 amount) {\n        _hasEnoughAllowance(token, userAddress, amount);\n        _;\n    }\n\n    function registerSale() external whenSaleIsNotPaused notZeroAddress(msg.sender) returns (bool) {\n        if (block.timestamp < sale.saleDetails.registerStart) revert Errors.RegisterNotStartedError();\n        if (block.timestamp >= sale.saleDetails.registerEnd) revert Errors.RegisterAlreadyEndedError();\n        if (registerDetails[msg.sender].registered) revert Errors.UserAlreadyRegisteredError();\n\n        uint256 userTierIndex = 0;\n\n        if (sale.saleAddresses.nftContractAddress != address(0)) {\n            if (_getUserNftBalance(msg.sender) == 0) revert Errors.UserHasNoNFTError();\n        }\n\n        if (sale.saleAddresses.stakeControllerContractAddress != address(0)) {\n            userTierIndex = stakeControllerContract.getUserTierIndex(msg.sender);\n        }       \n\n        if (sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0)) {\n            saleStatistics.totalRegisterTokenAmountLeft += sale.saleDetails.registerTokenAmount;\n\n            registerDetails[msg.sender] = IDappadSale.SaleRegisterDetails({\n                registerTokenAmount: sale.saleDetails.registerTokenAmount,\n                tierIndex: userTierIndex,\n                registered: true\n            });\n\n            bool successfullyTransfered = registerToken.transferFrom(msg.sender, address(this), sale.saleDetails.registerTokenAmount);\n            if (!successfullyTransfered) revert Errors.TokenTransferFailedError();\n        } else {\n            registerDetails[msg.sender] = IDappadSale.SaleRegisterDetails({\n                registerTokenAmount: 0,\n                tierIndex: userTierIndex,\n                registered: true\n            });\n        }\n\n        saleStatistics.totalRegisters++;\n\n        emit UserRegisteredSale(msg.sender, userTierIndex, block.timestamp, saleStatistics.totalRegisters, saleStatistics.totalRegisterTokenAmountLeft);\n\n        return true;\n    }\n\n    function joinSale(uint256 amount, bytes32[] calldata whitelistProof, bytes32[] calldata ticketProof) external whenSaleIsNotPaused notZeroAddress(msg.sender) hasEnoughAllowance(investmentToken, msg.sender, amount) returns (bool) {\n        if(!registerDetails[msg.sender].registered) revert Errors.UserNotRegisteredError();\n        if (block.timestamp < sale.saleDetails.saleStart) revert Errors.SaleNotStartedError();\n        \n        if (sale.fcfsDetails.fcfsSaleDuration > 0) {\n            if (block.timestamp >= (sale.saleDetails.saleEnd - sale.fcfsDetails.fcfsSaleDuration)) revert Errors.FCFSSaleAlreadyStartedError();\n        } else {\n            if (block.timestamp >= sale.saleDetails.saleEnd) revert Errors.SaleAlreadyEndedError();\n        }\n        \n        if (amount == 0) revert Errors.InvalidAmountError();\n\n        if (sale.saleAddresses.nftContractAddress != address(0)) {\n            if (_getUserNftBalance(msg.sender) == 0) revert Errors.UserHasNoNFTError();\n        }\n\n        uint256 userTierIndex = registerDetails[msg.sender].tierIndex;\n        \n        if(userTierIndex == 0) {\n            if (tierDetails[0].whitelistMerkleRoot != bytes32(0)) {\n                if (!checkWhitelistEligibility(msg.sender, userTierIndex, whitelistProof)) revert Errors.UserNotWhitelistedError();\n            } else {\n                revert Errors.TierOneCannotJoinStakerRoundError();\n            }\n        }\n\n        if (investmentToken.balanceOf(msg.sender) < amount) revert Errors.InsufficientBalanceError();\n        if (amount < tierDetails[userTierIndex].minInvestmentAmount) revert Errors.MinimumInvestmentNotReachedError();\n\n        if (sale.ticketDetails.ticketMerkleRoot != bytes32(0) && checkTicketEligibility(msg.sender, ticketProof)) {\n            if (investmentAmounts[msg.sender] + amount > (tierDetails[userTierIndex].maxInvestmentAmount + (sale.ticketDetails.ticketPrice * tierDetails[userTierIndex].ticketAmount))) revert Errors.MaximumInvestmentReachedError();\n        } else {\n            if (investmentAmounts[msg.sender] + amount > tierDetails[userTierIndex].maxInvestmentAmount) revert Errors.MaximumInvestmentReachedError();\n        }\n\n        if (tierDetails[userTierIndex].totalInvestmentAmount + amount > tierDetails[userTierIndex].tierMaxInvestmentAmount) revert Errors.MaxTierInvestmentReachedError();\n        if (saleStatistics.totalInvestmentAmount + amount > sale.saleDetails.maxInvestmentAmount) revert Errors.MaxTotalInvestmentReachedError();\n        \n        saleStatistics.totalInvestmentAmount += amount;\n\n        if(investmentAmounts[msg.sender] == 0) {\n            saleStatistics.totalParticipants++;\n            tierDetails[userTierIndex].totalParticipants++;\n        }\n\n        investmentAmounts[msg.sender] += amount;\n        tierDetails[userTierIndex].totalInvestmentAmount += amount;\n\n        emit UserJoinedSale(msg.sender, userTierIndex, amount, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, saleStatistics.totalParticipants, block.timestamp, _getUserNftBalance(msg.sender));\n\n        bool successfullyTransfered = investmentToken.transferFrom(msg.sender, address(this), amount);\n        if (!successfullyTransfered) revert Errors.TokenTransferFailedError();\n\n        if (sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0) && registerDetails[msg.sender].registerTokenAmount > 0) {\n            uint256 registerTokenAmount = registerDetails[msg.sender].registerTokenAmount;\n\n            saleStatistics.totalRegisterTokenAmountLeft -= registerDetails[msg.sender].registerTokenAmount;\n            registerDetails[msg.sender].registerTokenAmount = 0;\n\n            bool successfullyTransferedRA = registerToken.transfer(msg.sender, registerTokenAmount);\n            if (!successfullyTransferedRA) revert Errors.TokenTransferFailedError();\n        }\n\n        return true;\n    }\n\n    function joinFcfsSale(uint256 amount, bytes32[] calldata whitelistProof) external whenSaleIsNotPaused notZeroAddress(msg.sender) hasEnoughAllowance(investmentToken, msg.sender, amount) returns (bool) {\n        if (sale.fcfsDetails.fcfsSaleDuration <= 0) revert Errors.FCFSSaleNotEnabledError();\n        if (block.timestamp < (sale.saleDetails.saleEnd - sale.fcfsDetails.fcfsSaleDuration)) revert Errors.FCFSSaleNotStartedError();\n        if (block.timestamp >= sale.saleDetails.saleEnd) revert Errors.SaleAlreadyEndedError();\n\n        if (amount == 0) revert Errors.InvalidAmountError();\n\n        if (sale.saleAddresses.nftContractAddress != address(0)) {\n            if (_getUserNftBalance(msg.sender) == 0) revert Errors.UserHasNoNFTError();\n        }\n\n        uint256 userTierIndex = 0;\n\n        if (sale.saleAddresses.stakeControllerContractAddress != address(0)) {\n           userTierIndex = stakeControllerContract.getUserTierIndex(msg.sender);\n        }\n\n        if (userTierIndex == 0 && tierDetails[0].whitelistMerkleRoot != bytes32(0)) {\n            if (!checkWhitelistEligibility(msg.sender, userTierIndex, whitelistProof)) revert Errors.UserNotWhitelistedError();\n        }\n\n        if (investmentToken.balanceOf(msg.sender) < amount) revert Errors.InsufficientBalanceError();\n        if (amount < tierDetails[userTierIndex].minInvestmentAmount) revert Errors.MinimumInvestmentNotReachedError();\n        if (investmentAmounts[msg.sender] + amount > (tierDetails[userTierIndex].maxInvestmentAmount * sale.fcfsDetails.fcfsSaleMultiplier / 1000)) revert Errors.MaximumInvestmentReachedError();\n\n        if (saleStatistics.totalInvestmentAmount + amount > sale.saleDetails.maxInvestmentAmount) revert Errors.MaxTotalInvestmentReachedError();\n\n        saleStatistics.totalInvestmentAmount += amount;\n\n        if(investmentAmounts[msg.sender] == 0) {\n            saleStatistics.totalParticipants++;\n            tierDetails[userTierIndex].totalParticipants++;\n        }\n\n        investmentAmounts[msg.sender] += amount;\n        tierDetails[userTierIndex].totalInvestmentAmount += amount;\n\n        emit UserJoinedFcfsSale(msg.sender, userTierIndex, amount, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, saleStatistics.totalParticipants, block.timestamp, _getUserNftBalance(msg.sender));\n\n        bool successfullyTransfered = investmentToken.transferFrom(msg.sender, address(this), amount);\n        if (!successfullyTransfered) revert Errors.TokenTransferFailedError();\n\n        if (sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0) && registerDetails[msg.sender].registerTokenAmount > 0) {\n            uint256 registerTokenAmount = registerDetails[msg.sender].registerTokenAmount;\n\n            saleStatistics.totalRegisterTokenAmountLeft -= registerDetails[msg.sender].registerTokenAmount;\n            registerDetails[msg.sender].registerTokenAmount = 0;\n\n            bool successfullyTransferedRA = registerToken.transfer(msg.sender, registerTokenAmount);\n            if (!successfullyTransferedRA) revert Errors.TokenTransferFailedError();\n        }\n\n        return true;\n    }\n\n    function refund() external notZeroAddress(msg.sender) returns (bool) {\n        if (investmentAmounts[msg.sender] == 0) revert Errors.NotJoinedSaleError();\n        if (vestingContract.getAnyVestingClaimed(msg.sender)) revert Errors.FirstVestingAlreadyClaimedError();\n        if (block.timestamp <= sale.saleDetails.saleEnd) revert Errors.SaleNotEndedError();\n        if (!sale.refundDetails.refundEnabled) revert Errors.RefundNotEnabledError();\n        if (!(block.timestamp > sale.saleDetails.saleEnd && block.timestamp <= sale.saleDetails.saleEnd + sale.refundDetails.refundDuration)) revert Errors.RefundPeriodOverError();\n        if (refunded[msg.sender]) revert Errors.AlreadyRefundedError();\n\n        if (sale.saleAddresses.nftContractAddress != address(0)) {\n            if (_getUserNftBalance(msg.sender) == 0) revert Errors.UserHasNoNFTError();\n        }\n\n        uint256 userTierIndex = registerDetails[msg.sender].tierIndex;\n\n        saleStatistics.totalInvestmentAmount -= investmentAmounts[msg.sender];\n        //tierDetails[userTierIndex].totalInvestmentAmount -= investmentAmounts[msg.sender];\n        investmentAmounts[msg.sender] = 0;\n\n        refunded[msg.sender] = true;\n\n        if (investmentToken.balanceOf(address(this)) < investmentAmounts[msg.sender]) revert Errors.InsufficientContractBalanceError();\n\n        emit UserRefundedSale(msg.sender, userTierIndex, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, block.timestamp);\n\n        bool successfullyTransfered = investmentToken.transfer(msg.sender, investmentAmounts[msg.sender]);\n        if (!successfullyTransfered) revert Errors.TokenTransferFailedError();\n        \n        return true;\n    }\n\n    function completeSale() external notZeroAddress(msg.sender) onlyOwnerOrAdmin(msg.sender) returns (bool) {\n        if (block.timestamp <= sale.saleDetails.saleEnd) revert Errors.SaleNotEndedError();\n        if (investmentToken.balanceOf(address(this)) == 0) revert Errors.InsufficientBalanceError();\n        if (sale.refundDetails.refundEnabled && block.timestamp <= sale.saleDetails.saleEnd + sale.refundDetails.refundDuration) revert Errors.RefundPeriodOverError();\n\n        uint256 balance = investmentToken.balanceOf(address(this));\n        uint256 projectOwnerFeeAmount = (balance * sale.saleDetails.projectOwnerFeePercentage) / 10000;\n        uint256 launchpadFeeAmount = balance - projectOwnerFeeAmount;\n\n        bool successfullyTransfered = investmentToken.transfer(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount);\n        if (!successfullyTransfered) revert Errors.TokenTransferFailedError();\n\n        bool successfullyTransferedSecond = investmentToken.transfer(sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount);\n        if (!successfullyTransferedSecond) revert Errors.TokenTransferFailedError();\n\n        if (sale.saleAddresses.registerTokenAddress != address(0) && registerToken.balanceOf(address(this)) > 0) {\n            bool successfullyTransferedThird = registerToken.transfer(sale.saleAddresses.launchpadFeeAddress, registerToken.balanceOf(address(this)));\n            if (!successfullyTransferedThird) revert Errors.TokenTransferFailedError();\n        }\n\n        emit SaleCompleted(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount, sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount, block.timestamp);\n\n        return true;\n    }\n\n    function withdrawRegisterToken() external notZeroAddress(msg.sender) onlyOwnerOrAdmin(msg.sender) returns (bool) {\n        if (block.timestamp <= sale.saleDetails.saleEnd) revert Errors.SaleNotEndedError();\n\n        bool successfullyTransfered = registerToken.transfer(msg.sender, registerToken.balanceOf(address(this)));\n        if (!successfullyTransfered) revert Errors.TokenTransferFailedError();\n\n        return true;\n    }\n\n    function emergencyOnly() external notZeroAddress(msg.sender) onlyOwnerOrAdmin(msg.sender) returns (bool) {\n        bool successfullyTransferedIT = investmentToken.transfer(msg.sender, investmentToken.balanceOf(address(this)));\n        if (!successfullyTransferedIT) revert Errors.TokenTransferFailedError();\n\n        return true;\n    }\n\n    function setSalePaused(bool salePaused) external onlyOwnerOrAdmin(msg.sender) returns (bool) {\n        sale.saleDetails.salePaused = salePaused;\n\n        emit SalePausedUpdated(salePaused);\n\n        return true;\n    }\n\n    function setVestingContract(address vestingContractAddress) external onlyOwnerOrAdmin(msg.sender) returns (bool) {\n        sale.saleAddresses.vestingContractAddress = vestingContractAddress;\n\n        if (vestingContractAddress != address(0)) {\n            vestingContract = IDappadVesting(vestingContractAddress);\n        }\n\n        emit VestingContractUpdated(vestingContractAddress);\n\n        return true;\n    }\n\n    function setStakeControllerContract(address stakeControllerContractAddress) external onlyOwnerOrAdmin(msg.sender) returns (bool) {\n        sale.saleAddresses.stakeControllerContractAddress = stakeControllerContractAddress;\n\n        if (stakeControllerContractAddress != address(0)) {\n            stakeControllerContract = IDappadStakeController(stakeControllerContractAddress);\n        }\n\n        emit StakeControllerContractUpdated(stakeControllerContractAddress);\n\n        return true;\n    }\n\n    function setSaleAddresses(IDappadSale.SaleAddresses memory newSaleAddresses) external onlyOwnerOrAdmin(msg.sender) returns (bool) {\n        sale.saleAddresses = newSaleAddresses;\n\n        if (newSaleAddresses.registerTokenAddress != address(0)) {\n            registerToken = IERC20Extented(newSaleAddresses.registerTokenAddress);\n        }\n\n        if (newSaleAddresses.investmentTokenAddress != address(0)) {\n            investmentToken = IERC20Extented(newSaleAddresses.investmentTokenAddress);\n        }\n\n        if (newSaleAddresses.stakeControllerContractAddress != address(0)) {\n            stakeControllerContract = IDappadStakeController(newSaleAddresses.stakeControllerContractAddress);\n        }\n        \n        if (newSaleAddresses.vestingContractAddress != address(0)) {\n            vestingContract = IDappadVesting(newSaleAddresses.vestingContractAddress);\n        }\n\n        emit SaleAddressesUpdated(newSaleAddresses);\n\n        return true;\n    }\n\n    function setSaleDetails(IDappadSale.SaleDetails memory newSaleDetails) external onlyOwnerOrAdmin(msg.sender) returns (bool) {\n        sale.saleDetails = newSaleDetails;\n\n        emit SaleDetailsUpdated(newSaleDetails);\n\n        return true;\n    }\n\n    function setSaleFcfsDetails(IDappadSale.SaleFcfsDetails memory newFcfsDetails) external onlyOwnerOrAdmin(msg.sender) returns (bool) {\n        sale.fcfsDetails = newFcfsDetails;\n\n        emit SaleFcfsDetailsUpdated(newFcfsDetails);\n\n        return true;\n    }\n\n    function setRefundDetails(IDappadSale.SaleRefundDetails memory newRefundDetails) external onlyOwnerOrAdmin(msg.sender) returns (bool) {\n        sale.refundDetails = newRefundDetails;\n\n        emit SaleRefundDetailsUpdated(newRefundDetails);\n\n        return true;\n    }\n\n    function setTicketDetails(IDappadSale.SaleTicketDetails memory newTicketDetails) external onlyOwnerOrAdmin(msg.sender) returns (bool) {\n        sale.ticketDetails = newTicketDetails;\n\n        emit SaleTicketDetailsUpdated(newTicketDetails);\n\n        return true;\n    }\n\n    function setTierDetails(uint256 tierIndex, IDappadSale.SaleTierDetails memory newTierDetails) external onlyOwnerOrAdmin(msg.sender) returns (bool) {\n        tierDetails[tierIndex] = newTierDetails;\n\n        emit SaleTierDetailsUpdated(tierIndex, newTierDetails);\n\n        return true;\n    }\n\n    function setTierDetailsBatch(IDappadSale.SaleTierDetails[] calldata newTierDetails) external onlyOwnerOrAdmin(msg.sender) returns (bool) {\n        uint256 tierCount = newTierDetails.length;\n\n        for(uint256 i = 0; i < tierCount; i++) {\n            tierDetails[i] = newTierDetails[i];\n        }\n\n        emit SaleTierDetailsBatchUpdated(newTierDetails);\n\n        return true;\n    }\n\n    function checkWhitelistEligibility(address userAddress, uint256 userTierIndex, bytes32[] calldata proof) public view notZeroAddress(userAddress) returns (bool) {\n        bytes32 leaf = keccak256(bytes.concat(keccak256(abi.encode(userAddress))));\n        return MerkleProof.verify(proof, tierDetails[userTierIndex].whitelistMerkleRoot, leaf);\n    }\n\n    function checkTicketEligibility(address userAddress, bytes32[] calldata proof) public view notZeroAddress(userAddress) returns (bool) {\n        bytes32 leaf = keccak256(bytes.concat(keccak256(abi.encode(userAddress))));\n        return MerkleProof.verify(proof, sale.ticketDetails.ticketMerkleRoot, leaf);\n    }\n\n    function getUserInvestmentAmount(address userAddress) external view notZeroAddress(userAddress) returns (uint256) {\n        return investmentAmounts[userAddress];\n    }\n\n    function getRefundEnabled() external view returns (bool) {\n        return sale.refundDetails.refundEnabled;\n    }\n\n    function getUserRefunded(address userAddress) external view notZeroAddress(userAddress) returns (bool) {\n        return refunded[userAddress];\n    }\n\n    function getTierDetailsByIndex(uint256 tierIndex) external view returns (IDappadSale.SaleTierDetails memory) {\n        return tierDetails[tierIndex];\n    }\n\n    function getAllTierDetails() external view returns (IDappadSale.SaleTierDetails[] memory) {\n        uint256 tierCount = 0;\n\n        if (sale.saleAddresses.stakeControllerContractAddress == address(0)) {\n            tierCount = 1;\n        }\n\n        IDappadSale.SaleTierDetails[] memory _tierDetails = new IDappadSale.SaleTierDetails[](tierCount);\n\n        for(uint256 i = 0; i < tierCount; i++) {\n            _tierDetails[i] = tierDetails[i];\n        }\n\n        return _tierDetails;\n    }\n\n    function getTierCount() public view returns (uint256) {\n        if (sale.saleAddresses.stakeControllerContractAddress == address(0)) return 0;\n\n        uint256 tierCount = stakeControllerContract.getTierCount();\n        if (tierCount == 0) revert Errors.NoTierDetailsFoundError();\n\n        return tierCount;\n    }\n\n    function getSaleTokenPrice() external view returns (uint256) {\n        return sale.saleDetails.saleTokenPrice;\n    }\n\n    function getIsSaleActive() external view returns (bool) {\n        return block.timestamp >= sale.saleDetails.saleStart && block.timestamp <= sale.saleDetails.saleEnd;\n    }\n\n    function getSaleEndDate() external view returns (uint256) {\n        return sale.saleDetails.saleEnd;\n    }\n\n    function getSaleTokenAddress() external view returns (address) {\n        return sale.saleAddresses.saleTokenAddress;\n    }\n\n    function getFactoryContractAddress() external view returns (address) {\n        return sale.saleAddresses.factoryContractAddress;\n    }\n\n    function getStakeControllerContractAddress() external view returns (address) {\n        return sale.saleAddresses.stakeControllerContractAddress;\n    }\n\n    function _getUserNftBalance(address userAddress) internal view notZeroAddress(userAddress) returns (uint256) {\n        if (sale.saleAddresses.nftContractAddress == address(0)) {\n            return 0;\n        } else {\n            return IERC721(sale.saleAddresses.nftContractAddress).balanceOf(msg.sender);\n        }\n    }\n\n    function _notZeroAddress(address _address) internal pure {\n        if (_address == address(0)) revert Errors.ZeroAddressError();\n    }\n\n    function _onlyOwner(address _address) internal view {\n        if (!hasRole(OWNER, _address)) revert Errors.UnauthorizedError();\n    }\n\n    function _onlyOwnerOrAdmin(address _address) internal view {\n        if (!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)) revert Errors.UnauthorizedError();\n    }\n\n    function _whenSaleIsNotPaused() internal view {\n        if(sale.saleDetails.salePaused) revert Errors.SaleIsPausedError();\n    }\n\n    function _hasEnoughAllowance(IERC20Extented token, address userAddress, uint256 amount) internal view {\n        uint256 userAllowance = token.allowance(userAddress, address(this));\n        if(amount > userAllowance) revert Errors.InsufficientAllowanceError();\n    }\n}"},"contracts/core/DappadSaleFactory.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"./DappadSale.sol\";\nimport \"../interfaces/Interfaces.sol\";\nimport \"../errors/Errors.sol\";\n\ncontract DappadSaleFactory is AccessControl {\n    bytes32 public constant OWNER = keccak256(\"OWNER\");\n    bytes32 public constant ADMIN = keccak256(\"ADMIN\");\n\n    address[] public allSales;\n\n    event SaleCreated(\n        string saleName,\n        uint256 saleStart,\n        uint256 saleEnd,\n        uint256 maxInvestmentAmount,\n        address investmentTokenAddress,\n        address saleTokenAddress,\n        address factoryContractAddress\n    );\n\n    constructor(IDappadSaleFactory.SaleFactoryParams memory saleFactoryParams) {\n        _setRoleAdmin(OWNER, OWNER);\n        _setRoleAdmin(ADMIN, OWNER);\n\n        _grantRole(OWNER, msg.sender);\n        _grantRole(ADMIN, saleFactoryParams.adminAddress);\n    }\n\n    modifier notZeroAddress(address _address) {\n        _notZeroAddress(_address);\n        _;\n    }\n\n    modifier onlyOwner(address _address) {\n        _onlyOwner(_address);\n        _;\n    }\n\n    modifier onlyOwnerOrAdmin(address _address) {\n        _onlyOwnerOrAdmin(_address);\n        _;\n    }\n\n    function createSale(IDappadSale.SaleParams memory _saleParams)\n        public\n        onlyOwnerOrAdmin(msg.sender)\n        notZeroAddress(_saleParams.sale.saleAddresses.investmentTokenAddress)\n        notZeroAddress(_saleParams.sale.saleAddresses.projectOwnerFeeAddress)\n        notZeroAddress(_saleParams.sale.saleAddresses.launchpadFeeAddress)\n        returns (bool)\n    {\n        IDappadSale.SaleParams memory saleParams = _saleParams;\n\n        if (bytes(saleParams.sale.saleDetails.saleName).length == 0) {\n            revert Errors.EmptySaleNameError();\n        }\n        if (saleParams.sale.saleDetails.saleStart < block.timestamp) {\n            revert Errors.InvalidSaleStartDateError();\n        }\n        if (saleParams.sale.saleDetails.saleEnd < block.timestamp) {\n            revert Errors.InvalidSaleEndDateError();\n        }\n        if (saleParams.sale.saleDetails.saleStart >= saleParams.sale.saleDetails.saleEnd) {\n            revert Errors.InvalidSaleDurationError();\n        }\n        if (saleParams.sale.saleDetails.maxInvestmentAmount == 0) {\n            revert Errors.InvalidMaxInvestmentAmountError();\n        }\n        if (saleParams.tierDetails.length == 0) {\n            revert Errors.EmptyTierDetailsError();\n        }\n\n        DappadSale newSale = new DappadSale(saleParams);\n\n        allSales.push(address(newSale));\n\n        emit SaleCreated(\n            saleParams.sale.saleDetails.saleName,\n            saleParams.sale.saleDetails.saleStart,\n            saleParams.sale.saleDetails.saleEnd,\n            saleParams.sale.saleDetails.maxInvestmentAmount,\n            saleParams.sale.saleAddresses.investmentTokenAddress,\n            saleParams.sale.saleAddresses.saleTokenAddress,\n            address(this)\n        );\n\n        return true;\n    }\n\n    function getSaleCount() external view returns (uint256) {\n        return allSales.length;\n    }\n\n    function getSale(uint256 index) external view returns (address) {\n        if (index >= allSales.length) {\n            revert Errors.InvalidSaleIndexError();\n        }\n        return allSales[index];\n    }\n\n    function getIsSaleActive(uint256 index) external view returns (bool) {\n        if (index >= allSales.length) {\n            revert Errors.InvalidSaleIndexError();\n        }\n        return IDappadSale(allSales[index]).getIsSaleActive();\n    }\n\n    function _notZeroAddress(address _address) internal pure {\n        if (_address == address(0)) revert Errors.ZeroAddressError();\n    }\n\n    function _onlyOwner(address _address) internal view {\n        if (!hasRole(OWNER, _address)) revert Errors.UnauthorizedError();\n    }\n\n    function _onlyOwnerOrAdmin(address _address) internal view {\n        if (!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)) revert Errors.UnauthorizedError();\n    }\n}"},"contracts/errors/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\nabstract contract Errors {\n    error ZeroAddressError();\n    error UnauthorizedError();\n    error TokenTransferFailedError();\n    error ArraysLengthMismatchError();\n    error NotEnabledError();\n\n    error InsufficientBalanceError();\n    error InsufficientContractBalanceError();\n    error InsufficientAllowanceError();\n    error UserHasNoNFTError();\n    error UserNotRegisteredError();\n    error UserAlreadyRegisteredError();\n    error RegisterNotStartedError();\n    error MaxTierInvestmentReachedError();\n    error RegisterAlreadyEndedError();\n    error TierOneCannotJoinStakerRoundError();\n\n    error InvalidAmountError();\n    error InvalidTierIndexError();\n    error InvalidSaleStartDateError();\n    error InvalidSaleEndDateError();\n    error InvalidSaleDurationError();\n    error InvalidMaxInvestmentAmountError();\n    error InvalidVestingDurationError();\n    error InvalidSaleIndexError();\n    error InvalidVestingIndexError();\n    error InvalidStakeContractAddressError();\n\n    error InvalidInterestRateError();\n    error InvalidLockDurationError();\n\n    error InvalidPaymasterInputLengthError();\n    error InvalidTokenError();\n\n    error EmptySaleNameError();\n    error EmptyTierDetailsError();\n    error EmptyVestingPercentageError();\n    error TotalVestingPercentageError();\n\n    error FailedToAddToken();\n    error SaleNotStartedError();\n    error SaleNotEndedError();\n    error SaleAlreadyEndedError();\n    error NotJoinedSaleError();\n    error AlreadyJoinedSaleError();\n    error SaleIsPausedError();\n    error UserHasNoNFTsError();\n\n    error FCFSSaleNotEnabledError();\n    error FCFSSaleNotStartedError();\n    error FCFSSaleAlreadyStartedError();\n    error FirstVestingAlreadyClaimedError();\n    error VestingsNotClaimableError();\n\n    error UserNotWhitelistedError();\n\n    error MinimumInvestmentNotReachedError();\n    error MaximumInvestmentReachedError();\n    error MaxTotalInvestmentReachedError();\n    error MaxNodeCountReachedError();\n    error MaxNodeCountPerUserReachedError();\n    error MinimumNodeTierNotReachedError();\n    error MaximumNodeTierReachedError();\n    error MinimumUserTierNotReachedError();\n\n    error RefundNotEnabledError();\n    error RefundPeriodOverError();\n    error AlreadyRefundedError();\n\n    error AlreadyClaimedError();\n    error VestingNotClaimableError();\n    error NoTierDetailsFoundError();\n\n    error UserHasNoStakedAmountError();\n    error StakePeriodNotOverError();\n    error StakeIsPausedError();\n    error InvalidStakeIndexError();\n    error NoRewardToHarvestError();\n    error NoRewardToReInvestError();\n    error MinimumStakePointsNotReachedError();\n\n    error OnlyBootloaderError();\n    error TxTransferFailedError();\n    error UnsupportedPaymasterFlowError();\n\n    error EmergencyOverRewardError();\n    error EmergencyOverAmountError();\n}"},"contracts/interfaces/Interfaces.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\nabstract contract IERC20Extented is IERC20 {\n    function decimals() public virtual view returns (uint8); \n}\n\nabstract contract IERC721Extented is IERC721 {\n    function tokensOfOwner(address owner) external virtual view returns (uint256[] memory);\n}\n\ninterface IDappadSaleFactory {\n    struct SaleFactoryParams {\n        address adminAddress;\n    }\n}\n\ninterface IDappadVestingFactory {\n    struct VestingFactoryParams {\n        address adminAddress;\n    }\n}\n\ninterface IDappadStakeFactory {\n    struct StakeFactoryParams {\n        address adminAddress;\n    }\n}\n\ninterface IDappadStakeControllerFactory {\n    struct StakeControllerFactoryParams {\n        address adminAddress;\n    }\n}\n\ninterface IDappadStakeController {\n    struct StakeControllerParams {\n        StakeControllerDetails stakeControllerDetails;\n        StakeControllerAddresses stakeControllerAddresses;\n        StakeControllerTier[] stakeControllerTiers;\n    }\n\n    struct StakeControllerDetails {\n        uint256 requiredTokensForNftBonus;\n        uint256 bonusEnd;\n        bool addBonusPerNft;\n        uint256[] bonusesPerNft;\n        uint256[] stakeContractPointMultipliers;\n    }\n\n    struct StakeControllerAddresses {\n        address tokenAddress;\n        address ownerAddress;\n        address adminAddress;\n        address[] nftContractAddresses;\n        address[] stakeContractAddresses;\n        address[] bonusVestingContractAddresses;\n    }\n    \n    struct StakeControllerTier {\n        uint256 requiredStakePoints;\n    }\n\n    function getTierCount() external view returns (uint256);\n    function getUserTierIndex(address userAddress) external view returns (uint256);\n}\n\ninterface IDappadStake {\n    struct StakeParams {\n        StakeDetails stakeDetails; \n        StakeAddresses stakeAddresses;\n    }\n\n    struct StakeDetails {\n        uint256 interestRate;\n        uint256 lockDuration;\n        uint256 lockDurationRewardMultiplier;\n        uint256 lockDurationPointMultiplier;\n        bool stakePaused;\n    }\n\n    struct StakeAddresses {\n        address tokenAddress;\n        address ownerAddress;\n        address adminAddress;\n    }\n\n    struct StakeStatistics {\n        uint256 rewardBalance;\n        uint256 totalStakedAmount;\n        uint256 totalHarvestedRewardAmount;\n        uint256 totalParticipants;\n    }\n\n    struct Stake {\n        uint256 endTime;\n        uint256 totalStakedAmount;\n        uint256 totalStakePoints;\n        uint256 stakeCount;\n        StakeFeatures[] stakeFeatures;\n    }\n\n    struct StakeFeatures {\n        uint256 interestRate;\n        uint256 stakeTime;\n        uint256 stakedAmount;\n    }\n\n    function getStakeStatistics() external view returns (IDappadStake.StakeStatistics memory);\n    function getUserStake(address userAddress) external view returns (IDappadStake.Stake memory);\n}\n\ninterface IDappadSale {\n    struct SaleParams {\n        Sale sale;\n        SaleTierDetails[] tierDetails;\n    }\n    \n    struct Sale {\n        SaleDetails saleDetails;\n        SaleFcfsDetails fcfsDetails;\n        SaleRefundDetails refundDetails;\n        SaleTicketDetails ticketDetails;\n        SaleAddresses saleAddresses;\n    }\n    \n    struct SaleDetails {\n        uint256 registerStart;\n        uint256 registerEnd;\n        uint256 registerTokenAmount;\n        uint256 saleStart;\n        uint256 saleEnd;\n        uint256 saleTokenPrice;\n        uint256 maxInvestmentAmount;\n        uint256 projectOwnerFeePercentage;\n        bool registerTokenEnabled;\n        bool salePaused;\n        string saleName;\n    }\n\n    struct SaleFcfsDetails {\n        uint256 fcfsSaleDuration;\n        uint256 fcfsSaleMultiplier;\n    }\n\n    struct SaleRefundDetails {\n        uint256 refundDuration;\n        bool refundEnabled;\n    }\n\n    struct SaleTicketDetails {\n        uint256 ticketPrice;\n        bytes32 ticketMerkleRoot;\n    }\n\n    struct SaleRegisterDetails {\n        uint256 registerTokenAmount;\n        uint256 tierIndex;\n        bool registered;\n    }\n\n    struct SaleAddresses {\n        address saleTokenAddress;\n        address registerTokenAddress;\n        address investmentTokenAddress;\n        address factoryContractAddress;\n        address nftContractAddress;\n        address stakeControllerContractAddress;\n        address vestingContractAddress;\n        address ownerAddress;\n        address adminAddress;\n        address launchpadFeeAddress;\n        address projectOwnerFeeAddress;\n    }\n\n    struct SaleStatistics {\n        uint256 totalInvestmentAmount;\n        uint256 totalSaleTokenAmount;\n        uint256 totalParticipants;\n        uint256 totalRegisters;\n        uint256 totalRegisterTokenAmountLeft;\n    }\n\n    struct SaleTierDetails {\n        uint256 minInvestmentAmount;\n        uint256 maxInvestmentAmount;\n        uint256 tierMaxInvestmentAmount;\n        uint256 ticketAmount;\n        bytes32 whitelistMerkleRoot;\n        uint256 totalInvestmentAmount;\n        uint256 totalParticipants;\n    }\n\n    function addSaleToken() external returns (bool);\n    function getIsSaleActive() external view returns (bool);\n    function getUserInvestmentAmount(address userAddress) external view returns (uint256);\n    function getSaleEndDate() external view returns (uint256);\n    function getRefundEnabled() external view returns (bool);\n    function getUserRefunded(address userAddress) external view returns (bool);\n    function getSaleTokenPrice() external view returns (uint256);\n}\n\ninterface IDappadVesting {\n    struct VestingParams {\n        Vesting defaultVesting;\n        VestingAddresses vestingAddresses;\n        VestingSettings vestingSettings;\n    }\n\n    struct VestingSettings {\n        uint256 startDate;\n        uint256 saleTokenPrice;\n    }\n\n    struct Vesting {\n        uint256 vestingCount;\n        uint256 vestingDuration;\n        uint256 vestingCliffDuration;\n        uint256[] vestingPercentages;\n        bool onTGE;\n    }\n\n    struct VestingAddresses {\n        address saleTokenAddress;\n        address factoryContractAddress;\n        address saleContractAddress;\n        address ownerAddress;\n        address adminAddress;\n    }\n\n    struct VestingStatistics {\n        uint256 totalVestingAmount;\n        uint256 totalSaleTokenAmount;\n    }\n\n    function setTotalVestingAmount(uint256 amount) external returns (bool);\n    function getVestingClaimed(address userAddress, uint256 vestingIndex) external view returns (bool);\n    function getTotalVestingAmount() external view returns (uint256);\n    function getAnyVestingClaimed(address userAddress) external view returns (bool);\n    function getUserTotalVestingAmount(address userAddress) external view returns (uint256);\n    function getUserUnclaimedTokenAmount(address userAddress) external view returns (uint256);\n}"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}},"libraries":{}}},"output":{"errors":[{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/core/DappadSale.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"8","start":10646,"end":10701},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/core/DappadSale.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"8","start":13804,"end":13859},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/core/DappadSale.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"8","start":15499,"end":15566},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/core/DappadSale.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"8","start":16437,"end":16527},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/core/DappadSale.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"8","start":16653,"end":16737},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/core/DappadSale.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"8","start":16987,"end":17089},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/core/DappadSale.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"8","start":17640,"end":17714},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/core/DappadSale.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"8","start":17975,"end":18053},"type":"Warning"}],"version":"0.8.20","long_version":"0.8.20+commit.a1b79de6.Darwin.appleclang","zk_version":"1.3.23","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[295],"Context":[603],"ERC165":[1164],"IAccessControl":[378]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":379,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":604,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":1165,"src":"233:57:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"241:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["1988:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":603,"src":"1988:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1988:7:0"},{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["1997:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"1997:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1997:14:0"},{"baseName":{"id":13,"name":"ERC165","nameLocations":["2013:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":1164,"src":"2013:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2013:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"292:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295,1164,1176,378,603],"name":"AccessControl","nameLocation":"1971:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":21,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2052:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":17,"keyName":"account","keyNameLocation":"2068:7:0","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2102:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:0","nodeType":"StructDefinition","scope":295,"src":"2026:100:0","visibility":"public"},{"constant":false,"id":26,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:0","nodeType":"VariableDeclaration","scope":295,"src":"2132:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":25,"keyName":"role","keyNameLocation":"2148:4:0","keyType":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"RoleData","nameLocations":["2156:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2156:8:0"},"referencedDeclaration":21,"src":"2156:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":29,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:0","nodeType":"VariableDeclaration","scope":295,"src":"2187:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":39,"nodeType":"Block","src":"2454:44:0","statements":[{"expression":{"arguments":[{"id":35,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":34,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":93,"src":"2464:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2464:16:0"},{"id":38,"nodeType":"PlaceholderStatement","src":"2490:1:0"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"2243:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":40,"name":"onlyRole","nameLocation":"2431:8:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"role","nameLocation":"2448:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2440:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:0"},"src":"2422:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[1163],"body":{"id":61,"nodeType":"Block","src":"2656:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2673:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":51,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2693:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}],"id":50,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2688:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$378","typeString":"type(contract IAccessControl)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":57,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2748:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":55,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2724:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$295_$","typeString":"type(contract super AccessControl)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1163,"src":"2724:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48,"id":60,"nodeType":"Return","src":"2666:94:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"2504:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:0","nodeType":"FunctionDefinition","overrides":{"id":45,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:0"},"parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:0","nodeType":"VariableDeclaration","scope":62,"src":"2592:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":42,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"2650:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:0"},"scope":295,"src":"2565:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":79,"nodeType":"Block","src":"2937:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":72,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2954:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":74,"indexExpression":{"id":73,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2961:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"2954:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":77,"indexExpression":{"id":76,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":71,"id":78,"nodeType":"Return","src":"2947:36:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2773:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":80,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"role","nameLocation":"2879:4:0","nodeType":"VariableDeclaration","scope":80,"src":"2871:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"account","nameLocation":"2893:7:0","nodeType":"VariableDeclaration","scope":80,"src":"2885:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"2931:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:0"},"scope":295,"src":"2854:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":92,"nodeType":"Block","src":"3255:47:0","statements":[{"expression":{"arguments":[{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3276:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"3282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":114,"src":"3265:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3265:30:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2996:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"role","nameLocation":"3227:4:0","nodeType":"VariableDeclaration","scope":93,"src":"3219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3255:0:0"},"scope":295,"src":"3199:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"3505:124:0","statements":[{"condition":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:0","subExpression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3534:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3520:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"3515:108:0","trueBody":{"id":111,"nodeType":"Block","src":"3544:79:0","statements":[{"errorCall":{"arguments":[{"id":107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3607:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":106,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3565:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"RevertStatement","src":"3558:54:0"}]}}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3308:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3460:4:0","nodeType":"VariableDeclaration","scope":114,"src":"3452:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3474:7:0","nodeType":"VariableDeclaration","scope":114,"src":"3466:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"3505:0:0"},"scope":295,"src":"3432:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[353],"body":{"id":127,"nodeType":"Block","src":"3884:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":122,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3901:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":124,"indexExpression":{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3908:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":121,"id":126,"nodeType":"Return","src":"3894:29:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3635:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":128,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3840:4:0","nodeType":"VariableDeclaration","scope":128,"src":"3832:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"3875:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:0"},"scope":295,"src":"3810:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[361],"body":{"id":146,"nodeType":"Block","src":"4320:42:0","statements":[{"expression":{"arguments":[{"id":142,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4341:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"4347:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":141,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4330:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"ExpressionStatement","src":"4330:25:0"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3936:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":147,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":137,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4313:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":139,"kind":"modifierInvocation","modifierName":{"id":135,"name":"onlyRole","nameLocations":["4291:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4291:8:0"},"nodeType":"ModifierInvocation","src":"4291:28:0"}],"name":"grantRole","nameLocation":"4235:9:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"4253:4:0","nodeType":"VariableDeclaration","scope":147,"src":"4245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"4267:7:0","nodeType":"VariableDeclaration","scope":147,"src":"4259:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"4320:0:0"},"scope":295,"src":"4226:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[369],"body":{"id":165,"nodeType":"Block","src":"4737:43:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4759:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4765:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4747:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"ExpressionStatement","src":"4747:26:0"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"4368:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4717:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4708:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4708:8:0"},"nodeType":"ModifierInvocation","src":"4708:28:0"}],"name":"revokeRole","nameLocation":"4651:10:0","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"role","nameLocation":"4670:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4662:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"4684:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4676:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4737:0:0"},"scope":295,"src":"4642:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[377],"body":{"id":188,"nodeType":"Block","src":"5407:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5421:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"5443:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"5417:102:0","trueBody":{"id":181,"nodeType":"Block","src":"5457:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5478:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":180,"nodeType":"RevertStatement","src":"5471:37:0"}]}},{"expression":{"arguments":[{"id":184,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5541:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":185,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5547:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":183,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5529:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"5529:37:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4786:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5358:4:0","nodeType":"VariableDeclaration","scope":189,"src":"5350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:0","nodeType":"VariableDeclaration","scope":189,"src":"5364:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"5407:0:0"},"scope":295,"src":"5328:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"5771:174:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:0","nodeType":"VariableDeclaration","scope":216,"src":"5781:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":202,"initialValue":{"arguments":[{"id":200,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5822:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"5809:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:0"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":203,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5837:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":205,"indexExpression":{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5844:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5837:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"ExpressionStatement","src":"5837:34:0"},{"eventCall":{"arguments":[{"id":211,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5903:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":212,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5909:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5886:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"5881:57:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5579:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:0","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"role","nameLocation":"5729:4:0","nodeType":"VariableDeclaration","scope":217,"src":"5721:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:0","nodeType":"VariableDeclaration","scope":217,"src":"5735:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5771:0:0"},"scope":295,"src":"5698:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"6262:233:0","statements":[{"condition":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:0","subExpression":{"arguments":[{"id":228,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6285:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6291:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6277:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":253,"nodeType":"Block","src":"6452:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":226,"id":252,"nodeType":"Return","src":"6466:12:0"}]},"id":254,"nodeType":"IfStatement","src":"6272:217:0","trueBody":{"id":250,"nodeType":"Block","src":"6301:145:0","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":232,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6315:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":234,"indexExpression":{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6322:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6315:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"6315:36:0"},{"eventCall":{"arguments":[{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6382:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"6397:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6370:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"6365:45:0"},{"expression":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":226,"id":249,"nodeType":"Return","src":"6424:11:0"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"5951:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"role","nameLocation":"6207:4:0","nodeType":"VariableDeclaration","scope":256,"src":"6199:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"6221:7:0","nodeType":"VariableDeclaration","scope":256,"src":"6213:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"6256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:0"},"scope":295,"src":"6179:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"6814:233:0","statements":[{"condition":{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6836:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6842:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6828:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6828:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":291,"nodeType":"Block","src":"7004:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7025:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":265,"id":290,"nodeType":"Return","src":"7018:12:0"}]},"id":292,"nodeType":"IfStatement","src":"6824:217:0","trueBody":{"id":288,"nodeType":"Block","src":"6852:146:0","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":270,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6866:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":272,"indexExpression":{"id":271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6873:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6866:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6879:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6866:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":275,"indexExpression":{"id":274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6887:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6866:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6898:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6866:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"6866:37:0"},{"eventCall":{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6934:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6940:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"6949:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6949:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"6922:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6922:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"EmitStatement","src":"6917:45:0"},{"expression":{"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6983:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":265,"id":287,"nodeType":"Return","src":"6976:11:0"}]}}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"6501:224:0","text":" @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6739:11:0","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"role","nameLocation":"6759:4:0","nodeType":"VariableDeclaration","scope":294,"src":"6751:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6751:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"account","nameLocation":"6773:7:0","nodeType":"VariableDeclaration","scope":294,"src":"6765:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6750:31:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"6808:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"6808:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6807:6:0"},"scope":295,"src":"6730:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":296,"src":"1953:5096:0","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"108:6942:0"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"135:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":378,"linearizedBaseContracts":[378],"name":"IAccessControl","nameLocation":"235:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"256:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":305,"name":"AccessControlUnauthorizedAccount","nameLocation":"323:32:1","nodeType":"ErrorDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"account","nameLocation":"364:7:1","nodeType":"VariableDeclaration","scope":305,"src":"356:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"356:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"neededRole","nameLocation":"381:10:1","nodeType":"VariableDeclaration","scope":305,"src":"373:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"373:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"355:37:1"},"src":"317:76:1"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"399:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":308,"name":"AccessControlBadConfirmation","nameLocation":"558:28:1","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"586:2:1"},"src":"552:37:1"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"595:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":317,"name":"RoleAdminChanged","nameLocation":"860:16:1","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"893:4:1","nodeType":"VariableDeclaration","scope":317,"src":"877:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"915:17:1","nodeType":"VariableDeclaration","scope":317,"src":"899:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"899:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"950:12:1","nodeType":"VariableDeclaration","scope":317,"src":"934:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"934:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"876:87:1"},"src":"854:110:1"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"970:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":326,"name":"RoleGranted","nameLocation":"1193:11:1","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1221:4:1","nodeType":"VariableDeclaration","scope":326,"src":"1205:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1205:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1243:7:1","nodeType":"VariableDeclaration","scope":326,"src":"1227:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1268:6:1","nodeType":"VariableDeclaration","scope":326,"src":"1252:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1252:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1204:71:1"},"src":"1187:89:1"},{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1282:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":335,"name":"RoleRevoked","nameLocation":"1568:11:1","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1596:4:1","nodeType":"VariableDeclaration","scope":335,"src":"1580:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1580:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1618:7:1","nodeType":"VariableDeclaration","scope":335,"src":"1602:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1602:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1643:6:1","nodeType":"VariableDeclaration","scope":335,"src":"1627:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1627:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1579:71:1"},"src":"1562:89:1"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1657:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1747:7:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"role","nameLocation":"1763:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1755:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1755:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"account","nameLocation":"1777:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1769:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1769:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1754:31:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1809:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1809:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1808:6:1"},"scope":378,"src":"1738:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1821:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2019:12:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"2040:4:1","nodeType":"VariableDeclaration","scope":353,"src":"2032:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2032:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2031:14:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2069:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2069:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2068:9:1"},"scope":378,"src":"2010:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2084:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2337:9:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"2355:4:1","nodeType":"VariableDeclaration","scope":361,"src":"2347:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2347:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"2369:7:1","nodeType":"VariableDeclaration","scope":361,"src":"2361:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2361:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2346:31:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2386:0:1"},"scope":378,"src":"2328:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2393:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2630:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"2649:4:1","nodeType":"VariableDeclaration","scope":369,"src":"2641:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2641:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"2663:7:1","nodeType":"VariableDeclaration","scope":369,"src":"2655:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2655:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2640:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2680:0:1"},"scope":378,"src":"2621:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2687:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3192:12:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"3213:4:1","nodeType":"VariableDeclaration","scope":377,"src":"3205:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3205:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3227:18:1","nodeType":"VariableDeclaration","scope":377,"src":"3219:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3219:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3204:42:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"3255:0:1"},"scope":378,"src":"3183:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":379,"src":"225:3033:1","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"109:3150:1"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[456]},"id":457,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":381,"nodeType":"StructuredDocumentation","src":"132:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":456,"linearizedBaseContracts":[456],"name":"IERC20","nameLocation":"213:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"226:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":390,"name":"Transfer","nameLocation":"395:8:2","nodeType":"EventDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:2","nodeType":"VariableDeclaration","scope":390,"src":"404:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:2","nodeType":"VariableDeclaration","scope":390,"src":"426:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":388,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:2","nodeType":"VariableDeclaration","scope":390,"src":"446:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:2"},"src":"389:72:2"},{"anonymous":false,"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"467:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":399,"name":"Approval","nameLocation":"626:8:2","nodeType":"EventDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:2","nodeType":"VariableDeclaration","scope":399,"src":"635:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":395,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:2","nodeType":"VariableDeclaration","scope":399,"src":"658:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":397,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:2","nodeType":"VariableDeclaration","scope":399,"src":"683:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":396,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:2"},"src":"620:78:2"},{"documentation":{"id":400,"nodeType":"StructuredDocumentation","src":"704:65:2","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":405,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:2","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[],"src":"794:2:2"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":405,"src":"820:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:2"},"scope":456,"src":"774:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":406,"nodeType":"StructuredDocumentation","src":"835:71:2","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":413,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:2","nodeType":"FunctionDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"account","nameLocation":"938:7:2","nodeType":"VariableDeclaration","scope":413,"src":"930:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":407,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:2"},"returnParameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":413,"src":"970:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":410,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:2"},"scope":456,"src":"911:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"985:213:2","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":423,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:2","nodeType":"FunctionDefinition","parameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"to","nameLocation":"1229:2:2","nodeType":"VariableDeclaration","scope":423,"src":"1221:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":415,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":418,"mutability":"mutable","name":"value","nameLocation":"1241:5:2","nodeType":"VariableDeclaration","scope":423,"src":"1233:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":417,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:2"},"returnParameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":423,"src":"1266:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":420,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:2"},"scope":456,"src":"1203:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":424,"nodeType":"StructuredDocumentation","src":"1278:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":433,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:2","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"mutability":"mutable","name":"owner","nameLocation":"1574:5:2","nodeType":"VariableDeclaration","scope":433,"src":"1566:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":425,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":428,"mutability":"mutable","name":"spender","nameLocation":"1589:7:2","nodeType":"VariableDeclaration","scope":433,"src":"1581:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":427,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:2"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":433,"src":"1621:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:2"},"scope":456,"src":"1547:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":434,"nodeType":"StructuredDocumentation","src":"1636:667:2","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":443,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:2","nodeType":"FunctionDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"spender","nameLocation":"2333:7:2","nodeType":"VariableDeclaration","scope":443,"src":"2325:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":435,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":438,"mutability":"mutable","name":"value","nameLocation":"2350:5:2","nodeType":"VariableDeclaration","scope":443,"src":"2342:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":437,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:2"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":443,"src":"2375:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":440,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:2"},"scope":456,"src":"2308:73:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"2387:297:2","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":455,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:2","nodeType":"FunctionDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"from","nameLocation":"2719:4:2","nodeType":"VariableDeclaration","scope":455,"src":"2711:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":445,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"to","nameLocation":"2733:2:2","nodeType":"VariableDeclaration","scope":455,"src":"2725:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"value","nameLocation":"2745:5:2","nodeType":"VariableDeclaration","scope":455,"src":"2737:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":449,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:2"},"returnParameters":{"id":454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":455,"src":"2770:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":452,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:2"},"scope":456,"src":"2689:87:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":457,"src":"203:2575:2","usedErrors":[],"usedEvents":[390,399]}],"src":"106:2673:2"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"id":3,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[1176],"IERC721":[573]},"id":574,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":458,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":460,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":574,"sourceUnit":1177,"src":"134:62:3","symbolAliases":[{"foreign":{"id":459,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"142:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":462,"name":"IERC165","nameLocations":["287:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1176,"src":"287:7:3"},"id":463,"nodeType":"InheritanceSpecifier","src":"287:7:3"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"198:67:3","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":573,"linearizedBaseContracts":[573,1176],"name":"IERC721","nameLocation":"276:7:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"301:88:3","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":472,"name":"Transfer","nameLocation":"400:8:3","nodeType":"EventDefinition","parameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"425:4:3","nodeType":"VariableDeclaration","scope":472,"src":"409:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":465,"name":"address","nodeType":"ElementaryTypeName","src":"409:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":468,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"447:2:3","nodeType":"VariableDeclaration","scope":472,"src":"431:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"431:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":470,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"467:7:3","nodeType":"VariableDeclaration","scope":472,"src":"451:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":469,"name":"uint256","nodeType":"ElementaryTypeName","src":"451:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"408:67:3"},"src":"394:82:3"},{"anonymous":false,"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"482:94:3","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":481,"name":"Approval","nameLocation":"587:8:3","nodeType":"EventDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"612:5:3","nodeType":"VariableDeclaration","scope":481,"src":"596:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":474,"name":"address","nodeType":"ElementaryTypeName","src":"596:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":477,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"635:8:3","nodeType":"VariableDeclaration","scope":481,"src":"619:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":476,"name":"address","nodeType":"ElementaryTypeName","src":"619:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":479,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"661:7:3","nodeType":"VariableDeclaration","scope":481,"src":"645:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":478,"name":"uint256","nodeType":"ElementaryTypeName","src":"645:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"595:74:3"},"src":"581:89:3"},{"anonymous":false,"documentation":{"id":482,"nodeType":"StructuredDocumentation","src":"676:117:3","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":490,"name":"ApprovalForAll","nameLocation":"804:14:3","nodeType":"EventDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"835:5:3","nodeType":"VariableDeclaration","scope":490,"src":"819:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":483,"name":"address","nodeType":"ElementaryTypeName","src":"819:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":486,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"858:8:3","nodeType":"VariableDeclaration","scope":490,"src":"842:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":485,"name":"address","nodeType":"ElementaryTypeName","src":"842:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":488,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"873:8:3","nodeType":"VariableDeclaration","scope":490,"src":"868:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":487,"name":"bool","nodeType":"ElementaryTypeName","src":"868:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"818:64:3"},"src":"798:85:3"},{"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"889:76:3","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":498,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"979:9:3","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"owner","nameLocation":"997:5:3","nodeType":"VariableDeclaration","scope":498,"src":"989:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"989:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"988:15:3"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"balance","nameLocation":"1035:7:3","nodeType":"VariableDeclaration","scope":498,"src":"1027:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":495,"name":"uint256","nodeType":"ElementaryTypeName","src":"1027:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1026:17:3"},"scope":573,"src":"970:74:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"1050:131:3","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":506,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1195:7:3","nodeType":"FunctionDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":501,"mutability":"mutable","name":"tokenId","nameLocation":"1211:7:3","nodeType":"VariableDeclaration","scope":506,"src":"1203:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":500,"name":"uint256","nodeType":"ElementaryTypeName","src":"1203:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1202:17:3"},"returnParameters":{"id":505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":504,"mutability":"mutable","name":"owner","nameLocation":"1251:5:3","nodeType":"VariableDeclaration","scope":506,"src":"1243:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":503,"name":"address","nodeType":"ElementaryTypeName","src":"1243:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1242:15:3"},"scope":573,"src":"1186:72:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":507,"nodeType":"StructuredDocumentation","src":"1264:565:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":518,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1843:16:3","nodeType":"FunctionDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"from","nameLocation":"1868:4:3","nodeType":"VariableDeclaration","scope":518,"src":"1860:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"1860:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":511,"mutability":"mutable","name":"to","nameLocation":"1882:2:3","nodeType":"VariableDeclaration","scope":518,"src":"1874:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"1874:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":513,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:3","nodeType":"VariableDeclaration","scope":518,"src":"1886:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":512,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"data","nameLocation":"1918:4:3","nodeType":"VariableDeclaration","scope":518,"src":"1903:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":514,"name":"bytes","nodeType":"ElementaryTypeName","src":"1903:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1859:64:3"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[],"src":"1932:0:3"},"scope":573,"src":"1834:99:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":519,"nodeType":"StructuredDocumentation","src":"1939:705:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":528,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2658:16:3","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":521,"mutability":"mutable","name":"from","nameLocation":"2683:4:3","nodeType":"VariableDeclaration","scope":528,"src":"2675:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":520,"name":"address","nodeType":"ElementaryTypeName","src":"2675:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":523,"mutability":"mutable","name":"to","nameLocation":"2697:2:3","nodeType":"VariableDeclaration","scope":528,"src":"2689:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"2689:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"tokenId","nameLocation":"2709:7:3","nodeType":"VariableDeclaration","scope":528,"src":"2701:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":524,"name":"uint256","nodeType":"ElementaryTypeName","src":"2701:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2674:43:3"},"returnParameters":{"id":527,"nodeType":"ParameterList","parameters":[],"src":"2726:0:3"},"scope":573,"src":"2649:78:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"2733:732:3","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":538,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3479:12:3","nodeType":"FunctionDefinition","parameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"from","nameLocation":"3500:4:3","nodeType":"VariableDeclaration","scope":538,"src":"3492:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":530,"name":"address","nodeType":"ElementaryTypeName","src":"3492:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":533,"mutability":"mutable","name":"to","nameLocation":"3514:2:3","nodeType":"VariableDeclaration","scope":538,"src":"3506:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"3506:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":535,"mutability":"mutable","name":"tokenId","nameLocation":"3526:7:3","nodeType":"VariableDeclaration","scope":538,"src":"3518:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"3518:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:43:3"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[],"src":"3543:0:3"},"scope":573,"src":"3470:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"3550:452:3","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":546,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4016:7:3","nodeType":"FunctionDefinition","parameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"to","nameLocation":"4032:2:3","nodeType":"VariableDeclaration","scope":546,"src":"4024:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"4024:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"tokenId","nameLocation":"4044:7:3","nodeType":"VariableDeclaration","scope":546,"src":"4036:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":542,"name":"uint256","nodeType":"ElementaryTypeName","src":"4036:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4023:29:3"},"returnParameters":{"id":545,"nodeType":"ParameterList","parameters":[],"src":"4061:0:3"},"scope":573,"src":"4007:55:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":547,"nodeType":"StructuredDocumentation","src":"4068:315:3","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":554,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4397:17:3","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"mutability":"mutable","name":"operator","nameLocation":"4423:8:3","nodeType":"VariableDeclaration","scope":554,"src":"4415:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":548,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"approved","nameLocation":"4438:8:3","nodeType":"VariableDeclaration","scope":554,"src":"4433:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":550,"name":"bool","nodeType":"ElementaryTypeName","src":"4433:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4414:33:3"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"4456:0:3"},"scope":573,"src":"4388:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"4463:139:3","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":562,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4616:11:3","nodeType":"FunctionDefinition","parameters":{"id":558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"tokenId","nameLocation":"4636:7:3","nodeType":"VariableDeclaration","scope":562,"src":"4628:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":556,"name":"uint256","nodeType":"ElementaryTypeName","src":"4628:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4627:17:3"},"returnParameters":{"id":561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":560,"mutability":"mutable","name":"operator","nameLocation":"4676:8:3","nodeType":"VariableDeclaration","scope":562,"src":"4668:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"4668:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4667:18:3"},"scope":573,"src":"4607:79:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"4692:138:3","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":572,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4844:16:3","nodeType":"FunctionDefinition","parameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"owner","nameLocation":"4869:5:3","nodeType":"VariableDeclaration","scope":572,"src":"4861:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":564,"name":"address","nodeType":"ElementaryTypeName","src":"4861:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":567,"mutability":"mutable","name":"operator","nameLocation":"4884:8:3","nodeType":"VariableDeclaration","scope":572,"src":"4876:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"4876:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4860:33:3"},"returnParameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":572,"src":"4917:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":569,"name":"bool","nodeType":"ElementaryTypeName","src":"4917:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4916:6:3"},"scope":573,"src":"4835:88:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":574,"src":"266:4659:3","usedErrors":[],"usedEvents":[472,481,490]}],"src":"108:4818:3"}},"@openzeppelin/contracts/utils/Context.sol":{"id":4,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[603]},"id":604,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":575,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":576,"nodeType":"StructuredDocumentation","src":"127:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":603,"linearizedBaseContracts":[603],"name":"Context","nameLocation":"642:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":584,"nodeType":"Block","src":"718:34:4","statements":[{"expression":{"expression":{"id":581,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:4","memberName":"sender","nodeType":"MemberAccess","src":"735:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":580,"id":583,"nodeType":"Return","src":"728:17:4"}]},"id":585,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:4","nodeType":"FunctionDefinition","parameters":{"id":577,"nodeType":"ParameterList","parameters":[],"src":"675:2:4"},"returnParameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":585,"src":"709:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":578,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:4"},"scope":603,"src":"656:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":593,"nodeType":"Block","src":"825:32:4","statements":[{"expression":{"expression":{"id":590,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:4","memberName":"data","nodeType":"MemberAccess","src":"842:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":589,"id":592,"nodeType":"Return","src":"835:15:4"}]},"id":594,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:4","nodeType":"FunctionDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[],"src":"775:2:4"},"returnParameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":594,"src":"809:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":587,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:4"},"scope":603,"src":"758:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":601,"nodeType":"Block","src":"935:25:4","statements":[{"expression":{"hexValue":"30","id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":598,"id":600,"nodeType":"Return","src":"945:8:4"}]},"id":602,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:4","nodeType":"FunctionDefinition","parameters":{"id":595,"nodeType":"ParameterList","parameters":[],"src":"892:2:4"},"returnParameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":602,"src":"926:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":596,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:4"},"scope":603,"src":"863:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":604,"src":"624:338:4","usedErrors":[],"usedEvents":[]}],"src":"101:862:4"}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"id":5,"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"MerkleProof":[1140]},"id":1141,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":605,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":606,"nodeType":"StructuredDocumentation","src":"144:658:5","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the Merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates Merkle trees that are safe\n against this attack out of the box."},"fullyImplemented":true,"id":1140,"linearizedBaseContracts":[1140],"name":"MerkleProof","nameLocation":"811:11:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"829:60:5","text":"@dev The multiproof provided is not valid."},"errorSelector":"35140492","id":609,"name":"MerkleProofInvalidMultiproof","nameLocation":"900:28:5","nodeType":"ErrorDefinition","parameters":{"id":608,"nodeType":"ParameterList","parameters":[],"src":"928:2:5"},"src":"894:37:5"},{"body":{"id":629,"nodeType":"Block","src":"1362:57:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":623,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"1392:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":624,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"1399:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":622,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"1379:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1379:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":626,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"1408:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1379:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":621,"id":628,"nodeType":"Return","src":"1372:40:5"}]},"documentation":{"id":610,"nodeType":"StructuredDocumentation","src":"937:323:5","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."},"id":630,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1274:6:5","nodeType":"FunctionDefinition","parameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":613,"mutability":"mutable","name":"proof","nameLocation":"1298:5:5","nodeType":"VariableDeclaration","scope":630,"src":"1281:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1281:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":612,"nodeType":"ArrayTypeName","src":"1281:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":615,"mutability":"mutable","name":"root","nameLocation":"1313:4:5","nodeType":"VariableDeclaration","scope":630,"src":"1305:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1305:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":617,"mutability":"mutable","name":"leaf","nameLocation":"1327:4:5","nodeType":"VariableDeclaration","scope":630,"src":"1319:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1319:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1280:52:5"},"returnParameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":630,"src":"1356:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":619,"name":"bool","nodeType":"ElementaryTypeName","src":"1356:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1355:6:5"},"scope":1140,"src":"1265:154:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":650,"nodeType":"Block","src":"1589:65:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":644,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"1627:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":645,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"1634:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":643,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"1606:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1606:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":647,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"1643:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1606:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":642,"id":649,"nodeType":"Return","src":"1599:48:5"}]},"documentation":{"id":631,"nodeType":"StructuredDocumentation","src":"1425:52:5","text":" @dev Calldata version of {verify}"},"id":651,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"1491:14:5","nodeType":"FunctionDefinition","parameters":{"id":639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"proof","nameLocation":"1525:5:5","nodeType":"VariableDeclaration","scope":651,"src":"1506:24:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1506:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":633,"nodeType":"ArrayTypeName","src":"1506:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"root","nameLocation":"1540:4:5","nodeType":"VariableDeclaration","scope":651,"src":"1532:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":635,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1532:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":638,"mutability":"mutable","name":"leaf","nameLocation":"1554:4:5","nodeType":"VariableDeclaration","scope":651,"src":"1546:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":637,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1546:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1505:54:5"},"returnParameters":{"id":642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":651,"src":"1583:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":640,"name":"bool","nodeType":"ElementaryTypeName","src":"1583:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1582:6:5"},"scope":1140,"src":"1482:172:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":690,"nodeType":"Block","src":"2059:198:5","statements":[{"assignments":[663],"declarations":[{"constant":false,"id":663,"mutability":"mutable","name":"computedHash","nameLocation":"2077:12:5","nodeType":"VariableDeclaration","scope":690,"src":"2069:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":662,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2069:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":665,"initialValue":{"id":664,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"2092:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2069:27:5"},{"body":{"id":686,"nodeType":"Block","src":"2149:73:5","statements":[{"expression":{"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":677,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"2163:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":679,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"2188:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":680,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"2202:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":682,"indexExpression":{"id":681,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"2208:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2202:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":678,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"2178:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2163:48:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":685,"nodeType":"ExpressionStatement","src":"2163:48:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":670,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"2126:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":671,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"2130:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2136:6:5","memberName":"length","nodeType":"MemberAccess","src":"2130:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2126:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":687,"initializationExpression":{"assignments":[667],"declarations":[{"constant":false,"id":667,"mutability":"mutable","name":"i","nameLocation":"2119:1:5","nodeType":"VariableDeclaration","scope":687,"src":"2111:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":666,"name":"uint256","nodeType":"ElementaryTypeName","src":"2111:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":669,"initialValue":{"hexValue":"30","id":668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2123:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2111:13:5"},"loopExpression":{"expression":{"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2144:3:5","subExpression":{"id":674,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"2144:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":676,"nodeType":"ExpressionStatement","src":"2144:3:5"},"nodeType":"ForStatement","src":"2106:116:5"},{"expression":{"id":688,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"2238:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":661,"id":689,"nodeType":"Return","src":"2231:19:5"}]},"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"1660:302:5","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted."},"id":691,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"1976:12:5","nodeType":"FunctionDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":655,"mutability":"mutable","name":"proof","nameLocation":"2006:5:5","nodeType":"VariableDeclaration","scope":691,"src":"1989:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1989:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":654,"nodeType":"ArrayTypeName","src":"1989:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":657,"mutability":"mutable","name":"leaf","nameLocation":"2021:4:5","nodeType":"VariableDeclaration","scope":691,"src":"2013:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":656,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2013:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1988:38:5"},"returnParameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":691,"src":"2050:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":659,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2050:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2049:9:5"},"scope":1140,"src":"1967:290:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":730,"nodeType":"Block","src":"2428:198:5","statements":[{"assignments":[703],"declarations":[{"constant":false,"id":703,"mutability":"mutable","name":"computedHash","nameLocation":"2446:12:5","nodeType":"VariableDeclaration","scope":730,"src":"2438:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":702,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2438:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":705,"initialValue":{"id":704,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"2461:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2438:27:5"},{"body":{"id":726,"nodeType":"Block","src":"2518:73:5","statements":[{"expression":{"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":717,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"2532:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":719,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"2557:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":720,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"2571:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":722,"indexExpression":{"id":721,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"2577:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2571:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":718,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"2547:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2547:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2532:48:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":725,"nodeType":"ExpressionStatement","src":"2532:48:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":710,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"2495:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":711,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"2499:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2505:6:5","memberName":"length","nodeType":"MemberAccess","src":"2499:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2495:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":727,"initializationExpression":{"assignments":[707],"declarations":[{"constant":false,"id":707,"mutability":"mutable","name":"i","nameLocation":"2488:1:5","nodeType":"VariableDeclaration","scope":727,"src":"2480:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"2480:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":709,"initialValue":{"hexValue":"30","id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2492:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2480:13:5"},"loopExpression":{"expression":{"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2513:3:5","subExpression":{"id":714,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"2513:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":716,"nodeType":"ExpressionStatement","src":"2513:3:5"},"nodeType":"ForStatement","src":"2475:116:5"},{"expression":{"id":728,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"2607:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":701,"id":729,"nodeType":"Return","src":"2600:19:5"}]},"documentation":{"id":692,"nodeType":"StructuredDocumentation","src":"2263:58:5","text":" @dev Calldata version of {processProof}"},"id":731,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"2335:20:5","nodeType":"FunctionDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"proof","nameLocation":"2375:5:5","nodeType":"VariableDeclaration","scope":731,"src":"2356:24:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2356:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":694,"nodeType":"ArrayTypeName","src":"2356:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"leaf","nameLocation":"2390:4:5","nodeType":"VariableDeclaration","scope":731,"src":"2382:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":696,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2382:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2355:40:5"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":731,"src":"2419:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":699,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2419:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2418:9:5"},"scope":1140,"src":"2326:300:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":756,"nodeType":"Block","src":"3131:76:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":749,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"3166:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":750,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"3173:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":751,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"3185:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":748,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"3148:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3148:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":753,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"3196:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3148:52:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":747,"id":755,"nodeType":"Return","src":"3141:59:5"}]},"documentation":{"id":732,"nodeType":"StructuredDocumentation","src":"2632:312:5","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details."},"id":757,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"2958:16:5","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"proof","nameLocation":"3001:5:5","nodeType":"VariableDeclaration","scope":757,"src":"2984:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2984:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":734,"nodeType":"ArrayTypeName","src":"2984:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":738,"mutability":"mutable","name":"proofFlags","nameLocation":"3030:10:5","nodeType":"VariableDeclaration","scope":757,"src":"3016:24:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":736,"name":"bool","nodeType":"ElementaryTypeName","src":"3016:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":737,"nodeType":"ArrayTypeName","src":"3016:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":740,"mutability":"mutable","name":"root","nameLocation":"3058:4:5","nodeType":"VariableDeclaration","scope":757,"src":"3050:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":739,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3050:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"leaves","nameLocation":"3089:6:5","nodeType":"VariableDeclaration","scope":757,"src":"3072:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3072:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":742,"nodeType":"ArrayTypeName","src":"3072:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"2974:127:5"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":757,"src":"3125:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":745,"name":"bool","nodeType":"ElementaryTypeName","src":"3125:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3124:6:5"},"scope":1140,"src":"2949:258:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":782,"nodeType":"Block","src":"3574:84:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":775,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"3617:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":776,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"3624:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":777,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"3636:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":774,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"3591:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":779,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"3647:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3591:60:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":773,"id":781,"nodeType":"Return","src":"3584:67:5"}]},"documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"3213:162:5","text":" @dev Calldata version of {multiProofVerify}\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details."},"id":783,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"3389:24:5","nodeType":"FunctionDefinition","parameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"proof","nameLocation":"3442:5:5","nodeType":"VariableDeclaration","scope":783,"src":"3423:24:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":759,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3423:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":760,"nodeType":"ArrayTypeName","src":"3423:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":764,"mutability":"mutable","name":"proofFlags","nameLocation":"3473:10:5","nodeType":"VariableDeclaration","scope":783,"src":"3457:26:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":762,"name":"bool","nodeType":"ElementaryTypeName","src":"3457:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":763,"nodeType":"ArrayTypeName","src":"3457:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":766,"mutability":"mutable","name":"root","nameLocation":"3501:4:5","nodeType":"VariableDeclaration","scope":783,"src":"3493:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":765,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3493:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"leaves","nameLocation":"3532:6:5","nodeType":"VariableDeclaration","scope":783,"src":"3515:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":767,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3515:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":768,"nodeType":"ArrayTypeName","src":"3515:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3413:131:5"},"returnParameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":783,"src":"3568:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":771,"name":"bool","nodeType":"ElementaryTypeName","src":"3568:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3567:6:5"},"scope":1140,"src":"3380:278:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":942,"nodeType":"Block","src":"4574:2107:5","statements":[{"assignments":[799],"declarations":[{"constant":false,"id":799,"mutability":"mutable","name":"leavesLen","nameLocation":"4966:9:5","nodeType":"VariableDeclaration","scope":942,"src":"4958:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":798,"name":"uint256","nodeType":"ElementaryTypeName","src":"4958:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":802,"initialValue":{"expression":{"id":800,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"4978:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4985:6:5","memberName":"length","nodeType":"MemberAccess","src":"4978:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4958:33:5"},{"assignments":[804],"declarations":[{"constant":false,"id":804,"mutability":"mutable","name":"proofLen","nameLocation":"5009:8:5","nodeType":"VariableDeclaration","scope":942,"src":"5001:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":803,"name":"uint256","nodeType":"ElementaryTypeName","src":"5001:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":807,"initialValue":{"expression":{"id":805,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"5020:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5026:6:5","memberName":"length","nodeType":"MemberAccess","src":"5020:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5001:31:5"},{"assignments":[809],"declarations":[{"constant":false,"id":809,"mutability":"mutable","name":"totalHashes","nameLocation":"5050:11:5","nodeType":"VariableDeclaration","scope":942,"src":"5042:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"5042:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":812,"initialValue":{"expression":{"id":810,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"5064:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5075:6:5","memberName":"length","nodeType":"MemberAccess","src":"5064:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5042:39:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":813,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"5129:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":814,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"5141:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5129:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":816,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"5153:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5167:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5153:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5129:39:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":824,"nodeType":"IfStatement","src":"5125:107:5","trueBody":{"id":823,"nodeType":"Block","src":"5170:62:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":820,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"5191:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5191:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":822,"nodeType":"RevertStatement","src":"5184:37:5"}]}},{"assignments":[829],"declarations":[{"constant":false,"id":829,"mutability":"mutable","name":"hashes","nameLocation":"5493:6:5","nodeType":"VariableDeclaration","scope":942,"src":"5476:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":827,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5476:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":828,"nodeType":"ArrayTypeName","src":"5476:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":835,"initialValue":{"arguments":[{"id":833,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"5516:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5502:13:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":830,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5506:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":831,"nodeType":"ArrayTypeName","src":"5506:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5502:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5476:52:5"},{"assignments":[837],"declarations":[{"constant":false,"id":837,"mutability":"mutable","name":"leafPos","nameLocation":"5546:7:5","nodeType":"VariableDeclaration","scope":942,"src":"5538:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"5538:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":839,"initialValue":{"hexValue":"30","id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5556:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5538:19:5"},{"assignments":[841],"declarations":[{"constant":false,"id":841,"mutability":"mutable","name":"hashPos","nameLocation":"5575:7:5","nodeType":"VariableDeclaration","scope":942,"src":"5567:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"5567:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":843,"initialValue":{"hexValue":"30","id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5567:19:5"},{"assignments":[845],"declarations":[{"constant":false,"id":845,"mutability":"mutable","name":"proofPos","nameLocation":"5604:8:5","nodeType":"VariableDeclaration","scope":942,"src":"5596:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":844,"name":"uint256","nodeType":"ElementaryTypeName","src":"5596:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":847,"initialValue":{"hexValue":"30","id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5615:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5596:20:5"},{"body":{"id":906,"nodeType":"Block","src":"6034:292:5","statements":[{"assignments":[859],"declarations":[{"constant":false,"id":859,"mutability":"mutable","name":"a","nameLocation":"6056:1:5","nodeType":"VariableDeclaration","scope":906,"src":"6048:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6048:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":872,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":860,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"6060:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":861,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"6070:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6060:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":867,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"6102:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":870,"indexExpression":{"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6109:9:5","subExpression":{"id":868,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"6109:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6102:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6060:59:5","trueExpression":{"baseExpression":{"id":863,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"6082:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":866,"indexExpression":{"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6089:9:5","subExpression":{"id":864,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"6089:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6082:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6048:71:5"},{"assignments":[874],"declarations":[{"constant":false,"id":874,"mutability":"mutable","name":"b","nameLocation":"6141:1:5","nodeType":"VariableDeclaration","scope":906,"src":"6133:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":873,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6133:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":896,"initialValue":{"condition":{"baseExpression":{"id":875,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"6145:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":877,"indexExpression":{"id":876,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"6156:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6145:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":891,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"6257:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":894,"indexExpression":{"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6263:10:5","subExpression":{"id":892,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"6263:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6257:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6145:129:5","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":878,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"6178:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":879,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"6188:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6178:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":885,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"6220:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":888,"indexExpression":{"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6227:9:5","subExpression":{"id":886,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"6227:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6220:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6178:59:5","trueExpression":{"baseExpression":{"id":881,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"6200:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":884,"indexExpression":{"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6207:9:5","subExpression":{"id":882,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"6207:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6200:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6177:61:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6133:141:5"},{"expression":{"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":897,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"6288:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":899,"indexExpression":{"id":898,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"6295:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6288:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":901,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"6310:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":902,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"6313:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":900,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"6300:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6300:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6288:27:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":905,"nodeType":"ExpressionStatement","src":"6288:27:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":852,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"6012:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":853,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"6016:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6012:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":907,"initializationExpression":{"assignments":[849],"declarations":[{"constant":false,"id":849,"mutability":"mutable","name":"i","nameLocation":"6005:1:5","nodeType":"VariableDeclaration","scope":907,"src":"5997:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"5997:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":851,"initialValue":{"hexValue":"30","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6009:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5997:13:5"},"loopExpression":{"expression":{"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6029:3:5","subExpression":{"id":855,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"6029:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":857,"nodeType":"ExpressionStatement","src":"6029:3:5"},"nodeType":"ForStatement","src":"5992:334:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":908,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"6340:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6354:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6340:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":927,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"6573:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6585:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6573:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":939,"nodeType":"Block","src":"6635:40:5","statements":[{"expression":{"baseExpression":{"id":935,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"6656:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":937,"indexExpression":{"hexValue":"30","id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6662:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6656:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":797,"id":938,"nodeType":"Return","src":"6649:15:5"}]},"id":940,"nodeType":"IfStatement","src":"6569:106:5","trueBody":{"id":934,"nodeType":"Block","src":"6588:41:5","statements":[{"expression":{"baseExpression":{"id":930,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"6609:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":932,"indexExpression":{"hexValue":"30","id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6616:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6609:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":797,"id":933,"nodeType":"Return","src":"6602:16:5"}]}},"id":941,"nodeType":"IfStatement","src":"6336:339:5","trueBody":{"id":926,"nodeType":"Block","src":"6357:206:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":911,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"6375:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":912,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"6387:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6375:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":918,"nodeType":"IfStatement","src":"6371:96:5","trueBody":{"id":917,"nodeType":"Block","src":"6397:70:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":914,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"6422:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6422:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":916,"nodeType":"RevertStatement","src":"6415:37:5"}]}},{"id":925,"nodeType":"UncheckedBlock","src":"6480:73:5","statements":[{"expression":{"baseExpression":{"id":919,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"6515:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":923,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":920,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"6522:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6536:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6522:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6515:23:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":797,"id":924,"nodeType":"Return","src":"6508:30:5"}]}]}}]},"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"3664:730:5","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer)."},"id":943,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"4408:17:5","nodeType":"FunctionDefinition","parameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"proof","nameLocation":"4452:5:5","nodeType":"VariableDeclaration","scope":943,"src":"4435:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":785,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4435:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":786,"nodeType":"ArrayTypeName","src":"4435:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":790,"mutability":"mutable","name":"proofFlags","nameLocation":"4481:10:5","nodeType":"VariableDeclaration","scope":943,"src":"4467:24:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":788,"name":"bool","nodeType":"ElementaryTypeName","src":"4467:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":789,"nodeType":"ArrayTypeName","src":"4467:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"leaves","nameLocation":"4518:6:5","nodeType":"VariableDeclaration","scope":943,"src":"4501:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":791,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4501:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":792,"nodeType":"ArrayTypeName","src":"4501:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4425:105:5"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"merkleRoot","nameLocation":"4562:10:5","nodeType":"VariableDeclaration","scope":943,"src":"4554:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4554:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4553:20:5"},"scope":1140,"src":"4399:2282:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1102,"nodeType":"Block","src":"7043:2107:5","statements":[{"assignments":[959],"declarations":[{"constant":false,"id":959,"mutability":"mutable","name":"leavesLen","nameLocation":"7435:9:5","nodeType":"VariableDeclaration","scope":1102,"src":"7427:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":958,"name":"uint256","nodeType":"ElementaryTypeName","src":"7427:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":962,"initialValue":{"expression":{"id":960,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"7447:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7454:6:5","memberName":"length","nodeType":"MemberAccess","src":"7447:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7427:33:5"},{"assignments":[964],"declarations":[{"constant":false,"id":964,"mutability":"mutable","name":"proofLen","nameLocation":"7478:8:5","nodeType":"VariableDeclaration","scope":1102,"src":"7470:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":963,"name":"uint256","nodeType":"ElementaryTypeName","src":"7470:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":967,"initialValue":{"expression":{"id":965,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"7489:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7495:6:5","memberName":"length","nodeType":"MemberAccess","src":"7489:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7470:31:5"},{"assignments":[969],"declarations":[{"constant":false,"id":969,"mutability":"mutable","name":"totalHashes","nameLocation":"7519:11:5","nodeType":"VariableDeclaration","scope":1102,"src":"7511:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"7511:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":972,"initialValue":{"expression":{"id":970,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"7533:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7544:6:5","memberName":"length","nodeType":"MemberAccess","src":"7533:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7511:39:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":973,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"7598:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":974,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"7610:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7598:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":976,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"7622:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7636:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7622:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7598:39:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":984,"nodeType":"IfStatement","src":"7594:107:5","trueBody":{"id":983,"nodeType":"Block","src":"7639:62:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":980,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"7660:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7660:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":982,"nodeType":"RevertStatement","src":"7653:37:5"}]}},{"assignments":[989],"declarations":[{"constant":false,"id":989,"mutability":"mutable","name":"hashes","nameLocation":"7962:6:5","nodeType":"VariableDeclaration","scope":1102,"src":"7945:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7945:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":988,"nodeType":"ArrayTypeName","src":"7945:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":995,"initialValue":{"arguments":[{"id":993,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"7985:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7971:13:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7975:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":991,"nodeType":"ArrayTypeName","src":"7975:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7971:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7945:52:5"},{"assignments":[997],"declarations":[{"constant":false,"id":997,"mutability":"mutable","name":"leafPos","nameLocation":"8015:7:5","nodeType":"VariableDeclaration","scope":1102,"src":"8007:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":996,"name":"uint256","nodeType":"ElementaryTypeName","src":"8007:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":999,"initialValue":{"hexValue":"30","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8025:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8007:19:5"},{"assignments":[1001],"declarations":[{"constant":false,"id":1001,"mutability":"mutable","name":"hashPos","nameLocation":"8044:7:5","nodeType":"VariableDeclaration","scope":1102,"src":"8036:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1000,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1003,"initialValue":{"hexValue":"30","id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8054:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8036:19:5"},{"assignments":[1005],"declarations":[{"constant":false,"id":1005,"mutability":"mutable","name":"proofPos","nameLocation":"8073:8:5","nodeType":"VariableDeclaration","scope":1102,"src":"8065:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1004,"name":"uint256","nodeType":"ElementaryTypeName","src":"8065:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1007,"initialValue":{"hexValue":"30","id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8084:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8065:20:5"},{"body":{"id":1066,"nodeType":"Block","src":"8503:292:5","statements":[{"assignments":[1019],"declarations":[{"constant":false,"id":1019,"mutability":"mutable","name":"a","nameLocation":"8525:1:5","nodeType":"VariableDeclaration","scope":1066,"src":"8517:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1018,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8517:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1032,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1020,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"8529:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1021,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8539:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8529:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1027,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"8571:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1030,"indexExpression":{"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8578:9:5","subExpression":{"id":1028,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"8578:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8571:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8529:59:5","trueExpression":{"baseExpression":{"id":1023,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"8551:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1026,"indexExpression":{"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8558:9:5","subExpression":{"id":1024,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"8558:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8551:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8517:71:5"},{"assignments":[1034],"declarations":[{"constant":false,"id":1034,"mutability":"mutable","name":"b","nameLocation":"8610:1:5","nodeType":"VariableDeclaration","scope":1066,"src":"8602:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8602:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1056,"initialValue":{"condition":{"baseExpression":{"id":1035,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"8614:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1037,"indexExpression":{"id":1036,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"8625:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8614:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1051,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"8726:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1054,"indexExpression":{"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8732:10:5","subExpression":{"id":1052,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"8732:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8726:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8614:129:5","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1038,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"8647:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1039,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8657:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8647:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1045,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"8689:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1048,"indexExpression":{"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8696:9:5","subExpression":{"id":1046,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"8696:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8689:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8647:59:5","trueExpression":{"baseExpression":{"id":1041,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"8669:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1044,"indexExpression":{"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8676:9:5","subExpression":{"id":1042,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"8676:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8669:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1050,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8646:61:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8602:141:5"},{"expression":{"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1057,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"8757:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1059,"indexExpression":{"id":1058,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"8764:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8757:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1061,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"8779:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1062,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"8782:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1060,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"8769:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8769:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8757:27:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1065,"nodeType":"ExpressionStatement","src":"8757:27:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1012,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"8481:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1013,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"8485:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8481:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1067,"initializationExpression":{"assignments":[1009],"declarations":[{"constant":false,"id":1009,"mutability":"mutable","name":"i","nameLocation":"8474:1:5","nodeType":"VariableDeclaration","scope":1067,"src":"8466:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"8466:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1011,"initialValue":{"hexValue":"30","id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8478:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8466:13:5"},"loopExpression":{"expression":{"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8498:3:5","subExpression":{"id":1015,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"8498:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1017,"nodeType":"ExpressionStatement","src":"8498:3:5"},"nodeType":"ForStatement","src":"8461:334:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1068,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"8809:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8823:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8809:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1087,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"9042:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9054:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9042:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1099,"nodeType":"Block","src":"9104:40:5","statements":[{"expression":{"baseExpression":{"id":1095,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"9125:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1097,"indexExpression":{"hexValue":"30","id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9131:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9125:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":957,"id":1098,"nodeType":"Return","src":"9118:15:5"}]},"id":1100,"nodeType":"IfStatement","src":"9038:106:5","trueBody":{"id":1094,"nodeType":"Block","src":"9057:41:5","statements":[{"expression":{"baseExpression":{"id":1090,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"9078:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1092,"indexExpression":{"hexValue":"30","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9085:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9078:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":957,"id":1093,"nodeType":"Return","src":"9071:16:5"}]}},"id":1101,"nodeType":"IfStatement","src":"8805:339:5","trueBody":{"id":1086,"nodeType":"Block","src":"8826:206:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1071,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"8844:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1072,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"8856:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8844:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1078,"nodeType":"IfStatement","src":"8840:96:5","trueBody":{"id":1077,"nodeType":"Block","src":"8866:70:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1074,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"8891:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8891:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1076,"nodeType":"RevertStatement","src":"8884:37:5"}]}},{"id":1085,"nodeType":"UncheckedBlock","src":"8949:73:5","statements":[{"expression":{"baseExpression":{"id":1079,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"8984:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1083,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1080,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"8991:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9005:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8991:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8984:23:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":957,"id":1084,"nodeType":"Return","src":"8977:30:5"}]}]}}]},"documentation":{"id":944,"nodeType":"StructuredDocumentation","src":"6687:164:5","text":" @dev Calldata version of {processMultiProof}.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details."},"id":1103,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"6865:25:5","nodeType":"FunctionDefinition","parameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"proof","nameLocation":"6919:5:5","nodeType":"VariableDeclaration","scope":1103,"src":"6900:24:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6900:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":946,"nodeType":"ArrayTypeName","src":"6900:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":950,"mutability":"mutable","name":"proofFlags","nameLocation":"6950:10:5","nodeType":"VariableDeclaration","scope":1103,"src":"6934:26:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":948,"name":"bool","nodeType":"ElementaryTypeName","src":"6934:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":949,"nodeType":"ArrayTypeName","src":"6934:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"leaves","nameLocation":"6987:6:5","nodeType":"VariableDeclaration","scope":1103,"src":"6970:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":951,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6970:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":952,"nodeType":"ArrayTypeName","src":"6970:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6890:109:5"},"returnParameters":{"id":957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"merkleRoot","nameLocation":"7031:10:5","nodeType":"VariableDeclaration","scope":1103,"src":"7023:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":955,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7023:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7022:20:5"},"scope":1140,"src":"6856:2294:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1126,"nodeType":"Block","src":"9301:75:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1113,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"9318:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1114,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"9322:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9318:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1121,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"9364:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1122,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"9367:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1120,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"9349:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9349:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9318:51:5","trueExpression":{"arguments":[{"id":1117,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"9341:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1118,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"9344:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1116,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"9326:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9326:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1112,"id":1125,"nodeType":"Return","src":"9311:58:5"}]},"documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"9156:68:5","text":" @dev Sorts the pair (a, b) and hashes the result."},"id":1127,"implemented":true,"kind":"function","modifiers":[],"name":"_hashPair","nameLocation":"9238:9:5","nodeType":"FunctionDefinition","parameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"a","nameLocation":"9256:1:5","nodeType":"VariableDeclaration","scope":1127,"src":"9248:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1105,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9248:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"b","nameLocation":"9267:1:5","nodeType":"VariableDeclaration","scope":1127,"src":"9259:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9259:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9247:22:5"},"returnParameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1127,"src":"9292:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1110,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9292:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9291:9:5"},"scope":1140,"src":"9229:147:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1138,"nodeType":"Block","src":"9579:178:5","statements":[{"AST":{"nodeType":"YulBlock","src":"9641:110:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9662:4:5","type":"","value":"0x00"},{"name":"a","nodeType":"YulIdentifier","src":"9668:1:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9655:6:5"},"nodeType":"YulFunctionCall","src":"9655:15:5"},"nodeType":"YulExpressionStatement","src":"9655:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9690:4:5","type":"","value":"0x20"},{"name":"b","nodeType":"YulIdentifier","src":"9696:1:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9683:6:5"},"nodeType":"YulFunctionCall","src":"9683:15:5"},"nodeType":"YulExpressionStatement","src":"9683:15:5"},{"nodeType":"YulAssignment","src":"9711:30:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9730:4:5","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"9736:4:5","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9720:9:5"},"nodeType":"YulFunctionCall","src":"9720:21:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9711:5:5"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1130,"isOffset":false,"isSlot":false,"src":"9668:1:5","valueSize":1},{"declaration":1132,"isOffset":false,"isSlot":false,"src":"9696:1:5","valueSize":1},{"declaration":1135,"isOffset":false,"isSlot":false,"src":"9711:5:5","valueSize":1}],"id":1137,"nodeType":"InlineAssembly","src":"9632:119:5"}]},"documentation":{"id":1128,"nodeType":"StructuredDocumentation","src":"9382:109:5","text":" @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory."},"id":1139,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientHash","nameLocation":"9505:14:5","nodeType":"FunctionDefinition","parameters":{"id":1133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"a","nameLocation":"9528:1:5","nodeType":"VariableDeclaration","scope":1139,"src":"9520:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9520:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1132,"mutability":"mutable","name":"b","nameLocation":"9539:1:5","nodeType":"VariableDeclaration","scope":1139,"src":"9531:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9531:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9519:22:5"},"returnParameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"value","nameLocation":"9572:5:5","nodeType":"VariableDeclaration","scope":1139,"src":"9564:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9564:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9563:15:5"},"scope":1140,"src":"9496:261:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1141,"src":"803:8956:5","usedErrors":[609],"usedEvents":[]}],"src":"118:9642:5"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"id":6,"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1164],"IERC165":[1176]},"id":1165,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1142,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1165,"sourceUnit":1177,"src":"140:38:6","symbolAliases":[{"foreign":{"id":1143,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"148:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1146,"name":"IERC165","nameLocations":["687:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1176,"src":"687:7:6"},"id":1147,"nodeType":"InheritanceSpecifier","src":"687:7:6"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":1145,"nodeType":"StructuredDocumentation","src":"180:478:6","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":1164,"linearizedBaseContracts":[1164,1176],"name":"ERC165","nameLocation":"677:6:6","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1175],"body":{"id":1162,"nodeType":"Block","src":"844:64:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1155,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"861:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1157,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"881:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1176_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1176_$","typeString":"type(contract IERC165)"}],"id":1156,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"876:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"876:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1176","typeString":"type(contract IERC165)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"890:11:6","memberName":"interfaceId","nodeType":"MemberAccess","src":"876:25:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"861:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1154,"id":1161,"nodeType":"Return","src":"854:47:6"}]},"documentation":{"id":1148,"nodeType":"StructuredDocumentation","src":"701:56:6","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1163,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"771:17:6","nodeType":"FunctionDefinition","parameters":{"id":1151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1150,"mutability":"mutable","name":"interfaceId","nameLocation":"796:11:6","nodeType":"VariableDeclaration","scope":1163,"src":"789:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1149,"name":"bytes4","nodeType":"ElementaryTypeName","src":"789:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"788:20:6"},"returnParameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1163,"src":"838:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1152,"name":"bool","nodeType":"ElementaryTypeName","src":"838:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"837:6:6"},"scope":1164,"src":"762:146:6","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1165,"src":"659:251:6","usedErrors":[],"usedEvents":[]}],"src":"114:797:6"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"id":7,"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1176]},"id":1177,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1166,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1167,"nodeType":"StructuredDocumentation","src":"141:279:7","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1176,"linearizedBaseContracts":[1176],"name":"IERC165","nameLocation":"431:7:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1168,"nodeType":"StructuredDocumentation","src":"445:340:7","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1175,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"799:17:7","nodeType":"FunctionDefinition","parameters":{"id":1171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1170,"mutability":"mutable","name":"interfaceId","nameLocation":"824:11:7","nodeType":"VariableDeclaration","scope":1175,"src":"817:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1169,"name":"bytes4","nodeType":"ElementaryTypeName","src":"817:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"816:20:7"},"returnParameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1175,"src":"860:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1172,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"859:6:7"},"scope":1176,"src":"790:76:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1177,"src":"421:447:7","usedErrors":[],"usedEvents":[]}],"src":"115:754:7"}},"contracts/core/DappadSale.sol":{"id":8,"ast":{"absolutePath":"contracts/core/DappadSale.sol","exportedSymbols":{"AccessControl":[295],"Context":[603],"DappadSale":[3854],"ERC165":[1164],"Errors":[4392],"IAccessControl":[378],"IDappadSale":[4714],"IDappadSaleFactory":[4419],"IDappadStake":[4556],"IDappadStakeController":[4487],"IDappadStakeControllerFactory":[4431],"IDappadStakeFactory":[4427],"IDappadVesting":[4800],"IDappadVestingFactory":[4423],"IERC165":[1176],"IERC20":[456],"IERC20Extented":[4404],"IERC721":[573],"IERC721Extented":[4415],"MerkleProof":[1140]},"id":3855,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1178,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"33:23:8"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":1179,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3855,"sourceUnit":296,"src":"58:58:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":1180,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3855,"sourceUnit":1141,"src":"117:68:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/Interfaces.sol","file":"../interfaces/Interfaces.sol","id":1181,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3855,"sourceUnit":4801,"src":"186:38:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/errors/Errors.sol","file":"../errors/Errors.sol","id":1182,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3855,"sourceUnit":4393,"src":"225:30:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1183,"name":"AccessControl","nameLocations":["280:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"280:13:8"},"id":1184,"nodeType":"InheritanceSpecifier","src":"280:13:8"}],"canonicalName":"DappadSale","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3854,"linearizedBaseContracts":[3854,295,1164,1176,378,603],"name":"DappadSale","nameLocation":"266:10:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"117803e3","id":1189,"mutability":"constant","name":"OWNER","nameLocation":"324:5:8","nodeType":"VariableDeclaration","scope":3854,"src":"300:50:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"300:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4f574e4552","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"342:7:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b","typeString":"literal_string \"OWNER\""},"value":"OWNER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b","typeString":"literal_string \"OWNER\""}],"id":1186,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"332:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"332:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"2a0acc6a","id":1194,"mutability":"constant","name":"ADMIN","nameLocation":"380:5:8","nodeType":"VariableDeclaration","scope":3854,"src":"356:50:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"356:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"41444d494e","id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"398:7:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42","typeString":"literal_string \"ADMIN\""},"value":"ADMIN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42","typeString":"literal_string \"ADMIN\""}],"id":1191,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"388:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"388:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"6ad1fe02","id":1197,"mutability":"mutable","name":"sale","nameLocation":"437:4:8","nodeType":"VariableDeclaration","scope":3854,"src":"413:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale"},"typeName":{"id":1196,"nodeType":"UserDefinedTypeName","pathNode":{"id":1195,"name":"IDappadSale.Sale","nameLocations":["413:11:8","425:4:8"],"nodeType":"IdentifierPath","referencedDeclaration":4580,"src":"413:16:8"},"referencedDeclaration":4580,"src":"413:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage_ptr","typeString":"struct IDappadSale.Sale"}},"visibility":"public"},{"constant":false,"functionSelector":"c36c0871","id":1200,"mutability":"mutable","name":"saleStatistics","nameLocation":"481:14:8","nodeType":"VariableDeclaration","scope":3854,"src":"447:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_SaleStatistics_$4659_storage","typeString":"struct IDappadSale.SaleStatistics"},"typeName":{"id":1199,"nodeType":"UserDefinedTypeName","pathNode":{"id":1198,"name":"IDappadSale.SaleStatistics","nameLocations":["447:11:8","459:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":4659,"src":"447:26:8"},"referencedDeclaration":4659,"src":"447:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleStatistics_$4659_storage_ptr","typeString":"struct IDappadSale.SaleStatistics"}},"visibility":"public"},{"constant":false,"functionSelector":"bf03314a","id":1203,"mutability":"mutable","name":"registerToken","nameLocation":"524:13:8","nodeType":"VariableDeclaration","scope":3854,"src":"502:35:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"},"typeName":{"id":1202,"nodeType":"UserDefinedTypeName","pathNode":{"id":1201,"name":"IERC20Extented","nameLocations":["502:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":4404,"src":"502:14:8"},"referencedDeclaration":4404,"src":"502:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"visibility":"public"},{"constant":false,"functionSelector":"002703a2","id":1206,"mutability":"mutable","name":"investmentToken","nameLocation":"565:15:8","nodeType":"VariableDeclaration","scope":3854,"src":"543:37:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"},"typeName":{"id":1205,"nodeType":"UserDefinedTypeName","pathNode":{"id":1204,"name":"IERC20Extented","nameLocations":["543:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":4404,"src":"543:14:8"},"referencedDeclaration":4404,"src":"543:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"visibility":"public"},{"constant":false,"functionSelector":"4d4fc99e","id":1209,"mutability":"mutable","name":"stakeControllerContract","nameLocation":"616:23:8","nodeType":"VariableDeclaration","scope":3854,"src":"586:53:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadStakeController_$4487","typeString":"contract IDappadStakeController"},"typeName":{"id":1208,"nodeType":"UserDefinedTypeName","pathNode":{"id":1207,"name":"IDappadStakeController","nameLocations":["586:22:8"],"nodeType":"IdentifierPath","referencedDeclaration":4487,"src":"586:22:8"},"referencedDeclaration":4487,"src":"586:22:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadStakeController_$4487","typeString":"contract IDappadStakeController"}},"visibility":"public"},{"constant":false,"functionSelector":"5e6f6045","id":1212,"mutability":"mutable","name":"vestingContract","nameLocation":"667:15:8","nodeType":"VariableDeclaration","scope":3854,"src":"645:37:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadVesting_$4800","typeString":"contract IDappadVesting"},"typeName":{"id":1211,"nodeType":"UserDefinedTypeName","pathNode":{"id":1210,"name":"IDappadVesting","nameLocations":["645:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":4800,"src":"645:14:8"},"referencedDeclaration":4800,"src":"645:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadVesting_$4800","typeString":"contract IDappadVesting"}},"visibility":"public"},{"constant":false,"functionSelector":"e6f1dbc0","id":1217,"mutability":"mutable","name":"registerDetails","nameLocation":"748:15:8","nodeType":"VariableDeclaration","scope":3854,"src":"689:74:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SaleRegisterDetails_$4625_storage_$","typeString":"mapping(address => struct IDappadSale.SaleRegisterDetails)"},"typeName":{"id":1216,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1213,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"689:51:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SaleRegisterDetails_$4625_storage_$","typeString":"mapping(address => struct IDappadSale.SaleRegisterDetails)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1215,"nodeType":"UserDefinedTypeName","pathNode":{"id":1214,"name":"IDappadSale.SaleRegisterDetails","nameLocations":["708:11:8","720:19:8"],"nodeType":"IdentifierPath","referencedDeclaration":4625,"src":"708:31:8"},"referencedDeclaration":4625,"src":"708:31:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRegisterDetails_$4625_storage_ptr","typeString":"struct IDappadSale.SaleRegisterDetails"}}},"visibility":"public"},{"constant":false,"functionSelector":"f75c1b98","id":1222,"mutability":"mutable","name":"tierDetails","nameLocation":"824:11:8","nodeType":"VariableDeclaration","scope":3854,"src":"769:66:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SaleTierDetails_$4674_storage_$","typeString":"mapping(uint256 => struct IDappadSale.SaleTierDetails)"},"typeName":{"id":1221,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"777:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"769:47:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SaleTierDetails_$4674_storage_$","typeString":"mapping(uint256 => struct IDappadSale.SaleTierDetails)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1220,"nodeType":"UserDefinedTypeName","pathNode":{"id":1219,"name":"IDappadSale.SaleTierDetails","nameLocations":["788:11:8","800:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":4674,"src":"788:27:8"},"referencedDeclaration":4674,"src":"788:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage_ptr","typeString":"struct IDappadSale.SaleTierDetails"}}},"visibility":"public"},{"constant":false,"functionSelector":"c033a490","id":1226,"mutability":"mutable","name":"refunded","nameLocation":"873:8:8","nodeType":"VariableDeclaration","scope":3854,"src":"841:40:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1225,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1223,"name":"address","nodeType":"ElementaryTypeName","src":"849:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"841:24:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1224,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"ad4222c7","id":1230,"mutability":"mutable","name":"investmentAmounts","nameLocation":"922:17:8","nodeType":"VariableDeclaration","scope":3854,"src":"887:52:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1229,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"887:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1228,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"c8446c7f7a4908f4630e7fa05c8de17f788b84b0ed604aba7c531ba9589674c6","id":1242,"name":"UserRegisteredSale","nameLocation":"952:18:8","nodeType":"EventDefinition","parameters":{"id":1241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"979:4:8","nodeType":"VariableDeclaration","scope":1242,"src":"971:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1231,"name":"address","nodeType":"ElementaryTypeName","src":"971:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1234,"indexed":false,"mutability":"mutable","name":"tierIndex","nameLocation":"993:9:8","nodeType":"VariableDeclaration","scope":1242,"src":"985:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"985:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1236,"indexed":false,"mutability":"mutable","name":"registerTime","nameLocation":"1012:12:8","nodeType":"VariableDeclaration","scope":1242,"src":"1004:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1235,"name":"uint256","nodeType":"ElementaryTypeName","src":"1004:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1238,"indexed":false,"mutability":"mutable","name":"totalRegisters","nameLocation":"1034:14:8","nodeType":"VariableDeclaration","scope":1242,"src":"1026:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1237,"name":"uint256","nodeType":"ElementaryTypeName","src":"1026:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1240,"indexed":false,"mutability":"mutable","name":"totalRegisterTokenAmountLeft","nameLocation":"1058:28:8","nodeType":"VariableDeclaration","scope":1242,"src":"1050:36:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1239,"name":"uint256","nodeType":"ElementaryTypeName","src":"1050:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:117:8"},"src":"946:142:8"},{"anonymous":false,"eventSelector":"3077514c17881ba96cff640eeeb00482d42c4d374fb0d3a7fb42c9f06c4591d5","id":1260,"name":"UserJoinedSale","nameLocation":"1099:14:8","nodeType":"EventDefinition","parameters":{"id":1259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1244,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"1122:4:8","nodeType":"VariableDeclaration","scope":1260,"src":"1114:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1243,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1246,"indexed":false,"mutability":"mutable","name":"tierIndex","nameLocation":"1136:9:8","nodeType":"VariableDeclaration","scope":1260,"src":"1128:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1245,"name":"uint256","nodeType":"ElementaryTypeName","src":"1128:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1248,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1155:6:8","nodeType":"VariableDeclaration","scope":1260,"src":"1147:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1147:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1250,"indexed":false,"mutability":"mutable","name":"investmentAmount","nameLocation":"1171:16:8","nodeType":"VariableDeclaration","scope":1260,"src":"1163:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1163:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1252,"indexed":false,"mutability":"mutable","name":"totalInvestmentAmount","nameLocation":"1197:21:8","nodeType":"VariableDeclaration","scope":1260,"src":"1189:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1251,"name":"uint256","nodeType":"ElementaryTypeName","src":"1189:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1254,"indexed":false,"mutability":"mutable","name":"totalParticipants","nameLocation":"1228:17:8","nodeType":"VariableDeclaration","scope":1260,"src":"1220:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1256,"indexed":false,"mutability":"mutable","name":"joinedTime","nameLocation":"1255:10:8","nodeType":"VariableDeclaration","scope":1260,"src":"1247:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1255,"name":"uint256","nodeType":"ElementaryTypeName","src":"1247:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1258,"indexed":false,"mutability":"mutable","name":"nftBalance","nameLocation":"1275:10:8","nodeType":"VariableDeclaration","scope":1260,"src":"1267:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1257,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1113:173:8"},"src":"1093:194:8"},{"anonymous":false,"eventSelector":"5c0e83039564cf1c09a1233d5865e63cb005ae1aae497e1edb14cae9fdb70454","id":1278,"name":"UserJoinedFcfsSale","nameLocation":"1298:18:8","nodeType":"EventDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"1325:4:8","nodeType":"VariableDeclaration","scope":1278,"src":"1317:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1261,"name":"address","nodeType":"ElementaryTypeName","src":"1317:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1264,"indexed":false,"mutability":"mutable","name":"tierIndex","nameLocation":"1339:9:8","nodeType":"VariableDeclaration","scope":1278,"src":"1331:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1263,"name":"uint256","nodeType":"ElementaryTypeName","src":"1331:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1266,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1358:6:8","nodeType":"VariableDeclaration","scope":1278,"src":"1350:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1265,"name":"uint256","nodeType":"ElementaryTypeName","src":"1350:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1268,"indexed":false,"mutability":"mutable","name":"investmentAmount","nameLocation":"1374:16:8","nodeType":"VariableDeclaration","scope":1278,"src":"1366:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1267,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1270,"indexed":false,"mutability":"mutable","name":"totalInvestmentAmount","nameLocation":"1400:21:8","nodeType":"VariableDeclaration","scope":1278,"src":"1392:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1392:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1272,"indexed":false,"mutability":"mutable","name":"totalParticipants","nameLocation":"1431:17:8","nodeType":"VariableDeclaration","scope":1278,"src":"1423:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"1423:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1274,"indexed":false,"mutability":"mutable","name":"joinedTime","nameLocation":"1458:10:8","nodeType":"VariableDeclaration","scope":1278,"src":"1450:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"1450:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1276,"indexed":false,"mutability":"mutable","name":"nftBalance","nameLocation":"1478:10:8","nodeType":"VariableDeclaration","scope":1278,"src":"1470:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1275,"name":"uint256","nodeType":"ElementaryTypeName","src":"1470:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1316:173:8"},"src":"1292:198:8"},{"anonymous":false,"eventSelector":"2d164e733e691270e0cd64a05caed5b1b4971337b7354d65c89d33d9f53c09a7","id":1290,"name":"UserRefundedSale","nameLocation":"1501:16:8","nodeType":"EventDefinition","parameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"1526:4:8","nodeType":"VariableDeclaration","scope":1290,"src":"1518:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1279,"name":"address","nodeType":"ElementaryTypeName","src":"1518:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1282,"indexed":false,"mutability":"mutable","name":"userTierIndex","nameLocation":"1540:13:8","nodeType":"VariableDeclaration","scope":1290,"src":"1532:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1532:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1284,"indexed":false,"mutability":"mutable","name":"investmentAmount","nameLocation":"1563:16:8","nodeType":"VariableDeclaration","scope":1290,"src":"1555:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1283,"name":"uint256","nodeType":"ElementaryTypeName","src":"1555:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1286,"indexed":false,"mutability":"mutable","name":"totalInvestmentAmount","nameLocation":"1589:21:8","nodeType":"VariableDeclaration","scope":1290,"src":"1581:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1285,"name":"uint256","nodeType":"ElementaryTypeName","src":"1581:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1288,"indexed":false,"mutability":"mutable","name":"refundedTime","nameLocation":"1620:12:8","nodeType":"VariableDeclaration","scope":1290,"src":"1612:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1287,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1517:116:8"},"src":"1495:139:8"},{"anonymous":false,"eventSelector":"ee255461932c47fb16cadcbfbbabc370146f9cea6f622aea8131cde4cdeff5e9","id":1294,"name":"SalePausedUpdated","nameLocation":"1645:17:8","nodeType":"EventDefinition","parameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"indexed":false,"mutability":"mutable","name":"salePaused","nameLocation":"1668:10:8","nodeType":"VariableDeclaration","scope":1294,"src":"1663:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1291,"name":"bool","nodeType":"ElementaryTypeName","src":"1663:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1662:17:8"},"src":"1639:41:8"},{"anonymous":false,"eventSelector":"3165c1ba6101043d0a0f1e26962850bd292ded36bda350ca2044afb9fbfe2fc8","id":1306,"name":"SaleCompleted","nameLocation":"1691:13:8","nodeType":"EventDefinition","parameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1296,"indexed":false,"mutability":"mutable","name":"projectOwnerFeeAddress","nameLocation":"1713:22:8","nodeType":"VariableDeclaration","scope":1306,"src":"1705:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1295,"name":"address","nodeType":"ElementaryTypeName","src":"1705:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1298,"indexed":false,"mutability":"mutable","name":"projectOwnerFeeAmount","nameLocation":"1745:21:8","nodeType":"VariableDeclaration","scope":1306,"src":"1737:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"1737:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1300,"indexed":false,"mutability":"mutable","name":"launchpadFeeAddress","nameLocation":"1776:19:8","nodeType":"VariableDeclaration","scope":1306,"src":"1768:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1299,"name":"address","nodeType":"ElementaryTypeName","src":"1768:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1302,"indexed":false,"mutability":"mutable","name":"launchpadFeeAmount","nameLocation":"1805:18:8","nodeType":"VariableDeclaration","scope":1306,"src":"1797:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"1797:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1304,"indexed":false,"mutability":"mutable","name":"completedTime","nameLocation":"1833:13:8","nodeType":"VariableDeclaration","scope":1306,"src":"1825:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1303,"name":"uint256","nodeType":"ElementaryTypeName","src":"1825:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1704:143:8"},"src":"1685:163:8"},{"anonymous":false,"eventSelector":"14e2fa1723f00282251323682126d9621e96707e56748f1f0c101fca472b37e9","id":1310,"name":"VestingContractUpdated","nameLocation":"1859:22:8","nodeType":"EventDefinition","parameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"indexed":false,"mutability":"mutable","name":"vestingContractAddress","nameLocation":"1890:22:8","nodeType":"VariableDeclaration","scope":1310,"src":"1882:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"1882:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1881:32:8"},"src":"1853:61:8"},{"anonymous":false,"eventSelector":"c7e8d640cba1ef6286349798e8879e216a16e2a9b04ec71677a4aab6e6f95fb2","id":1314,"name":"StakeControllerContractUpdated","nameLocation":"1925:30:8","nodeType":"EventDefinition","parameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"indexed":false,"mutability":"mutable","name":"stakeControllerContractAddress","nameLocation":"1964:30:8","nodeType":"VariableDeclaration","scope":1314,"src":"1956:38:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1311,"name":"address","nodeType":"ElementaryTypeName","src":"1956:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1955:40:8"},"src":"1919:77:8"},{"anonymous":false,"eventSelector":"fb6b86a5ca0c935b98085b986b3fc02d706eaf315fd997ba94fd4e6937b3ae53","id":1319,"name":"SaleAddressesUpdated","nameLocation":"2007:20:8","nodeType":"EventDefinition","parameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"indexed":false,"mutability":"mutable","name":"newSaleAddresses","nameLocation":"2054:16:8","nodeType":"VariableDeclaration","scope":1319,"src":"2028:42:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses"},"typeName":{"id":1316,"nodeType":"UserDefinedTypeName","pathNode":{"id":1315,"name":"IDappadSale.SaleAddresses","nameLocations":["2028:11:8","2040:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":4648,"src":"2028:25:8"},"referencedDeclaration":4648,"src":"2028:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage_ptr","typeString":"struct IDappadSale.SaleAddresses"}},"visibility":"internal"}],"src":"2027:44:8"},"src":"2001:71:8"},{"anonymous":false,"eventSelector":"fa348fff774a07441f8c4502298c55e3957c7d499ed08a3efffea9a2e849d60d","id":1324,"name":"SaleDetailsUpdated","nameLocation":"2083:18:8","nodeType":"EventDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"indexed":false,"mutability":"mutable","name":"newSaleDetails","nameLocation":"2126:14:8","nodeType":"VariableDeclaration","scope":1324,"src":"2102:38:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_memory_ptr","typeString":"struct IDappadSale.SaleDetails"},"typeName":{"id":1321,"nodeType":"UserDefinedTypeName","pathNode":{"id":1320,"name":"IDappadSale.SaleDetails","nameLocations":["2102:11:8","2114:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":4603,"src":"2102:23:8"},"referencedDeclaration":4603,"src":"2102:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage_ptr","typeString":"struct IDappadSale.SaleDetails"}},"visibility":"internal"}],"src":"2101:40:8"},"src":"2077:65:8"},{"anonymous":false,"eventSelector":"ec476120f20dc531dd7815bcb42de192695c3b96b5a351d5673d7173d81fc98b","id":1329,"name":"SaleFcfsDetailsUpdated","nameLocation":"2153:22:8","nodeType":"EventDefinition","parameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"indexed":false,"mutability":"mutable","name":"newFcfsDetails","nameLocation":"2204:14:8","nodeType":"VariableDeclaration","scope":1329,"src":"2176:42:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_SaleFcfsDetails_$4608_memory_ptr","typeString":"struct IDappadSale.SaleFcfsDetails"},"typeName":{"id":1326,"nodeType":"UserDefinedTypeName","pathNode":{"id":1325,"name":"IDappadSale.SaleFcfsDetails","nameLocations":["2176:11:8","2188:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":4608,"src":"2176:27:8"},"referencedDeclaration":4608,"src":"2176:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleFcfsDetails_$4608_storage_ptr","typeString":"struct IDappadSale.SaleFcfsDetails"}},"visibility":"internal"}],"src":"2175:44:8"},"src":"2147:73:8"},{"anonymous":false,"eventSelector":"9dbcb1a73caf828a891c03055263e46b3201ed541142e594dec12b74a18ba277","id":1334,"name":"SaleRefundDetailsUpdated","nameLocation":"2231:24:8","nodeType":"EventDefinition","parameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"indexed":false,"mutability":"mutable","name":"newRefundDetails","nameLocation":"2286:16:8","nodeType":"VariableDeclaration","scope":1334,"src":"2256:46:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRefundDetails_$4613_memory_ptr","typeString":"struct IDappadSale.SaleRefundDetails"},"typeName":{"id":1331,"nodeType":"UserDefinedTypeName","pathNode":{"id":1330,"name":"IDappadSale.SaleRefundDetails","nameLocations":["2256:11:8","2268:17:8"],"nodeType":"IdentifierPath","referencedDeclaration":4613,"src":"2256:29:8"},"referencedDeclaration":4613,"src":"2256:29:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRefundDetails_$4613_storage_ptr","typeString":"struct IDappadSale.SaleRefundDetails"}},"visibility":"internal"}],"src":"2255:48:8"},"src":"2225:79:8"},{"anonymous":false,"eventSelector":"8e211f8d34487ff0db8d0799459246b2b6e106767b7281309df4d88ac9312cca","id":1339,"name":"SaleTicketDetailsUpdated","nameLocation":"2315:24:8","nodeType":"EventDefinition","parameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"indexed":false,"mutability":"mutable","name":"newTicketDetails","nameLocation":"2370:16:8","nodeType":"VariableDeclaration","scope":1339,"src":"2340:46:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTicketDetails_$4618_memory_ptr","typeString":"struct IDappadSale.SaleTicketDetails"},"typeName":{"id":1336,"nodeType":"UserDefinedTypeName","pathNode":{"id":1335,"name":"IDappadSale.SaleTicketDetails","nameLocations":["2340:11:8","2352:17:8"],"nodeType":"IdentifierPath","referencedDeclaration":4618,"src":"2340:29:8"},"referencedDeclaration":4618,"src":"2340:29:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTicketDetails_$4618_storage_ptr","typeString":"struct IDappadSale.SaleTicketDetails"}},"visibility":"internal"}],"src":"2339:48:8"},"src":"2309:79:8"},{"anonymous":false,"eventSelector":"6e66877fc4a645141938cfc2385e96980ee2dca47115fcff57563be8abd8dda1","id":1346,"name":"SaleTierDetailsUpdated","nameLocation":"2399:22:8","nodeType":"EventDefinition","parameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1341,"indexed":false,"mutability":"mutable","name":"tierIndex","nameLocation":"2430:9:8","nodeType":"VariableDeclaration","scope":1346,"src":"2422:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"2422:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1344,"indexed":false,"mutability":"mutable","name":"newTierDetails","nameLocation":"2469:14:8","nodeType":"VariableDeclaration","scope":1346,"src":"2441:42:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_memory_ptr","typeString":"struct IDappadSale.SaleTierDetails"},"typeName":{"id":1343,"nodeType":"UserDefinedTypeName","pathNode":{"id":1342,"name":"IDappadSale.SaleTierDetails","nameLocations":["2441:11:8","2453:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":4674,"src":"2441:27:8"},"referencedDeclaration":4674,"src":"2441:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage_ptr","typeString":"struct IDappadSale.SaleTierDetails"}},"visibility":"internal"}],"src":"2421:63:8"},"src":"2393:92:8"},{"anonymous":false,"eventSelector":"c646e9ebff3183f592a7b159713c5fce975d40a6cd6a7824e45b318c7156a725","id":1352,"name":"SaleTierDetailsBatchUpdated","nameLocation":"2496:27:8","nodeType":"EventDefinition","parameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"indexed":false,"mutability":"mutable","name":"newTierDetails","nameLocation":"2554:14:8","nodeType":"VariableDeclaration","scope":1352,"src":"2524:44:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SaleTierDetails_$4674_memory_ptr_$dyn_memory_ptr","typeString":"struct IDappadSale.SaleTierDetails[]"},"typeName":{"baseType":{"id":1348,"nodeType":"UserDefinedTypeName","pathNode":{"id":1347,"name":"IDappadSale.SaleTierDetails","nameLocations":["2524:11:8","2536:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":4674,"src":"2524:27:8"},"referencedDeclaration":4674,"src":"2524:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage_ptr","typeString":"struct IDappadSale.SaleTierDetails"}},"id":1349,"nodeType":"ArrayTypeName","src":"2524:29:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SaleTierDetails_$4674_storage_$dyn_storage_ptr","typeString":"struct IDappadSale.SaleTierDetails[]"}},"visibility":"internal"}],"src":"2523:46:8"},"src":"2490:80:8"},{"body":{"id":1563,"nodeType":"Block","src":"2927:1541:8","statements":[{"expression":{"arguments":[{"id":1383,"name":"OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"2951:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1384,"name":"OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"2958:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1382,"name":"_setRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"2937:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32)"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2937:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1386,"nodeType":"ExpressionStatement","src":"2937:27:8"},{"expression":{"arguments":[{"id":1388,"name":"ADMIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"2988:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1389,"name":"OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"2995:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1387,"name":"_setRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"2974:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32)"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2974:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1391,"nodeType":"ExpressionStatement","src":"2974:27:8"},{"expression":{"arguments":[{"id":1393,"name":"OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"3023:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"expression":{"expression":{"id":1394,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"3030:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":1395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3041:4:8","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"3030:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":1396,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3046:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"3030:29:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}},"id":1397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3060:12:8","memberName":"ownerAddress","nodeType":"MemberAccess","referencedDeclaration":4641,"src":"3030:42:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1392,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"3012:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:61:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1399,"nodeType":"ExpressionStatement","src":"3012:61:8"},{"expression":{"arguments":[{"id":1401,"name":"ADMIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"3094:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"expression":{"expression":{"id":1402,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"3101:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":1403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3112:4:8","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"3101:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":1404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3117:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"3101:29:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}},"id":1405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3131:12:8","memberName":"adminAddress","nodeType":"MemberAccess","referencedDeclaration":4643,"src":"3101:42:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1400,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"3083:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:61:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1407,"nodeType":"ExpressionStatement","src":"3083:61:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"expression":{"expression":{"id":1410,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"3172:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":1411,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3183:4:8","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"3172:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":1412,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3188:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"3172:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_memory_ptr","typeString":"struct IDappadSale.SaleDetails memory"}},"id":1413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3200:8:8","memberName":"saleName","nodeType":"MemberAccess","referencedDeclaration":4602,"src":"3172:36:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3166:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1408,"name":"bytes","nodeType":"ElementaryTypeName","src":"3166:5:8","typeDescriptions":{}}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3166:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3210:6:8","memberName":"length","nodeType":"MemberAccess","src":"3166:50:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3220:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3166:55:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1423,"nodeType":"IfStatement","src":"3163:94:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1418,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"3230:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3237:18:8","memberName":"EmptySaleNameError","nodeType":"MemberAccess","referencedDeclaration":4305,"src":"3230:25:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3230:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1422,"nodeType":"RevertStatement","src":"3223:34:8"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"expression":{"id":1424,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"3271:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":1425,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3282:4:8","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"3271:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":1426,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3287:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"3271:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_memory_ptr","typeString":"struct IDappadSale.SaleDetails memory"}},"id":1427,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3299:9:8","memberName":"saleStart","nodeType":"MemberAccess","referencedDeclaration":4588,"src":"3271:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1428,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3311:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3317:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"3311:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3271:55:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1436,"nodeType":"IfStatement","src":"3267:102:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1431,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"3335:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3342:25:8","memberName":"InvalidSaleStartDateError","nodeType":"MemberAccess","referencedDeclaration":4281,"src":"3335:32:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1435,"nodeType":"RevertStatement","src":"3328:41:8"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"expression":{"id":1437,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"3383:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":1438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3394:4:8","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"3383:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":1439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3399:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"3383:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_memory_ptr","typeString":"struct IDappadSale.SaleDetails memory"}},"id":1440,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3411:7:8","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":4590,"src":"3383:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1441,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3421:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3427:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"3421:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3383:53:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1449,"nodeType":"IfStatement","src":"3379:98:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1444,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"3445:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3452:23:8","memberName":"InvalidSaleEndDateError","nodeType":"MemberAccess","referencedDeclaration":4283,"src":"3445:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3445:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1448,"nodeType":"RevertStatement","src":"3438:39:8"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"expression":{"id":1450,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"3491:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":1451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3502:4:8","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"3491:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":1452,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3507:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"3491:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_memory_ptr","typeString":"struct IDappadSale.SaleDetails memory"}},"id":1453,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3519:9:8","memberName":"saleStart","nodeType":"MemberAccess","referencedDeclaration":4588,"src":"3491:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"expression":{"expression":{"id":1454,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"3532:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":1455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3543:4:8","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"3532:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":1456,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3548:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"3532:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_memory_ptr","typeString":"struct IDappadSale.SaleDetails memory"}},"id":1457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3560:7:8","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":4590,"src":"3532:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3491:76:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1464,"nodeType":"IfStatement","src":"3487:122:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1459,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"3576:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3583:24:8","memberName":"InvalidSaleDurationError","nodeType":"MemberAccess","referencedDeclaration":4285,"src":"3576:31:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3576:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1463,"nodeType":"RevertStatement","src":"3569:40:8"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"expression":{"id":1465,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"3623:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":1466,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3634:4:8","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"3623:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":1467,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3639:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"3623:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_memory_ptr","typeString":"struct IDappadSale.SaleDetails memory"}},"id":1468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3651:19:8","memberName":"maxInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4594,"src":"3623:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3674:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3623:52:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1476,"nodeType":"IfStatement","src":"3619:105:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1471,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"3684:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3691:31:8","memberName":"InvalidMaxInvestmentAmountError","nodeType":"MemberAccess","referencedDeclaration":4287,"src":"3684:38:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3684:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1475,"nodeType":"RevertStatement","src":"3677:47:8"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1477,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"3738:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":1478,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3749:11:8","memberName":"tierDetails","nodeType":"MemberAccess","referencedDeclaration":4563,"src":"3738:22:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SaleTierDetails_$4674_memory_ptr_$dyn_memory_ptr","typeString":"struct IDappadSale.SaleTierDetails memory[] memory"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3761:6:8","memberName":"length","nodeType":"MemberAccess","src":"3738:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3771:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3738:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1487,"nodeType":"IfStatement","src":"3734:77:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1482,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"3781:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3788:21:8","memberName":"EmptyTierDetailsError","nodeType":"MemberAccess","referencedDeclaration":4307,"src":"3781:28:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3781:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1486,"nodeType":"RevertStatement","src":"3774:37:8"}},{"expression":{"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1488,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"3822:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1489,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"3829:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":1490,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3840:4:8","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"3829:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"src":"3822:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":1492,"nodeType":"ExpressionStatement","src":"3822:22:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"expression":{"id":1493,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"3858:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":1494,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3869:4:8","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"3858:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":1495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3874:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"3858:29:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}},"id":1496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3888:20:8","memberName":"registerTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4629,"src":"3858:50:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3920:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3912:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1497,"name":"address","nodeType":"ElementaryTypeName","src":"3912:7:8","typeDescriptions":{}}},"id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3858:64:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1511,"nodeType":"IfStatement","src":"3855:151:8","trueBody":{"expression":{"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1502,"name":"registerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"3924:13:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"expression":{"expression":{"id":1504,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"3955:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":1505,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3966:4:8","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"3955:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":1506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3971:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"3955:29:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}},"id":1507,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3985:20:8","memberName":"registerTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4629,"src":"3955:50:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1503,"name":"IERC20Extented","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"3940:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Extented_$4404_$","typeString":"type(contract IERC20Extented)"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3940:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"src":"3924:82:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":1510,"nodeType":"ExpressionStatement","src":"3924:82:8"}},{"expression":{"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1512,"name":"investmentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"4025:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"expression":{"expression":{"id":1514,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"4058:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":1515,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4069:4:8","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"4058:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":1516,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4074:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"4058:29:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}},"id":1517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4088:22:8","memberName":"investmentTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4631,"src":"4058:52:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1513,"name":"IERC20Extented","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"4043:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Extented_$4404_$","typeString":"type(contract IERC20Extented)"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4043:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"src":"4025:86:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":1520,"nodeType":"ExpressionStatement","src":"4025:86:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"expression":{"id":1521,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"4126:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":1522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4137:4:8","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"4126:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":1523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4142:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"4126:29:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}},"id":1524,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4156:30:8","memberName":"stakeControllerContractAddress","nodeType":"MemberAccess","referencedDeclaration":4637,"src":"4126:60:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4198:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4190:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1525,"name":"address","nodeType":"ElementaryTypeName","src":"4190:7:8","typeDescriptions":{}}},"id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4190:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4126:74:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1539,"nodeType":"IfStatement","src":"4122:204:8","trueBody":{"id":1538,"nodeType":"Block","src":"4202:124:8","statements":[{"expression":{"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1530,"name":"stakeControllerContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"4216:23:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadStakeController_$4487","typeString":"contract IDappadStakeController"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"expression":{"id":1532,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"4265:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":1533,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4270:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"4265:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":1534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4284:30:8","memberName":"stakeControllerContractAddress","nodeType":"MemberAccess","referencedDeclaration":4637,"src":"4265:49:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1531,"name":"IDappadStakeController","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"4242:22:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDappadStakeController_$4487_$","typeString":"type(contract IDappadStakeController)"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IDappadStakeController_$4487","typeString":"contract IDappadStakeController"}},"src":"4216:99:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadStakeController_$4487","typeString":"contract IDappadStakeController"}},"id":1537,"nodeType":"ExpressionStatement","src":"4216:99:8"}]}},{"body":{"id":1561,"nodeType":"Block","src":"4395:67:8","statements":[{"expression":{"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1552,"name":"tierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"4409:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SaleTierDetails_$4674_storage_$","typeString":"mapping(uint256 => struct IDappadSale.SaleTierDetails storage ref)"}},"id":1554,"indexExpression":{"id":1553,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"4421:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4409:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage","typeString":"struct IDappadSale.SaleTierDetails storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":1555,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"4426:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":1556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4437:11:8","memberName":"tierDetails","nodeType":"MemberAccess","referencedDeclaration":4563,"src":"4426:22:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SaleTierDetails_$4674_memory_ptr_$dyn_memory_ptr","typeString":"struct IDappadSale.SaleTierDetails memory[] memory"}},"id":1558,"indexExpression":{"id":1557,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"4449:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4426:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_memory_ptr","typeString":"struct IDappadSale.SaleTierDetails memory"}},"src":"4409:42:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage","typeString":"struct IDappadSale.SaleTierDetails storage ref"}},"id":1560,"nodeType":"ExpressionStatement","src":"4409:42:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1544,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"4355:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":1545,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"4359:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":1546,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4370:11:8","memberName":"tierDetails","nodeType":"MemberAccess","referencedDeclaration":4563,"src":"4359:22:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SaleTierDetails_$4674_memory_ptr_$dyn_memory_ptr","typeString":"struct IDappadSale.SaleTierDetails memory[] memory"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4382:6:8","memberName":"length","nodeType":"MemberAccess","src":"4359:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4355:33:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1562,"initializationExpression":{"assignments":[1541],"declarations":[{"constant":false,"id":1541,"mutability":"mutable","name":"i","nameLocation":"4348:1:8","nodeType":"VariableDeclaration","scope":1562,"src":"4340:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1540,"name":"uint256","nodeType":"ElementaryTypeName","src":"4340:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1543,"initialValue":{"hexValue":"30","id":1542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4352:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4340:13:8"},"loopExpression":{"expression":{"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4390:3:8","subExpression":{"id":1549,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"4390:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1551,"nodeType":"ExpressionStatement","src":"4390:3:8"},"nodeType":"ForStatement","src":"4336:126:8"}]},"id":1564,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"expression":{"expression":{"id":1358,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"2654:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":1359,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2665:4:8","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"2654:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":1360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2670:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"2654:29:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}},"id":1361,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2684:22:8","memberName":"investmentTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4631,"src":"2654:52:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1362,"kind":"modifierInvocation","modifierName":{"id":1357,"name":"notZeroAddress","nameLocations":["2639:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1574,"src":"2639:14:8"},"nodeType":"ModifierInvocation","src":"2639:68:8"},{"arguments":[{"expression":{"expression":{"expression":{"id":1364,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"2732:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":1365,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2743:4:8","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"2732:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":1366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2748:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"2732:29:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}},"id":1367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2762:22:8","memberName":"factoryContractAddress","nodeType":"MemberAccess","referencedDeclaration":4633,"src":"2732:52:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1368,"kind":"modifierInvocation","modifierName":{"id":1363,"name":"notZeroAddress","nameLocations":["2717:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1574,"src":"2717:14:8"},"nodeType":"ModifierInvocation","src":"2717:68:8"},{"arguments":[{"expression":{"expression":{"expression":{"id":1370,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"2810:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":1371,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2821:4:8","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"2810:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":1372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2826:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"2810:29:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}},"id":1373,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2840:12:8","memberName":"ownerAddress","nodeType":"MemberAccess","referencedDeclaration":4641,"src":"2810:42:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1374,"kind":"modifierInvocation","modifierName":{"id":1369,"name":"notZeroAddress","nameLocations":["2795:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1574,"src":"2795:14:8"},"nodeType":"ModifierInvocation","src":"2795:58:8"},{"arguments":[{"expression":{"expression":{"expression":{"id":1376,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"2878:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":1377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2889:4:8","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"2878:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":1378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2894:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"2878:29:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}},"id":1379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2908:12:8","memberName":"adminAddress","nodeType":"MemberAccess","referencedDeclaration":4643,"src":"2878:42:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1380,"kind":"modifierInvocation","modifierName":{"id":1375,"name":"notZeroAddress","nameLocations":["2863:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1574,"src":"2863:14:8"},"nodeType":"ModifierInvocation","src":"2863:58:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"mutability":"mutable","name":"saleParams","nameLocation":"2618:10:8","nodeType":"VariableDeclaration","scope":1564,"src":"2588:40:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams"},"typeName":{"id":1354,"nodeType":"UserDefinedTypeName","pathNode":{"id":1353,"name":"IDappadSale.SaleParams","nameLocations":["2588:11:8","2600:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":4564,"src":"2588:22:8"},"referencedDeclaration":4564,"src":"2588:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_storage_ptr","typeString":"struct IDappadSale.SaleParams"}},"visibility":"internal"}],"src":"2587:42:8"},"returnParameters":{"id":1381,"nodeType":"ParameterList","parameters":[],"src":"2927:0:8"},"scope":3854,"src":"2576:1892:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1573,"nodeType":"Block","src":"4516:53:8","statements":[{"expression":{"arguments":[{"id":1569,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"4542:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1568,"name":"_notZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"4526:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4526:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1571,"nodeType":"ExpressionStatement","src":"4526:25:8"},{"id":1572,"nodeType":"PlaceholderStatement","src":"4561:1:8"}]},"id":1574,"name":"notZeroAddress","nameLocation":"4483:14:8","nodeType":"ModifierDefinition","parameters":{"id":1567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1566,"mutability":"mutable","name":"_address","nameLocation":"4506:8:8","nodeType":"VariableDeclaration","scope":1574,"src":"4498:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1565,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4497:18:8"},"src":"4474:95:8","virtual":false,"visibility":"internal"},{"body":{"id":1583,"nodeType":"Block","src":"4612:48:8","statements":[{"expression":{"arguments":[{"id":1579,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"4633:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1578,"name":"_onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"4622:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$__$","typeString":"function (address) view"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4622:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1581,"nodeType":"ExpressionStatement","src":"4622:20:8"},{"id":1582,"nodeType":"PlaceholderStatement","src":"4652:1:8"}]},"id":1584,"name":"onlyOwner","nameLocation":"4584:9:8","nodeType":"ModifierDefinition","parameters":{"id":1577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1576,"mutability":"mutable","name":"_address","nameLocation":"4602:8:8","nodeType":"VariableDeclaration","scope":1584,"src":"4594:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1575,"name":"address","nodeType":"ElementaryTypeName","src":"4594:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4593:18:8"},"src":"4575:85:8","virtual":false,"visibility":"internal"},{"body":{"id":1593,"nodeType":"Block","src":"4710:55:8","statements":[{"expression":{"arguments":[{"id":1589,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"4738:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1588,"name":"_onlyOwnerOrAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"4720:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$__$","typeString":"function (address) view"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4720:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1591,"nodeType":"ExpressionStatement","src":"4720:27:8"},{"id":1592,"nodeType":"PlaceholderStatement","src":"4757:1:8"}]},"id":1594,"name":"onlyOwnerOrAdmin","nameLocation":"4675:16:8","nodeType":"ModifierDefinition","parameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"_address","nameLocation":"4700:8:8","nodeType":"VariableDeclaration","scope":1594,"src":"4692:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1585,"name":"address","nodeType":"ElementaryTypeName","src":"4692:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4691:18:8"},"src":"4666:99:8","virtual":false,"visibility":"internal"},{"body":{"id":1600,"nodeType":"Block","src":"4802:50:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1596,"name":"_whenSaleIsNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"4812:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4812:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1598,"nodeType":"ExpressionStatement","src":"4812:22:8"},{"id":1599,"nodeType":"PlaceholderStatement","src":"4844:1:8"}]},"id":1601,"name":"whenSaleIsNotPaused","nameLocation":"4780:19:8","nodeType":"ModifierDefinition","parameters":{"id":1595,"nodeType":"ParameterList","parameters":[],"src":"4799:2:8"},"src":"4771:81:8","virtual":false,"visibility":"internal"},{"body":{"id":1617,"nodeType":"Block","src":"4945:75:8","statements":[{"expression":{"arguments":[{"id":1611,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"4975:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},{"id":1612,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"4982:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1613,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"4995:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1610,"name":"_hasEnoughAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"4955:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_IERC20Extented_$4404_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20Extented,address,uint256) view"}},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4955:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1615,"nodeType":"ExpressionStatement","src":"4955:47:8"},{"id":1616,"nodeType":"PlaceholderStatement","src":"5012:1:8"}]},"id":1618,"name":"hasEnoughAllowance","nameLocation":"4867:18:8","nodeType":"ModifierDefinition","parameters":{"id":1609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"token","nameLocation":"4901:5:8","nodeType":"VariableDeclaration","scope":1618,"src":"4886:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"},"typeName":{"id":1603,"nodeType":"UserDefinedTypeName","pathNode":{"id":1602,"name":"IERC20Extented","nameLocations":["4886:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":4404,"src":"4886:14:8"},"referencedDeclaration":4404,"src":"4886:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"visibility":"internal"},{"constant":false,"id":1606,"mutability":"mutable","name":"userAddress","nameLocation":"4916:11:8","nodeType":"VariableDeclaration","scope":1618,"src":"4908:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1605,"name":"address","nodeType":"ElementaryTypeName","src":"4908:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1608,"mutability":"mutable","name":"amount","nameLocation":"4937:6:8","nodeType":"VariableDeclaration","scope":1618,"src":"4929:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1607,"name":"uint256","nodeType":"ElementaryTypeName","src":"4929:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4885:59:8"},"src":"4858:162:8","virtual":false,"visibility":"internal"},{"body":{"id":1799,"nodeType":"Block","src":"5121:1813:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1629,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5135:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5141:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"5135:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":1631,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"5153:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":1632,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5158:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"5153:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":1633,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5170:13:8","memberName":"registerStart","nodeType":"MemberAccess","referencedDeclaration":4582,"src":"5153:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5135:48:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1640,"nodeType":"IfStatement","src":"5131:93:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1635,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"5192:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5199:23:8","memberName":"RegisterNotStartedError","nodeType":"MemberAccess","referencedDeclaration":4269,"src":"5192:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5192:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1639,"nodeType":"RevertStatement","src":"5185:39:8"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1641,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5238:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5244:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"5238:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"expression":{"id":1643,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"5257:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":1644,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5262:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"5257:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":1645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5274:11:8","memberName":"registerEnd","nodeType":"MemberAccess","referencedDeclaration":4584,"src":"5257:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5238:47:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1652,"nodeType":"IfStatement","src":"5234:94:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1647,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"5294:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5301:25:8","memberName":"RegisterAlreadyEndedError","nodeType":"MemberAccess","referencedDeclaration":4273,"src":"5294:32:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5294:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1651,"nodeType":"RevertStatement","src":"5287:41:8"}},{"condition":{"expression":{"baseExpression":{"id":1653,"name":"registerDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"5342:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SaleRegisterDetails_$4625_storage_$","typeString":"mapping(address => struct IDappadSale.SaleRegisterDetails storage ref)"}},"id":1656,"indexExpression":{"expression":{"id":1654,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5358:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5362:6:8","memberName":"sender","nodeType":"MemberAccess","src":"5358:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5342:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRegisterDetails_$4625_storage","typeString":"struct IDappadSale.SaleRegisterDetails storage ref"}},"id":1657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5370:10:8","memberName":"registered","nodeType":"MemberAccess","referencedDeclaration":4624,"src":"5342:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1663,"nodeType":"IfStatement","src":"5338:86:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1658,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"5389:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5396:26:8","memberName":"UserAlreadyRegisteredError","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"5389:33:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1662,"nodeType":"RevertStatement","src":"5382:42:8"}},{"assignments":[1665],"declarations":[{"constant":false,"id":1665,"mutability":"mutable","name":"userTierIndex","nameLocation":"5443:13:8","nodeType":"VariableDeclaration","scope":1799,"src":"5435:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1664,"name":"uint256","nodeType":"ElementaryTypeName","src":"5435:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1667,"initialValue":{"hexValue":"30","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5459:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5435:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1668,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"5475:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":1669,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5480:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"5475:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":1670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5494:18:8","memberName":"nftContractAddress","nodeType":"MemberAccess","referencedDeclaration":4635,"src":"5475:37:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5524:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5516:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1671,"name":"address","nodeType":"ElementaryTypeName","src":"5516:7:8","typeDescriptions":{}}},"id":1674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5516:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5475:51:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1689,"nodeType":"IfStatement","src":"5471:156:8","trueBody":{"id":1688,"nodeType":"Block","src":"5528:99:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1677,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5565:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5569:6:8","memberName":"sender","nodeType":"MemberAccess","src":"5565:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1676,"name":"_getUserNftBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"5546:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5580:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5546:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1687,"nodeType":"IfStatement","src":"5542:74:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1682,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"5590:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5597:17:8","memberName":"UserHasNoNFTError","nodeType":"MemberAccess","referencedDeclaration":4263,"src":"5590:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5590:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1686,"nodeType":"RevertStatement","src":"5583:33:8"}}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1690,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"5641:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":1691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5646:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"5641:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":1692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5660:30:8","memberName":"stakeControllerContractAddress","nodeType":"MemberAccess","referencedDeclaration":4637,"src":"5641:49:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5702:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5694:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1693,"name":"address","nodeType":"ElementaryTypeName","src":"5694:7:8","typeDescriptions":{}}},"id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5694:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5641:63:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1707,"nodeType":"IfStatement","src":"5637:162:8","trueBody":{"id":1706,"nodeType":"Block","src":"5706:93:8","statements":[{"expression":{"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1698,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"5720:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1701,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5777:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5781:6:8","memberName":"sender","nodeType":"MemberAccess","src":"5777:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1699,"name":"stakeControllerContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"5736:23:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadStakeController_$4487","typeString":"contract IDappadStakeController"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5760:16:8","memberName":"getUserTierIndex","nodeType":"MemberAccess","referencedDeclaration":4486,"src":"5736:40:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5736:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5720:68:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1705,"nodeType":"ExpressionStatement","src":"5720:68:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1708,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"5820:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":1709,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5825:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"5820:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":1710,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5837:20:8","memberName":"registerTokenEnabled","nodeType":"MemberAccess","referencedDeclaration":4598,"src":"5820:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1711,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"5861:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":1712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5866:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"5861:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":1713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5880:20:8","memberName":"registerTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4629,"src":"5861:39:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5912:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5904:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1714,"name":"address","nodeType":"ElementaryTypeName","src":"5904:7:8","typeDescriptions":{}}},"id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5904:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5861:53:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5820:94:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1778,"nodeType":"Block","src":"6492:218:8","statements":[{"expression":{"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1766,"name":"registerDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"6506:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SaleRegisterDetails_$4625_storage_$","typeString":"mapping(address => struct IDappadSale.SaleRegisterDetails storage ref)"}},"id":1769,"indexExpression":{"expression":{"id":1767,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6522:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6526:6:8","memberName":"sender","nodeType":"MemberAccess","src":"6522:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6506:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRegisterDetails_$4625_storage","typeString":"struct IDappadSale.SaleRegisterDetails storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6607:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1773,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"6637:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6680:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1770,"name":"IDappadSale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"6536:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDappadSale_$4714_$","typeString":"type(contract IDappadSale)"}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6548:19:8","memberName":"SaleRegisterDetails","nodeType":"MemberAccess","referencedDeclaration":4625,"src":"6536:31:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SaleRegisterDetails_$4625_storage_ptr_$","typeString":"type(struct IDappadSale.SaleRegisterDetails storage pointer)"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6586:19:8","6626:9:8","6668:10:8"],"names":["registerTokenAmount","tierIndex","registered"],"nodeType":"FunctionCall","src":"6536:163:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SaleRegisterDetails_$4625_memory_ptr","typeString":"struct IDappadSale.SaleRegisterDetails memory"}},"src":"6506:193:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRegisterDetails_$4625_storage","typeString":"struct IDappadSale.SaleRegisterDetails storage ref"}},"id":1777,"nodeType":"ExpressionStatement","src":"6506:193:8"}]},"id":1779,"nodeType":"IfStatement","src":"5816:894:8","trueBody":{"id":1765,"nodeType":"Block","src":"5916:570:8","statements":[{"expression":{"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1720,"name":"saleStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5930:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleStatistics_$4659_storage","typeString":"struct IDappadSale.SaleStatistics storage ref"}},"id":1722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5945:28:8","memberName":"totalRegisterTokenAmountLeft","nodeType":"MemberAccess","referencedDeclaration":4658,"src":"5930:43:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"expression":{"id":1723,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"5977:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":1724,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5982:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"5977:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":1725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5994:19:8","memberName":"registerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":4586,"src":"5977:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5930:83:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1727,"nodeType":"ExpressionStatement","src":"5930:83:8"},{"expression":{"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1728,"name":"registerDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"6028:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SaleRegisterDetails_$4625_storage_$","typeString":"mapping(address => struct IDappadSale.SaleRegisterDetails storage ref)"}},"id":1731,"indexExpression":{"expression":{"id":1729,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6044:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6048:6:8","memberName":"sender","nodeType":"MemberAccess","src":"6044:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6028:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRegisterDetails_$4625_storage","typeString":"struct IDappadSale.SaleRegisterDetails storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"expression":{"id":1734,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"6129:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":1735,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6134:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"6129:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":1736,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6146:19:8","memberName":"registerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":4586,"src":"6129:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1737,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"6194:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6237:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1732,"name":"IDappadSale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"6058:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDappadSale_$4714_$","typeString":"type(contract IDappadSale)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6070:19:8","memberName":"SaleRegisterDetails","nodeType":"MemberAccess","referencedDeclaration":4625,"src":"6058:31:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SaleRegisterDetails_$4625_storage_ptr_$","typeString":"type(struct IDappadSale.SaleRegisterDetails storage pointer)"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6108:19:8","6183:9:8","6225:10:8"],"names":["registerTokenAmount","tierIndex","registered"],"nodeType":"FunctionCall","src":"6058:198:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SaleRegisterDetails_$4625_memory_ptr","typeString":"struct IDappadSale.SaleRegisterDetails memory"}},"src":"6028:228:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRegisterDetails_$4625_storage","typeString":"struct IDappadSale.SaleRegisterDetails storage ref"}},"id":1741,"nodeType":"ExpressionStatement","src":"6028:228:8"},{"assignments":[1743],"declarations":[{"constant":false,"id":1743,"mutability":"mutable","name":"successfullyTransfered","nameLocation":"6276:22:8","nodeType":"VariableDeclaration","scope":1765,"src":"6271:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1742,"name":"bool","nodeType":"ElementaryTypeName","src":"6271:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1756,"initialValue":{"arguments":[{"expression":{"id":1746,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6328:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6332:6:8","memberName":"sender","nodeType":"MemberAccess","src":"6328:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1750,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6348:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}],"id":1749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6340:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1748,"name":"address","nodeType":"ElementaryTypeName","src":"6340:7:8","typeDescriptions":{}}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6340:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":1752,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"6355:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":1753,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6360:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"6355:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":1754,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6372:19:8","memberName":"registerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":4586,"src":"6355:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1744,"name":"registerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"6301:13:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6315:12:8","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":455,"src":"6301:26:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:91:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"6271:121:8"},{"condition":{"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6410:23:8","subExpression":{"id":1757,"name":"successfullyTransfered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"6411:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1764,"nodeType":"IfStatement","src":"6406:69:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1759,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"6442:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6449:24:8","memberName":"TokenTransferFailedError","nodeType":"MemberAccess","referencedDeclaration":4251,"src":"6442:31:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6442:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1763,"nodeType":"RevertStatement","src":"6435:40:8"}}]}},{"expression":{"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6720:31:8","subExpression":{"expression":{"id":1780,"name":"saleStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"6720:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleStatistics_$4659_storage","typeString":"struct IDappadSale.SaleStatistics storage ref"}},"id":1782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6735:14:8","memberName":"totalRegisters","nodeType":"MemberAccess","referencedDeclaration":4656,"src":"6720:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1784,"nodeType":"ExpressionStatement","src":"6720:31:8"},{"eventCall":{"arguments":[{"expression":{"id":1786,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6786:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6790:6:8","memberName":"sender","nodeType":"MemberAccess","src":"6786:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1788,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"6798:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1789,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6813:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6819:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"6813:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1791,"name":"saleStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"6830:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleStatistics_$4659_storage","typeString":"struct IDappadSale.SaleStatistics storage ref"}},"id":1792,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6845:14:8","memberName":"totalRegisters","nodeType":"MemberAccess","referencedDeclaration":4656,"src":"6830:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1793,"name":"saleStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"6861:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleStatistics_$4659_storage","typeString":"struct IDappadSale.SaleStatistics storage ref"}},"id":1794,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6876:28:8","memberName":"totalRegisterTokenAmountLeft","nodeType":"MemberAccess","referencedDeclaration":4658,"src":"6861:43:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1785,"name":"UserRegisteredSale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"6767:18:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256,uint256)"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6767:138:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1796,"nodeType":"EmitStatement","src":"6762:143:8"},{"expression":{"hexValue":"74727565","id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6923:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1628,"id":1798,"nodeType":"Return","src":"6916:11:8"}]},"functionSelector":"feaae845","id":1800,"implemented":true,"kind":"function","modifiers":[{"id":1621,"kind":"modifierInvocation","modifierName":{"id":1620,"name":"whenSaleIsNotPaused","nameLocations":["5059:19:8"],"nodeType":"IdentifierPath","referencedDeclaration":1601,"src":"5059:19:8"},"nodeType":"ModifierInvocation","src":"5059:19:8"},{"arguments":[{"expression":{"id":1623,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5094:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5098:6:8","memberName":"sender","nodeType":"MemberAccess","src":"5094:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1625,"kind":"modifierInvocation","modifierName":{"id":1622,"name":"notZeroAddress","nameLocations":["5079:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1574,"src":"5079:14:8"},"nodeType":"ModifierInvocation","src":"5079:26:8"}],"name":"registerSale","nameLocation":"5035:12:8","nodeType":"FunctionDefinition","parameters":{"id":1619,"nodeType":"ParameterList","parameters":[],"src":"5047:2:8"},"returnParameters":{"id":1628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1800,"src":"5115:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1626,"name":"bool","nodeType":"ElementaryTypeName","src":"5115:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5114:6:8"},"scope":3854,"src":"5026:1908:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2226,"nodeType":"Block","src":"7168:3657:8","statements":[{"condition":{"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7181:39:8","subExpression":{"expression":{"baseExpression":{"id":1825,"name":"registerDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"7182:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SaleRegisterDetails_$4625_storage_$","typeString":"mapping(address => struct IDappadSale.SaleRegisterDetails storage ref)"}},"id":1828,"indexExpression":{"expression":{"id":1826,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7198:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7202:6:8","memberName":"sender","nodeType":"MemberAccess","src":"7198:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7182:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRegisterDetails_$4625_storage","typeString":"struct IDappadSale.SaleRegisterDetails storage ref"}},"id":1829,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7210:10:8","memberName":"registered","nodeType":"MemberAccess","referencedDeclaration":4624,"src":"7182:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1836,"nodeType":"IfStatement","src":"7178:82:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1831,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"7229:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7236:22:8","memberName":"UserNotRegisteredError","nodeType":"MemberAccess","referencedDeclaration":4265,"src":"7229:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7229:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1835,"nodeType":"RevertStatement","src":"7222:38:8"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1837,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7274:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7280:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"7274:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":1839,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"7292:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":1840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7297:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"7292:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":1841,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7309:9:8","memberName":"saleStart","nodeType":"MemberAccess","referencedDeclaration":4588,"src":"7292:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7274:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1848,"nodeType":"IfStatement","src":"7270:85:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1843,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"7327:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7334:19:8","memberName":"SaleNotStartedError","nodeType":"MemberAccess","referencedDeclaration":4315,"src":"7327:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7327:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1847,"nodeType":"RevertStatement","src":"7320:35:8"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1849,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"7378:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":1850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7383:11:8","memberName":"fcfsDetails","nodeType":"MemberAccess","referencedDeclaration":4570,"src":"7378:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleFcfsDetails_$4608_storage","typeString":"struct IDappadSale.SaleFcfsDetails storage ref"}},"id":1851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7395:16:8","memberName":"fcfsSaleDuration","nodeType":"MemberAccess","referencedDeclaration":4605,"src":"7378:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7414:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7378:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1884,"nodeType":"Block","src":"7578:111:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1872,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7596:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7602:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"7596:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"expression":{"id":1874,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"7615:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":1875,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7620:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"7615:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":1876,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7632:7:8","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":4590,"src":"7615:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7596:43:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1883,"nodeType":"IfStatement","src":"7592:86:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1878,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"7648:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7655:21:8","memberName":"SaleAlreadyEndedError","nodeType":"MemberAccess","referencedDeclaration":4319,"src":"7648:28:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7648:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1882,"nodeType":"RevertStatement","src":"7641:37:8"}}]},"id":1885,"nodeType":"IfStatement","src":"7374:315:8","trueBody":{"id":1871,"nodeType":"Block","src":"7417:155:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1854,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7435:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7441:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"7435:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1856,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"7455:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":1857,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7460:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"7455:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":1858,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7472:7:8","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":4590,"src":"7455:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"expression":{"id":1859,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"7482:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":1860,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7487:11:8","memberName":"fcfsDetails","nodeType":"MemberAccess","referencedDeclaration":4570,"src":"7482:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleFcfsDetails_$4608_storage","typeString":"struct IDappadSale.SaleFcfsDetails storage ref"}},"id":1861,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7499:16:8","memberName":"fcfsSaleDuration","nodeType":"MemberAccess","referencedDeclaration":4605,"src":"7482:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7455:60:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1863,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7454:62:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7435:81:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1870,"nodeType":"IfStatement","src":"7431:130:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1865,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"7525:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7532:27:8","memberName":"FCFSSaleAlreadyStartedError","nodeType":"MemberAccess","referencedDeclaration":4333,"src":"7525:34:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7525:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1869,"nodeType":"RevertStatement","src":"7518:43:8"}}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1886,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"7711:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7721:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7711:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1894,"nodeType":"IfStatement","src":"7707:51:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1889,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"7731:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7738:18:8","memberName":"InvalidAmountError","nodeType":"MemberAccess","referencedDeclaration":4277,"src":"7731:25:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7731:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1893,"nodeType":"RevertStatement","src":"7724:34:8"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1895,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"7773:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":1896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7778:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"7773:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":1897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7792:18:8","memberName":"nftContractAddress","nodeType":"MemberAccess","referencedDeclaration":4635,"src":"7773:37:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7822:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7814:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1898,"name":"address","nodeType":"ElementaryTypeName","src":"7814:7:8","typeDescriptions":{}}},"id":1901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7814:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7773:51:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1916,"nodeType":"IfStatement","src":"7769:156:8","trueBody":{"id":1915,"nodeType":"Block","src":"7826:99:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1904,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7863:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7867:6:8","memberName":"sender","nodeType":"MemberAccess","src":"7863:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1903,"name":"_getUserNftBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"7844:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7844:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7878:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7844:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1914,"nodeType":"IfStatement","src":"7840:74:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1909,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"7888:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7895:17:8","memberName":"UserHasNoNFTError","nodeType":"MemberAccess","referencedDeclaration":4263,"src":"7888:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7888:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1913,"nodeType":"RevertStatement","src":"7881:33:8"}}]}},{"assignments":[1918],"declarations":[{"constant":false,"id":1918,"mutability":"mutable","name":"userTierIndex","nameLocation":"7943:13:8","nodeType":"VariableDeclaration","scope":2226,"src":"7935:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1917,"name":"uint256","nodeType":"ElementaryTypeName","src":"7935:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1924,"initialValue":{"expression":{"baseExpression":{"id":1919,"name":"registerDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"7959:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SaleRegisterDetails_$4625_storage_$","typeString":"mapping(address => struct IDappadSale.SaleRegisterDetails storage ref)"}},"id":1922,"indexExpression":{"expression":{"id":1920,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7975:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7979:6:8","memberName":"sender","nodeType":"MemberAccess","src":"7975:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7959:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRegisterDetails_$4625_storage","typeString":"struct IDappadSale.SaleRegisterDetails storage ref"}},"id":1923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:9:8","memberName":"tierIndex","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"7959:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7935:61:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1925,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"8018:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8035:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8018:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1959,"nodeType":"IfStatement","src":"8015:336:8","trueBody":{"id":1958,"nodeType":"Block","src":"8038:313:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1928,"name":"tierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8056:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SaleTierDetails_$4674_storage_$","typeString":"mapping(uint256 => struct IDappadSale.SaleTierDetails storage ref)"}},"id":1930,"indexExpression":{"hexValue":"30","id":1929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8068:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8056:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage","typeString":"struct IDappadSale.SaleTierDetails storage ref"}},"id":1931,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8071:19:8","memberName":"whitelistMerkleRoot","nodeType":"MemberAccess","referencedDeclaration":4669,"src":"8056:34:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8102:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8094:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8094:7:8","typeDescriptions":{}}},"id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8094:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8056:48:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1956,"nodeType":"Block","src":"8259:82:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1951,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"8284:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8291:33:8","memberName":"TierOneCannotJoinStakerRoundError","nodeType":"MemberAccess","referencedDeclaration":4275,"src":"8284:40:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8284:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1955,"nodeType":"RevertStatement","src":"8277:49:8"}]},"id":1957,"nodeType":"IfStatement","src":"8052:289:8","trueBody":{"id":1950,"nodeType":"Block","src":"8106:147:8","statements":[{"condition":{"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8128:69:8","subExpression":{"arguments":[{"expression":{"id":1938,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8155:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8159:6:8","memberName":"sender","nodeType":"MemberAccess","src":"8155:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1940,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"8167:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1941,"name":"whitelistProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"8182:14:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}],"id":1937,"name":"checkWhitelistEligibility","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"8129:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_calldata_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes32[] calldata) view returns (bool)"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8129:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1949,"nodeType":"IfStatement","src":"8124:114:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1944,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"8206:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8213:23:8","memberName":"UserNotWhitelistedError","nodeType":"MemberAccess","referencedDeclaration":4339,"src":"8206:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8206:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1948,"nodeType":"RevertStatement","src":"8199:39:8"}}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1962,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8391:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8395:6:8","memberName":"sender","nodeType":"MemberAccess","src":"8391:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1960,"name":"investmentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"8365:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8381:9:8","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":413,"src":"8365:25:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8365:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1965,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"8405:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8365:46:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1972,"nodeType":"IfStatement","src":"8361:92:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1967,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"8420:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8427:24:8","memberName":"InsufficientBalanceError","nodeType":"MemberAccess","referencedDeclaration":4257,"src":"8420:31:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8420:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1971,"nodeType":"RevertStatement","src":"8413:40:8"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1973,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"8467:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":1974,"name":"tierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8476:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SaleTierDetails_$4674_storage_$","typeString":"mapping(uint256 => struct IDappadSale.SaleTierDetails storage ref)"}},"id":1976,"indexExpression":{"id":1975,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"8488:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8476:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage","typeString":"struct IDappadSale.SaleTierDetails storage ref"}},"id":1977,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8503:19:8","memberName":"minInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4661,"src":"8476:46:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8467:55:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1984,"nodeType":"IfStatement","src":"8463:109:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1979,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"8531:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8538:32:8","memberName":"MinimumInvestmentNotReachedError","nodeType":"MemberAccess","referencedDeclaration":4341,"src":"8531:39:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8531:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1983,"nodeType":"RevertStatement","src":"8524:48:8"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1985,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"8587:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":1986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8592:13:8","memberName":"ticketDetails","nodeType":"MemberAccess","referencedDeclaration":4576,"src":"8587:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTicketDetails_$4618_storage","typeString":"struct IDappadSale.SaleTicketDetails storage ref"}},"id":1987,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8606:16:8","memberName":"ticketMerkleRoot","nodeType":"MemberAccess","referencedDeclaration":4617,"src":"8587:35:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8634:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8626:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1988,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8626:7:8","typeDescriptions":{}}},"id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8626:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8587:49:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"expression":{"id":1994,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8663:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8667:6:8","memberName":"sender","nodeType":"MemberAccess","src":"8663:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1996,"name":"ticketProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"8675:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}],"id":1993,"name":"checkTicketEligibility","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"8640:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_array$_t_bytes32_$dyn_calldata_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32[] calldata) view returns (bool)"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8640:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8587:100:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2045,"nodeType":"Block","src":"8937:163:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2028,"name":"investmentAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"8955:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2031,"indexExpression":{"expression":{"id":2029,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8973:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8977:6:8","memberName":"sender","nodeType":"MemberAccess","src":"8973:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8955:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2032,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"8987:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8955:38:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"baseExpression":{"id":2034,"name":"tierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8996:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SaleTierDetails_$4674_storage_$","typeString":"mapping(uint256 => struct IDappadSale.SaleTierDetails storage ref)"}},"id":2036,"indexExpression":{"id":2035,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"9008:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8996:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage","typeString":"struct IDappadSale.SaleTierDetails storage ref"}},"id":2037,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9023:19:8","memberName":"maxInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4663,"src":"8996:46:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8955:87:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2044,"nodeType":"IfStatement","src":"8951:138:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2039,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"9051:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9058:29:8","memberName":"MaximumInvestmentReachedError","nodeType":"MemberAccess","referencedDeclaration":4343,"src":"9051:36:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9051:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2043,"nodeType":"RevertStatement","src":"9044:45:8"}}]},"id":2046,"nodeType":"IfStatement","src":"8583:517:8","trueBody":{"id":2027,"nodeType":"Block","src":"8689:242:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1999,"name":"investmentAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"8707:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2002,"indexExpression":{"expression":{"id":2000,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8725:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8729:6:8","memberName":"sender","nodeType":"MemberAccess","src":"8725:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8707:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2003,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"8739:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8707:38:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2005,"name":"tierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8749:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SaleTierDetails_$4674_storage_$","typeString":"mapping(uint256 => struct IDappadSale.SaleTierDetails storage ref)"}},"id":2007,"indexExpression":{"id":2006,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"8761:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8749:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage","typeString":"struct IDappadSale.SaleTierDetails storage ref"}},"id":2008,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8776:19:8","memberName":"maxInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4663,"src":"8749:46:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2009,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"8799:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2010,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8804:13:8","memberName":"ticketDetails","nodeType":"MemberAccess","referencedDeclaration":4576,"src":"8799:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTicketDetails_$4618_storage","typeString":"struct IDappadSale.SaleTicketDetails storage ref"}},"id":2011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8818:11:8","memberName":"ticketPrice","nodeType":"MemberAccess","referencedDeclaration":4615,"src":"8799:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"baseExpression":{"id":2012,"name":"tierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8832:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SaleTierDetails_$4674_storage_$","typeString":"mapping(uint256 => struct IDappadSale.SaleTierDetails storage ref)"}},"id":2014,"indexExpression":{"id":2013,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"8844:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8832:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage","typeString":"struct IDappadSale.SaleTierDetails storage ref"}},"id":2015,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8859:12:8","memberName":"ticketAmount","nodeType":"MemberAccess","referencedDeclaration":4667,"src":"8832:39:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8799:72:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8798:74:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8749:123:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2019,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8748:125:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8707:166:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2026,"nodeType":"IfStatement","src":"8703:217:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2021,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"8882:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8889:29:8","memberName":"MaximumInvestmentReachedError","nodeType":"MemberAccess","referencedDeclaration":4343,"src":"8882:36:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8882:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2025,"nodeType":"RevertStatement","src":"8875:45:8"}}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2047,"name":"tierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"9114:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SaleTierDetails_$4674_storage_$","typeString":"mapping(uint256 => struct IDappadSale.SaleTierDetails storage ref)"}},"id":2049,"indexExpression":{"id":2048,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"9126:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9114:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage","typeString":"struct IDappadSale.SaleTierDetails storage ref"}},"id":2050,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9141:21:8","memberName":"totalInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4671,"src":"9114:48:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2051,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"9165:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9114:57:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"baseExpression":{"id":2053,"name":"tierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"9174:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SaleTierDetails_$4674_storage_$","typeString":"mapping(uint256 => struct IDappadSale.SaleTierDetails storage ref)"}},"id":2055,"indexExpression":{"id":2054,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"9186:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9174:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage","typeString":"struct IDappadSale.SaleTierDetails storage ref"}},"id":2056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9201:23:8","memberName":"tierMaxInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4665,"src":"9174:50:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9114:110:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2063,"nodeType":"IfStatement","src":"9110:161:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2058,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"9233:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9240:29:8","memberName":"MaxTierInvestmentReachedError","nodeType":"MemberAccess","referencedDeclaration":4271,"src":"9233:36:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9233:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2062,"nodeType":"RevertStatement","src":"9226:45:8"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2064,"name":"saleStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"9285:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleStatistics_$4659_storage","typeString":"struct IDappadSale.SaleStatistics storage ref"}},"id":2065,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9300:21:8","memberName":"totalInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4650,"src":"9285:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2066,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"9324:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9285:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"expression":{"id":2068,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"9333:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2069,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9338:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"9333:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":2070,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9350:19:8","memberName":"maxInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4594,"src":"9333:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9285:84:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2077,"nodeType":"IfStatement","src":"9281:136:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2072,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"9378:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9385:30:8","memberName":"MaxTotalInvestmentReachedError","nodeType":"MemberAccess","referencedDeclaration":4345,"src":"9378:37:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9378:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2076,"nodeType":"RevertStatement","src":"9371:46:8"}},{"expression":{"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2078,"name":"saleStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"9436:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleStatistics_$4659_storage","typeString":"struct IDappadSale.SaleStatistics storage ref"}},"id":2080,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9451:21:8","memberName":"totalInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4650,"src":"9436:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2081,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"9476:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9436:46:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2083,"nodeType":"ExpressionStatement","src":"9436:46:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2084,"name":"investmentAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"9496:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2087,"indexExpression":{"expression":{"id":2085,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9514:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9518:6:8","memberName":"sender","nodeType":"MemberAccess","src":"9514:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9496:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9529:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9496:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2102,"nodeType":"IfStatement","src":"9493:158:8","trueBody":{"id":2101,"nodeType":"Block","src":"9532:119:8","statements":[{"expression":{"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9546:34:8","subExpression":{"expression":{"id":2090,"name":"saleStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"9546:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleStatistics_$4659_storage","typeString":"struct IDappadSale.SaleStatistics storage ref"}},"id":2092,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9561:17:8","memberName":"totalParticipants","nodeType":"MemberAccess","referencedDeclaration":4654,"src":"9546:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2094,"nodeType":"ExpressionStatement","src":"9546:34:8"},{"expression":{"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9594:46:8","subExpression":{"expression":{"baseExpression":{"id":2095,"name":"tierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"9594:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SaleTierDetails_$4674_storage_$","typeString":"mapping(uint256 => struct IDappadSale.SaleTierDetails storage ref)"}},"id":2097,"indexExpression":{"id":2096,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"9606:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9594:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage","typeString":"struct IDappadSale.SaleTierDetails storage ref"}},"id":2098,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9621:17:8","memberName":"totalParticipants","nodeType":"MemberAccess","referencedDeclaration":4673,"src":"9594:44:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2100,"nodeType":"ExpressionStatement","src":"9594:46:8"}]}},{"expression":{"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2103,"name":"investmentAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"9661:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2106,"indexExpression":{"expression":{"id":2104,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9679:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9683:6:8","memberName":"sender","nodeType":"MemberAccess","src":"9679:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9661:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2107,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"9694:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9661:39:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2109,"nodeType":"ExpressionStatement","src":"9661:39:8"},{"expression":{"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2110,"name":"tierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"9710:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SaleTierDetails_$4674_storage_$","typeString":"mapping(uint256 => struct IDappadSale.SaleTierDetails storage ref)"}},"id":2112,"indexExpression":{"id":2111,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"9722:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9710:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage","typeString":"struct IDappadSale.SaleTierDetails storage ref"}},"id":2113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9737:21:8","memberName":"totalInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4671,"src":"9710:48:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2114,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"9762:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9710:58:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2116,"nodeType":"ExpressionStatement","src":"9710:58:8"},{"eventCall":{"arguments":[{"expression":{"id":2118,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9799:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9803:6:8","memberName":"sender","nodeType":"MemberAccess","src":"9799:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2120,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"9811:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2121,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"9826:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2122,"name":"investmentAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"9834:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2125,"indexExpression":{"expression":{"id":2123,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9852:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9856:6:8","memberName":"sender","nodeType":"MemberAccess","src":"9852:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9834:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2126,"name":"saleStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"9865:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleStatistics_$4659_storage","typeString":"struct IDappadSale.SaleStatistics storage ref"}},"id":2127,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9880:21:8","memberName":"totalInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4650,"src":"9865:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2128,"name":"saleStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"9903:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleStatistics_$4659_storage","typeString":"struct IDappadSale.SaleStatistics storage ref"}},"id":2129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9918:17:8","memberName":"totalParticipants","nodeType":"MemberAccess","referencedDeclaration":4654,"src":"9903:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2130,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9937:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9943:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"9937:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"expression":{"id":2133,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9973:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9977:6:8","memberName":"sender","nodeType":"MemberAccess","src":"9973:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2132,"name":"_getUserNftBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"9954:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9954:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2117,"name":"UserJoinedSale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"9784:14:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9784:201:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2137,"nodeType":"EmitStatement","src":"9779:206:8"},{"assignments":[2139],"declarations":[{"constant":false,"id":2139,"mutability":"mutable","name":"successfullyTransfered","nameLocation":"10001:22:8","nodeType":"VariableDeclaration","scope":2226,"src":"9996:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2138,"name":"bool","nodeType":"ElementaryTypeName","src":"9996:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2150,"initialValue":{"arguments":[{"expression":{"id":2142,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10055:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10059:6:8","memberName":"sender","nodeType":"MemberAccess","src":"10055:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2146,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10075:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}],"id":2145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10067:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2144,"name":"address","nodeType":"ElementaryTypeName","src":"10067:7:8","typeDescriptions":{}}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10067:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2148,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"10082:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2140,"name":"investmentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"10026:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10042:12:8","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":455,"src":"10026:28:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10026:63:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9996:93:8"},{"condition":{"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10103:23:8","subExpression":{"id":2151,"name":"successfullyTransfered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"10104:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2158,"nodeType":"IfStatement","src":"10099:69:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2153,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"10135:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10142:24:8","memberName":"TokenTransferFailedError","nodeType":"MemberAccess","referencedDeclaration":4251,"src":"10135:31:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10135:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2157,"nodeType":"RevertStatement","src":"10128:40:8"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2159,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"10183:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2160,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10188:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"10183:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":2161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10200:20:8","memberName":"registerTokenEnabled","nodeType":"MemberAccess","referencedDeclaration":4598,"src":"10183:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2162,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"10224:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10229:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"10224:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":2164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10243:20:8","memberName":"registerTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4629,"src":"10224:39:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10275:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10267:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2165,"name":"address","nodeType":"ElementaryTypeName","src":"10267:7:8","typeDescriptions":{}}},"id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10267:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10224:53:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10183:94:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2171,"name":"registerDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"10281:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SaleRegisterDetails_$4625_storage_$","typeString":"mapping(address => struct IDappadSale.SaleRegisterDetails storage ref)"}},"id":2174,"indexExpression":{"expression":{"id":2172,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10297:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10301:6:8","memberName":"sender","nodeType":"MemberAccess","src":"10297:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10281:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRegisterDetails_$4625_storage","typeString":"struct IDappadSale.SaleRegisterDetails storage ref"}},"id":2175,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10309:19:8","memberName":"registerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":4620,"src":"10281:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10331:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10281:51:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10183:149:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2223,"nodeType":"IfStatement","src":"10179:618:8","trueBody":{"id":2222,"nodeType":"Block","src":"10334:463:8","statements":[{"assignments":[2180],"declarations":[{"constant":false,"id":2180,"mutability":"mutable","name":"registerTokenAmount","nameLocation":"10356:19:8","nodeType":"VariableDeclaration","scope":2222,"src":"10348:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2179,"name":"uint256","nodeType":"ElementaryTypeName","src":"10348:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2186,"initialValue":{"expression":{"baseExpression":{"id":2181,"name":"registerDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"10378:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SaleRegisterDetails_$4625_storage_$","typeString":"mapping(address => struct IDappadSale.SaleRegisterDetails storage ref)"}},"id":2184,"indexExpression":{"expression":{"id":2182,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10394:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10398:6:8","memberName":"sender","nodeType":"MemberAccess","src":"10394:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10378:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRegisterDetails_$4625_storage","typeString":"struct IDappadSale.SaleRegisterDetails storage ref"}},"id":2185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10406:19:8","memberName":"registerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":4620,"src":"10378:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10348:77:8"},{"expression":{"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2187,"name":"saleStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"10440:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleStatistics_$4659_storage","typeString":"struct IDappadSale.SaleStatistics storage ref"}},"id":2189,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10455:28:8","memberName":"totalRegisterTokenAmountLeft","nodeType":"MemberAccess","referencedDeclaration":4658,"src":"10440:43:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"baseExpression":{"id":2190,"name":"registerDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"10487:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SaleRegisterDetails_$4625_storage_$","typeString":"mapping(address => struct IDappadSale.SaleRegisterDetails storage ref)"}},"id":2193,"indexExpression":{"expression":{"id":2191,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10503:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10507:6:8","memberName":"sender","nodeType":"MemberAccess","src":"10503:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10487:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRegisterDetails_$4625_storage","typeString":"struct IDappadSale.SaleRegisterDetails storage ref"}},"id":2194,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10515:19:8","memberName":"registerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":4620,"src":"10487:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10440:94:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2196,"nodeType":"ExpressionStatement","src":"10440:94:8"},{"expression":{"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2197,"name":"registerDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"10548:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SaleRegisterDetails_$4625_storage_$","typeString":"mapping(address => struct IDappadSale.SaleRegisterDetails storage ref)"}},"id":2200,"indexExpression":{"expression":{"id":2198,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10564:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10568:6:8","memberName":"sender","nodeType":"MemberAccess","src":"10564:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10548:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRegisterDetails_$4625_storage","typeString":"struct IDappadSale.SaleRegisterDetails storage ref"}},"id":2201,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10576:19:8","memberName":"registerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":4620,"src":"10548:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10598:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10548:51:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2204,"nodeType":"ExpressionStatement","src":"10548:51:8"},{"assignments":[2206],"declarations":[{"constant":false,"id":2206,"mutability":"mutable","name":"successfullyTransferedRA","nameLocation":"10619:24:8","nodeType":"VariableDeclaration","scope":2222,"src":"10614:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2205,"name":"bool","nodeType":"ElementaryTypeName","src":"10614:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2213,"initialValue":{"arguments":[{"expression":{"id":2209,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10669:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10673:6:8","memberName":"sender","nodeType":"MemberAccess","src":"10669:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2211,"name":"registerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"10681:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2207,"name":"registerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"10646:13:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10660:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":423,"src":"10646:22:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10646:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"10614:87:8"},{"condition":{"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10719:25:8","subExpression":{"id":2214,"name":"successfullyTransferedRA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"10720:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2221,"nodeType":"IfStatement","src":"10715:71:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2216,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"10753:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10760:24:8","memberName":"TokenTransferFailedError","nodeType":"MemberAccess","referencedDeclaration":4251,"src":"10753:31:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10753:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2220,"nodeType":"RevertStatement","src":"10746:40:8"}}]}},{"expression":{"hexValue":"74727565","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10814:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1824,"id":2225,"nodeType":"Return","src":"10807:11:8"}]},"functionSelector":"6ad4f603","id":2227,"implemented":true,"kind":"function","modifiers":[{"id":1811,"kind":"modifierInvocation","modifierName":{"id":1810,"name":"whenSaleIsNotPaused","nameLocations":["7050:19:8"],"nodeType":"IdentifierPath","referencedDeclaration":1601,"src":"7050:19:8"},"nodeType":"ModifierInvocation","src":"7050:19:8"},{"arguments":[{"expression":{"id":1813,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7085:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7089:6:8","memberName":"sender","nodeType":"MemberAccess","src":"7085:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1815,"kind":"modifierInvocation","modifierName":{"id":1812,"name":"notZeroAddress","nameLocations":["7070:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1574,"src":"7070:14:8"},"nodeType":"ModifierInvocation","src":"7070:26:8"},{"arguments":[{"id":1817,"name":"investmentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"7116:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},{"expression":{"id":1818,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7133:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7137:6:8","memberName":"sender","nodeType":"MemberAccess","src":"7133:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1820,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"7145:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1821,"kind":"modifierInvocation","modifierName":{"id":1816,"name":"hasEnoughAllowance","nameLocations":["7097:18:8"],"nodeType":"IdentifierPath","referencedDeclaration":1618,"src":"7097:18:8"},"nodeType":"ModifierInvocation","src":"7097:55:8"}],"name":"joinSale","nameLocation":"6949:8:8","nodeType":"FunctionDefinition","parameters":{"id":1809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1802,"mutability":"mutable","name":"amount","nameLocation":"6966:6:8","nodeType":"VariableDeclaration","scope":2227,"src":"6958:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1801,"name":"uint256","nodeType":"ElementaryTypeName","src":"6958:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1805,"mutability":"mutable","name":"whitelistProof","nameLocation":"6993:14:8","nodeType":"VariableDeclaration","scope":2227,"src":"6974:33:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1803,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6974:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1804,"nodeType":"ArrayTypeName","src":"6974:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"ticketProof","nameLocation":"7028:11:8","nodeType":"VariableDeclaration","scope":2227,"src":"7009:30:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1806,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7009:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1807,"nodeType":"ArrayTypeName","src":"7009:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6957:83:8"},"returnParameters":{"id":1824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2227,"src":"7162:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1822,"name":"bool","nodeType":"ElementaryTypeName","src":"7162:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7161:6:8"},"scope":3854,"src":"6940:3885:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2581,"nodeType":"Block","src":"11031:2952:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2249,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"11045:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11050:11:8","memberName":"fcfsDetails","nodeType":"MemberAccess","referencedDeclaration":4570,"src":"11045:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleFcfsDetails_$4608_storage","typeString":"struct IDappadSale.SaleFcfsDetails storage ref"}},"id":2251,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11062:16:8","memberName":"fcfsSaleDuration","nodeType":"MemberAccess","referencedDeclaration":4605,"src":"11045:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11082:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11045:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2259,"nodeType":"IfStatement","src":"11041:83:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2254,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"11092:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11099:23:8","memberName":"FCFSSaleNotEnabledError","nodeType":"MemberAccess","referencedDeclaration":4329,"src":"11092:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11092:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2258,"nodeType":"RevertStatement","src":"11085:39:8"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2260,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11138:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11144:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"11138:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2262,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"11157:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2263,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11162:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"11157:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":2264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11174:7:8","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":4590,"src":"11157:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"expression":{"id":2265,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"11184:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2266,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11189:11:8","memberName":"fcfsDetails","nodeType":"MemberAccess","referencedDeclaration":4570,"src":"11184:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleFcfsDetails_$4608_storage","typeString":"struct IDappadSale.SaleFcfsDetails storage ref"}},"id":2267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11201:16:8","memberName":"fcfsSaleDuration","nodeType":"MemberAccess","referencedDeclaration":4605,"src":"11184:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11157:60:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2269,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11156:62:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11138:80:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2276,"nodeType":"IfStatement","src":"11134:125:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2271,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"11227:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11234:23:8","memberName":"FCFSSaleNotStartedError","nodeType":"MemberAccess","referencedDeclaration":4331,"src":"11227:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11227:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2275,"nodeType":"RevertStatement","src":"11220:39:8"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2277,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11273:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11279:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"11273:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"expression":{"id":2279,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"11292:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2280,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11297:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"11292:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":2281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11309:7:8","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":4590,"src":"11292:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11273:43:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2288,"nodeType":"IfStatement","src":"11269:86:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2283,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"11325:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11332:21:8","memberName":"SaleAlreadyEndedError","nodeType":"MemberAccess","referencedDeclaration":4319,"src":"11325:28:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11325:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2287,"nodeType":"RevertStatement","src":"11318:37:8"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2289,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"11370:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11370:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2297,"nodeType":"IfStatement","src":"11366:51:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2292,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"11390:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11397:18:8","memberName":"InvalidAmountError","nodeType":"MemberAccess","referencedDeclaration":4277,"src":"11390:25:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11390:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2296,"nodeType":"RevertStatement","src":"11383:34:8"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2298,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"11432:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11437:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"11432:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":2300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11451:18:8","memberName":"nftContractAddress","nodeType":"MemberAccess","referencedDeclaration":4635,"src":"11432:37:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11481:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11473:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2301,"name":"address","nodeType":"ElementaryTypeName","src":"11473:7:8","typeDescriptions":{}}},"id":2304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11473:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11432:51:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2319,"nodeType":"IfStatement","src":"11428:156:8","trueBody":{"id":2318,"nodeType":"Block","src":"11485:99:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2307,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11522:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11526:6:8","memberName":"sender","nodeType":"MemberAccess","src":"11522:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2306,"name":"_getUserNftBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"11503:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11503:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11537:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11503:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2317,"nodeType":"IfStatement","src":"11499:74:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2312,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"11547:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11554:17:8","memberName":"UserHasNoNFTError","nodeType":"MemberAccess","referencedDeclaration":4263,"src":"11547:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11547:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2316,"nodeType":"RevertStatement","src":"11540:33:8"}}]}},{"assignments":[2321],"declarations":[{"constant":false,"id":2321,"mutability":"mutable","name":"userTierIndex","nameLocation":"11602:13:8","nodeType":"VariableDeclaration","scope":2581,"src":"11594:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2320,"name":"uint256","nodeType":"ElementaryTypeName","src":"11594:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2323,"initialValue":{"hexValue":"30","id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11618:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11594:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2324,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"11634:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11639:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"11634:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":2326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11653:30:8","memberName":"stakeControllerContractAddress","nodeType":"MemberAccess","referencedDeclaration":4637,"src":"11634:49:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11695:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11687:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2327,"name":"address","nodeType":"ElementaryTypeName","src":"11687:7:8","typeDescriptions":{}}},"id":2330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11687:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11634:63:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2341,"nodeType":"IfStatement","src":"11630:161:8","trueBody":{"id":2340,"nodeType":"Block","src":"11699:92:8","statements":[{"expression":{"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2332,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"11712:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2335,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11769:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11773:6:8","memberName":"sender","nodeType":"MemberAccess","src":"11769:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2333,"name":"stakeControllerContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"11728:23:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadStakeController_$4487","typeString":"contract IDappadStakeController"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11752:16:8","memberName":"getUserTierIndex","nodeType":"MemberAccess","referencedDeclaration":4486,"src":"11728:40:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11728:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11712:68:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2339,"nodeType":"ExpressionStatement","src":"11712:68:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2342,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"11805:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11822:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11805:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2345,"name":"tierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"11827:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SaleTierDetails_$4674_storage_$","typeString":"mapping(uint256 => struct IDappadSale.SaleTierDetails storage ref)"}},"id":2347,"indexExpression":{"hexValue":"30","id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11839:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11827:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage","typeString":"struct IDappadSale.SaleTierDetails storage ref"}},"id":2348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11842:19:8","memberName":"whitelistMerkleRoot","nodeType":"MemberAccess","referencedDeclaration":4669,"src":"11827:34:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11873:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11865:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2349,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11865:7:8","typeDescriptions":{}}},"id":2352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11865:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"11827:48:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11805:70:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2369,"nodeType":"IfStatement","src":"11801:215:8","trueBody":{"id":2368,"nodeType":"Block","src":"11877:139:8","statements":[{"condition":{"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11895:69:8","subExpression":{"arguments":[{"expression":{"id":2356,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11922:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11926:6:8","memberName":"sender","nodeType":"MemberAccess","src":"11922:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2358,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"11934:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2359,"name":"whitelistProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"11949:14:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}],"id":2355,"name":"checkWhitelistEligibility","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"11896:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_calldata_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes32[] calldata) view returns (bool)"}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11896:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2367,"nodeType":"IfStatement","src":"11891:114:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2362,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"11973:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11980:23:8","memberName":"UserNotWhitelistedError","nodeType":"MemberAccess","referencedDeclaration":4339,"src":"11973:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11973:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2366,"nodeType":"RevertStatement","src":"11966:39:8"}}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2372,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12056:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12060:6:8","memberName":"sender","nodeType":"MemberAccess","src":"12056:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2370,"name":"investmentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"12030:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12046:9:8","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":413,"src":"12030:25:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12030:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2375,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"12070:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12030:46:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2382,"nodeType":"IfStatement","src":"12026:92:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2377,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"12085:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12092:24:8","memberName":"InsufficientBalanceError","nodeType":"MemberAccess","referencedDeclaration":4257,"src":"12085:31:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12085:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2381,"nodeType":"RevertStatement","src":"12078:40:8"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2383,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"12132:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":2384,"name":"tierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"12141:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SaleTierDetails_$4674_storage_$","typeString":"mapping(uint256 => struct IDappadSale.SaleTierDetails storage ref)"}},"id":2386,"indexExpression":{"id":2385,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"12153:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12141:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage","typeString":"struct IDappadSale.SaleTierDetails storage ref"}},"id":2387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12168:19:8","memberName":"minInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4661,"src":"12141:46:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12132:55:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2394,"nodeType":"IfStatement","src":"12128:109:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2389,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"12196:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12203:32:8","memberName":"MinimumInvestmentNotReachedError","nodeType":"MemberAccess","referencedDeclaration":4341,"src":"12196:39:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12196:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2393,"nodeType":"RevertStatement","src":"12189:48:8"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2395,"name":"investmentAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"12251:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2398,"indexExpression":{"expression":{"id":2396,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12269:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12273:6:8","memberName":"sender","nodeType":"MemberAccess","src":"12269:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12251:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2399,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"12283:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12251:38:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2401,"name":"tierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"12293:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SaleTierDetails_$4674_storage_$","typeString":"mapping(uint256 => struct IDappadSale.SaleTierDetails storage ref)"}},"id":2403,"indexExpression":{"id":2402,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"12305:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12293:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage","typeString":"struct IDappadSale.SaleTierDetails storage ref"}},"id":2404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12320:19:8","memberName":"maxInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4663,"src":"12293:46:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"expression":{"id":2405,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"12342:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12347:11:8","memberName":"fcfsDetails","nodeType":"MemberAccess","referencedDeclaration":4570,"src":"12342:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleFcfsDetails_$4608_storage","typeString":"struct IDappadSale.SaleFcfsDetails storage ref"}},"id":2407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12359:18:8","memberName":"fcfsSaleMultiplier","nodeType":"MemberAccess","referencedDeclaration":4607,"src":"12342:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12293:84:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31303030","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12380:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"12293:91:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2411,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12292:93:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12251:134:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2418,"nodeType":"IfStatement","src":"12247:185:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2413,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"12394:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12401:29:8","memberName":"MaximumInvestmentReachedError","nodeType":"MemberAccess","referencedDeclaration":4343,"src":"12394:36:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12394:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2417,"nodeType":"RevertStatement","src":"12387:45:8"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2419,"name":"saleStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"12447:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleStatistics_$4659_storage","typeString":"struct IDappadSale.SaleStatistics storage ref"}},"id":2420,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12462:21:8","memberName":"totalInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4650,"src":"12447:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2421,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"12486:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12447:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"expression":{"id":2423,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"12495:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12500:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"12495:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":2425,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12512:19:8","memberName":"maxInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4594,"src":"12495:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12447:84:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2432,"nodeType":"IfStatement","src":"12443:136:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2427,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"12540:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12547:30:8","memberName":"MaxTotalInvestmentReachedError","nodeType":"MemberAccess","referencedDeclaration":4345,"src":"12540:37:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12540:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2431,"nodeType":"RevertStatement","src":"12533:46:8"}},{"expression":{"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2433,"name":"saleStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"12590:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleStatistics_$4659_storage","typeString":"struct IDappadSale.SaleStatistics storage ref"}},"id":2435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12605:21:8","memberName":"totalInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4650,"src":"12590:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2436,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"12630:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12590:46:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2438,"nodeType":"ExpressionStatement","src":"12590:46:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2439,"name":"investmentAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"12650:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2442,"indexExpression":{"expression":{"id":2440,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12668:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12672:6:8","memberName":"sender","nodeType":"MemberAccess","src":"12668:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12650:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12683:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12650:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2457,"nodeType":"IfStatement","src":"12647:158:8","trueBody":{"id":2456,"nodeType":"Block","src":"12686:119:8","statements":[{"expression":{"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12700:34:8","subExpression":{"expression":{"id":2445,"name":"saleStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"12700:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleStatistics_$4659_storage","typeString":"struct IDappadSale.SaleStatistics storage ref"}},"id":2447,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12715:17:8","memberName":"totalParticipants","nodeType":"MemberAccess","referencedDeclaration":4654,"src":"12700:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2449,"nodeType":"ExpressionStatement","src":"12700:34:8"},{"expression":{"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12748:46:8","subExpression":{"expression":{"baseExpression":{"id":2450,"name":"tierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"12748:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SaleTierDetails_$4674_storage_$","typeString":"mapping(uint256 => struct IDappadSale.SaleTierDetails storage ref)"}},"id":2452,"indexExpression":{"id":2451,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"12760:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12748:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage","typeString":"struct IDappadSale.SaleTierDetails storage ref"}},"id":2453,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12775:17:8","memberName":"totalParticipants","nodeType":"MemberAccess","referencedDeclaration":4673,"src":"12748:44:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2455,"nodeType":"ExpressionStatement","src":"12748:46:8"}]}},{"expression":{"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2458,"name":"investmentAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"12815:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2461,"indexExpression":{"expression":{"id":2459,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12833:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12837:6:8","memberName":"sender","nodeType":"MemberAccess","src":"12833:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12815:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2462,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"12848:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12815:39:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2464,"nodeType":"ExpressionStatement","src":"12815:39:8"},{"expression":{"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2465,"name":"tierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"12864:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SaleTierDetails_$4674_storage_$","typeString":"mapping(uint256 => struct IDappadSale.SaleTierDetails storage ref)"}},"id":2467,"indexExpression":{"id":2466,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"12876:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12864:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage","typeString":"struct IDappadSale.SaleTierDetails storage ref"}},"id":2468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12891:21:8","memberName":"totalInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4671,"src":"12864:48:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2469,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"12916:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12864:58:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2471,"nodeType":"ExpressionStatement","src":"12864:58:8"},{"eventCall":{"arguments":[{"expression":{"id":2473,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12957:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12961:6:8","memberName":"sender","nodeType":"MemberAccess","src":"12957:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2475,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"12969:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2476,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"12984:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2477,"name":"investmentAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"12992:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2480,"indexExpression":{"expression":{"id":2478,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13010:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13014:6:8","memberName":"sender","nodeType":"MemberAccess","src":"13010:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12992:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2481,"name":"saleStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"13023:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleStatistics_$4659_storage","typeString":"struct IDappadSale.SaleStatistics storage ref"}},"id":2482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13038:21:8","memberName":"totalInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4650,"src":"13023:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2483,"name":"saleStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"13061:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleStatistics_$4659_storage","typeString":"struct IDappadSale.SaleStatistics storage ref"}},"id":2484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13076:17:8","memberName":"totalParticipants","nodeType":"MemberAccess","referencedDeclaration":4654,"src":"13061:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2485,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13095:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13101:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"13095:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"expression":{"id":2488,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13131:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13135:6:8","memberName":"sender","nodeType":"MemberAccess","src":"13131:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2487,"name":"_getUserNftBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"13112:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13112:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2472,"name":"UserJoinedFcfsSale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"12938:18:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12938:205:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2492,"nodeType":"EmitStatement","src":"12933:210:8"},{"assignments":[2494],"declarations":[{"constant":false,"id":2494,"mutability":"mutable","name":"successfullyTransfered","nameLocation":"13159:22:8","nodeType":"VariableDeclaration","scope":2581,"src":"13154:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2493,"name":"bool","nodeType":"ElementaryTypeName","src":"13154:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2505,"initialValue":{"arguments":[{"expression":{"id":2497,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13213:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13217:6:8","memberName":"sender","nodeType":"MemberAccess","src":"13213:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2501,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13233:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}],"id":2500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13225:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2499,"name":"address","nodeType":"ElementaryTypeName","src":"13225:7:8","typeDescriptions":{}}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13225:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2503,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"13240:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2495,"name":"investmentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"13184:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13200:12:8","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":455,"src":"13184:28:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13184:63:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"13154:93:8"},{"condition":{"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13261:23:8","subExpression":{"id":2506,"name":"successfullyTransfered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"13262:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2513,"nodeType":"IfStatement","src":"13257:69:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2508,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"13293:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13300:24:8","memberName":"TokenTransferFailedError","nodeType":"MemberAccess","referencedDeclaration":4251,"src":"13293:31:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13293:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2512,"nodeType":"RevertStatement","src":"13286:40:8"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2514,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"13341:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2515,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13346:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"13341:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":2516,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13358:20:8","memberName":"registerTokenEnabled","nodeType":"MemberAccess","referencedDeclaration":4598,"src":"13341:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2517,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"13382:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2518,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13387:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"13382:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":2519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13401:20:8","memberName":"registerTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4629,"src":"13382:39:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13433:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13425:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2520,"name":"address","nodeType":"ElementaryTypeName","src":"13425:7:8","typeDescriptions":{}}},"id":2523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13425:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13382:53:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13341:94:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2526,"name":"registerDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"13439:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SaleRegisterDetails_$4625_storage_$","typeString":"mapping(address => struct IDappadSale.SaleRegisterDetails storage ref)"}},"id":2529,"indexExpression":{"expression":{"id":2527,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13455:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13459:6:8","memberName":"sender","nodeType":"MemberAccess","src":"13455:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13439:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRegisterDetails_$4625_storage","typeString":"struct IDappadSale.SaleRegisterDetails storage ref"}},"id":2530,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13467:19:8","memberName":"registerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":4620,"src":"13439:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13439:51:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13341:149:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2578,"nodeType":"IfStatement","src":"13337:618:8","trueBody":{"id":2577,"nodeType":"Block","src":"13492:463:8","statements":[{"assignments":[2535],"declarations":[{"constant":false,"id":2535,"mutability":"mutable","name":"registerTokenAmount","nameLocation":"13514:19:8","nodeType":"VariableDeclaration","scope":2577,"src":"13506:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2534,"name":"uint256","nodeType":"ElementaryTypeName","src":"13506:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2541,"initialValue":{"expression":{"baseExpression":{"id":2536,"name":"registerDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"13536:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SaleRegisterDetails_$4625_storage_$","typeString":"mapping(address => struct IDappadSale.SaleRegisterDetails storage ref)"}},"id":2539,"indexExpression":{"expression":{"id":2537,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13552:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13556:6:8","memberName":"sender","nodeType":"MemberAccess","src":"13552:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13536:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRegisterDetails_$4625_storage","typeString":"struct IDappadSale.SaleRegisterDetails storage ref"}},"id":2540,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13564:19:8","memberName":"registerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":4620,"src":"13536:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13506:77:8"},{"expression":{"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2542,"name":"saleStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"13598:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleStatistics_$4659_storage","typeString":"struct IDappadSale.SaleStatistics storage ref"}},"id":2544,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13613:28:8","memberName":"totalRegisterTokenAmountLeft","nodeType":"MemberAccess","referencedDeclaration":4658,"src":"13598:43:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"baseExpression":{"id":2545,"name":"registerDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"13645:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SaleRegisterDetails_$4625_storage_$","typeString":"mapping(address => struct IDappadSale.SaleRegisterDetails storage ref)"}},"id":2548,"indexExpression":{"expression":{"id":2546,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13661:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13665:6:8","memberName":"sender","nodeType":"MemberAccess","src":"13661:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13645:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRegisterDetails_$4625_storage","typeString":"struct IDappadSale.SaleRegisterDetails storage ref"}},"id":2549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13673:19:8","memberName":"registerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":4620,"src":"13645:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13598:94:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2551,"nodeType":"ExpressionStatement","src":"13598:94:8"},{"expression":{"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2552,"name":"registerDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"13706:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SaleRegisterDetails_$4625_storage_$","typeString":"mapping(address => struct IDappadSale.SaleRegisterDetails storage ref)"}},"id":2555,"indexExpression":{"expression":{"id":2553,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13722:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13726:6:8","memberName":"sender","nodeType":"MemberAccess","src":"13722:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13706:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRegisterDetails_$4625_storage","typeString":"struct IDappadSale.SaleRegisterDetails storage ref"}},"id":2556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13734:19:8","memberName":"registerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":4620,"src":"13706:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13756:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13706:51:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2559,"nodeType":"ExpressionStatement","src":"13706:51:8"},{"assignments":[2561],"declarations":[{"constant":false,"id":2561,"mutability":"mutable","name":"successfullyTransferedRA","nameLocation":"13777:24:8","nodeType":"VariableDeclaration","scope":2577,"src":"13772:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2560,"name":"bool","nodeType":"ElementaryTypeName","src":"13772:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2568,"initialValue":{"arguments":[{"expression":{"id":2564,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13827:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13831:6:8","memberName":"sender","nodeType":"MemberAccess","src":"13827:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2566,"name":"registerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"13839:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2562,"name":"registerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"13804:13:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13818:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":423,"src":"13804:22:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13804:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"13772:87:8"},{"condition":{"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13877:25:8","subExpression":{"id":2569,"name":"successfullyTransferedRA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"13878:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2576,"nodeType":"IfStatement","src":"13873:71:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2571,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"13911:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13918:24:8","memberName":"TokenTransferFailedError","nodeType":"MemberAccess","referencedDeclaration":4251,"src":"13911:31:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13911:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2575,"nodeType":"RevertStatement","src":"13904:40:8"}}]}},{"expression":{"hexValue":"74727565","id":2579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13972:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2248,"id":2580,"nodeType":"Return","src":"13965:11:8"}]},"functionSelector":"cb00baf5","id":2582,"implemented":true,"kind":"function","modifiers":[{"id":2235,"kind":"modifierInvocation","modifierName":{"id":2234,"name":"whenSaleIsNotPaused","nameLocations":["10913:19:8"],"nodeType":"IdentifierPath","referencedDeclaration":1601,"src":"10913:19:8"},"nodeType":"ModifierInvocation","src":"10913:19:8"},{"arguments":[{"expression":{"id":2237,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10948:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10952:6:8","memberName":"sender","nodeType":"MemberAccess","src":"10948:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2239,"kind":"modifierInvocation","modifierName":{"id":2236,"name":"notZeroAddress","nameLocations":["10933:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1574,"src":"10933:14:8"},"nodeType":"ModifierInvocation","src":"10933:26:8"},{"arguments":[{"id":2241,"name":"investmentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"10979:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},{"expression":{"id":2242,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10996:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11000:6:8","memberName":"sender","nodeType":"MemberAccess","src":"10996:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2244,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"11008:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2245,"kind":"modifierInvocation","modifierName":{"id":2240,"name":"hasEnoughAllowance","nameLocations":["10960:18:8"],"nodeType":"IdentifierPath","referencedDeclaration":1618,"src":"10960:18:8"},"nodeType":"ModifierInvocation","src":"10960:55:8"}],"name":"joinFcfsSale","nameLocation":"10840:12:8","nodeType":"FunctionDefinition","parameters":{"id":2233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2229,"mutability":"mutable","name":"amount","nameLocation":"10861:6:8","nodeType":"VariableDeclaration","scope":2582,"src":"10853:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2228,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2232,"mutability":"mutable","name":"whitelistProof","nameLocation":"10888:14:8","nodeType":"VariableDeclaration","scope":2582,"src":"10869:33:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10869:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2231,"nodeType":"ArrayTypeName","src":"10869:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"10852:51:8"},"returnParameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2582,"src":"11025:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2246,"name":"bool","nodeType":"ElementaryTypeName","src":"11025:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11024:6:8"},"scope":3854,"src":"10831:3152:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2778,"nodeType":"Block","src":"14058:1624:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2591,"name":"investmentAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"14072:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2594,"indexExpression":{"expression":{"id":2592,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14090:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14094:6:8","memberName":"sender","nodeType":"MemberAccess","src":"14090:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14072:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14105:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14072:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2602,"nodeType":"IfStatement","src":"14068:74:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2597,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"14115:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14122:18:8","memberName":"NotJoinedSaleError","nodeType":"MemberAccess","referencedDeclaration":4321,"src":"14115:25:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14115:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2601,"nodeType":"RevertStatement","src":"14108:34:8"}},{"condition":{"arguments":[{"expression":{"id":2605,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14193:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14197:6:8","memberName":"sender","nodeType":"MemberAccess","src":"14193:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2603,"name":"vestingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"14156:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadVesting_$4800","typeString":"contract IDappadVesting"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14172:20:8","memberName":"getAnyVestingClaimed","nodeType":"MemberAccess","referencedDeclaration":4785,"src":"14156:36:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14156:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2613,"nodeType":"IfStatement","src":"14152:101:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2608,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"14213:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14220:31:8","memberName":"FirstVestingAlreadyClaimedError","nodeType":"MemberAccess","referencedDeclaration":4335,"src":"14213:38:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14213:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2612,"nodeType":"RevertStatement","src":"14206:47:8"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2614,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14267:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14273:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"14267:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"expression":{"id":2616,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"14286:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2617,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14291:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"14286:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":2618,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14303:7:8","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":4590,"src":"14286:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14267:43:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2625,"nodeType":"IfStatement","src":"14263:82:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2620,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"14319:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14326:17:8","memberName":"SaleNotEndedError","nodeType":"MemberAccess","referencedDeclaration":4317,"src":"14319:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14319:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2624,"nodeType":"RevertStatement","src":"14312:33:8"}},{"condition":{"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14359:33:8","subExpression":{"expression":{"expression":{"id":2626,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"14360:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14365:13:8","memberName":"refundDetails","nodeType":"MemberAccess","referencedDeclaration":4573,"src":"14360:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRefundDetails_$4613_storage","typeString":"struct IDappadSale.SaleRefundDetails storage ref"}},"id":2628,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14379:13:8","memberName":"refundEnabled","nodeType":"MemberAccess","referencedDeclaration":4612,"src":"14360:32:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2635,"nodeType":"IfStatement","src":"14355:76:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2630,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"14401:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14408:21:8","memberName":"RefundNotEnabledError","nodeType":"MemberAccess","referencedDeclaration":4357,"src":"14401:28:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14401:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2634,"nodeType":"RevertStatement","src":"14394:37:8"}},{"condition":{"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14445:128:8","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2636,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14447:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14453:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"14447:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"expression":{"id":2638,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"14465:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2639,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14470:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"14465:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":2640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14482:7:8","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":4590,"src":"14465:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14447:42:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2642,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14493:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14499:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"14493:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2644,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"14512:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14517:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"14512:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":2646,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14529:7:8","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":4590,"src":"14512:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"expression":{"id":2647,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"14539:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2648,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14544:13:8","memberName":"refundDetails","nodeType":"MemberAccess","referencedDeclaration":4573,"src":"14539:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRefundDetails_$4613_storage","typeString":"struct IDappadSale.SaleRefundDetails storage ref"}},"id":2649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14558:14:8","memberName":"refundDuration","nodeType":"MemberAccess","referencedDeclaration":4610,"src":"14539:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14512:60:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14493:79:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14447:125:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2653,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14446:127:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2660,"nodeType":"IfStatement","src":"14441:171:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2655,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"14582:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14589:21:8","memberName":"RefundPeriodOverError","nodeType":"MemberAccess","referencedDeclaration":4359,"src":"14582:28:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14582:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2659,"nodeType":"RevertStatement","src":"14575:37:8"}},{"condition":{"baseExpression":{"id":2661,"name":"refunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"14626:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2664,"indexExpression":{"expression":{"id":2662,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14635:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14639:6:8","memberName":"sender","nodeType":"MemberAccess","src":"14635:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14626:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2670,"nodeType":"IfStatement","src":"14622:62:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2665,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"14655:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14662:20:8","memberName":"AlreadyRefundedError","nodeType":"MemberAccess","referencedDeclaration":4361,"src":"14655:27:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14655:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2669,"nodeType":"RevertStatement","src":"14648:36:8"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2671,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"14699:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14704:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"14699:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":2673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14718:18:8","memberName":"nftContractAddress","nodeType":"MemberAccess","referencedDeclaration":4635,"src":"14699:37:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14748:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14740:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2674,"name":"address","nodeType":"ElementaryTypeName","src":"14740:7:8","typeDescriptions":{}}},"id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14740:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14699:51:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2692,"nodeType":"IfStatement","src":"14695:156:8","trueBody":{"id":2691,"nodeType":"Block","src":"14752:99:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2680,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14789:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14793:6:8","memberName":"sender","nodeType":"MemberAccess","src":"14789:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2679,"name":"_getUserNftBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"14770:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14770:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14804:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14770:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2690,"nodeType":"IfStatement","src":"14766:74:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2685,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"14814:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14821:17:8","memberName":"UserHasNoNFTError","nodeType":"MemberAccess","referencedDeclaration":4263,"src":"14814:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14814:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2689,"nodeType":"RevertStatement","src":"14807:33:8"}}]}},{"assignments":[2694],"declarations":[{"constant":false,"id":2694,"mutability":"mutable","name":"userTierIndex","nameLocation":"14869:13:8","nodeType":"VariableDeclaration","scope":2778,"src":"14861:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2693,"name":"uint256","nodeType":"ElementaryTypeName","src":"14861:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2700,"initialValue":{"expression":{"baseExpression":{"id":2695,"name":"registerDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"14885:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SaleRegisterDetails_$4625_storage_$","typeString":"mapping(address => struct IDappadSale.SaleRegisterDetails storage ref)"}},"id":2698,"indexExpression":{"expression":{"id":2696,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14901:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14905:6:8","memberName":"sender","nodeType":"MemberAccess","src":"14901:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14885:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRegisterDetails_$4625_storage","typeString":"struct IDappadSale.SaleRegisterDetails storage ref"}},"id":2699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14913:9:8","memberName":"tierIndex","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"14885:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14861:61:8"},{"expression":{"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2701,"name":"saleStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"14933:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleStatistics_$4659_storage","typeString":"struct IDappadSale.SaleStatistics storage ref"}},"id":2703,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14948:21:8","memberName":"totalInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4650,"src":"14933:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"baseExpression":{"id":2704,"name":"investmentAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"14973:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2707,"indexExpression":{"expression":{"id":2705,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14991:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14995:6:8","memberName":"sender","nodeType":"MemberAccess","src":"14991:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14973:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14933:69:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2709,"nodeType":"ExpressionStatement","src":"14933:69:8"},{"expression":{"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2710,"name":"investmentAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"15105:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2713,"indexExpression":{"expression":{"id":2711,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15123:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15127:6:8","memberName":"sender","nodeType":"MemberAccess","src":"15123:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15105:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15137:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15105:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2716,"nodeType":"ExpressionStatement","src":"15105:33:8"},{"expression":{"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2717,"name":"refunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"15149:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2720,"indexExpression":{"expression":{"id":2718,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15158:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15162:6:8","memberName":"sender","nodeType":"MemberAccess","src":"15158:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15149:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15172:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"15149:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2723,"nodeType":"ExpressionStatement","src":"15149:27:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2728,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15225:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}],"id":2727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15217:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2726,"name":"address","nodeType":"ElementaryTypeName","src":"15217:7:8","typeDescriptions":{}}},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15217:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2724,"name":"investmentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"15191:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15207:9:8","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":413,"src":"15191:25:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15191:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"baseExpression":{"id":2731,"name":"investmentAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"15234:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2734,"indexExpression":{"expression":{"id":2732,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15252:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15256:6:8","memberName":"sender","nodeType":"MemberAccess","src":"15252:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15234:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15191:72:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2741,"nodeType":"IfStatement","src":"15187:126:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2736,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"15272:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15279:32:8","memberName":"InsufficientContractBalanceError","nodeType":"MemberAccess","referencedDeclaration":4259,"src":"15272:39:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15272:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2740,"nodeType":"RevertStatement","src":"15265:48:8"}},{"eventCall":{"arguments":[{"expression":{"id":2743,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15346:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15350:6:8","memberName":"sender","nodeType":"MemberAccess","src":"15346:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2745,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"15358:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2746,"name":"investmentAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"15373:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2749,"indexExpression":{"expression":{"id":2747,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15391:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15395:6:8","memberName":"sender","nodeType":"MemberAccess","src":"15391:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15373:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2750,"name":"saleStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"15404:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleStatistics_$4659_storage","typeString":"struct IDappadSale.SaleStatistics storage ref"}},"id":2751,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15419:21:8","memberName":"totalInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4650,"src":"15404:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2752,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15442:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15448:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"15442:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2742,"name":"UserRefundedSale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"15329:16:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256,uint256)"}},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15329:129:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2755,"nodeType":"EmitStatement","src":"15324:134:8"},{"assignments":[2757],"declarations":[{"constant":false,"id":2757,"mutability":"mutable","name":"successfullyTransfered","nameLocation":"15474:22:8","nodeType":"VariableDeclaration","scope":2778,"src":"15469:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2756,"name":"bool","nodeType":"ElementaryTypeName","src":"15469:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2767,"initialValue":{"arguments":[{"expression":{"id":2760,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15524:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15528:6:8","memberName":"sender","nodeType":"MemberAccess","src":"15524:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2762,"name":"investmentAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"15536:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2765,"indexExpression":{"expression":{"id":2763,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15554:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15558:6:8","memberName":"sender","nodeType":"MemberAccess","src":"15554:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15536:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2758,"name":"investmentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"15499:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15515:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":423,"src":"15499:24:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15499:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15469:97:8"},{"condition":{"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15580:23:8","subExpression":{"id":2768,"name":"successfullyTransfered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"15581:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2775,"nodeType":"IfStatement","src":"15576:69:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2770,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"15612:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15619:24:8","memberName":"TokenTransferFailedError","nodeType":"MemberAccess","referencedDeclaration":4251,"src":"15612:31:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15612:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2774,"nodeType":"RevertStatement","src":"15605:40:8"}},{"expression":{"hexValue":"74727565","id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15671:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2590,"id":2777,"nodeType":"Return","src":"15664:11:8"}]},"functionSelector":"590e1ae3","id":2779,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":2585,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14031:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14035:6:8","memberName":"sender","nodeType":"MemberAccess","src":"14031:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2587,"kind":"modifierInvocation","modifierName":{"id":2584,"name":"notZeroAddress","nameLocations":["14016:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1574,"src":"14016:14:8"},"nodeType":"ModifierInvocation","src":"14016:26:8"}],"name":"refund","nameLocation":"13998:6:8","nodeType":"FunctionDefinition","parameters":{"id":2583,"nodeType":"ParameterList","parameters":[],"src":"14004:2:8"},"returnParameters":{"id":2590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2779,"src":"14052:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2588,"name":"bool","nodeType":"ElementaryTypeName","src":"14052:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14051:6:8"},"scope":3854,"src":"13989:1693:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2961,"nodeType":"Block","src":"15792:1596:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2792,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15806:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15812:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"15806:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"expression":{"id":2794,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"15825:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15830:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"15825:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":2796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15842:7:8","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":4590,"src":"15825:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15806:43:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2803,"nodeType":"IfStatement","src":"15802:82:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2798,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"15858:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15865:17:8","memberName":"SaleNotEndedError","nodeType":"MemberAccess","referencedDeclaration":4317,"src":"15858:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15858:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2802,"nodeType":"RevertStatement","src":"15851:33:8"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2808,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15932:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}],"id":2807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15924:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2806,"name":"address","nodeType":"ElementaryTypeName","src":"15924:7:8","typeDescriptions":{}}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15924:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2804,"name":"investmentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"15898:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15914:9:8","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":413,"src":"15898:25:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15898:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15942:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15898:45:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2818,"nodeType":"IfStatement","src":"15894:91:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2813,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"15952:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15959:24:8","memberName":"InsufficientBalanceError","nodeType":"MemberAccess","referencedDeclaration":4257,"src":"15952:31:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15952:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2817,"nodeType":"RevertStatement","src":"15945:40:8"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2819,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"15999:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2820,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16004:13:8","memberName":"refundDetails","nodeType":"MemberAccess","referencedDeclaration":4573,"src":"15999:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRefundDetails_$4613_storage","typeString":"struct IDappadSale.SaleRefundDetails storage ref"}},"id":2821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16018:13:8","memberName":"refundEnabled","nodeType":"MemberAccess","referencedDeclaration":4612,"src":"15999:32:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2822,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"16035:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16041:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"16035:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2824,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"16054:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2825,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16059:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"16054:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":2826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16071:7:8","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":4590,"src":"16054:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"expression":{"id":2827,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"16081:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16086:13:8","memberName":"refundDetails","nodeType":"MemberAccess","referencedDeclaration":4573,"src":"16081:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRefundDetails_$4613_storage","typeString":"struct IDappadSale.SaleRefundDetails storage ref"}},"id":2829,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16100:14:8","memberName":"refundDuration","nodeType":"MemberAccess","referencedDeclaration":4610,"src":"16081:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16054:60:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16035:79:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15999:115:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2838,"nodeType":"IfStatement","src":"15995:158:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2833,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"16123:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16130:21:8","memberName":"RefundPeriodOverError","nodeType":"MemberAccess","referencedDeclaration":4359,"src":"16123:28:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16123:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2837,"nodeType":"RevertStatement","src":"16116:37:8"}},{"assignments":[2840],"declarations":[{"constant":false,"id":2840,"mutability":"mutable","name":"balance","nameLocation":"16172:7:8","nodeType":"VariableDeclaration","scope":2961,"src":"16164:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2839,"name":"uint256","nodeType":"ElementaryTypeName","src":"16164:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2848,"initialValue":{"arguments":[{"arguments":[{"id":2845,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16216:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}],"id":2844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16208:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2843,"name":"address","nodeType":"ElementaryTypeName","src":"16208:7:8","typeDescriptions":{}}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16208:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2841,"name":"investmentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"16182:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16198:9:8","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":413,"src":"16182:25:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16182:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16164:58:8"},{"assignments":[2850],"declarations":[{"constant":false,"id":2850,"mutability":"mutable","name":"projectOwnerFeeAmount","nameLocation":"16240:21:8","nodeType":"VariableDeclaration","scope":2961,"src":"16232:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2849,"name":"uint256","nodeType":"ElementaryTypeName","src":"16232:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2859,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2851,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"16265:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"expression":{"id":2852,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"16275:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2853,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16280:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"16275:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":2854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16292:25:8","memberName":"projectOwnerFeePercentage","nodeType":"MemberAccess","referencedDeclaration":4596,"src":"16275:42:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16265:52:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2856,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16264:54:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16321:5:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"16264:62:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16232:94:8"},{"assignments":[2861],"declarations":[{"constant":false,"id":2861,"mutability":"mutable","name":"launchpadFeeAmount","nameLocation":"16344:18:8","nodeType":"VariableDeclaration","scope":2961,"src":"16336:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2860,"name":"uint256","nodeType":"ElementaryTypeName","src":"16336:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2865,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2862,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"16365:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2863,"name":"projectOwnerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"16375:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16365:31:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16336:60:8"},{"assignments":[2867],"declarations":[{"constant":false,"id":2867,"mutability":"mutable","name":"successfullyTransfered","nameLocation":"16412:22:8","nodeType":"VariableDeclaration","scope":2961,"src":"16407:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2866,"name":"bool","nodeType":"ElementaryTypeName","src":"16407:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2875,"initialValue":{"arguments":[{"expression":{"expression":{"id":2870,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"16462:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2871,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16467:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"16462:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":2872,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16481:22:8","memberName":"projectOwnerFeeAddress","nodeType":"MemberAccess","referencedDeclaration":4647,"src":"16462:41:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2873,"name":"projectOwnerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"16505:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2868,"name":"investmentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"16437:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16453:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":423,"src":"16437:24:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16437:90:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"16407:120:8"},{"condition":{"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16541:23:8","subExpression":{"id":2876,"name":"successfullyTransfered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"16542:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2883,"nodeType":"IfStatement","src":"16537:69:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2878,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"16573:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16580:24:8","memberName":"TokenTransferFailedError","nodeType":"MemberAccess","referencedDeclaration":4251,"src":"16573:31:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16573:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2882,"nodeType":"RevertStatement","src":"16566:40:8"}},{"assignments":[2885],"declarations":[{"constant":false,"id":2885,"mutability":"mutable","name":"successfullyTransferedSecond","nameLocation":"16622:28:8","nodeType":"VariableDeclaration","scope":2961,"src":"16617:33:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2884,"name":"bool","nodeType":"ElementaryTypeName","src":"16617:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2893,"initialValue":{"arguments":[{"expression":{"expression":{"id":2888,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"16678:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2889,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16683:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"16678:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":2890,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16697:19:8","memberName":"launchpadFeeAddress","nodeType":"MemberAccess","referencedDeclaration":4645,"src":"16678:38:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2891,"name":"launchpadFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"16718:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2886,"name":"investmentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"16653:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16669:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":423,"src":"16653:24:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16653:84:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"16617:120:8"},{"condition":{"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16751:29:8","subExpression":{"id":2894,"name":"successfullyTransferedSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"16752:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2901,"nodeType":"IfStatement","src":"16747:75:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2896,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"16789:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16796:24:8","memberName":"TokenTransferFailedError","nodeType":"MemberAccess","referencedDeclaration":4251,"src":"16789:31:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16789:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2900,"nodeType":"RevertStatement","src":"16782:40:8"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2902,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"16837:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16842:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"16837:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":2904,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16856:20:8","memberName":"registerTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4629,"src":"16837:39:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16888:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16880:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2905,"name":"address","nodeType":"ElementaryTypeName","src":"16880:7:8","typeDescriptions":{}}},"id":2908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16880:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16837:53:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2914,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16926:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}],"id":2913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16918:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2912,"name":"address","nodeType":"ElementaryTypeName","src":"16918:7:8","typeDescriptions":{}}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16918:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2910,"name":"registerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"16894:13:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16908:9:8","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":413,"src":"16894:23:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16894:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16935:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16894:42:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16837:99:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2945,"nodeType":"IfStatement","src":"16833:355:8","trueBody":{"id":2944,"nodeType":"Block","src":"16938:250:8","statements":[{"assignments":[2921],"declarations":[{"constant":false,"id":2921,"mutability":"mutable","name":"successfullyTransferedThird","nameLocation":"16957:27:8","nodeType":"VariableDeclaration","scope":2944,"src":"16952:32:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2920,"name":"bool","nodeType":"ElementaryTypeName","src":"16952:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2935,"initialValue":{"arguments":[{"expression":{"expression":{"id":2924,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"17010:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2925,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17015:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"17010:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":2926,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17029:19:8","memberName":"launchpadFeeAddress","nodeType":"MemberAccess","referencedDeclaration":4645,"src":"17010:38:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":2931,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17082:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}],"id":2930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17074:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2929,"name":"address","nodeType":"ElementaryTypeName","src":"17074:7:8","typeDescriptions":{}}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17074:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2927,"name":"registerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"17050:13:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17064:9:8","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":413,"src":"17050:23:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17050:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2922,"name":"registerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"16987:13:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17001:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":423,"src":"16987:22:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16987:102:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"16952:137:8"},{"condition":{"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17107:28:8","subExpression":{"id":2936,"name":"successfullyTransferedThird","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"17108:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2943,"nodeType":"IfStatement","src":"17103:74:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2938,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"17144:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17151:24:8","memberName":"TokenTransferFailedError","nodeType":"MemberAccess","referencedDeclaration":4251,"src":"17144:31:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17144:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2942,"nodeType":"RevertStatement","src":"17137:40:8"}}]}},{"eventCall":{"arguments":[{"expression":{"expression":{"id":2947,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"17217:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2948,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17222:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"17217:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":2949,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17236:22:8","memberName":"projectOwnerFeeAddress","nodeType":"MemberAccess","referencedDeclaration":4647,"src":"17217:41:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2950,"name":"projectOwnerFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"17260:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":2951,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"17283:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17288:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"17283:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":2953,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17302:19:8","memberName":"launchpadFeeAddress","nodeType":"MemberAccess","referencedDeclaration":4645,"src":"17283:38:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2954,"name":"launchpadFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"17323:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2955,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"17343:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17349:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"17343:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2946,"name":"SaleCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"17203:13:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,address,uint256,uint256)"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17203:156:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2958,"nodeType":"EmitStatement","src":"17198:161:8"},{"expression":{"hexValue":"74727565","id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17377:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2791,"id":2960,"nodeType":"Return","src":"17370:11:8"}]},"functionSelector":"4d461ed1","id":2962,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":2782,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15736:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15740:6:8","memberName":"sender","nodeType":"MemberAccess","src":"15736:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2784,"kind":"modifierInvocation","modifierName":{"id":2781,"name":"notZeroAddress","nameLocations":["15721:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1574,"src":"15721:14:8"},"nodeType":"ModifierInvocation","src":"15721:26:8"},{"arguments":[{"expression":{"id":2786,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15765:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15769:6:8","memberName":"sender","nodeType":"MemberAccess","src":"15765:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2788,"kind":"modifierInvocation","modifierName":{"id":2785,"name":"onlyOwnerOrAdmin","nameLocations":["15748:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"15748:16:8"},"nodeType":"ModifierInvocation","src":"15748:28:8"}],"name":"completeSale","nameLocation":"15697:12:8","nodeType":"FunctionDefinition","parameters":{"id":2780,"nodeType":"ParameterList","parameters":[],"src":"15709:2:8"},"returnParameters":{"id":2791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2962,"src":"15786:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2789,"name":"bool","nodeType":"ElementaryTypeName","src":"15786:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15785:6:8"},"scope":3854,"src":"15688:1700:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3012,"nodeType":"Block","src":"17507:315:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2975,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"17521:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17527:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"17521:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"expression":{"id":2977,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"17540:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":2978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17545:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"17540:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":2979,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17557:7:8","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":4590,"src":"17540:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17521:43:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2986,"nodeType":"IfStatement","src":"17517:82:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2981,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"17573:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17580:17:8","memberName":"SaleNotEndedError","nodeType":"MemberAccess","referencedDeclaration":4317,"src":"17573:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17573:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2985,"nodeType":"RevertStatement","src":"17566:33:8"}},{"assignments":[2988],"declarations":[{"constant":false,"id":2988,"mutability":"mutable","name":"successfullyTransfered","nameLocation":"17615:22:8","nodeType":"VariableDeclaration","scope":3012,"src":"17610:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2987,"name":"bool","nodeType":"ElementaryTypeName","src":"17610:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3001,"initialValue":{"arguments":[{"expression":{"id":2991,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17663:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17667:6:8","memberName":"sender","nodeType":"MemberAccess","src":"17663:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":2997,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17707:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}],"id":2996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17699:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2995,"name":"address","nodeType":"ElementaryTypeName","src":"17699:7:8","typeDescriptions":{}}},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17699:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2993,"name":"registerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"17675:13:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17689:9:8","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":413,"src":"17675:23:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17675:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2989,"name":"registerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"17640:13:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17654:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":423,"src":"17640:22:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17640:74:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"17610:104:8"},{"condition":{"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17728:23:8","subExpression":{"id":3002,"name":"successfullyTransfered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"17729:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3009,"nodeType":"IfStatement","src":"17724:69:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3004,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"17760:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17767:24:8","memberName":"TokenTransferFailedError","nodeType":"MemberAccess","referencedDeclaration":4251,"src":"17760:31:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17760:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3008,"nodeType":"RevertStatement","src":"17753:40:8"}},{"expression":{"hexValue":"74727565","id":3010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17811:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2974,"id":3011,"nodeType":"Return","src":"17804:11:8"}]},"functionSelector":"f27c0945","id":3013,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":2965,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17451:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17455:6:8","memberName":"sender","nodeType":"MemberAccess","src":"17451:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2967,"kind":"modifierInvocation","modifierName":{"id":2964,"name":"notZeroAddress","nameLocations":["17436:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1574,"src":"17436:14:8"},"nodeType":"ModifierInvocation","src":"17436:26:8"},{"arguments":[{"expression":{"id":2969,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17480:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17484:6:8","memberName":"sender","nodeType":"MemberAccess","src":"17480:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2971,"kind":"modifierInvocation","modifierName":{"id":2968,"name":"onlyOwnerOrAdmin","nameLocations":["17463:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"17463:16:8"},"nodeType":"ModifierInvocation","src":"17463:28:8"}],"name":"withdrawRegisterToken","nameLocation":"17403:21:8","nodeType":"FunctionDefinition","parameters":{"id":2963,"nodeType":"ParameterList","parameters":[],"src":"17424:2:8"},"returnParameters":{"id":2974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3013,"src":"17501:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2972,"name":"bool","nodeType":"ElementaryTypeName","src":"17501:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17500:6:8"},"scope":3854,"src":"17394:428:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3051,"nodeType":"Block","src":"17933:230:8","statements":[{"assignments":[3027],"declarations":[{"constant":false,"id":3027,"mutability":"mutable","name":"successfullyTransferedIT","nameLocation":"17948:24:8","nodeType":"VariableDeclaration","scope":3051,"src":"17943:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3026,"name":"bool","nodeType":"ElementaryTypeName","src":"17943:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3040,"initialValue":{"arguments":[{"expression":{"id":3030,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18000:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18004:6:8","memberName":"sender","nodeType":"MemberAccess","src":"18000:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":3036,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"18046:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}],"id":3035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18038:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3034,"name":"address","nodeType":"ElementaryTypeName","src":"18038:7:8","typeDescriptions":{}}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18038:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3032,"name":"investmentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"18012:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18028:9:8","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":413,"src":"18012:25:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18012:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3028,"name":"investmentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"17975:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17991:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":423,"src":"17975:24:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17975:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"17943:110:8"},{"condition":{"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18067:25:8","subExpression":{"id":3041,"name":"successfullyTransferedIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"18068:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3048,"nodeType":"IfStatement","src":"18063:71:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3043,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"18101:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18108:24:8","memberName":"TokenTransferFailedError","nodeType":"MemberAccess","referencedDeclaration":4251,"src":"18101:31:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18101:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3047,"nodeType":"RevertStatement","src":"18094:40:8"}},{"expression":{"hexValue":"74727565","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18152:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3025,"id":3050,"nodeType":"Return","src":"18145:11:8"}]},"functionSelector":"9a68404d","id":3052,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":3016,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17877:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17881:6:8","memberName":"sender","nodeType":"MemberAccess","src":"17877:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3018,"kind":"modifierInvocation","modifierName":{"id":3015,"name":"notZeroAddress","nameLocations":["17862:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1574,"src":"17862:14:8"},"nodeType":"ModifierInvocation","src":"17862:26:8"},{"arguments":[{"expression":{"id":3020,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17906:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17910:6:8","memberName":"sender","nodeType":"MemberAccess","src":"17906:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3022,"kind":"modifierInvocation","modifierName":{"id":3019,"name":"onlyOwnerOrAdmin","nameLocations":["17889:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"17889:16:8"},"nodeType":"ModifierInvocation","src":"17889:28:8"}],"name":"emergencyOnly","nameLocation":"17837:13:8","nodeType":"FunctionDefinition","parameters":{"id":3014,"nodeType":"ParameterList","parameters":[],"src":"17850:2:8"},"returnParameters":{"id":3025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3052,"src":"17927:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3023,"name":"bool","nodeType":"ElementaryTypeName","src":"17927:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17926:6:8"},"scope":3854,"src":"17828:335:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3077,"nodeType":"Block","src":"18262:124:8","statements":[{"expression":{"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":3063,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"18272:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":3066,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18277:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"18272:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":3067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18289:10:8","memberName":"salePaused","nodeType":"MemberAccess","referencedDeclaration":4600,"src":"18272:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3068,"name":"salePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"18302:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18272:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3070,"nodeType":"ExpressionStatement","src":"18272:40:8"},{"eventCall":{"arguments":[{"id":3072,"name":"salePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"18346:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3071,"name":"SalePausedUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"18328:17:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18328:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3074,"nodeType":"EmitStatement","src":"18323:34:8"},{"expression":{"hexValue":"74727565","id":3075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18375:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3062,"id":3076,"nodeType":"Return","src":"18368:11:8"}]},"functionSelector":"8d92becd","id":3078,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":3057,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18235:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18239:6:8","memberName":"sender","nodeType":"MemberAccess","src":"18235:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3059,"kind":"modifierInvocation","modifierName":{"id":3056,"name":"onlyOwnerOrAdmin","nameLocations":["18218:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"18218:16:8"},"nodeType":"ModifierInvocation","src":"18218:28:8"}],"name":"setSalePaused","nameLocation":"18178:13:8","nodeType":"FunctionDefinition","parameters":{"id":3055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3054,"mutability":"mutable","name":"salePaused","nameLocation":"18197:10:8","nodeType":"VariableDeclaration","scope":3078,"src":"18192:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3053,"name":"bool","nodeType":"ElementaryTypeName","src":"18192:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18191:17:8"},"returnParameters":{"id":3062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3078,"src":"18256:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3060,"name":"bool","nodeType":"ElementaryTypeName","src":"18256:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18255:6:8"},"scope":3854,"src":"18169:217:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3117,"nodeType":"Block","src":"18505:300:8","statements":[{"expression":{"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":3089,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"18515:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":3092,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18520:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"18515:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":3093,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18534:22:8","memberName":"vestingContractAddress","nodeType":"MemberAccess","referencedDeclaration":4639,"src":"18515:41:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3094,"name":"vestingContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"18559:22:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18515:66:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3096,"nodeType":"ExpressionStatement","src":"18515:66:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3097,"name":"vestingContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"18596:22:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18630:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18622:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3098,"name":"address","nodeType":"ElementaryTypeName","src":"18622:7:8","typeDescriptions":{}}},"id":3101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18622:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18596:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3110,"nodeType":"IfStatement","src":"18592:123:8","trueBody":{"id":3109,"nodeType":"Block","src":"18634:81:8","statements":[{"expression":{"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3103,"name":"vestingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"18648:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadVesting_$4800","typeString":"contract IDappadVesting"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3105,"name":"vestingContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"18681:22:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3104,"name":"IDappadVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"18666:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDappadVesting_$4800_$","typeString":"type(contract IDappadVesting)"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18666:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IDappadVesting_$4800","typeString":"contract IDappadVesting"}},"src":"18648:56:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadVesting_$4800","typeString":"contract IDappadVesting"}},"id":3108,"nodeType":"ExpressionStatement","src":"18648:56:8"}]}},{"eventCall":{"arguments":[{"id":3112,"name":"vestingContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"18753:22:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3111,"name":"VestingContractUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"18730:22:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18730:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3114,"nodeType":"EmitStatement","src":"18725:51:8"},{"expression":{"hexValue":"74727565","id":3115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18794:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3088,"id":3116,"nodeType":"Return","src":"18787:11:8"}]},"functionSelector":"74991569","id":3118,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":3083,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18478:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18482:6:8","memberName":"sender","nodeType":"MemberAccess","src":"18478:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3085,"kind":"modifierInvocation","modifierName":{"id":3082,"name":"onlyOwnerOrAdmin","nameLocations":["18461:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"18461:16:8"},"nodeType":"ModifierInvocation","src":"18461:28:8"}],"name":"setVestingContract","nameLocation":"18401:18:8","nodeType":"FunctionDefinition","parameters":{"id":3081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3080,"mutability":"mutable","name":"vestingContractAddress","nameLocation":"18428:22:8","nodeType":"VariableDeclaration","scope":3118,"src":"18420:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3079,"name":"address","nodeType":"ElementaryTypeName","src":"18420:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18419:32:8"},"returnParameters":{"id":3088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3118,"src":"18499:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3086,"name":"bool","nodeType":"ElementaryTypeName","src":"18499:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18498:6:8"},"scope":3854,"src":"18392:413:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3157,"nodeType":"Block","src":"18940:364:8","statements":[{"expression":{"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":3129,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"18950:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":3132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18955:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"18950:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":3133,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18969:30:8","memberName":"stakeControllerContractAddress","nodeType":"MemberAccess","referencedDeclaration":4637,"src":"18950:49:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3134,"name":"stakeControllerContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"19002:30:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18950:82:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3136,"nodeType":"ExpressionStatement","src":"18950:82:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3137,"name":"stakeControllerContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"19047:30:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19089:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19081:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3138,"name":"address","nodeType":"ElementaryTypeName","src":"19081:7:8","typeDescriptions":{}}},"id":3141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19081:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19047:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3150,"nodeType":"IfStatement","src":"19043:155:8","trueBody":{"id":3149,"nodeType":"Block","src":"19093:105:8","statements":[{"expression":{"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3143,"name":"stakeControllerContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"19107:23:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadStakeController_$4487","typeString":"contract IDappadStakeController"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3145,"name":"stakeControllerContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"19156:30:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3144,"name":"IDappadStakeController","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"19133:22:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDappadStakeController_$4487_$","typeString":"type(contract IDappadStakeController)"}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19133:54:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IDappadStakeController_$4487","typeString":"contract IDappadStakeController"}},"src":"19107:80:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadStakeController_$4487","typeString":"contract IDappadStakeController"}},"id":3148,"nodeType":"ExpressionStatement","src":"19107:80:8"}]}},{"eventCall":{"arguments":[{"id":3152,"name":"stakeControllerContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"19244:30:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3151,"name":"StakeControllerContractUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"19213:30:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19213:62:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3154,"nodeType":"EmitStatement","src":"19208:67:8"},{"expression":{"hexValue":"74727565","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19293:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3128,"id":3156,"nodeType":"Return","src":"19286:11:8"}]},"functionSelector":"a798149f","id":3158,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":3123,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18913:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18917:6:8","memberName":"sender","nodeType":"MemberAccess","src":"18913:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3125,"kind":"modifierInvocation","modifierName":{"id":3122,"name":"onlyOwnerOrAdmin","nameLocations":["18896:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"18896:16:8"},"nodeType":"ModifierInvocation","src":"18896:28:8"}],"name":"setStakeControllerContract","nameLocation":"18820:26:8","nodeType":"FunctionDefinition","parameters":{"id":3121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3120,"mutability":"mutable","name":"stakeControllerContractAddress","nameLocation":"18855:30:8","nodeType":"VariableDeclaration","scope":3158,"src":"18847:38:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3119,"name":"address","nodeType":"ElementaryTypeName","src":"18847:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18846:40:8"},"returnParameters":{"id":3128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3158,"src":"18934:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3126,"name":"bool","nodeType":"ElementaryTypeName","src":"18934:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18933:6:8"},"scope":3854,"src":"18811:493:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3246,"nodeType":"Block","src":"19440:832:8","statements":[{"expression":{"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3170,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"19450:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":3172,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19455:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"19450:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3173,"name":"newSaleAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"19471:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}},"src":"19450:37:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":3175,"nodeType":"ExpressionStatement","src":"19450:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3176,"name":"newSaleAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"19502:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}},"id":3177,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19519:20:8","memberName":"registerTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4629,"src":"19502:37:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19551:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19543:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3178,"name":"address","nodeType":"ElementaryTypeName","src":"19543:7:8","typeDescriptions":{}}},"id":3181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19543:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19502:51:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3191,"nodeType":"IfStatement","src":"19498:151:8","trueBody":{"id":3190,"nodeType":"Block","src":"19555:94:8","statements":[{"expression":{"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3183,"name":"registerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"19569:13:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3185,"name":"newSaleAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"19600:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}},"id":3186,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19617:20:8","memberName":"registerTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4629,"src":"19600:37:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3184,"name":"IERC20Extented","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"19585:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Extented_$4404_$","typeString":"type(contract IERC20Extented)"}},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19585:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"src":"19569:69:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":3189,"nodeType":"ExpressionStatement","src":"19569:69:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3192,"name":"newSaleAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"19663:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}},"id":3193,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19680:22:8","memberName":"investmentTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4631,"src":"19663:39:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19714:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19706:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3194,"name":"address","nodeType":"ElementaryTypeName","src":"19706:7:8","typeDescriptions":{}}},"id":3197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19706:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19663:53:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3207,"nodeType":"IfStatement","src":"19659:157:8","trueBody":{"id":3206,"nodeType":"Block","src":"19718:98:8","statements":[{"expression":{"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3199,"name":"investmentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"19732:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3201,"name":"newSaleAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"19765:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}},"id":3202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19782:22:8","memberName":"investmentTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4631,"src":"19765:39:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3200,"name":"IERC20Extented","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"19750:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Extented_$4404_$","typeString":"type(contract IERC20Extented)"}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19750:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"src":"19732:73:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":3205,"nodeType":"ExpressionStatement","src":"19732:73:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3208,"name":"newSaleAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"19830:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}},"id":3209,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19847:30:8","memberName":"stakeControllerContractAddress","nodeType":"MemberAccess","referencedDeclaration":4637,"src":"19830:47:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19889:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19881:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3210,"name":"address","nodeType":"ElementaryTypeName","src":"19881:7:8","typeDescriptions":{}}},"id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19881:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19830:61:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3223,"nodeType":"IfStatement","src":"19826:189:8","trueBody":{"id":3222,"nodeType":"Block","src":"19893:122:8","statements":[{"expression":{"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3215,"name":"stakeControllerContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"19907:23:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadStakeController_$4487","typeString":"contract IDappadStakeController"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3217,"name":"newSaleAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"19956:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}},"id":3218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19973:30:8","memberName":"stakeControllerContractAddress","nodeType":"MemberAccess","referencedDeclaration":4637,"src":"19956:47:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3216,"name":"IDappadStakeController","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"19933:22:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDappadStakeController_$4487_$","typeString":"type(contract IDappadStakeController)"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19933:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IDappadStakeController_$4487","typeString":"contract IDappadStakeController"}},"src":"19907:97:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadStakeController_$4487","typeString":"contract IDappadStakeController"}},"id":3221,"nodeType":"ExpressionStatement","src":"19907:97:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3224,"name":"newSaleAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"20037:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}},"id":3225,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20054:22:8","memberName":"vestingContractAddress","nodeType":"MemberAccess","referencedDeclaration":4639,"src":"20037:39:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20088:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20080:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3226,"name":"address","nodeType":"ElementaryTypeName","src":"20080:7:8","typeDescriptions":{}}},"id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20080:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20037:53:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3239,"nodeType":"IfStatement","src":"20033:157:8","trueBody":{"id":3238,"nodeType":"Block","src":"20092:98:8","statements":[{"expression":{"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3231,"name":"vestingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"20106:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadVesting_$4800","typeString":"contract IDappadVesting"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3233,"name":"newSaleAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"20139:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}},"id":3234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20156:22:8","memberName":"vestingContractAddress","nodeType":"MemberAccess","referencedDeclaration":4639,"src":"20139:39:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3232,"name":"IDappadVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"20124:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDappadVesting_$4800_$","typeString":"type(contract IDappadVesting)"}},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20124:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IDappadVesting_$4800","typeString":"contract IDappadVesting"}},"src":"20106:73:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadVesting_$4800","typeString":"contract IDappadVesting"}},"id":3237,"nodeType":"ExpressionStatement","src":"20106:73:8"}]}},{"eventCall":{"arguments":[{"id":3241,"name":"newSaleAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"20226:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}],"id":3240,"name":"SaleAddressesUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"20205:20:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$_SaleAddresses_$4648_memory_ptr_$returns$__$","typeString":"function (struct IDappadSale.SaleAddresses memory)"}},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20205:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3243,"nodeType":"EmitStatement","src":"20200:43:8"},{"expression":{"hexValue":"74727565","id":3244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20261:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3169,"id":3245,"nodeType":"Return","src":"20254:11:8"}]},"functionSelector":"377d5d17","id":3247,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":3164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19413:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19417:6:8","memberName":"sender","nodeType":"MemberAccess","src":"19413:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3166,"kind":"modifierInvocation","modifierName":{"id":3163,"name":"onlyOwnerOrAdmin","nameLocations":["19396:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"19396:16:8"},"nodeType":"ModifierInvocation","src":"19396:28:8"}],"name":"setSaleAddresses","nameLocation":"19319:16:8","nodeType":"FunctionDefinition","parameters":{"id":3162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3161,"mutability":"mutable","name":"newSaleAddresses","nameLocation":"19369:16:8","nodeType":"VariableDeclaration","scope":3247,"src":"19336:49:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses"},"typeName":{"id":3160,"nodeType":"UserDefinedTypeName","pathNode":{"id":3159,"name":"IDappadSale.SaleAddresses","nameLocations":["19336:11:8","19348:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":4648,"src":"19336:25:8"},"referencedDeclaration":4648,"src":"19336:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage_ptr","typeString":"struct IDappadSale.SaleAddresses"}},"visibility":"internal"}],"src":"19335:51:8"},"returnParameters":{"id":3169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3247,"src":"19434:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3167,"name":"bool","nodeType":"ElementaryTypeName","src":"19434:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19433:6:8"},"scope":3854,"src":"19310:962:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3271,"nodeType":"Block","src":"20402:122:8","statements":[{"expression":{"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3259,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"20412:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":3261,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20417:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"20412:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3262,"name":"newSaleDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"20431:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_memory_ptr","typeString":"struct IDappadSale.SaleDetails memory"}},"src":"20412:33:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":3264,"nodeType":"ExpressionStatement","src":"20412:33:8"},{"eventCall":{"arguments":[{"id":3266,"name":"newSaleDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"20480:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_memory_ptr","typeString":"struct IDappadSale.SaleDetails memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SaleDetails_$4603_memory_ptr","typeString":"struct IDappadSale.SaleDetails memory"}],"id":3265,"name":"SaleDetailsUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"20461:18:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$_SaleDetails_$4603_memory_ptr_$returns$__$","typeString":"function (struct IDappadSale.SaleDetails memory)"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20461:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3268,"nodeType":"EmitStatement","src":"20456:39:8"},{"expression":{"hexValue":"74727565","id":3269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20513:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3258,"id":3270,"nodeType":"Return","src":"20506:11:8"}]},"functionSelector":"3411a8cb","id":3272,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":3253,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20375:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20379:6:8","memberName":"sender","nodeType":"MemberAccess","src":"20375:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3255,"kind":"modifierInvocation","modifierName":{"id":3252,"name":"onlyOwnerOrAdmin","nameLocations":["20358:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"20358:16:8"},"nodeType":"ModifierInvocation","src":"20358:28:8"}],"name":"setSaleDetails","nameLocation":"20287:14:8","nodeType":"FunctionDefinition","parameters":{"id":3251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3250,"mutability":"mutable","name":"newSaleDetails","nameLocation":"20333:14:8","nodeType":"VariableDeclaration","scope":3272,"src":"20302:45:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_memory_ptr","typeString":"struct IDappadSale.SaleDetails"},"typeName":{"id":3249,"nodeType":"UserDefinedTypeName","pathNode":{"id":3248,"name":"IDappadSale.SaleDetails","nameLocations":["20302:11:8","20314:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":4603,"src":"20302:23:8"},"referencedDeclaration":4603,"src":"20302:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage_ptr","typeString":"struct IDappadSale.SaleDetails"}},"visibility":"internal"}],"src":"20301:47:8"},"returnParameters":{"id":3258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3272,"src":"20396:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3256,"name":"bool","nodeType":"ElementaryTypeName","src":"20396:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20395:6:8"},"scope":3854,"src":"20278:246:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3296,"nodeType":"Block","src":"20662:126:8","statements":[{"expression":{"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3284,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"20672:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":3286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20677:11:8","memberName":"fcfsDetails","nodeType":"MemberAccess","referencedDeclaration":4570,"src":"20672:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleFcfsDetails_$4608_storage","typeString":"struct IDappadSale.SaleFcfsDetails storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3287,"name":"newFcfsDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3275,"src":"20691:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleFcfsDetails_$4608_memory_ptr","typeString":"struct IDappadSale.SaleFcfsDetails memory"}},"src":"20672:33:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleFcfsDetails_$4608_storage","typeString":"struct IDappadSale.SaleFcfsDetails storage ref"}},"id":3289,"nodeType":"ExpressionStatement","src":"20672:33:8"},{"eventCall":{"arguments":[{"id":3291,"name":"newFcfsDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3275,"src":"20744:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleFcfsDetails_$4608_memory_ptr","typeString":"struct IDappadSale.SaleFcfsDetails memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SaleFcfsDetails_$4608_memory_ptr","typeString":"struct IDappadSale.SaleFcfsDetails memory"}],"id":3290,"name":"SaleFcfsDetailsUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"20721:22:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$_SaleFcfsDetails_$4608_memory_ptr_$returns$__$","typeString":"function (struct IDappadSale.SaleFcfsDetails memory)"}},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20721:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3293,"nodeType":"EmitStatement","src":"20716:43:8"},{"expression":{"hexValue":"74727565","id":3294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20777:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3283,"id":3295,"nodeType":"Return","src":"20770:11:8"}]},"functionSelector":"054c9579","id":3297,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":3278,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20635:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20639:6:8","memberName":"sender","nodeType":"MemberAccess","src":"20635:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3280,"kind":"modifierInvocation","modifierName":{"id":3277,"name":"onlyOwnerOrAdmin","nameLocations":["20618:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"20618:16:8"},"nodeType":"ModifierInvocation","src":"20618:28:8"}],"name":"setSaleFcfsDetails","nameLocation":"20539:18:8","nodeType":"FunctionDefinition","parameters":{"id":3276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3275,"mutability":"mutable","name":"newFcfsDetails","nameLocation":"20593:14:8","nodeType":"VariableDeclaration","scope":3297,"src":"20558:49:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SaleFcfsDetails_$4608_memory_ptr","typeString":"struct IDappadSale.SaleFcfsDetails"},"typeName":{"id":3274,"nodeType":"UserDefinedTypeName","pathNode":{"id":3273,"name":"IDappadSale.SaleFcfsDetails","nameLocations":["20558:11:8","20570:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":4608,"src":"20558:27:8"},"referencedDeclaration":4608,"src":"20558:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleFcfsDetails_$4608_storage_ptr","typeString":"struct IDappadSale.SaleFcfsDetails"}},"visibility":"internal"}],"src":"20557:51:8"},"returnParameters":{"id":3283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3297,"src":"20656:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3281,"name":"bool","nodeType":"ElementaryTypeName","src":"20656:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20655:6:8"},"scope":3854,"src":"20530:258:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3321,"nodeType":"Block","src":"20928:134:8","statements":[{"expression":{"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3309,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"20938:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":3311,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20943:13:8","memberName":"refundDetails","nodeType":"MemberAccess","referencedDeclaration":4573,"src":"20938:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRefundDetails_$4613_storage","typeString":"struct IDappadSale.SaleRefundDetails storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3312,"name":"newRefundDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"20959:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRefundDetails_$4613_memory_ptr","typeString":"struct IDappadSale.SaleRefundDetails memory"}},"src":"20938:37:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRefundDetails_$4613_storage","typeString":"struct IDappadSale.SaleRefundDetails storage ref"}},"id":3314,"nodeType":"ExpressionStatement","src":"20938:37:8"},{"eventCall":{"arguments":[{"id":3316,"name":"newRefundDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"21016:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRefundDetails_$4613_memory_ptr","typeString":"struct IDappadSale.SaleRefundDetails memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SaleRefundDetails_$4613_memory_ptr","typeString":"struct IDappadSale.SaleRefundDetails memory"}],"id":3315,"name":"SaleRefundDetailsUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"20991:24:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$_SaleRefundDetails_$4613_memory_ptr_$returns$__$","typeString":"function (struct IDappadSale.SaleRefundDetails memory)"}},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20991:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3318,"nodeType":"EmitStatement","src":"20986:47:8"},{"expression":{"hexValue":"74727565","id":3319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21051:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3308,"id":3320,"nodeType":"Return","src":"21044:11:8"}]},"functionSelector":"3a5bbce7","id":3322,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":3303,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20901:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20905:6:8","memberName":"sender","nodeType":"MemberAccess","src":"20901:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3305,"kind":"modifierInvocation","modifierName":{"id":3302,"name":"onlyOwnerOrAdmin","nameLocations":["20884:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"20884:16:8"},"nodeType":"ModifierInvocation","src":"20884:28:8"}],"name":"setRefundDetails","nameLocation":"20803:16:8","nodeType":"FunctionDefinition","parameters":{"id":3301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3300,"mutability":"mutable","name":"newRefundDetails","nameLocation":"20857:16:8","nodeType":"VariableDeclaration","scope":3322,"src":"20820:53:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRefundDetails_$4613_memory_ptr","typeString":"struct IDappadSale.SaleRefundDetails"},"typeName":{"id":3299,"nodeType":"UserDefinedTypeName","pathNode":{"id":3298,"name":"IDappadSale.SaleRefundDetails","nameLocations":["20820:11:8","20832:17:8"],"nodeType":"IdentifierPath","referencedDeclaration":4613,"src":"20820:29:8"},"referencedDeclaration":4613,"src":"20820:29:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRefundDetails_$4613_storage_ptr","typeString":"struct IDappadSale.SaleRefundDetails"}},"visibility":"internal"}],"src":"20819:55:8"},"returnParameters":{"id":3308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3322,"src":"20922:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3306,"name":"bool","nodeType":"ElementaryTypeName","src":"20922:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20921:6:8"},"scope":3854,"src":"20794:268:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3346,"nodeType":"Block","src":"21202:134:8","statements":[{"expression":{"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3334,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"21212:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":3336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"21217:13:8","memberName":"ticketDetails","nodeType":"MemberAccess","referencedDeclaration":4576,"src":"21212:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTicketDetails_$4618_storage","typeString":"struct IDappadSale.SaleTicketDetails storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3337,"name":"newTicketDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"21233:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTicketDetails_$4618_memory_ptr","typeString":"struct IDappadSale.SaleTicketDetails memory"}},"src":"21212:37:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTicketDetails_$4618_storage","typeString":"struct IDappadSale.SaleTicketDetails storage ref"}},"id":3339,"nodeType":"ExpressionStatement","src":"21212:37:8"},{"eventCall":{"arguments":[{"id":3341,"name":"newTicketDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"21290:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTicketDetails_$4618_memory_ptr","typeString":"struct IDappadSale.SaleTicketDetails memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SaleTicketDetails_$4618_memory_ptr","typeString":"struct IDappadSale.SaleTicketDetails memory"}],"id":3340,"name":"SaleTicketDetailsUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"21265:24:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$_SaleTicketDetails_$4618_memory_ptr_$returns$__$","typeString":"function (struct IDappadSale.SaleTicketDetails memory)"}},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21265:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3343,"nodeType":"EmitStatement","src":"21260:47:8"},{"expression":{"hexValue":"74727565","id":3344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21325:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3333,"id":3345,"nodeType":"Return","src":"21318:11:8"}]},"functionSelector":"b26efbbc","id":3347,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":3328,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21175:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21179:6:8","memberName":"sender","nodeType":"MemberAccess","src":"21175:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3330,"kind":"modifierInvocation","modifierName":{"id":3327,"name":"onlyOwnerOrAdmin","nameLocations":["21158:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"21158:16:8"},"nodeType":"ModifierInvocation","src":"21158:28:8"}],"name":"setTicketDetails","nameLocation":"21077:16:8","nodeType":"FunctionDefinition","parameters":{"id":3326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3325,"mutability":"mutable","name":"newTicketDetails","nameLocation":"21131:16:8","nodeType":"VariableDeclaration","scope":3347,"src":"21094:53:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTicketDetails_$4618_memory_ptr","typeString":"struct IDappadSale.SaleTicketDetails"},"typeName":{"id":3324,"nodeType":"UserDefinedTypeName","pathNode":{"id":3323,"name":"IDappadSale.SaleTicketDetails","nameLocations":["21094:11:8","21106:17:8"],"nodeType":"IdentifierPath","referencedDeclaration":4618,"src":"21094:29:8"},"referencedDeclaration":4618,"src":"21094:29:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTicketDetails_$4618_storage_ptr","typeString":"struct IDappadSale.SaleTicketDetails"}},"visibility":"internal"}],"src":"21093:55:8"},"returnParameters":{"id":3333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3347,"src":"21196:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3331,"name":"bool","nodeType":"ElementaryTypeName","src":"21196:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21195:6:8"},"scope":3854,"src":"21068:268:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3374,"nodeType":"Block","src":"21489:143:8","statements":[{"expression":{"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3361,"name":"tierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"21499:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SaleTierDetails_$4674_storage_$","typeString":"mapping(uint256 => struct IDappadSale.SaleTierDetails storage ref)"}},"id":3363,"indexExpression":{"id":3362,"name":"tierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"21511:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21499:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage","typeString":"struct IDappadSale.SaleTierDetails storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3364,"name":"newTierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"21524:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_memory_ptr","typeString":"struct IDappadSale.SaleTierDetails memory"}},"src":"21499:39:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage","typeString":"struct IDappadSale.SaleTierDetails storage ref"}},"id":3366,"nodeType":"ExpressionStatement","src":"21499:39:8"},{"eventCall":{"arguments":[{"id":3368,"name":"tierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"21577:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3369,"name":"newTierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"21588:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_memory_ptr","typeString":"struct IDappadSale.SaleTierDetails memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_memory_ptr","typeString":"struct IDappadSale.SaleTierDetails memory"}],"id":3367,"name":"SaleTierDetailsUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"21554:22:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_struct$_SaleTierDetails_$4674_memory_ptr_$returns$__$","typeString":"function (uint256,struct IDappadSale.SaleTierDetails memory)"}},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21554:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3371,"nodeType":"EmitStatement","src":"21549:54:8"},{"expression":{"hexValue":"74727565","id":3372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21621:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3360,"id":3373,"nodeType":"Return","src":"21614:11:8"}]},"functionSelector":"41c232c8","id":3375,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":3355,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21462:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21466:6:8","memberName":"sender","nodeType":"MemberAccess","src":"21462:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3357,"kind":"modifierInvocation","modifierName":{"id":3354,"name":"onlyOwnerOrAdmin","nameLocations":["21445:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"21445:16:8"},"nodeType":"ModifierInvocation","src":"21445:28:8"}],"name":"setTierDetails","nameLocation":"21351:14:8","nodeType":"FunctionDefinition","parameters":{"id":3353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"tierIndex","nameLocation":"21374:9:8","nodeType":"VariableDeclaration","scope":3375,"src":"21366:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3348,"name":"uint256","nodeType":"ElementaryTypeName","src":"21366:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3352,"mutability":"mutable","name":"newTierDetails","nameLocation":"21420:14:8","nodeType":"VariableDeclaration","scope":3375,"src":"21385:49:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_memory_ptr","typeString":"struct IDappadSale.SaleTierDetails"},"typeName":{"id":3351,"nodeType":"UserDefinedTypeName","pathNode":{"id":3350,"name":"IDappadSale.SaleTierDetails","nameLocations":["21385:11:8","21397:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":4674,"src":"21385:27:8"},"referencedDeclaration":4674,"src":"21385:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage_ptr","typeString":"struct IDappadSale.SaleTierDetails"}},"visibility":"internal"}],"src":"21365:70:8"},"returnParameters":{"id":3360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3375,"src":"21483:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3358,"name":"bool","nodeType":"ElementaryTypeName","src":"21483:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21482:6:8"},"scope":3854,"src":"21342:290:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3419,"nodeType":"Block","src":"21775:247:8","statements":[{"assignments":[3389],"declarations":[{"constant":false,"id":3389,"mutability":"mutable","name":"tierCount","nameLocation":"21793:9:8","nodeType":"VariableDeclaration","scope":3419,"src":"21785:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3388,"name":"uint256","nodeType":"ElementaryTypeName","src":"21785:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3392,"initialValue":{"expression":{"id":3390,"name":"newTierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"21805:14:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SaleTierDetails_$4674_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDappadSale.SaleTierDetails calldata[] calldata"}},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21820:6:8","memberName":"length","nodeType":"MemberAccess","src":"21805:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21785:41:8"},{"body":{"id":3411,"nodeType":"Block","src":"21876:59:8","statements":[{"expression":{"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3403,"name":"tierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"21890:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SaleTierDetails_$4674_storage_$","typeString":"mapping(uint256 => struct IDappadSale.SaleTierDetails storage ref)"}},"id":3405,"indexExpression":{"id":3404,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"21902:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21890:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage","typeString":"struct IDappadSale.SaleTierDetails storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3406,"name":"newTierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"21907:14:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SaleTierDetails_$4674_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDappadSale.SaleTierDetails calldata[] calldata"}},"id":3408,"indexExpression":{"id":3407,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"21922:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21907:17:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_calldata_ptr","typeString":"struct IDappadSale.SaleTierDetails calldata"}},"src":"21890:34:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage","typeString":"struct IDappadSale.SaleTierDetails storage ref"}},"id":3410,"nodeType":"ExpressionStatement","src":"21890:34:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3397,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"21856:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3398,"name":"tierCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"21860:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21856:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3412,"initializationExpression":{"assignments":[3394],"declarations":[{"constant":false,"id":3394,"mutability":"mutable","name":"i","nameLocation":"21849:1:8","nodeType":"VariableDeclaration","scope":3412,"src":"21841:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3393,"name":"uint256","nodeType":"ElementaryTypeName","src":"21841:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3396,"initialValue":{"hexValue":"30","id":3395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21853:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"21841:13:8"},"loopExpression":{"expression":{"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21871:3:8","subExpression":{"id":3400,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"21871:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3402,"nodeType":"ExpressionStatement","src":"21871:3:8"},"nodeType":"ForStatement","src":"21837:98:8"},{"eventCall":{"arguments":[{"id":3414,"name":"newTierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"21978:14:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SaleTierDetails_$4674_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDappadSale.SaleTierDetails calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_SaleTierDetails_$4674_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDappadSale.SaleTierDetails calldata[] calldata"}],"id":3413,"name":"SaleTierDetailsBatchUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"21950:27:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_struct$_SaleTierDetails_$4674_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (struct IDappadSale.SaleTierDetails memory[] memory)"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21950:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3416,"nodeType":"EmitStatement","src":"21945:48:8"},{"expression":{"hexValue":"74727565","id":3417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22011:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3387,"id":3418,"nodeType":"Return","src":"22004:11:8"}]},"functionSelector":"95db35de","id":3420,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":3382,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21748:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21752:6:8","memberName":"sender","nodeType":"MemberAccess","src":"21748:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3384,"kind":"modifierInvocation","modifierName":{"id":3381,"name":"onlyOwnerOrAdmin","nameLocations":["21731:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"21731:16:8"},"nodeType":"ModifierInvocation","src":"21731:28:8"}],"name":"setTierDetailsBatch","nameLocation":"21647:19:8","nodeType":"FunctionDefinition","parameters":{"id":3380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3379,"mutability":"mutable","name":"newTierDetails","nameLocation":"21706:14:8","nodeType":"VariableDeclaration","scope":3420,"src":"21667:53:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SaleTierDetails_$4674_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDappadSale.SaleTierDetails[]"},"typeName":{"baseType":{"id":3377,"nodeType":"UserDefinedTypeName","pathNode":{"id":3376,"name":"IDappadSale.SaleTierDetails","nameLocations":["21667:11:8","21679:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":4674,"src":"21667:27:8"},"referencedDeclaration":4674,"src":"21667:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage_ptr","typeString":"struct IDappadSale.SaleTierDetails"}},"id":3378,"nodeType":"ArrayTypeName","src":"21667:29:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SaleTierDetails_$4674_storage_$dyn_storage_ptr","typeString":"struct IDappadSale.SaleTierDetails[]"}},"visibility":"internal"}],"src":"21666:55:8"},"returnParameters":{"id":3387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3420,"src":"21769:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3385,"name":"bool","nodeType":"ElementaryTypeName","src":"21769:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21768:6:8"},"scope":3854,"src":"21638:384:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3460,"nodeType":"Block","src":"22188:187:8","statements":[{"assignments":[3436],"declarations":[{"constant":false,"id":3436,"mutability":"mutable","name":"leaf","nameLocation":"22206:4:8","nodeType":"VariableDeclaration","scope":3460,"src":"22198:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22198:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3449,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":3444,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"22257:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3442,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"22246:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22250:6:8","memberName":"encode","nodeType":"MemberAccess","src":"22246:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22246:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3441,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"22236:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22236:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22223:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3438,"name":"bytes","nodeType":"ElementaryTypeName","src":"22223:5:8","typeDescriptions":{}}},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22229:6:8","memberName":"concat","nodeType":"MemberAccess","src":"22223:12:8","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22223:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3437,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"22213:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22213:59:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"22198:74:8"},{"expression":{"arguments":[{"id":3452,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"22308:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"expression":{"baseExpression":{"id":3453,"name":"tierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"22315:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SaleTierDetails_$4674_storage_$","typeString":"mapping(uint256 => struct IDappadSale.SaleTierDetails storage ref)"}},"id":3455,"indexExpression":{"id":3454,"name":"userTierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"22327:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22315:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage","typeString":"struct IDappadSale.SaleTierDetails storage ref"}},"id":3456,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22342:19:8","memberName":"whitelistMerkleRoot","nodeType":"MemberAccess","referencedDeclaration":4669,"src":"22315:46:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3457,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"22363:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3450,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"22289:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$1140_$","typeString":"type(library MerkleProof)"}},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22301:6:8","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":630,"src":"22289:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22289:79:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3434,"id":3459,"nodeType":"Return","src":"22282:86:8"}]},"functionSelector":"9d0c65f9","id":3461,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3430,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"22160:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3431,"kind":"modifierInvocation","modifierName":{"id":3429,"name":"notZeroAddress","nameLocations":["22145:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1574,"src":"22145:14:8"},"nodeType":"ModifierInvocation","src":"22145:27:8"}],"name":"checkWhitelistEligibility","nameLocation":"22037:25:8","nodeType":"FunctionDefinition","parameters":{"id":3428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3422,"mutability":"mutable","name":"userAddress","nameLocation":"22071:11:8","nodeType":"VariableDeclaration","scope":3461,"src":"22063:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3421,"name":"address","nodeType":"ElementaryTypeName","src":"22063:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3424,"mutability":"mutable","name":"userTierIndex","nameLocation":"22092:13:8","nodeType":"VariableDeclaration","scope":3461,"src":"22084:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3423,"name":"uint256","nodeType":"ElementaryTypeName","src":"22084:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3427,"mutability":"mutable","name":"proof","nameLocation":"22126:5:8","nodeType":"VariableDeclaration","scope":3461,"src":"22107:24:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3425,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22107:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3426,"nodeType":"ArrayTypeName","src":"22107:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"22062:70:8"},"returnParameters":{"id":3434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3461,"src":"22182:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3432,"name":"bool","nodeType":"ElementaryTypeName","src":"22182:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22181:6:8"},"scope":3854,"src":"22028:347:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3498,"nodeType":"Block","src":"22515:176:8","statements":[{"assignments":[3475],"declarations":[{"constant":false,"id":3475,"mutability":"mutable","name":"leaf","nameLocation":"22533:4:8","nodeType":"VariableDeclaration","scope":3498,"src":"22525:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22525:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3488,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":3483,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"22584:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3481,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"22573:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22577:6:8","memberName":"encode","nodeType":"MemberAccess","src":"22573:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22573:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3480,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"22563:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22563:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22550:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3477,"name":"bytes","nodeType":"ElementaryTypeName","src":"22550:5:8","typeDescriptions":{}}},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22556:6:8","memberName":"concat","nodeType":"MemberAccess","src":"22550:12:8","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22550:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3476,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"22540:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22540:59:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"22525:74:8"},{"expression":{"arguments":[{"id":3491,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"22635:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"expression":{"expression":{"id":3492,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"22642:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":3493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22647:13:8","memberName":"ticketDetails","nodeType":"MemberAccess","referencedDeclaration":4576,"src":"22642:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTicketDetails_$4618_storage","typeString":"struct IDappadSale.SaleTicketDetails storage ref"}},"id":3494,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22661:16:8","memberName":"ticketMerkleRoot","nodeType":"MemberAccess","referencedDeclaration":4617,"src":"22642:35:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3495,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"22679:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3489,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"22616:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$1140_$","typeString":"type(library MerkleProof)"}},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22628:6:8","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":630,"src":"22616:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22616:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3473,"id":3497,"nodeType":"Return","src":"22609:75:8"}]},"functionSelector":"d9f9549e","id":3499,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3469,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"22487:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3470,"kind":"modifierInvocation","modifierName":{"id":3468,"name":"notZeroAddress","nameLocations":["22472:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1574,"src":"22472:14:8"},"nodeType":"ModifierInvocation","src":"22472:27:8"}],"name":"checkTicketEligibility","nameLocation":"22390:22:8","nodeType":"FunctionDefinition","parameters":{"id":3467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3463,"mutability":"mutable","name":"userAddress","nameLocation":"22421:11:8","nodeType":"VariableDeclaration","scope":3499,"src":"22413:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3462,"name":"address","nodeType":"ElementaryTypeName","src":"22413:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3466,"mutability":"mutable","name":"proof","nameLocation":"22453:5:8","nodeType":"VariableDeclaration","scope":3499,"src":"22434:24:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3464,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22434:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3465,"nodeType":"ArrayTypeName","src":"22434:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"22412:47:8"},"returnParameters":{"id":3473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3499,"src":"22509:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3471,"name":"bool","nodeType":"ElementaryTypeName","src":"22509:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22508:6:8"},"scope":3854,"src":"22381:310:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3513,"nodeType":"Block","src":"22811:54:8","statements":[{"expression":{"baseExpression":{"id":3509,"name":"investmentAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"22828:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3511,"indexExpression":{"id":3510,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"22846:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22828:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3508,"id":3512,"nodeType":"Return","src":"22821:37:8"}]},"functionSelector":"5e87e5a6","id":3514,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3504,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"22780:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3505,"kind":"modifierInvocation","modifierName":{"id":3503,"name":"notZeroAddress","nameLocations":["22765:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1574,"src":"22765:14:8"},"nodeType":"ModifierInvocation","src":"22765:27:8"}],"name":"getUserInvestmentAmount","nameLocation":"22706:23:8","nodeType":"FunctionDefinition","parameters":{"id":3502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3501,"mutability":"mutable","name":"userAddress","nameLocation":"22738:11:8","nodeType":"VariableDeclaration","scope":3514,"src":"22730:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3500,"name":"address","nodeType":"ElementaryTypeName","src":"22730:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22729:21:8"},"returnParameters":{"id":3508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3514,"src":"22802:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3506,"name":"uint256","nodeType":"ElementaryTypeName","src":"22802:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22801:9:8"},"scope":3854,"src":"22697:168:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3523,"nodeType":"Block","src":"22928:56:8","statements":[{"expression":{"expression":{"expression":{"id":3519,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"22945:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":3520,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22950:13:8","memberName":"refundDetails","nodeType":"MemberAccess","referencedDeclaration":4573,"src":"22945:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRefundDetails_$4613_storage","typeString":"struct IDappadSale.SaleRefundDetails storage ref"}},"id":3521,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22964:13:8","memberName":"refundEnabled","nodeType":"MemberAccess","referencedDeclaration":4612,"src":"22945:32:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3518,"id":3522,"nodeType":"Return","src":"22938:39:8"}]},"functionSelector":"85c06faa","id":3524,"implemented":true,"kind":"function","modifiers":[],"name":"getRefundEnabled","nameLocation":"22880:16:8","nodeType":"FunctionDefinition","parameters":{"id":3515,"nodeType":"ParameterList","parameters":[],"src":"22896:2:8"},"returnParameters":{"id":3518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3524,"src":"22922:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3516,"name":"bool","nodeType":"ElementaryTypeName","src":"22922:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22921:6:8"},"scope":3854,"src":"22871:113:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3538,"nodeType":"Block","src":"23093:45:8","statements":[{"expression":{"baseExpression":{"id":3534,"name":"refunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"23110:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3536,"indexExpression":{"id":3535,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"23119:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23110:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3533,"id":3537,"nodeType":"Return","src":"23103:28:8"}]},"functionSelector":"cf72d3db","id":3539,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3529,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"23065:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3530,"kind":"modifierInvocation","modifierName":{"id":3528,"name":"notZeroAddress","nameLocations":["23050:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1574,"src":"23050:14:8"},"nodeType":"ModifierInvocation","src":"23050:27:8"}],"name":"getUserRefunded","nameLocation":"22999:15:8","nodeType":"FunctionDefinition","parameters":{"id":3527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3526,"mutability":"mutable","name":"userAddress","nameLocation":"23023:11:8","nodeType":"VariableDeclaration","scope":3539,"src":"23015:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3525,"name":"address","nodeType":"ElementaryTypeName","src":"23015:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23014:21:8"},"returnParameters":{"id":3533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3539,"src":"23087:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3531,"name":"bool","nodeType":"ElementaryTypeName","src":"23087:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"23086:6:8"},"scope":3854,"src":"22990:148:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3551,"nodeType":"Block","src":"23253:46:8","statements":[{"expression":{"baseExpression":{"id":3547,"name":"tierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"23270:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SaleTierDetails_$4674_storage_$","typeString":"mapping(uint256 => struct IDappadSale.SaleTierDetails storage ref)"}},"id":3549,"indexExpression":{"id":3548,"name":"tierIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"23282:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23270:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage","typeString":"struct IDappadSale.SaleTierDetails storage ref"}},"functionReturnParameters":3546,"id":3550,"nodeType":"Return","src":"23263:29:8"}]},"functionSelector":"9d1652e0","id":3552,"implemented":true,"kind":"function","modifiers":[],"name":"getTierDetailsByIndex","nameLocation":"23153:21:8","nodeType":"FunctionDefinition","parameters":{"id":3542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3541,"mutability":"mutable","name":"tierIndex","nameLocation":"23183:9:8","nodeType":"VariableDeclaration","scope":3552,"src":"23175:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3540,"name":"uint256","nodeType":"ElementaryTypeName","src":"23175:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23174:19:8"},"returnParameters":{"id":3546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3552,"src":"23217:34:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_memory_ptr","typeString":"struct IDappadSale.SaleTierDetails"},"typeName":{"id":3544,"nodeType":"UserDefinedTypeName","pathNode":{"id":3543,"name":"IDappadSale.SaleTierDetails","nameLocations":["23217:11:8","23229:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":4674,"src":"23217:27:8"},"referencedDeclaration":4674,"src":"23217:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage_ptr","typeString":"struct IDappadSale.SaleTierDetails"}},"visibility":"internal"}],"src":"23216:36:8"},"scope":3854,"src":"23144:155:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3612,"nodeType":"Block","src":"23395:398:8","statements":[{"assignments":[3560],"declarations":[{"constant":false,"id":3560,"mutability":"mutable","name":"tierCount","nameLocation":"23413:9:8","nodeType":"VariableDeclaration","scope":3612,"src":"23405:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3559,"name":"uint256","nodeType":"ElementaryTypeName","src":"23405:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3562,"initialValue":{"hexValue":"30","id":3561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23425:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23405:21:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3563,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"23441:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":3564,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23446:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"23441:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":3565,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23460:30:8","memberName":"stakeControllerContractAddress","nodeType":"MemberAccess","referencedDeclaration":4637,"src":"23441:49:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23502:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23494:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3566,"name":"address","nodeType":"ElementaryTypeName","src":"23494:7:8","typeDescriptions":{}}},"id":3569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23494:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23441:63:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3576,"nodeType":"IfStatement","src":"23437:107:8","trueBody":{"id":3575,"nodeType":"Block","src":"23506:38:8","statements":[{"expression":{"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3571,"name":"tierCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"23520:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":3572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23532:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23520:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3574,"nodeType":"ExpressionStatement","src":"23520:13:8"}]}},{"assignments":[3582],"declarations":[{"constant":false,"id":3582,"mutability":"mutable","name":"_tierDetails","nameLocation":"23591:12:8","nodeType":"VariableDeclaration","scope":3612,"src":"23554:49:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SaleTierDetails_$4674_memory_ptr_$dyn_memory_ptr","typeString":"struct IDappadSale.SaleTierDetails[]"},"typeName":{"baseType":{"id":3580,"nodeType":"UserDefinedTypeName","pathNode":{"id":3579,"name":"IDappadSale.SaleTierDetails","nameLocations":["23554:11:8","23566:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":4674,"src":"23554:27:8"},"referencedDeclaration":4674,"src":"23554:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage_ptr","typeString":"struct IDappadSale.SaleTierDetails"}},"id":3581,"nodeType":"ArrayTypeName","src":"23554:29:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SaleTierDetails_$4674_storage_$dyn_storage_ptr","typeString":"struct IDappadSale.SaleTierDetails[]"}},"visibility":"internal"}],"id":3589,"initialValue":{"arguments":[{"id":3587,"name":"tierCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"23640:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"23606:33:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_SaleTierDetails_$4674_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct IDappadSale.SaleTierDetails memory[] memory)"},"typeName":{"baseType":{"id":3584,"nodeType":"UserDefinedTypeName","pathNode":{"id":3583,"name":"IDappadSale.SaleTierDetails","nameLocations":["23610:11:8","23622:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":4674,"src":"23610:27:8"},"referencedDeclaration":4674,"src":"23610:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage_ptr","typeString":"struct IDappadSale.SaleTierDetails"}},"id":3585,"nodeType":"ArrayTypeName","src":"23610:29:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SaleTierDetails_$4674_storage_$dyn_storage_ptr","typeString":"struct IDappadSale.SaleTierDetails[]"}}},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23606:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SaleTierDetails_$4674_memory_ptr_$dyn_memory_ptr","typeString":"struct IDappadSale.SaleTierDetails memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"23554:96:8"},{"body":{"id":3608,"nodeType":"Block","src":"23700:57:8","statements":[{"expression":{"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3600,"name":"_tierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"23714:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SaleTierDetails_$4674_memory_ptr_$dyn_memory_ptr","typeString":"struct IDappadSale.SaleTierDetails memory[] memory"}},"id":3602,"indexExpression":{"id":3601,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"23727:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23714:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_memory_ptr","typeString":"struct IDappadSale.SaleTierDetails memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3603,"name":"tierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"23732:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SaleTierDetails_$4674_storage_$","typeString":"mapping(uint256 => struct IDappadSale.SaleTierDetails storage ref)"}},"id":3605,"indexExpression":{"id":3604,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"23744:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23732:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage","typeString":"struct IDappadSale.SaleTierDetails storage ref"}},"src":"23714:32:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_memory_ptr","typeString":"struct IDappadSale.SaleTierDetails memory"}},"id":3607,"nodeType":"ExpressionStatement","src":"23714:32:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3594,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"23680:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3595,"name":"tierCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"23684:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23680:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3609,"initializationExpression":{"assignments":[3591],"declarations":[{"constant":false,"id":3591,"mutability":"mutable","name":"i","nameLocation":"23673:1:8","nodeType":"VariableDeclaration","scope":3609,"src":"23665:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3590,"name":"uint256","nodeType":"ElementaryTypeName","src":"23665:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3593,"initialValue":{"hexValue":"30","id":3592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23677:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23665:13:8"},"loopExpression":{"expression":{"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23695:3:8","subExpression":{"id":3597,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"23695:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3599,"nodeType":"ExpressionStatement","src":"23695:3:8"},"nodeType":"ForStatement","src":"23661:96:8"},{"expression":{"id":3610,"name":"_tierDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"23774:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SaleTierDetails_$4674_memory_ptr_$dyn_memory_ptr","typeString":"struct IDappadSale.SaleTierDetails memory[] memory"}},"functionReturnParameters":3558,"id":3611,"nodeType":"Return","src":"23767:19:8"}]},"functionSelector":"0bbda0de","id":3613,"implemented":true,"kind":"function","modifiers":[],"name":"getAllTierDetails","nameLocation":"23314:17:8","nodeType":"FunctionDefinition","parameters":{"id":3553,"nodeType":"ParameterList","parameters":[],"src":"23331:2:8"},"returnParameters":{"id":3558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3613,"src":"23357:36:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SaleTierDetails_$4674_memory_ptr_$dyn_memory_ptr","typeString":"struct IDappadSale.SaleTierDetails[]"},"typeName":{"baseType":{"id":3555,"nodeType":"UserDefinedTypeName","pathNode":{"id":3554,"name":"IDappadSale.SaleTierDetails","nameLocations":["23357:11:8","23369:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":4674,"src":"23357:27:8"},"referencedDeclaration":4674,"src":"23357:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage_ptr","typeString":"struct IDappadSale.SaleTierDetails"}},"id":3556,"nodeType":"ArrayTypeName","src":"23357:29:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SaleTierDetails_$4674_storage_$dyn_storage_ptr","typeString":"struct IDappadSale.SaleTierDetails[]"}},"visibility":"internal"}],"src":"23356:38:8"},"scope":3854,"src":"23305:488:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3646,"nodeType":"Block","src":"23853:259:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3618,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"23867:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":3619,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23872:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"23867:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":3620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23886:30:8","memberName":"stakeControllerContractAddress","nodeType":"MemberAccess","referencedDeclaration":4637,"src":"23867:49:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23920:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3621,"name":"address","nodeType":"ElementaryTypeName","src":"23920:7:8","typeDescriptions":{}}},"id":3624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23920:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23867:63:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3628,"nodeType":"IfStatement","src":"23863:77:8","trueBody":{"expression":{"hexValue":"30","id":3626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23939:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3617,"id":3627,"nodeType":"Return","src":"23932:8:8"}},{"assignments":[3630],"declarations":[{"constant":false,"id":3630,"mutability":"mutable","name":"tierCount","nameLocation":"23959:9:8","nodeType":"VariableDeclaration","scope":3646,"src":"23951:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"23951:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3634,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3631,"name":"stakeControllerContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"23971:23:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadStakeController_$4487","typeString":"contract IDappadStakeController"}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23995:12:8","memberName":"getTierCount","nodeType":"MemberAccess","referencedDeclaration":4479,"src":"23971:36:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23971:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23951:58:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3635,"name":"tierCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"24023:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24036:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24023:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3643,"nodeType":"IfStatement","src":"24019:59:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3638,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"24046:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24053:23:8","memberName":"NoTierDetailsFoundError","nodeType":"MemberAccess","referencedDeclaration":4367,"src":"24046:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24046:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3642,"nodeType":"RevertStatement","src":"24039:39:8"}},{"expression":{"id":3644,"name":"tierCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"24096:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3617,"id":3645,"nodeType":"Return","src":"24089:16:8"}]},"functionSelector":"67184e28","id":3647,"implemented":true,"kind":"function","modifiers":[],"name":"getTierCount","nameLocation":"23808:12:8","nodeType":"FunctionDefinition","parameters":{"id":3614,"nodeType":"ParameterList","parameters":[],"src":"23820:2:8"},"returnParameters":{"id":3617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3647,"src":"23844:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3615,"name":"uint256","nodeType":"ElementaryTypeName","src":"23844:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23843:9:8"},"scope":3854,"src":"23799:313:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3656,"nodeType":"Block","src":"24179:55:8","statements":[{"expression":{"expression":{"expression":{"id":3652,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"24196:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":3653,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24201:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"24196:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":3654,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24213:14:8","memberName":"saleTokenPrice","nodeType":"MemberAccess","referencedDeclaration":4592,"src":"24196:31:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3651,"id":3655,"nodeType":"Return","src":"24189:38:8"}]},"functionSelector":"06c8e316","id":3657,"implemented":true,"kind":"function","modifiers":[],"name":"getSaleTokenPrice","nameLocation":"24127:17:8","nodeType":"FunctionDefinition","parameters":{"id":3648,"nodeType":"ParameterList","parameters":[],"src":"24144:2:8"},"returnParameters":{"id":3651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3657,"src":"24170:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3649,"name":"uint256","nodeType":"ElementaryTypeName","src":"24170:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24169:9:8"},"scope":3854,"src":"24118:116:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3676,"nodeType":"Block","src":"24296:116:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3662,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"24313:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24319:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"24313:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"expression":{"id":3664,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"24332:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":3665,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24337:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"24332:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":3666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24349:9:8","memberName":"saleStart","nodeType":"MemberAccess","referencedDeclaration":4588,"src":"24332:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24313:45:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3668,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"24362:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24368:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"24362:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"expression":{"id":3670,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"24381:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":3671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24386:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"24381:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":3672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24398:7:8","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":4590,"src":"24381:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24362:43:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24313:92:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3661,"id":3675,"nodeType":"Return","src":"24306:99:8"}]},"functionSelector":"c077da9e","id":3677,"implemented":true,"kind":"function","modifiers":[],"name":"getIsSaleActive","nameLocation":"24249:15:8","nodeType":"FunctionDefinition","parameters":{"id":3658,"nodeType":"ParameterList","parameters":[],"src":"24264:2:8"},"returnParameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3677,"src":"24290:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3659,"name":"bool","nodeType":"ElementaryTypeName","src":"24290:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"24289:6:8"},"scope":3854,"src":"24240:172:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3686,"nodeType":"Block","src":"24476:48:8","statements":[{"expression":{"expression":{"expression":{"id":3682,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"24493:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":3683,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24498:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"24493:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":3684,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24510:7:8","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":4590,"src":"24493:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3681,"id":3685,"nodeType":"Return","src":"24486:31:8"}]},"functionSelector":"2ecad13f","id":3687,"implemented":true,"kind":"function","modifiers":[],"name":"getSaleEndDate","nameLocation":"24427:14:8","nodeType":"FunctionDefinition","parameters":{"id":3678,"nodeType":"ParameterList","parameters":[],"src":"24441:2:8"},"returnParameters":{"id":3681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3687,"src":"24467:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3679,"name":"uint256","nodeType":"ElementaryTypeName","src":"24467:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24466:9:8"},"scope":3854,"src":"24418:106:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3696,"nodeType":"Block","src":"24593:59:8","statements":[{"expression":{"expression":{"expression":{"id":3692,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"24610:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":3693,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24615:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"24610:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":3694,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24629:16:8","memberName":"saleTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4627,"src":"24610:35:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3691,"id":3695,"nodeType":"Return","src":"24603:42:8"}]},"functionSelector":"2dee1fe8","id":3697,"implemented":true,"kind":"function","modifiers":[],"name":"getSaleTokenAddress","nameLocation":"24539:19:8","nodeType":"FunctionDefinition","parameters":{"id":3688,"nodeType":"ParameterList","parameters":[],"src":"24558:2:8"},"returnParameters":{"id":3691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3697,"src":"24584:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3689,"name":"address","nodeType":"ElementaryTypeName","src":"24584:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24583:9:8"},"scope":3854,"src":"24530:122:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3706,"nodeType":"Block","src":"24727:65:8","statements":[{"expression":{"expression":{"expression":{"id":3702,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"24744:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":3703,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24749:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"24744:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":3704,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24763:22:8","memberName":"factoryContractAddress","nodeType":"MemberAccess","referencedDeclaration":4633,"src":"24744:41:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3701,"id":3705,"nodeType":"Return","src":"24737:48:8"}]},"functionSelector":"63b8476b","id":3707,"implemented":true,"kind":"function","modifiers":[],"name":"getFactoryContractAddress","nameLocation":"24667:25:8","nodeType":"FunctionDefinition","parameters":{"id":3698,"nodeType":"ParameterList","parameters":[],"src":"24692:2:8"},"returnParameters":{"id":3701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3707,"src":"24718:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3699,"name":"address","nodeType":"ElementaryTypeName","src":"24718:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24717:9:8"},"scope":3854,"src":"24658:134:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3716,"nodeType":"Block","src":"24875:73:8","statements":[{"expression":{"expression":{"expression":{"id":3712,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"24892:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":3713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24897:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"24892:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":3714,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24911:30:8","memberName":"stakeControllerContractAddress","nodeType":"MemberAccess","referencedDeclaration":4637,"src":"24892:49:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3711,"id":3715,"nodeType":"Return","src":"24885:56:8"}]},"functionSelector":"ade65212","id":3717,"implemented":true,"kind":"function","modifiers":[],"name":"getStakeControllerContractAddress","nameLocation":"24807:33:8","nodeType":"FunctionDefinition","parameters":{"id":3708,"nodeType":"ParameterList","parameters":[],"src":"24840:2:8"},"returnParameters":{"id":3711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3717,"src":"24866:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3709,"name":"address","nodeType":"ElementaryTypeName","src":"24866:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24865:9:8"},"scope":3854,"src":"24798:150:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3750,"nodeType":"Block","src":"25063:212:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3727,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"25077:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":3728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25082:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"25077:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":3729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25096:18:8","memberName":"nftContractAddress","nodeType":"MemberAccess","referencedDeclaration":4635,"src":"25077:37:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25126:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25118:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3730,"name":"address","nodeType":"ElementaryTypeName","src":"25118:7:8","typeDescriptions":{}}},"id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"25077:51:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3748,"nodeType":"Block","src":"25169:100:8","statements":[{"expression":{"arguments":[{"expression":{"id":3744,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"25247:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25251:6:8","memberName":"sender","nodeType":"MemberAccess","src":"25247:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"expression":{"id":3739,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"25198:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":3740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25203:13:8","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"25198:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage","typeString":"struct IDappadSale.SaleAddresses storage ref"}},"id":3741,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25217:18:8","memberName":"nftContractAddress","nodeType":"MemberAccess","referencedDeclaration":4635,"src":"25198:37:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3738,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"25190:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$573_$","typeString":"type(contract IERC721)"}},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25190:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$573","typeString":"contract IERC721"}},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25237:9:8","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":498,"src":"25190:56:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25190:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3726,"id":3747,"nodeType":"Return","src":"25183:75:8"}]},"id":3749,"nodeType":"IfStatement","src":"25073:196:8","trueBody":{"id":3737,"nodeType":"Block","src":"25130:33:8","statements":[{"expression":{"hexValue":"30","id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25151:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3726,"id":3736,"nodeType":"Return","src":"25144:8:8"}]}}]},"id":3751,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3722,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"25032:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3723,"kind":"modifierInvocation","modifierName":{"id":3721,"name":"notZeroAddress","nameLocations":["25017:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1574,"src":"25017:14:8"},"nodeType":"ModifierInvocation","src":"25017:27:8"}],"name":"_getUserNftBalance","nameLocation":"24963:18:8","nodeType":"FunctionDefinition","parameters":{"id":3720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3719,"mutability":"mutable","name":"userAddress","nameLocation":"24990:11:8","nodeType":"VariableDeclaration","scope":3751,"src":"24982:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3718,"name":"address","nodeType":"ElementaryTypeName","src":"24982:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24981:21:8"},"returnParameters":{"id":3726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3751,"src":"25054:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3724,"name":"uint256","nodeType":"ElementaryTypeName","src":"25054:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25053:9:8"},"scope":3854,"src":"24954:321:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3768,"nodeType":"Block","src":"25338:77:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3756,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"25352:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25372:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25364:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3757,"name":"address","nodeType":"ElementaryTypeName","src":"25364:7:8","typeDescriptions":{}}},"id":3760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25364:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"25352:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3767,"nodeType":"IfStatement","src":"25348:60:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3762,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"25383:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25390:16:8","memberName":"ZeroAddressError","nodeType":"MemberAccess","referencedDeclaration":4247,"src":"25383:23:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25383:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3766,"nodeType":"RevertStatement","src":"25376:32:8"}}]},"id":3769,"implemented":true,"kind":"function","modifiers":[],"name":"_notZeroAddress","nameLocation":"25290:15:8","nodeType":"FunctionDefinition","parameters":{"id":3754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3753,"mutability":"mutable","name":"_address","nameLocation":"25314:8:8","nodeType":"VariableDeclaration","scope":3769,"src":"25306:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3752,"name":"address","nodeType":"ElementaryTypeName","src":"25306:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25305:18:8"},"returnParameters":{"id":3755,"nodeType":"ParameterList","parameters":[],"src":"25338:0:8"},"scope":3854,"src":"25281:134:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3785,"nodeType":"Block","src":"25473:81:8","statements":[{"condition":{"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"25487:25:8","subExpression":{"arguments":[{"id":3775,"name":"OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"25496:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3776,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"25503:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3774,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"25488:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25488:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3784,"nodeType":"IfStatement","src":"25483:64:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3779,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"25521:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25528:17:8","memberName":"UnauthorizedError","nodeType":"MemberAccess","referencedDeclaration":4249,"src":"25521:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25521:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3783,"nodeType":"RevertStatement","src":"25514:33:8"}}]},"id":3786,"implemented":true,"kind":"function","modifiers":[],"name":"_onlyOwner","nameLocation":"25430:10:8","nodeType":"FunctionDefinition","parameters":{"id":3772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3771,"mutability":"mutable","name":"_address","nameLocation":"25449:8:8","nodeType":"VariableDeclaration","scope":3786,"src":"25441:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3770,"name":"address","nodeType":"ElementaryTypeName","src":"25441:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25440:18:8"},"returnParameters":{"id":3773,"nodeType":"ParameterList","parameters":[],"src":"25473:0:8"},"scope":3854,"src":"25421:133:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3808,"nodeType":"Block","src":"25619:110:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"25633:25:8","subExpression":{"arguments":[{"id":3792,"name":"OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"25642:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3793,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"25649:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3791,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"25634:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25634:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"25662:25:8","subExpression":{"arguments":[{"id":3797,"name":"ADMIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"25671:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3798,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"25678:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3796,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"25663:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25663:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25633:54:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3807,"nodeType":"IfStatement","src":"25629:93:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3802,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"25696:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25703:17:8","memberName":"UnauthorizedError","nodeType":"MemberAccess","referencedDeclaration":4249,"src":"25696:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25696:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3806,"nodeType":"RevertStatement","src":"25689:33:8"}}]},"id":3809,"implemented":true,"kind":"function","modifiers":[],"name":"_onlyOwnerOrAdmin","nameLocation":"25569:17:8","nodeType":"FunctionDefinition","parameters":{"id":3789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3788,"mutability":"mutable","name":"_address","nameLocation":"25595:8:8","nodeType":"VariableDeclaration","scope":3809,"src":"25587:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3787,"name":"address","nodeType":"ElementaryTypeName","src":"25587:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25586:18:8"},"returnParameters":{"id":3790,"nodeType":"ParameterList","parameters":[],"src":"25619:0:8"},"scope":3854,"src":"25560:169:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3821,"nodeType":"Block","src":"25781:82:8","statements":[{"condition":{"expression":{"expression":{"id":3812,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"25794:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage","typeString":"struct IDappadSale.Sale storage ref"}},"id":3813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25799:11:8","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"25794:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage","typeString":"struct IDappadSale.SaleDetails storage ref"}},"id":3814,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25811:10:8","memberName":"salePaused","nodeType":"MemberAccess","referencedDeclaration":4600,"src":"25794:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3820,"nodeType":"IfStatement","src":"25791:65:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3815,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"25830:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25837:17:8","memberName":"SaleIsPausedError","nodeType":"MemberAccess","referencedDeclaration":4325,"src":"25830:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25830:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3819,"nodeType":"RevertStatement","src":"25823:33:8"}}]},"id":3822,"implemented":true,"kind":"function","modifiers":[],"name":"_whenSaleIsNotPaused","nameLocation":"25744:20:8","nodeType":"FunctionDefinition","parameters":{"id":3810,"nodeType":"ParameterList","parameters":[],"src":"25764:2:8"},"returnParameters":{"id":3811,"nodeType":"ParameterList","parameters":[],"src":"25781:0:8"},"scope":3854,"src":"25735:128:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3852,"nodeType":"Block","src":"25971:163:8","statements":[{"assignments":[3833],"declarations":[{"constant":false,"id":3833,"mutability":"mutable","name":"userAllowance","nameLocation":"25989:13:8","nodeType":"VariableDeclaration","scope":3852,"src":"25981:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3832,"name":"uint256","nodeType":"ElementaryTypeName","src":"25981:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3842,"initialValue":{"arguments":[{"id":3836,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"26021:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3839,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"26042:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}],"id":3838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26034:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3837,"name":"address","nodeType":"ElementaryTypeName","src":"26034:7:8","typeDescriptions":{}}},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26034:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3834,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"26005:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26011:9:8","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":433,"src":"26005:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26005:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25981:67:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3843,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"26061:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3844,"name":"userAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"26070:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26061:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3851,"nodeType":"IfStatement","src":"26058:69:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3846,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"26092:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26099:26:8","memberName":"InsufficientAllowanceError","nodeType":"MemberAccess","referencedDeclaration":4261,"src":"26092:33:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26092:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3850,"nodeType":"RevertStatement","src":"26085:42:8"}}]},"id":3853,"implemented":true,"kind":"function","modifiers":[],"name":"_hasEnoughAllowance","nameLocation":"25878:19:8","nodeType":"FunctionDefinition","parameters":{"id":3830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3825,"mutability":"mutable","name":"token","nameLocation":"25913:5:8","nodeType":"VariableDeclaration","scope":3853,"src":"25898:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"},"typeName":{"id":3824,"nodeType":"UserDefinedTypeName","pathNode":{"id":3823,"name":"IERC20Extented","nameLocations":["25898:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":4404,"src":"25898:14:8"},"referencedDeclaration":4404,"src":"25898:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$4404","typeString":"contract IERC20Extented"}},"visibility":"internal"},{"constant":false,"id":3827,"mutability":"mutable","name":"userAddress","nameLocation":"25928:11:8","nodeType":"VariableDeclaration","scope":3853,"src":"25920:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3826,"name":"address","nodeType":"ElementaryTypeName","src":"25920:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3829,"mutability":"mutable","name":"amount","nameLocation":"25949:6:8","nodeType":"VariableDeclaration","scope":3853,"src":"25941:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3828,"name":"uint256","nodeType":"ElementaryTypeName","src":"25941:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25897:59:8"},"returnParameters":{"id":3831,"nodeType":"ParameterList","parameters":[],"src":"25971:0:8"},"scope":3854,"src":"25869:265:8","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3855,"src":"257:25879:8","usedErrors":[305,308,4247,4249,4251,4257,4259,4261,4263,4265,4267,4269,4271,4273,4275,4277,4281,4283,4285,4287,4305,4307,4315,4317,4319,4321,4325,4329,4331,4333,4335,4339,4341,4343,4345,4357,4359,4361,4367],"usedEvents":[317,326,335,1242,1260,1278,1290,1294,1306,1310,1314,1319,1324,1329,1334,1339,1346,1352]}],"src":"33:26103:8"}},"contracts/core/DappadSaleFactory.sol":{"id":9,"ast":{"absolutePath":"contracts/core/DappadSaleFactory.sol","exportedSymbols":{"AccessControl":[295],"Context":[603],"DappadSale":[3854],"DappadSaleFactory":[4243],"ERC165":[1164],"Errors":[4392],"IAccessControl":[378],"IDappadSale":[4714],"IDappadSaleFactory":[4419],"IDappadStake":[4556],"IDappadStakeController":[4487],"IDappadStakeControllerFactory":[4431],"IDappadStakeFactory":[4427],"IDappadVesting":[4800],"IDappadVestingFactory":[4423],"IERC165":[1176],"IERC20":[456],"IERC20Extented":[4404],"IERC721":[573],"IERC721Extented":[4415],"MerkleProof":[1140]},"id":4244,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3856,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"33:23:9"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":3857,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4244,"sourceUnit":296,"src":"58:58:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/DappadSale.sol","file":"./DappadSale.sol","id":3858,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4244,"sourceUnit":3855,"src":"117:26:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/Interfaces.sol","file":"../interfaces/Interfaces.sol","id":3859,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4244,"sourceUnit":4801,"src":"144:38:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/errors/Errors.sol","file":"../errors/Errors.sol","id":3860,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4244,"sourceUnit":4393,"src":"183:30:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3861,"name":"AccessControl","nameLocations":["245:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"245:13:9"},"id":3862,"nodeType":"InheritanceSpecifier","src":"245:13:9"}],"canonicalName":"DappadSaleFactory","contractDependencies":[3854],"contractKind":"contract","fullyImplemented":true,"id":4243,"linearizedBaseContracts":[4243,295,1164,1176,378,603],"name":"DappadSaleFactory","nameLocation":"224:17:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"117803e3","id":3867,"mutability":"constant","name":"OWNER","nameLocation":"289:5:9","nodeType":"VariableDeclaration","scope":4243,"src":"265:50:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3863,"name":"bytes32","nodeType":"ElementaryTypeName","src":"265:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4f574e4552","id":3865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"307:7:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b","typeString":"literal_string \"OWNER\""},"value":"OWNER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b","typeString":"literal_string \"OWNER\""}],"id":3864,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"297:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"297:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"2a0acc6a","id":3872,"mutability":"constant","name":"ADMIN","nameLocation":"345:5:9","nodeType":"VariableDeclaration","scope":4243,"src":"321:50:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"321:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"41444d494e","id":3870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"363:7:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42","typeString":"literal_string \"ADMIN\""},"value":"ADMIN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42","typeString":"literal_string \"ADMIN\""}],"id":3869,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"353:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"353:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"5b30b428","id":3875,"mutability":"mutable","name":"allSales","nameLocation":"395:8:9","nodeType":"VariableDeclaration","scope":4243,"src":"378:25:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":3873,"name":"address","nodeType":"ElementaryTypeName","src":"378:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3874,"nodeType":"ArrayTypeName","src":"378:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"anonymous":false,"eventSelector":"b3bf637c2bc0c07b1686485081a411ec7a4c3a3464671d2bf063f91f2ba1613d","id":3891,"name":"SaleCreated","nameLocation":"416:11:9","nodeType":"EventDefinition","parameters":{"id":3890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3877,"indexed":false,"mutability":"mutable","name":"saleName","nameLocation":"444:8:9","nodeType":"VariableDeclaration","scope":3891,"src":"437:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3876,"name":"string","nodeType":"ElementaryTypeName","src":"437:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3879,"indexed":false,"mutability":"mutable","name":"saleStart","nameLocation":"470:9:9","nodeType":"VariableDeclaration","scope":3891,"src":"462:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3878,"name":"uint256","nodeType":"ElementaryTypeName","src":"462:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3881,"indexed":false,"mutability":"mutable","name":"saleEnd","nameLocation":"497:7:9","nodeType":"VariableDeclaration","scope":3891,"src":"489:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3880,"name":"uint256","nodeType":"ElementaryTypeName","src":"489:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3883,"indexed":false,"mutability":"mutable","name":"maxInvestmentAmount","nameLocation":"522:19:9","nodeType":"VariableDeclaration","scope":3891,"src":"514:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3882,"name":"uint256","nodeType":"ElementaryTypeName","src":"514:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3885,"indexed":false,"mutability":"mutable","name":"investmentTokenAddress","nameLocation":"559:22:9","nodeType":"VariableDeclaration","scope":3891,"src":"551:30:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3884,"name":"address","nodeType":"ElementaryTypeName","src":"551:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3887,"indexed":false,"mutability":"mutable","name":"saleTokenAddress","nameLocation":"599:16:9","nodeType":"VariableDeclaration","scope":3891,"src":"591:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3886,"name":"address","nodeType":"ElementaryTypeName","src":"591:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3889,"indexed":false,"mutability":"mutable","name":"factoryContractAddress","nameLocation":"633:22:9","nodeType":"VariableDeclaration","scope":3891,"src":"625:30:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3888,"name":"address","nodeType":"ElementaryTypeName","src":"625:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"427:234:9"},"src":"410:252:9"},{"body":{"id":3919,"nodeType":"Block","src":"743:180:9","statements":[{"expression":{"arguments":[{"id":3898,"name":"OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"767:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3899,"name":"OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"774:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3897,"name":"_setRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"753:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32)"}},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"753:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3901,"nodeType":"ExpressionStatement","src":"753:27:9"},{"expression":{"arguments":[{"id":3903,"name":"ADMIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"804:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3904,"name":"OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"811:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3902,"name":"_setRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"790:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32)"}},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"790:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3906,"nodeType":"ExpressionStatement","src":"790:27:9"},{"expression":{"arguments":[{"id":3908,"name":"OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"839:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3909,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"846:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"850:6:9","memberName":"sender","nodeType":"MemberAccess","src":"846:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3907,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"828:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"828:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3912,"nodeType":"ExpressionStatement","src":"828:29:9"},{"expression":{"arguments":[{"id":3914,"name":"ADMIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"878:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3915,"name":"saleFactoryParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"885:17:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleFactoryParams_$4418_memory_ptr","typeString":"struct IDappadSaleFactory.SaleFactoryParams memory"}},"id":3916,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"903:12:9","memberName":"adminAddress","nodeType":"MemberAccess","referencedDeclaration":4417,"src":"885:30:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3913,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"867:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"867:49:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3918,"nodeType":"ExpressionStatement","src":"867:49:9"}]},"id":3920,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3894,"mutability":"mutable","name":"saleFactoryParams","nameLocation":"724:17:9","nodeType":"VariableDeclaration","scope":3920,"src":"680:61:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SaleFactoryParams_$4418_memory_ptr","typeString":"struct IDappadSaleFactory.SaleFactoryParams"},"typeName":{"id":3893,"nodeType":"UserDefinedTypeName","pathNode":{"id":3892,"name":"IDappadSaleFactory.SaleFactoryParams","nameLocations":["680:18:9","699:17:9"],"nodeType":"IdentifierPath","referencedDeclaration":4418,"src":"680:36:9"},"referencedDeclaration":4418,"src":"680:36:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleFactoryParams_$4418_storage_ptr","typeString":"struct IDappadSaleFactory.SaleFactoryParams"}},"visibility":"internal"}],"src":"679:63:9"},"returnParameters":{"id":3896,"nodeType":"ParameterList","parameters":[],"src":"743:0:9"},"scope":4243,"src":"668:255:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3929,"nodeType":"Block","src":"971:53:9","statements":[{"expression":{"arguments":[{"id":3925,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"997:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3924,"name":"_notZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"981:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"981:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3927,"nodeType":"ExpressionStatement","src":"981:25:9"},{"id":3928,"nodeType":"PlaceholderStatement","src":"1016:1:9"}]},"id":3930,"name":"notZeroAddress","nameLocation":"938:14:9","nodeType":"ModifierDefinition","parameters":{"id":3923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3922,"mutability":"mutable","name":"_address","nameLocation":"961:8:9","nodeType":"VariableDeclaration","scope":3930,"src":"953:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3921,"name":"address","nodeType":"ElementaryTypeName","src":"953:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"952:18:9"},"src":"929:95:9","virtual":false,"visibility":"internal"},{"body":{"id":3939,"nodeType":"Block","src":"1067:48:9","statements":[{"expression":{"arguments":[{"id":3935,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"1088:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3934,"name":"_onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"1077:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$__$","typeString":"function (address) view"}},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1077:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3937,"nodeType":"ExpressionStatement","src":"1077:20:9"},{"id":3938,"nodeType":"PlaceholderStatement","src":"1107:1:9"}]},"id":3940,"name":"onlyOwner","nameLocation":"1039:9:9","nodeType":"ModifierDefinition","parameters":{"id":3933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3932,"mutability":"mutable","name":"_address","nameLocation":"1057:8:9","nodeType":"VariableDeclaration","scope":3940,"src":"1049:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3931,"name":"address","nodeType":"ElementaryTypeName","src":"1049:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1048:18:9"},"src":"1030:85:9","virtual":false,"visibility":"internal"},{"body":{"id":3949,"nodeType":"Block","src":"1165:55:9","statements":[{"expression":{"arguments":[{"id":3945,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"1193:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3944,"name":"_onlyOwnerOrAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"1175:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$__$","typeString":"function (address) view"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1175:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3947,"nodeType":"ExpressionStatement","src":"1175:27:9"},{"id":3948,"nodeType":"PlaceholderStatement","src":"1212:1:9"}]},"id":3950,"name":"onlyOwnerOrAdmin","nameLocation":"1130:16:9","nodeType":"ModifierDefinition","parameters":{"id":3943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3942,"mutability":"mutable","name":"_address","nameLocation":"1155:8:9","nodeType":"VariableDeclaration","scope":3950,"src":"1147:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3941,"name":"address","nodeType":"ElementaryTypeName","src":"1147:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1146:18:9"},"src":"1121:99:9","virtual":false,"visibility":"internal"},{"body":{"id":4124,"nodeType":"Block","src":"1599:1398:9","statements":[{"assignments":[3984],"declarations":[{"constant":false,"id":3984,"mutability":"mutable","name":"saleParams","nameLocation":"1639:10:9","nodeType":"VariableDeclaration","scope":4124,"src":"1609:40:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams"},"typeName":{"id":3983,"nodeType":"UserDefinedTypeName","pathNode":{"id":3982,"name":"IDappadSale.SaleParams","nameLocations":["1609:11:9","1621:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":4564,"src":"1609:22:9"},"referencedDeclaration":4564,"src":"1609:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_storage_ptr","typeString":"struct IDappadSale.SaleParams"}},"visibility":"internal"}],"id":3986,"initialValue":{"id":3985,"name":"_saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"1652:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"nodeType":"VariableDeclarationStatement","src":"1609:54:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"expression":{"expression":{"id":3989,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"1684:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":3990,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1695:4:9","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"1684:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":3991,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1700:11:9","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"1684:27:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_memory_ptr","typeString":"struct IDappadSale.SaleDetails memory"}},"id":3992,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1712:8:9","memberName":"saleName","nodeType":"MemberAccess","referencedDeclaration":4602,"src":"1684:36:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1678:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3987,"name":"bytes","nodeType":"ElementaryTypeName","src":"1678:5:9","typeDescriptions":{}}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1678:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1722:6:9","memberName":"length","nodeType":"MemberAccess","src":"1678:50:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1732:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1678:55:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4003,"nodeType":"IfStatement","src":"1674:120:9","trueBody":{"id":4002,"nodeType":"Block","src":"1735:59:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3997,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"1756:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1763:18:9","memberName":"EmptySaleNameError","nodeType":"MemberAccess","referencedDeclaration":4305,"src":"1756:25:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1756:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4001,"nodeType":"RevertStatement","src":"1749:34:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"expression":{"id":4004,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"1807:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":4005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1818:4:9","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"1807:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":4006,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1823:11:9","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"1807:27:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_memory_ptr","typeString":"struct IDappadSale.SaleDetails memory"}},"id":4007,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1835:9:9","memberName":"saleStart","nodeType":"MemberAccess","referencedDeclaration":4588,"src":"1807:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4008,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1847:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1853:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"1847:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1807:55:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4017,"nodeType":"IfStatement","src":"1803:127:9","trueBody":{"id":4016,"nodeType":"Block","src":"1864:66:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4011,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"1885:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1892:25:9","memberName":"InvalidSaleStartDateError","nodeType":"MemberAccess","referencedDeclaration":4281,"src":"1885:32:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1885:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4015,"nodeType":"RevertStatement","src":"1878:41:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"expression":{"id":4018,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"1943:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":4019,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1954:4:9","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"1943:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":4020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1959:11:9","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"1943:27:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_memory_ptr","typeString":"struct IDappadSale.SaleDetails memory"}},"id":4021,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1971:7:9","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":4590,"src":"1943:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4022,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1981:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1987:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"1981:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1943:53:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4031,"nodeType":"IfStatement","src":"1939:123:9","trueBody":{"id":4030,"nodeType":"Block","src":"1998:64:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4025,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"2019:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2026:23:9","memberName":"InvalidSaleEndDateError","nodeType":"MemberAccess","referencedDeclaration":4283,"src":"2019:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2019:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4029,"nodeType":"RevertStatement","src":"2012:39:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"expression":{"id":4032,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"2075:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":4033,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2086:4:9","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"2075:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":4034,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2091:11:9","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"2075:27:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_memory_ptr","typeString":"struct IDappadSale.SaleDetails memory"}},"id":4035,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2103:9:9","memberName":"saleStart","nodeType":"MemberAccess","referencedDeclaration":4588,"src":"2075:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"expression":{"expression":{"id":4036,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"2116:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":4037,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2127:4:9","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"2116:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":4038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2132:11:9","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"2116:27:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_memory_ptr","typeString":"struct IDappadSale.SaleDetails memory"}},"id":4039,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2144:7:9","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":4590,"src":"2116:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2075:76:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4047,"nodeType":"IfStatement","src":"2071:147:9","trueBody":{"id":4046,"nodeType":"Block","src":"2153:65:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4041,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"2174:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2181:24:9","memberName":"InvalidSaleDurationError","nodeType":"MemberAccess","referencedDeclaration":4285,"src":"2174:31:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4045,"nodeType":"RevertStatement","src":"2167:40:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"expression":{"id":4048,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"2231:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":4049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2242:4:9","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"2231:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":4050,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2247:11:9","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"2231:27:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_memory_ptr","typeString":"struct IDappadSale.SaleDetails memory"}},"id":4051,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2259:19:9","memberName":"maxInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4594,"src":"2231:47:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2282:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2231:52:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4060,"nodeType":"IfStatement","src":"2227:130:9","trueBody":{"id":4059,"nodeType":"Block","src":"2285:72:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4054,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"2306:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2313:31:9","memberName":"InvalidMaxInvestmentAmountError","nodeType":"MemberAccess","referencedDeclaration":4287,"src":"2306:38:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2306:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4058,"nodeType":"RevertStatement","src":"2299:47:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":4061,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"2370:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":4062,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2381:11:9","memberName":"tierDetails","nodeType":"MemberAccess","referencedDeclaration":4563,"src":"2370:22:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SaleTierDetails_$4674_memory_ptr_$dyn_memory_ptr","typeString":"struct IDappadSale.SaleTierDetails memory[] memory"}},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2393:6:9","memberName":"length","nodeType":"MemberAccess","src":"2370:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2403:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2370:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4072,"nodeType":"IfStatement","src":"2366:102:9","trueBody":{"id":4071,"nodeType":"Block","src":"2406:62:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4066,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"2427:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2434:21:9","memberName":"EmptyTierDetailsError","nodeType":"MemberAccess","referencedDeclaration":4307,"src":"2427:28:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2427:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4070,"nodeType":"RevertStatement","src":"2420:37:9"}]}},{"assignments":[4075],"declarations":[{"constant":false,"id":4075,"mutability":"mutable","name":"newSale","nameLocation":"2489:7:9","nodeType":"VariableDeclaration","scope":4124,"src":"2478:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"},"typeName":{"id":4074,"nodeType":"UserDefinedTypeName","pathNode":{"id":4073,"name":"DappadSale","nameLocations":["2478:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":3854,"src":"2478:10:9"},"referencedDeclaration":3854,"src":"2478:10:9","typeDescriptions":{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}},"visibility":"internal"}],"id":4081,"initialValue":{"arguments":[{"id":4079,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"2514:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}],"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"2499:14:9","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_struct$_SaleParams_$4564_memory_ptr_$returns$_t_contract$_DappadSale_$3854_$","typeString":"function (struct IDappadSale.SaleParams memory) returns (contract DappadSale)"},"typeName":{"id":4077,"nodeType":"UserDefinedTypeName","pathNode":{"id":4076,"name":"DappadSale","nameLocations":["2503:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":3854,"src":"2503:10:9"},"referencedDeclaration":3854,"src":"2503:10:9","typeDescriptions":{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}}},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2499:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}},"nodeType":"VariableDeclarationStatement","src":"2478:47:9"},{"expression":{"arguments":[{"arguments":[{"id":4087,"name":"newSale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"2558:7:9","typeDescriptions":{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DappadSale_$3854","typeString":"contract DappadSale"}],"id":4086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2550:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4085,"name":"address","nodeType":"ElementaryTypeName","src":"2550:7:9","typeDescriptions":{}}},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2550:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4082,"name":"allSales","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"2536:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2545:4:9","memberName":"push","nodeType":"MemberAccess","src":"2536:13:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2536:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4090,"nodeType":"ExpressionStatement","src":"2536:31:9"},{"eventCall":{"arguments":[{"expression":{"expression":{"expression":{"id":4092,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"2608:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":4093,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2619:4:9","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"2608:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":4094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2624:11:9","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"2608:27:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_memory_ptr","typeString":"struct IDappadSale.SaleDetails memory"}},"id":4095,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2636:8:9","memberName":"saleName","nodeType":"MemberAccess","referencedDeclaration":4602,"src":"2608:36:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"expression":{"expression":{"id":4096,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"2658:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":4097,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2669:4:9","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"2658:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":4098,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2674:11:9","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"2658:27:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_memory_ptr","typeString":"struct IDappadSale.SaleDetails memory"}},"id":4099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2686:9:9","memberName":"saleStart","nodeType":"MemberAccess","referencedDeclaration":4588,"src":"2658:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"expression":{"id":4100,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"2709:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":4101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2720:4:9","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"2709:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":4102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2725:11:9","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"2709:27:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_memory_ptr","typeString":"struct IDappadSale.SaleDetails memory"}},"id":4103,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2737:7:9","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":4590,"src":"2709:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"expression":{"id":4104,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"2758:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":4105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2769:4:9","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"2758:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":4106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2774:11:9","memberName":"saleDetails","nodeType":"MemberAccess","referencedDeclaration":4567,"src":"2758:27:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_memory_ptr","typeString":"struct IDappadSale.SaleDetails memory"}},"id":4107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2786:19:9","memberName":"maxInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4594,"src":"2758:47:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"expression":{"id":4108,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"2819:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":4109,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2830:4:9","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"2819:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":4110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2835:13:9","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"2819:29:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}},"id":4111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2849:22:9","memberName":"investmentTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4631,"src":"2819:52:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"expression":{"id":4112,"name":"saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"2885:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":4113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2896:4:9","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"2885:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":4114,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2901:13:9","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"2885:29:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}},"id":4115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2915:16:9","memberName":"saleTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4627,"src":"2885:46:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4118,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2953:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_DappadSaleFactory_$4243","typeString":"contract DappadSaleFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DappadSaleFactory_$4243","typeString":"contract DappadSaleFactory"}],"id":4117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2945:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4116,"name":"address","nodeType":"ElementaryTypeName","src":"2945:7:9","typeDescriptions":{}}},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2945:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4091,"name":"SaleCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"2583:11:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (string memory,uint256,uint256,uint256,address,address,address)"}},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2583:385:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4121,"nodeType":"EmitStatement","src":"2578:390:9"},{"expression":{"hexValue":"74727565","id":4122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2986:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3979,"id":4123,"nodeType":"Return","src":"2979:11:9"}]},"functionSelector":"e084ae23","id":4125,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":3956,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1329:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1333:6:9","memberName":"sender","nodeType":"MemberAccess","src":"1329:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3958,"kind":"modifierInvocation","modifierName":{"id":3955,"name":"onlyOwnerOrAdmin","nameLocations":["1312:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":3950,"src":"1312:16:9"},"nodeType":"ModifierInvocation","src":"1312:28:9"},{"arguments":[{"expression":{"expression":{"expression":{"id":3960,"name":"_saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"1364:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":3961,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1376:4:9","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"1364:16:9","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":3962,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1381:13:9","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"1364:30:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}},"id":3963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1395:22:9","memberName":"investmentTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4631,"src":"1364:53:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3964,"kind":"modifierInvocation","modifierName":{"id":3959,"name":"notZeroAddress","nameLocations":["1349:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":3930,"src":"1349:14:9"},"nodeType":"ModifierInvocation","src":"1349:69:9"},{"arguments":[{"expression":{"expression":{"expression":{"id":3966,"name":"_saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"1442:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":3967,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1454:4:9","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"1442:16:9","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":3968,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1459:13:9","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"1442:30:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}},"id":3969,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1473:22:9","memberName":"projectOwnerFeeAddress","nodeType":"MemberAccess","referencedDeclaration":4647,"src":"1442:53:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3970,"kind":"modifierInvocation","modifierName":{"id":3965,"name":"notZeroAddress","nameLocations":["1427:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":3930,"src":"1427:14:9"},"nodeType":"ModifierInvocation","src":"1427:69:9"},{"arguments":[{"expression":{"expression":{"expression":{"id":3972,"name":"_saleParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"1520:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams memory"}},"id":3973,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1532:4:9","memberName":"sale","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"1520:16:9","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_memory_ptr","typeString":"struct IDappadSale.Sale memory"}},"id":3974,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1537:13:9","memberName":"saleAddresses","nodeType":"MemberAccess","referencedDeclaration":4579,"src":"1520:30:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_memory_ptr","typeString":"struct IDappadSale.SaleAddresses memory"}},"id":3975,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1551:19:9","memberName":"launchpadFeeAddress","nodeType":"MemberAccess","referencedDeclaration":4645,"src":"1520:50:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3976,"kind":"modifierInvocation","modifierName":{"id":3971,"name":"notZeroAddress","nameLocations":["1505:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":3930,"src":"1505:14:9"},"nodeType":"ModifierInvocation","src":"1505:66:9"}],"name":"createSale","nameLocation":"1235:10:9","nodeType":"FunctionDefinition","parameters":{"id":3954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3953,"mutability":"mutable","name":"_saleParams","nameLocation":"1276:11:9","nodeType":"VariableDeclaration","scope":4125,"src":"1246:41:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_memory_ptr","typeString":"struct IDappadSale.SaleParams"},"typeName":{"id":3952,"nodeType":"UserDefinedTypeName","pathNode":{"id":3951,"name":"IDappadSale.SaleParams","nameLocations":["1246:11:9","1258:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":4564,"src":"1246:22:9"},"referencedDeclaration":4564,"src":"1246:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_SaleParams_$4564_storage_ptr","typeString":"struct IDappadSale.SaleParams"}},"visibility":"internal"}],"src":"1245:43:9"},"returnParameters":{"id":3979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4125,"src":"1589:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3977,"name":"bool","nodeType":"ElementaryTypeName","src":"1589:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1588:6:9"},"scope":4243,"src":"1226:1771:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4133,"nodeType":"Block","src":"3059:39:9","statements":[{"expression":{"expression":{"id":4130,"name":"allSales","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"3076:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3085:6:9","memberName":"length","nodeType":"MemberAccess","src":"3076:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4129,"id":4132,"nodeType":"Return","src":"3069:22:9"}]},"functionSelector":"c24521c6","id":4134,"implemented":true,"kind":"function","modifiers":[],"name":"getSaleCount","nameLocation":"3012:12:9","nodeType":"FunctionDefinition","parameters":{"id":4126,"nodeType":"ParameterList","parameters":[],"src":"3024:2:9"},"returnParameters":{"id":4129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4134,"src":"3050:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4127,"name":"uint256","nodeType":"ElementaryTypeName","src":"3050:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3049:9:9"},"scope":4243,"src":"3003:95:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4156,"nodeType":"Block","src":"3168:140:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4141,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"3182:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":4142,"name":"allSales","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"3191:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3200:6:9","memberName":"length","nodeType":"MemberAccess","src":"3191:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3182:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4151,"nodeType":"IfStatement","src":"3178:92:9","trueBody":{"id":4150,"nodeType":"Block","src":"3208:62:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4145,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"3229:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3236:21:9","memberName":"InvalidSaleIndexError","nodeType":"MemberAccess","referencedDeclaration":4291,"src":"3229:28:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3229:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4149,"nodeType":"RevertStatement","src":"3222:37:9"}]}},{"expression":{"baseExpression":{"id":4152,"name":"allSales","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"3286:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4154,"indexExpression":{"id":4153,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"3295:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3286:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4140,"id":4155,"nodeType":"Return","src":"3279:22:9"}]},"functionSelector":"d8f6d596","id":4157,"implemented":true,"kind":"function","modifiers":[],"name":"getSale","nameLocation":"3113:7:9","nodeType":"FunctionDefinition","parameters":{"id":4137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4136,"mutability":"mutable","name":"index","nameLocation":"3129:5:9","nodeType":"VariableDeclaration","scope":4157,"src":"3121:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4135,"name":"uint256","nodeType":"ElementaryTypeName","src":"3121:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3120:15:9"},"returnParameters":{"id":4140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4157,"src":"3159:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4138,"name":"address","nodeType":"ElementaryTypeName","src":"3159:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3158:9:9"},"scope":4243,"src":"3104:204:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4183,"nodeType":"Block","src":"3383:171:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4164,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"3397:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":4165,"name":"allSales","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"3406:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3415:6:9","memberName":"length","nodeType":"MemberAccess","src":"3406:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3397:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4174,"nodeType":"IfStatement","src":"3393:92:9","trueBody":{"id":4173,"nodeType":"Block","src":"3423:62:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4168,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"3444:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3451:21:9","memberName":"InvalidSaleIndexError","nodeType":"MemberAccess","referencedDeclaration":4291,"src":"3444:28:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3444:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4172,"nodeType":"RevertStatement","src":"3437:37:9"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"baseExpression":{"id":4176,"name":"allSales","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"3513:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4178,"indexExpression":{"id":4177,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"3522:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3513:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4175,"name":"IDappadSale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"3501:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDappadSale_$4714_$","typeString":"type(contract IDappadSale)"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IDappadSale_$4714","typeString":"contract IDappadSale"}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3530:15:9","memberName":"getIsSaleActive","nodeType":"MemberAccess","referencedDeclaration":4684,"src":"3501:44:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bool_$","typeString":"function () view external returns (bool)"}},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4163,"id":4182,"nodeType":"Return","src":"3494:53:9"}]},"functionSelector":"dfd2724e","id":4184,"implemented":true,"kind":"function","modifiers":[],"name":"getIsSaleActive","nameLocation":"3323:15:9","nodeType":"FunctionDefinition","parameters":{"id":4160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4159,"mutability":"mutable","name":"index","nameLocation":"3347:5:9","nodeType":"VariableDeclaration","scope":4184,"src":"3339:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4158,"name":"uint256","nodeType":"ElementaryTypeName","src":"3339:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3338:15:9"},"returnParameters":{"id":4163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4184,"src":"3377:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4161,"name":"bool","nodeType":"ElementaryTypeName","src":"3377:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3376:6:9"},"scope":4243,"src":"3314:240:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4201,"nodeType":"Block","src":"3617:77:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4189,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"3631:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3651:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3643:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4190,"name":"address","nodeType":"ElementaryTypeName","src":"3643:7:9","typeDescriptions":{}}},"id":4193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3643:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3631:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4200,"nodeType":"IfStatement","src":"3627:60:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4195,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"3662:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3669:16:9","memberName":"ZeroAddressError","nodeType":"MemberAccess","referencedDeclaration":4247,"src":"3662:23:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3662:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4199,"nodeType":"RevertStatement","src":"3655:32:9"}}]},"id":4202,"implemented":true,"kind":"function","modifiers":[],"name":"_notZeroAddress","nameLocation":"3569:15:9","nodeType":"FunctionDefinition","parameters":{"id":4187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4186,"mutability":"mutable","name":"_address","nameLocation":"3593:8:9","nodeType":"VariableDeclaration","scope":4202,"src":"3585:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4185,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3584:18:9"},"returnParameters":{"id":4188,"nodeType":"ParameterList","parameters":[],"src":"3617:0:9"},"scope":4243,"src":"3560:134:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4218,"nodeType":"Block","src":"3752:81:9","statements":[{"condition":{"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3766:25:9","subExpression":{"arguments":[{"id":4208,"name":"OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"3775:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4209,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"3782:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4207,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3767:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3767:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4217,"nodeType":"IfStatement","src":"3762:64:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4212,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"3800:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3807:17:9","memberName":"UnauthorizedError","nodeType":"MemberAccess","referencedDeclaration":4249,"src":"3800:24:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4216,"nodeType":"RevertStatement","src":"3793:33:9"}}]},"id":4219,"implemented":true,"kind":"function","modifiers":[],"name":"_onlyOwner","nameLocation":"3709:10:9","nodeType":"FunctionDefinition","parameters":{"id":4205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4204,"mutability":"mutable","name":"_address","nameLocation":"3728:8:9","nodeType":"VariableDeclaration","scope":4219,"src":"3720:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4203,"name":"address","nodeType":"ElementaryTypeName","src":"3720:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3719:18:9"},"returnParameters":{"id":4206,"nodeType":"ParameterList","parameters":[],"src":"3752:0:9"},"scope":4243,"src":"3700:133:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4241,"nodeType":"Block","src":"3898:110:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3912:25:9","subExpression":{"arguments":[{"id":4225,"name":"OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"3921:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4226,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"3928:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4224,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3913:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3941:25:9","subExpression":{"arguments":[{"id":4230,"name":"ADMIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"3950:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4231,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"3957:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4229,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3942:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3942:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3912:54:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4240,"nodeType":"IfStatement","src":"3908:93:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4235,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"3975:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4392_$","typeString":"type(contract Errors)"}},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3982:17:9","memberName":"UnauthorizedError","nodeType":"MemberAccess","referencedDeclaration":4249,"src":"3975:24:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4239,"nodeType":"RevertStatement","src":"3968:33:9"}}]},"id":4242,"implemented":true,"kind":"function","modifiers":[],"name":"_onlyOwnerOrAdmin","nameLocation":"3848:17:9","nodeType":"FunctionDefinition","parameters":{"id":4222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4221,"mutability":"mutable","name":"_address","nameLocation":"3874:8:9","nodeType":"VariableDeclaration","scope":4242,"src":"3866:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4220,"name":"address","nodeType":"ElementaryTypeName","src":"3866:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3865:18:9"},"returnParameters":{"id":4223,"nodeType":"ParameterList","parameters":[],"src":"3898:0:9"},"scope":4243,"src":"3839:169:9","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4244,"src":"215:3795:9","usedErrors":[305,308,4247,4249,4281,4283,4285,4287,4291,4305,4307],"usedEvents":[317,326,335,3891]}],"src":"33:3977:9"}},"contracts/errors/Errors.sol":{"id":10,"ast":{"absolutePath":"contracts/errors/Errors.sol","exportedSymbols":{"Errors":[4392]},"id":4393,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4245,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"33:23:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4392,"linearizedBaseContracts":[4392],"name":"Errors","nameLocation":"76:6:10","nodeType":"ContractDefinition","nodes":[{"errorSelector":"3efa09af","id":4247,"name":"ZeroAddressError","nameLocation":"95:16:10","nodeType":"ErrorDefinition","parameters":{"id":4246,"nodeType":"ParameterList","parameters":[],"src":"111:2:10"},"src":"89:25:10"},{"errorSelector":"8b5701f7","id":4249,"name":"UnauthorizedError","nameLocation":"125:17:10","nodeType":"ErrorDefinition","parameters":{"id":4248,"nodeType":"ParameterList","parameters":[],"src":"142:2:10"},"src":"119:26:10"},{"errorSelector":"f83e23f5","id":4251,"name":"TokenTransferFailedError","nameLocation":"156:24:10","nodeType":"ErrorDefinition","parameters":{"id":4250,"nodeType":"ParameterList","parameters":[],"src":"180:2:10"},"src":"150:33:10"},{"errorSelector":"0f9e68e6","id":4253,"name":"ArraysLengthMismatchError","nameLocation":"194:25:10","nodeType":"ErrorDefinition","parameters":{"id":4252,"nodeType":"ParameterList","parameters":[],"src":"219:2:10"},"src":"188:34:10"},{"errorSelector":"98c6aeab","id":4255,"name":"NotEnabledError","nameLocation":"233:15:10","nodeType":"ErrorDefinition","parameters":{"id":4254,"nodeType":"ParameterList","parameters":[],"src":"248:2:10"},"src":"227:24:10"},{"errorSelector":"384d3c59","id":4257,"name":"InsufficientBalanceError","nameLocation":"263:24:10","nodeType":"ErrorDefinition","parameters":{"id":4256,"nodeType":"ParameterList","parameters":[],"src":"287:2:10"},"src":"257:33:10"},{"errorSelector":"e23f04e1","id":4259,"name":"InsufficientContractBalanceError","nameLocation":"301:32:10","nodeType":"ErrorDefinition","parameters":{"id":4258,"nodeType":"ParameterList","parameters":[],"src":"333:2:10"},"src":"295:41:10"},{"errorSelector":"73a74a78","id":4261,"name":"InsufficientAllowanceError","nameLocation":"347:26:10","nodeType":"ErrorDefinition","parameters":{"id":4260,"nodeType":"ParameterList","parameters":[],"src":"373:2:10"},"src":"341:35:10"},{"errorSelector":"093496e6","id":4263,"name":"UserHasNoNFTError","nameLocation":"387:17:10","nodeType":"ErrorDefinition","parameters":{"id":4262,"nodeType":"ParameterList","parameters":[],"src":"404:2:10"},"src":"381:26:10"},{"errorSelector":"50754704","id":4265,"name":"UserNotRegisteredError","nameLocation":"418:22:10","nodeType":"ErrorDefinition","parameters":{"id":4264,"nodeType":"ParameterList","parameters":[],"src":"440:2:10"},"src":"412:31:10"},{"errorSelector":"d3c27975","id":4267,"name":"UserAlreadyRegisteredError","nameLocation":"454:26:10","nodeType":"ErrorDefinition","parameters":{"id":4266,"nodeType":"ParameterList","parameters":[],"src":"480:2:10"},"src":"448:35:10"},{"errorSelector":"bab3af0b","id":4269,"name":"RegisterNotStartedError","nameLocation":"494:23:10","nodeType":"ErrorDefinition","parameters":{"id":4268,"nodeType":"ParameterList","parameters":[],"src":"517:2:10"},"src":"488:32:10"},{"errorSelector":"a82a69f8","id":4271,"name":"MaxTierInvestmentReachedError","nameLocation":"531:29:10","nodeType":"ErrorDefinition","parameters":{"id":4270,"nodeType":"ParameterList","parameters":[],"src":"560:2:10"},"src":"525:38:10"},{"errorSelector":"4ce4fc26","id":4273,"name":"RegisterAlreadyEndedError","nameLocation":"574:25:10","nodeType":"ErrorDefinition","parameters":{"id":4272,"nodeType":"ParameterList","parameters":[],"src":"599:2:10"},"src":"568:34:10"},{"errorSelector":"6f6fd835","id":4275,"name":"TierOneCannotJoinStakerRoundError","nameLocation":"613:33:10","nodeType":"ErrorDefinition","parameters":{"id":4274,"nodeType":"ParameterList","parameters":[],"src":"646:2:10"},"src":"607:42:10"},{"errorSelector":"7a8d6428","id":4277,"name":"InvalidAmountError","nameLocation":"661:18:10","nodeType":"ErrorDefinition","parameters":{"id":4276,"nodeType":"ParameterList","parameters":[],"src":"679:2:10"},"src":"655:27:10"},{"errorSelector":"7dbc322c","id":4279,"name":"InvalidTierIndexError","nameLocation":"693:21:10","nodeType":"ErrorDefinition","parameters":{"id":4278,"nodeType":"ParameterList","parameters":[],"src":"714:2:10"},"src":"687:30:10"},{"errorSelector":"070dcd44","id":4281,"name":"InvalidSaleStartDateError","nameLocation":"728:25:10","nodeType":"ErrorDefinition","parameters":{"id":4280,"nodeType":"ParameterList","parameters":[],"src":"753:2:10"},"src":"722:34:10"},{"errorSelector":"7f9b37b2","id":4283,"name":"InvalidSaleEndDateError","nameLocation":"767:23:10","nodeType":"ErrorDefinition","parameters":{"id":4282,"nodeType":"ParameterList","parameters":[],"src":"790:2:10"},"src":"761:32:10"},{"errorSelector":"1e672f3b","id":4285,"name":"InvalidSaleDurationError","nameLocation":"804:24:10","nodeType":"ErrorDefinition","parameters":{"id":4284,"nodeType":"ParameterList","parameters":[],"src":"828:2:10"},"src":"798:33:10"},{"errorSelector":"e14abd8f","id":4287,"name":"InvalidMaxInvestmentAmountError","nameLocation":"842:31:10","nodeType":"ErrorDefinition","parameters":{"id":4286,"nodeType":"ParameterList","parameters":[],"src":"873:2:10"},"src":"836:40:10"},{"errorSelector":"28cec4b6","id":4289,"name":"InvalidVestingDurationError","nameLocation":"887:27:10","nodeType":"ErrorDefinition","parameters":{"id":4288,"nodeType":"ParameterList","parameters":[],"src":"914:2:10"},"src":"881:36:10"},{"errorSelector":"62510e8f","id":4291,"name":"InvalidSaleIndexError","nameLocation":"928:21:10","nodeType":"ErrorDefinition","parameters":{"id":4290,"nodeType":"ParameterList","parameters":[],"src":"949:2:10"},"src":"922:30:10"},{"errorSelector":"690cd635","id":4293,"name":"InvalidVestingIndexError","nameLocation":"963:24:10","nodeType":"ErrorDefinition","parameters":{"id":4292,"nodeType":"ParameterList","parameters":[],"src":"987:2:10"},"src":"957:33:10"},{"errorSelector":"d2b13237","id":4295,"name":"InvalidStakeContractAddressError","nameLocation":"1001:32:10","nodeType":"ErrorDefinition","parameters":{"id":4294,"nodeType":"ParameterList","parameters":[],"src":"1033:2:10"},"src":"995:41:10"},{"errorSelector":"42477839","id":4297,"name":"InvalidInterestRateError","nameLocation":"1048:24:10","nodeType":"ErrorDefinition","parameters":{"id":4296,"nodeType":"ParameterList","parameters":[],"src":"1072:2:10"},"src":"1042:33:10"},{"errorSelector":"2de8ce6f","id":4299,"name":"InvalidLockDurationError","nameLocation":"1086:24:10","nodeType":"ErrorDefinition","parameters":{"id":4298,"nodeType":"ParameterList","parameters":[],"src":"1110:2:10"},"src":"1080:33:10"},{"errorSelector":"093424cc","id":4301,"name":"InvalidPaymasterInputLengthError","nameLocation":"1125:32:10","nodeType":"ErrorDefinition","parameters":{"id":4300,"nodeType":"ParameterList","parameters":[],"src":"1157:2:10"},"src":"1119:41:10"},{"errorSelector":"9f12e874","id":4303,"name":"InvalidTokenError","nameLocation":"1171:17:10","nodeType":"ErrorDefinition","parameters":{"id":4302,"nodeType":"ParameterList","parameters":[],"src":"1188:2:10"},"src":"1165:26:10"},{"errorSelector":"1cfd4015","id":4305,"name":"EmptySaleNameError","nameLocation":"1203:18:10","nodeType":"ErrorDefinition","parameters":{"id":4304,"nodeType":"ParameterList","parameters":[],"src":"1221:2:10"},"src":"1197:27:10"},{"errorSelector":"ed4d9fcc","id":4307,"name":"EmptyTierDetailsError","nameLocation":"1235:21:10","nodeType":"ErrorDefinition","parameters":{"id":4306,"nodeType":"ParameterList","parameters":[],"src":"1256:2:10"},"src":"1229:30:10"},{"errorSelector":"2729bb34","id":4309,"name":"EmptyVestingPercentageError","nameLocation":"1270:27:10","nodeType":"ErrorDefinition","parameters":{"id":4308,"nodeType":"ParameterList","parameters":[],"src":"1297:2:10"},"src":"1264:36:10"},{"errorSelector":"e9715102","id":4311,"name":"TotalVestingPercentageError","nameLocation":"1311:27:10","nodeType":"ErrorDefinition","parameters":{"id":4310,"nodeType":"ParameterList","parameters":[],"src":"1338:2:10"},"src":"1305:36:10"},{"errorSelector":"1bcb7a5c","id":4313,"name":"FailedToAddToken","nameLocation":"1353:16:10","nodeType":"ErrorDefinition","parameters":{"id":4312,"nodeType":"ParameterList","parameters":[],"src":"1369:2:10"},"src":"1347:25:10"},{"errorSelector":"6f36ba6f","id":4315,"name":"SaleNotStartedError","nameLocation":"1383:19:10","nodeType":"ErrorDefinition","parameters":{"id":4314,"nodeType":"ParameterList","parameters":[],"src":"1402:2:10"},"src":"1377:28:10"},{"errorSelector":"68a5e0cb","id":4317,"name":"SaleNotEndedError","nameLocation":"1416:17:10","nodeType":"ErrorDefinition","parameters":{"id":4316,"nodeType":"ParameterList","parameters":[],"src":"1433:2:10"},"src":"1410:26:10"},{"errorSelector":"6b62c0a5","id":4319,"name":"SaleAlreadyEndedError","nameLocation":"1447:21:10","nodeType":"ErrorDefinition","parameters":{"id":4318,"nodeType":"ParameterList","parameters":[],"src":"1468:2:10"},"src":"1441:30:10"},{"errorSelector":"2f0e159d","id":4321,"name":"NotJoinedSaleError","nameLocation":"1482:18:10","nodeType":"ErrorDefinition","parameters":{"id":4320,"nodeType":"ParameterList","parameters":[],"src":"1500:2:10"},"src":"1476:27:10"},{"errorSelector":"252adcf9","id":4323,"name":"AlreadyJoinedSaleError","nameLocation":"1514:22:10","nodeType":"ErrorDefinition","parameters":{"id":4322,"nodeType":"ParameterList","parameters":[],"src":"1536:2:10"},"src":"1508:31:10"},{"errorSelector":"778ba6f7","id":4325,"name":"SaleIsPausedError","nameLocation":"1550:17:10","nodeType":"ErrorDefinition","parameters":{"id":4324,"nodeType":"ParameterList","parameters":[],"src":"1567:2:10"},"src":"1544:26:10"},{"errorSelector":"07d5746f","id":4327,"name":"UserHasNoNFTsError","nameLocation":"1581:18:10","nodeType":"ErrorDefinition","parameters":{"id":4326,"nodeType":"ParameterList","parameters":[],"src":"1599:2:10"},"src":"1575:27:10"},{"errorSelector":"919ace34","id":4329,"name":"FCFSSaleNotEnabledError","nameLocation":"1614:23:10","nodeType":"ErrorDefinition","parameters":{"id":4328,"nodeType":"ParameterList","parameters":[],"src":"1637:2:10"},"src":"1608:32:10"},{"errorSelector":"4e135726","id":4331,"name":"FCFSSaleNotStartedError","nameLocation":"1651:23:10","nodeType":"ErrorDefinition","parameters":{"id":4330,"nodeType":"ParameterList","parameters":[],"src":"1674:2:10"},"src":"1645:32:10"},{"errorSelector":"61a63aad","id":4333,"name":"FCFSSaleAlreadyStartedError","nameLocation":"1688:27:10","nodeType":"ErrorDefinition","parameters":{"id":4332,"nodeType":"ParameterList","parameters":[],"src":"1715:2:10"},"src":"1682:36:10"},{"errorSelector":"766bbb51","id":4335,"name":"FirstVestingAlreadyClaimedError","nameLocation":"1729:31:10","nodeType":"ErrorDefinition","parameters":{"id":4334,"nodeType":"ParameterList","parameters":[],"src":"1760:2:10"},"src":"1723:40:10"},{"errorSelector":"8f78e530","id":4337,"name":"VestingsNotClaimableError","nameLocation":"1774:25:10","nodeType":"ErrorDefinition","parameters":{"id":4336,"nodeType":"ParameterList","parameters":[],"src":"1799:2:10"},"src":"1768:34:10"},{"errorSelector":"16203c04","id":4339,"name":"UserNotWhitelistedError","nameLocation":"1814:23:10","nodeType":"ErrorDefinition","parameters":{"id":4338,"nodeType":"ParameterList","parameters":[],"src":"1837:2:10"},"src":"1808:32:10"},{"errorSelector":"ba4c4493","id":4341,"name":"MinimumInvestmentNotReachedError","nameLocation":"1852:32:10","nodeType":"ErrorDefinition","parameters":{"id":4340,"nodeType":"ParameterList","parameters":[],"src":"1884:2:10"},"src":"1846:41:10"},{"errorSelector":"ecb54fbe","id":4343,"name":"MaximumInvestmentReachedError","nameLocation":"1898:29:10","nodeType":"ErrorDefinition","parameters":{"id":4342,"nodeType":"ParameterList","parameters":[],"src":"1927:2:10"},"src":"1892:38:10"},{"errorSelector":"f39595f9","id":4345,"name":"MaxTotalInvestmentReachedError","nameLocation":"1941:30:10","nodeType":"ErrorDefinition","parameters":{"id":4344,"nodeType":"ParameterList","parameters":[],"src":"1971:2:10"},"src":"1935:39:10"},{"errorSelector":"9b207309","id":4347,"name":"MaxNodeCountReachedError","nameLocation":"1985:24:10","nodeType":"ErrorDefinition","parameters":{"id":4346,"nodeType":"ParameterList","parameters":[],"src":"2009:2:10"},"src":"1979:33:10"},{"errorSelector":"23178682","id":4349,"name":"MaxNodeCountPerUserReachedError","nameLocation":"2023:31:10","nodeType":"ErrorDefinition","parameters":{"id":4348,"nodeType":"ParameterList","parameters":[],"src":"2054:2:10"},"src":"2017:40:10"},{"errorSelector":"9b2a6ce4","id":4351,"name":"MinimumNodeTierNotReachedError","nameLocation":"2068:30:10","nodeType":"ErrorDefinition","parameters":{"id":4350,"nodeType":"ParameterList","parameters":[],"src":"2098:2:10"},"src":"2062:39:10"},{"errorSelector":"91279a1d","id":4353,"name":"MaximumNodeTierReachedError","nameLocation":"2112:27:10","nodeType":"ErrorDefinition","parameters":{"id":4352,"nodeType":"ParameterList","parameters":[],"src":"2139:2:10"},"src":"2106:36:10"},{"errorSelector":"64120d87","id":4355,"name":"MinimumUserTierNotReachedError","nameLocation":"2153:30:10","nodeType":"ErrorDefinition","parameters":{"id":4354,"nodeType":"ParameterList","parameters":[],"src":"2183:2:10"},"src":"2147:39:10"},{"errorSelector":"8d8fcf06","id":4357,"name":"RefundNotEnabledError","nameLocation":"2198:21:10","nodeType":"ErrorDefinition","parameters":{"id":4356,"nodeType":"ParameterList","parameters":[],"src":"2219:2:10"},"src":"2192:30:10"},{"errorSelector":"e7985113","id":4359,"name":"RefundPeriodOverError","nameLocation":"2233:21:10","nodeType":"ErrorDefinition","parameters":{"id":4358,"nodeType":"ParameterList","parameters":[],"src":"2254:2:10"},"src":"2227:30:10"},{"errorSelector":"8c85e4bc","id":4361,"name":"AlreadyRefundedError","nameLocation":"2268:20:10","nodeType":"ErrorDefinition","parameters":{"id":4360,"nodeType":"ParameterList","parameters":[],"src":"2288:2:10"},"src":"2262:29:10"},{"errorSelector":"5f1e377d","id":4363,"name":"AlreadyClaimedError","nameLocation":"2303:19:10","nodeType":"ErrorDefinition","parameters":{"id":4362,"nodeType":"ParameterList","parameters":[],"src":"2322:2:10"},"src":"2297:28:10"},{"errorSelector":"23ec979c","id":4365,"name":"VestingNotClaimableError","nameLocation":"2336:24:10","nodeType":"ErrorDefinition","parameters":{"id":4364,"nodeType":"ParameterList","parameters":[],"src":"2360:2:10"},"src":"2330:33:10"},{"errorSelector":"18f97b98","id":4367,"name":"NoTierDetailsFoundError","nameLocation":"2374:23:10","nodeType":"ErrorDefinition","parameters":{"id":4366,"nodeType":"ParameterList","parameters":[],"src":"2397:2:10"},"src":"2368:32:10"},{"errorSelector":"4a51cc46","id":4369,"name":"UserHasNoStakedAmountError","nameLocation":"2412:26:10","nodeType":"ErrorDefinition","parameters":{"id":4368,"nodeType":"ParameterList","parameters":[],"src":"2438:2:10"},"src":"2406:35:10"},{"errorSelector":"df509110","id":4371,"name":"StakePeriodNotOverError","nameLocation":"2452:23:10","nodeType":"ErrorDefinition","parameters":{"id":4370,"nodeType":"ParameterList","parameters":[],"src":"2475:2:10"},"src":"2446:32:10"},{"errorSelector":"05e1fcb7","id":4373,"name":"StakeIsPausedError","nameLocation":"2489:18:10","nodeType":"ErrorDefinition","parameters":{"id":4372,"nodeType":"ParameterList","parameters":[],"src":"2507:2:10"},"src":"2483:27:10"},{"errorSelector":"a9a32530","id":4375,"name":"InvalidStakeIndexError","nameLocation":"2521:22:10","nodeType":"ErrorDefinition","parameters":{"id":4374,"nodeType":"ParameterList","parameters":[],"src":"2543:2:10"},"src":"2515:31:10"},{"errorSelector":"ae21ad84","id":4377,"name":"NoRewardToHarvestError","nameLocation":"2557:22:10","nodeType":"ErrorDefinition","parameters":{"id":4376,"nodeType":"ParameterList","parameters":[],"src":"2579:2:10"},"src":"2551:31:10"},{"errorSelector":"fb8aeeb0","id":4379,"name":"NoRewardToReInvestError","nameLocation":"2593:23:10","nodeType":"ErrorDefinition","parameters":{"id":4378,"nodeType":"ParameterList","parameters":[],"src":"2616:2:10"},"src":"2587:32:10"},{"errorSelector":"d89c1562","id":4381,"name":"MinimumStakePointsNotReachedError","nameLocation":"2630:33:10","nodeType":"ErrorDefinition","parameters":{"id":4380,"nodeType":"ParameterList","parameters":[],"src":"2663:2:10"},"src":"2624:42:10"},{"errorSelector":"7689c407","id":4383,"name":"OnlyBootloaderError","nameLocation":"2678:19:10","nodeType":"ErrorDefinition","parameters":{"id":4382,"nodeType":"ParameterList","parameters":[],"src":"2697:2:10"},"src":"2672:28:10"},{"errorSelector":"092b9694","id":4385,"name":"TxTransferFailedError","nameLocation":"2711:21:10","nodeType":"ErrorDefinition","parameters":{"id":4384,"nodeType":"ParameterList","parameters":[],"src":"2732:2:10"},"src":"2705:30:10"},{"errorSelector":"ed1cead2","id":4387,"name":"UnsupportedPaymasterFlowError","nameLocation":"2746:29:10","nodeType":"ErrorDefinition","parameters":{"id":4386,"nodeType":"ParameterList","parameters":[],"src":"2775:2:10"},"src":"2740:38:10"},{"errorSelector":"f598682c","id":4389,"name":"EmergencyOverRewardError","nameLocation":"2790:24:10","nodeType":"ErrorDefinition","parameters":{"id":4388,"nodeType":"ParameterList","parameters":[],"src":"2814:2:10"},"src":"2784:33:10"},{"errorSelector":"f20478a4","id":4391,"name":"EmergencyOverAmountError","nameLocation":"2828:24:10","nodeType":"ErrorDefinition","parameters":{"id":4390,"nodeType":"ParameterList","parameters":[],"src":"2852:2:10"},"src":"2822:33:10"}],"scope":4393,"src":"58:2799:10","usedErrors":[4247,4249,4251,4253,4255,4257,4259,4261,4263,4265,4267,4269,4271,4273,4275,4277,4279,4281,4283,4285,4287,4289,4291,4293,4295,4297,4299,4301,4303,4305,4307,4309,4311,4313,4315,4317,4319,4321,4323,4325,4327,4329,4331,4333,4335,4337,4339,4341,4343,4345,4347,4349,4351,4353,4355,4357,4359,4361,4363,4365,4367,4369,4371,4373,4375,4377,4379,4381,4383,4385,4387,4389,4391],"usedEvents":[]}],"src":"33:2824:10"}},"contracts/interfaces/Interfaces.sol":{"id":11,"ast":{"absolutePath":"contracts/interfaces/Interfaces.sol","exportedSymbols":{"IDappadSale":[4714],"IDappadSaleFactory":[4419],"IDappadStake":[4556],"IDappadStakeController":[4487],"IDappadStakeControllerFactory":[4431],"IDappadStakeFactory":[4427],"IDappadVesting":[4800],"IDappadVestingFactory":[4423],"IERC165":[1176],"IERC20":[456],"IERC20Extented":[4404],"IERC721":[573],"IERC721Extented":[4415]},"id":4801,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4394,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"33:23:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4395,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4801,"sourceUnit":457,"src":"58:56:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":4396,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4801,"sourceUnit":574,"src":"115:58:11","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4397,"name":"IERC20","nameLocations":["211:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":456,"src":"211:6:11"},"id":4398,"nodeType":"InheritanceSpecifier","src":"211:6:11"}],"canonicalName":"IERC20Extented","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":4404,"linearizedBaseContracts":[4404,456],"name":"IERC20Extented","nameLocation":"193:14:11","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":4403,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"233:8:11","nodeType":"FunctionDefinition","parameters":{"id":4399,"nodeType":"ParameterList","parameters":[],"src":"241:2:11"},"returnParameters":{"id":4402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4403,"src":"273:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4400,"name":"uint8","nodeType":"ElementaryTypeName","src":"273:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"272:7:11"},"scope":4404,"src":"224:56:11","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4801,"src":"175:108:11","usedErrors":[],"usedEvents":[390,399]},{"abstract":true,"baseContracts":[{"baseName":{"id":4405,"name":"IERC721","nameLocations":["322:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":573,"src":"322:7:11"},"id":4406,"nodeType":"InheritanceSpecifier","src":"322:7:11"}],"canonicalName":"IERC721Extented","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":4415,"linearizedBaseContracts":[4415,573,1176],"name":"IERC721Extented","nameLocation":"303:15:11","nodeType":"ContractDefinition","nodes":[{"functionSelector":"8462151c","id":4414,"implemented":false,"kind":"function","modifiers":[],"name":"tokensOfOwner","nameLocation":"345:13:11","nodeType":"FunctionDefinition","parameters":{"id":4409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4408,"mutability":"mutable","name":"owner","nameLocation":"367:5:11","nodeType":"VariableDeclaration","scope":4414,"src":"359:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4407,"name":"address","nodeType":"ElementaryTypeName","src":"359:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"358:15:11"},"returnParameters":{"id":4413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4414,"src":"405:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4410,"name":"uint256","nodeType":"ElementaryTypeName","src":"405:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4411,"nodeType":"ArrayTypeName","src":"405:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"404:18:11"},"scope":4415,"src":"336:87:11","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":4801,"src":"285:140:11","usedErrors":[],"usedEvents":[472,481,490]},{"abstract":false,"baseContracts":[],"canonicalName":"IDappadSaleFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":true,"id":4419,"linearizedBaseContracts":[4419],"name":"IDappadSaleFactory","nameLocation":"437:18:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IDappadSaleFactory.SaleFactoryParams","id":4418,"members":[{"constant":false,"id":4417,"mutability":"mutable","name":"adminAddress","nameLocation":"505:12:11","nodeType":"VariableDeclaration","scope":4418,"src":"497:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4416,"name":"address","nodeType":"ElementaryTypeName","src":"497:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"SaleFactoryParams","nameLocation":"469:17:11","nodeType":"StructDefinition","scope":4419,"src":"462:62:11","visibility":"public"}],"scope":4801,"src":"427:99:11","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IDappadVestingFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":true,"id":4423,"linearizedBaseContracts":[4423],"name":"IDappadVestingFactory","nameLocation":"538:21:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IDappadVestingFactory.VestingFactoryParams","id":4422,"members":[{"constant":false,"id":4421,"mutability":"mutable","name":"adminAddress","nameLocation":"612:12:11","nodeType":"VariableDeclaration","scope":4422,"src":"604:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4420,"name":"address","nodeType":"ElementaryTypeName","src":"604:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"VestingFactoryParams","nameLocation":"573:20:11","nodeType":"StructDefinition","scope":4423,"src":"566:65:11","visibility":"public"}],"scope":4801,"src":"528:105:11","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IDappadStakeFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":true,"id":4427,"linearizedBaseContracts":[4427],"name":"IDappadStakeFactory","nameLocation":"645:19:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IDappadStakeFactory.StakeFactoryParams","id":4426,"members":[{"constant":false,"id":4425,"mutability":"mutable","name":"adminAddress","nameLocation":"715:12:11","nodeType":"VariableDeclaration","scope":4426,"src":"707:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4424,"name":"address","nodeType":"ElementaryTypeName","src":"707:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"StakeFactoryParams","nameLocation":"678:18:11","nodeType":"StructDefinition","scope":4427,"src":"671:63:11","visibility":"public"}],"scope":4801,"src":"635:101:11","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IDappadStakeControllerFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":true,"id":4431,"linearizedBaseContracts":[4431],"name":"IDappadStakeControllerFactory","nameLocation":"748:29:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IDappadStakeControllerFactory.StakeControllerFactoryParams","id":4430,"members":[{"constant":false,"id":4429,"mutability":"mutable","name":"adminAddress","nameLocation":"838:12:11","nodeType":"VariableDeclaration","scope":4430,"src":"830:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4428,"name":"address","nodeType":"ElementaryTypeName","src":"830:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"StakeControllerFactoryParams","nameLocation":"791:28:11","nodeType":"StructDefinition","scope":4431,"src":"784:73:11","visibility":"public"}],"scope":4801,"src":"738:121:11","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IDappadStakeController","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4487,"linearizedBaseContracts":[4487],"name":"IDappadStakeController","nameLocation":"871:22:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IDappadStakeController.StakeControllerParams","id":4442,"members":[{"constant":false,"id":4434,"mutability":"mutable","name":"stakeControllerDetails","nameLocation":"962:22:11","nodeType":"VariableDeclaration","scope":4442,"src":"939:45:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeControllerDetails_$4455_storage_ptr","typeString":"struct IDappadStakeController.StakeControllerDetails"},"typeName":{"id":4433,"nodeType":"UserDefinedTypeName","pathNode":{"id":4432,"name":"StakeControllerDetails","nameLocations":["939:22:11"],"nodeType":"IdentifierPath","referencedDeclaration":4455,"src":"939:22:11"},"referencedDeclaration":4455,"src":"939:22:11","typeDescriptions":{"typeIdentifier":"t_struct$_StakeControllerDetails_$4455_storage_ptr","typeString":"struct IDappadStakeController.StakeControllerDetails"}},"visibility":"internal"},{"constant":false,"id":4437,"mutability":"mutable","name":"stakeControllerAddresses","nameLocation":"1019:24:11","nodeType":"VariableDeclaration","scope":4442,"src":"994:49:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeControllerAddresses_$4471_storage_ptr","typeString":"struct IDappadStakeController.StakeControllerAddresses"},"typeName":{"id":4436,"nodeType":"UserDefinedTypeName","pathNode":{"id":4435,"name":"StakeControllerAddresses","nameLocations":["994:24:11"],"nodeType":"IdentifierPath","referencedDeclaration":4471,"src":"994:24:11"},"referencedDeclaration":4471,"src":"994:24:11","typeDescriptions":{"typeIdentifier":"t_struct$_StakeControllerAddresses_$4471_storage_ptr","typeString":"struct IDappadStakeController.StakeControllerAddresses"}},"visibility":"internal"},{"constant":false,"id":4441,"mutability":"mutable","name":"stakeControllerTiers","nameLocation":"1075:20:11","nodeType":"VariableDeclaration","scope":4442,"src":"1053:42:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StakeControllerTier_$4474_storage_$dyn_storage_ptr","typeString":"struct IDappadStakeController.StakeControllerTier[]"},"typeName":{"baseType":{"id":4439,"nodeType":"UserDefinedTypeName","pathNode":{"id":4438,"name":"StakeControllerTier","nameLocations":["1053:19:11"],"nodeType":"IdentifierPath","referencedDeclaration":4474,"src":"1053:19:11"},"referencedDeclaration":4474,"src":"1053:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_StakeControllerTier_$4474_storage_ptr","typeString":"struct IDappadStakeController.StakeControllerTier"}},"id":4440,"nodeType":"ArrayTypeName","src":"1053:21:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StakeControllerTier_$4474_storage_$dyn_storage_ptr","typeString":"struct IDappadStakeController.StakeControllerTier[]"}},"visibility":"internal"}],"name":"StakeControllerParams","nameLocation":"907:21:11","nodeType":"StructDefinition","scope":4487,"src":"900:202:11","visibility":"public"},{"canonicalName":"IDappadStakeController.StakeControllerDetails","id":4455,"members":[{"constant":false,"id":4444,"mutability":"mutable","name":"requiredTokensForNftBonus","nameLocation":"1156:25:11","nodeType":"VariableDeclaration","scope":4455,"src":"1148:33:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4443,"name":"uint256","nodeType":"ElementaryTypeName","src":"1148:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4446,"mutability":"mutable","name":"bonusEnd","nameLocation":"1199:8:11","nodeType":"VariableDeclaration","scope":4455,"src":"1191:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4445,"name":"uint256","nodeType":"ElementaryTypeName","src":"1191:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4448,"mutability":"mutable","name":"addBonusPerNft","nameLocation":"1222:14:11","nodeType":"VariableDeclaration","scope":4455,"src":"1217:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4447,"name":"bool","nodeType":"ElementaryTypeName","src":"1217:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4451,"mutability":"mutable","name":"bonusesPerNft","nameLocation":"1256:13:11","nodeType":"VariableDeclaration","scope":4455,"src":"1246:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4449,"name":"uint256","nodeType":"ElementaryTypeName","src":"1246:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4450,"nodeType":"ArrayTypeName","src":"1246:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4454,"mutability":"mutable","name":"stakeContractPointMultipliers","nameLocation":"1289:29:11","nodeType":"VariableDeclaration","scope":4455,"src":"1279:39:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4452,"name":"uint256","nodeType":"ElementaryTypeName","src":"1279:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4453,"nodeType":"ArrayTypeName","src":"1279:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"StakeControllerDetails","nameLocation":"1115:22:11","nodeType":"StructDefinition","scope":4487,"src":"1108:217:11","visibility":"public"},{"canonicalName":"IDappadStakeController.StakeControllerAddresses","id":4471,"members":[{"constant":false,"id":4457,"mutability":"mutable","name":"tokenAddress","nameLocation":"1381:12:11","nodeType":"VariableDeclaration","scope":4471,"src":"1373:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4456,"name":"address","nodeType":"ElementaryTypeName","src":"1373:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4459,"mutability":"mutable","name":"ownerAddress","nameLocation":"1411:12:11","nodeType":"VariableDeclaration","scope":4471,"src":"1403:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4458,"name":"address","nodeType":"ElementaryTypeName","src":"1403:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4461,"mutability":"mutable","name":"adminAddress","nameLocation":"1441:12:11","nodeType":"VariableDeclaration","scope":4471,"src":"1433:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4460,"name":"address","nodeType":"ElementaryTypeName","src":"1433:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4464,"mutability":"mutable","name":"nftContractAddresses","nameLocation":"1473:20:11","nodeType":"VariableDeclaration","scope":4471,"src":"1463:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4462,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4463,"nodeType":"ArrayTypeName","src":"1463:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4467,"mutability":"mutable","name":"stakeContractAddresses","nameLocation":"1513:22:11","nodeType":"VariableDeclaration","scope":4471,"src":"1503:32:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4465,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4466,"nodeType":"ArrayTypeName","src":"1503:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4470,"mutability":"mutable","name":"bonusVestingContractAddresses","nameLocation":"1555:29:11","nodeType":"VariableDeclaration","scope":4471,"src":"1545:39:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4468,"name":"address","nodeType":"ElementaryTypeName","src":"1545:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4469,"nodeType":"ArrayTypeName","src":"1545:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"name":"StakeControllerAddresses","nameLocation":"1338:24:11","nodeType":"StructDefinition","scope":4487,"src":"1331:260:11","visibility":"public"},{"canonicalName":"IDappadStakeController.StakeControllerTier","id":4474,"members":[{"constant":false,"id":4473,"mutability":"mutable","name":"requiredStakePoints","nameLocation":"1646:19:11","nodeType":"VariableDeclaration","scope":4474,"src":"1638:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4472,"name":"uint256","nodeType":"ElementaryTypeName","src":"1638:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeControllerTier","nameLocation":"1608:19:11","nodeType":"StructDefinition","scope":4487,"src":"1601:71:11","visibility":"public"},{"functionSelector":"67184e28","id":4479,"implemented":false,"kind":"function","modifiers":[],"name":"getTierCount","nameLocation":"1687:12:11","nodeType":"FunctionDefinition","parameters":{"id":4475,"nodeType":"ParameterList","parameters":[],"src":"1699:2:11"},"returnParameters":{"id":4478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4479,"src":"1725:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4476,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1724:9:11"},"scope":4487,"src":"1678:56:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"bb9d537b","id":4486,"implemented":false,"kind":"function","modifiers":[],"name":"getUserTierIndex","nameLocation":"1748:16:11","nodeType":"FunctionDefinition","parameters":{"id":4482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4481,"mutability":"mutable","name":"userAddress","nameLocation":"1773:11:11","nodeType":"VariableDeclaration","scope":4486,"src":"1765:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4480,"name":"address","nodeType":"ElementaryTypeName","src":"1765:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1764:21:11"},"returnParameters":{"id":4485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4486,"src":"1809:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4483,"name":"uint256","nodeType":"ElementaryTypeName","src":"1809:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1808:9:11"},"scope":4487,"src":"1739:79:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4801,"src":"861:959:11","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IDappadStake","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4556,"linearizedBaseContracts":[4556],"name":"IDappadStake","nameLocation":"1832:12:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IDappadStake.StakeParams","id":4494,"members":[{"constant":false,"id":4490,"mutability":"mutable","name":"stakeDetails","nameLocation":"1893:12:11","nodeType":"VariableDeclaration","scope":4494,"src":"1880:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeDetails_$4505_storage_ptr","typeString":"struct IDappadStake.StakeDetails"},"typeName":{"id":4489,"nodeType":"UserDefinedTypeName","pathNode":{"id":4488,"name":"StakeDetails","nameLocations":["1880:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":4505,"src":"1880:12:11"},"referencedDeclaration":4505,"src":"1880:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_StakeDetails_$4505_storage_ptr","typeString":"struct IDappadStake.StakeDetails"}},"visibility":"internal"},{"constant":false,"id":4493,"mutability":"mutable","name":"stakeAddresses","nameLocation":"1931:14:11","nodeType":"VariableDeclaration","scope":4494,"src":"1916:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeAddresses_$4512_storage_ptr","typeString":"struct IDappadStake.StakeAddresses"},"typeName":{"id":4492,"nodeType":"UserDefinedTypeName","pathNode":{"id":4491,"name":"StakeAddresses","nameLocations":["1916:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":4512,"src":"1916:14:11"},"referencedDeclaration":4512,"src":"1916:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_StakeAddresses_$4512_storage_ptr","typeString":"struct IDappadStake.StakeAddresses"}},"visibility":"internal"}],"name":"StakeParams","nameLocation":"1858:11:11","nodeType":"StructDefinition","scope":4556,"src":"1851:101:11","visibility":"public"},{"canonicalName":"IDappadStake.StakeDetails","id":4505,"members":[{"constant":false,"id":4496,"mutability":"mutable","name":"interestRate","nameLocation":"1996:12:11","nodeType":"VariableDeclaration","scope":4505,"src":"1988:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4495,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4498,"mutability":"mutable","name":"lockDuration","nameLocation":"2026:12:11","nodeType":"VariableDeclaration","scope":4505,"src":"2018:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4497,"name":"uint256","nodeType":"ElementaryTypeName","src":"2018:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4500,"mutability":"mutable","name":"lockDurationRewardMultiplier","nameLocation":"2056:28:11","nodeType":"VariableDeclaration","scope":4505,"src":"2048:36:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4499,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4502,"mutability":"mutable","name":"lockDurationPointMultiplier","nameLocation":"2102:27:11","nodeType":"VariableDeclaration","scope":4505,"src":"2094:35:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4501,"name":"uint256","nodeType":"ElementaryTypeName","src":"2094:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4504,"mutability":"mutable","name":"stakePaused","nameLocation":"2144:11:11","nodeType":"VariableDeclaration","scope":4505,"src":"2139:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4503,"name":"bool","nodeType":"ElementaryTypeName","src":"2139:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StakeDetails","nameLocation":"1965:12:11","nodeType":"StructDefinition","scope":4556,"src":"1958:204:11","visibility":"public"},{"canonicalName":"IDappadStake.StakeAddresses","id":4512,"members":[{"constant":false,"id":4507,"mutability":"mutable","name":"tokenAddress","nameLocation":"2208:12:11","nodeType":"VariableDeclaration","scope":4512,"src":"2200:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4506,"name":"address","nodeType":"ElementaryTypeName","src":"2200:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4509,"mutability":"mutable","name":"ownerAddress","nameLocation":"2238:12:11","nodeType":"VariableDeclaration","scope":4512,"src":"2230:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4508,"name":"address","nodeType":"ElementaryTypeName","src":"2230:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4511,"mutability":"mutable","name":"adminAddress","nameLocation":"2268:12:11","nodeType":"VariableDeclaration","scope":4512,"src":"2260:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4510,"name":"address","nodeType":"ElementaryTypeName","src":"2260:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"StakeAddresses","nameLocation":"2175:14:11","nodeType":"StructDefinition","scope":4556,"src":"2168:119:11","visibility":"public"},{"canonicalName":"IDappadStake.StakeStatistics","id":4521,"members":[{"constant":false,"id":4514,"mutability":"mutable","name":"rewardBalance","nameLocation":"2334:13:11","nodeType":"VariableDeclaration","scope":4521,"src":"2326:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4513,"name":"uint256","nodeType":"ElementaryTypeName","src":"2326:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4516,"mutability":"mutable","name":"totalStakedAmount","nameLocation":"2365:17:11","nodeType":"VariableDeclaration","scope":4521,"src":"2357:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4515,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4518,"mutability":"mutable","name":"totalHarvestedRewardAmount","nameLocation":"2400:26:11","nodeType":"VariableDeclaration","scope":4521,"src":"2392:34:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4517,"name":"uint256","nodeType":"ElementaryTypeName","src":"2392:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4520,"mutability":"mutable","name":"totalParticipants","nameLocation":"2444:17:11","nodeType":"VariableDeclaration","scope":4521,"src":"2436:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4519,"name":"uint256","nodeType":"ElementaryTypeName","src":"2436:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeStatistics","nameLocation":"2300:15:11","nodeType":"StructDefinition","scope":4556,"src":"2293:175:11","visibility":"public"},{"canonicalName":"IDappadStake.Stake","id":4534,"members":[{"constant":false,"id":4523,"mutability":"mutable","name":"endTime","nameLocation":"2505:7:11","nodeType":"VariableDeclaration","scope":4534,"src":"2497:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4522,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4525,"mutability":"mutable","name":"totalStakedAmount","nameLocation":"2530:17:11","nodeType":"VariableDeclaration","scope":4534,"src":"2522:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4524,"name":"uint256","nodeType":"ElementaryTypeName","src":"2522:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4527,"mutability":"mutable","name":"totalStakePoints","nameLocation":"2565:16:11","nodeType":"VariableDeclaration","scope":4534,"src":"2557:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4526,"name":"uint256","nodeType":"ElementaryTypeName","src":"2557:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4529,"mutability":"mutable","name":"stakeCount","nameLocation":"2599:10:11","nodeType":"VariableDeclaration","scope":4534,"src":"2591:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4528,"name":"uint256","nodeType":"ElementaryTypeName","src":"2591:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4533,"mutability":"mutable","name":"stakeFeatures","nameLocation":"2635:13:11","nodeType":"VariableDeclaration","scope":4534,"src":"2619:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StakeFeatures_$4541_storage_$dyn_storage_ptr","typeString":"struct IDappadStake.StakeFeatures[]"},"typeName":{"baseType":{"id":4531,"nodeType":"UserDefinedTypeName","pathNode":{"id":4530,"name":"StakeFeatures","nameLocations":["2619:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":4541,"src":"2619:13:11"},"referencedDeclaration":4541,"src":"2619:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_StakeFeatures_$4541_storage_ptr","typeString":"struct IDappadStake.StakeFeatures"}},"id":4532,"nodeType":"ArrayTypeName","src":"2619:15:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StakeFeatures_$4541_storage_$dyn_storage_ptr","typeString":"struct IDappadStake.StakeFeatures[]"}},"visibility":"internal"}],"name":"Stake","nameLocation":"2481:5:11","nodeType":"StructDefinition","scope":4556,"src":"2474:181:11","visibility":"public"},{"canonicalName":"IDappadStake.StakeFeatures","id":4541,"members":[{"constant":false,"id":4536,"mutability":"mutable","name":"interestRate","nameLocation":"2700:12:11","nodeType":"VariableDeclaration","scope":4541,"src":"2692:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4535,"name":"uint256","nodeType":"ElementaryTypeName","src":"2692:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4538,"mutability":"mutable","name":"stakeTime","nameLocation":"2730:9:11","nodeType":"VariableDeclaration","scope":4541,"src":"2722:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4537,"name":"uint256","nodeType":"ElementaryTypeName","src":"2722:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4540,"mutability":"mutable","name":"stakedAmount","nameLocation":"2757:12:11","nodeType":"VariableDeclaration","scope":4541,"src":"2749:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4539,"name":"uint256","nodeType":"ElementaryTypeName","src":"2749:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeFeatures","nameLocation":"2668:13:11","nodeType":"StructDefinition","scope":4556,"src":"2661:115:11","visibility":"public"},{"functionSelector":"5a129248","id":4547,"implemented":false,"kind":"function","modifiers":[],"name":"getStakeStatistics","nameLocation":"2791:18:11","nodeType":"FunctionDefinition","parameters":{"id":4542,"nodeType":"ParameterList","parameters":[],"src":"2809:2:11"},"returnParameters":{"id":4546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4547,"src":"2835:35:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeStatistics_$4521_memory_ptr","typeString":"struct IDappadStake.StakeStatistics"},"typeName":{"id":4544,"nodeType":"UserDefinedTypeName","pathNode":{"id":4543,"name":"IDappadStake.StakeStatistics","nameLocations":["2835:12:11","2848:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":4521,"src":"2835:28:11"},"referencedDeclaration":4521,"src":"2835:28:11","typeDescriptions":{"typeIdentifier":"t_struct$_StakeStatistics_$4521_storage_ptr","typeString":"struct IDappadStake.StakeStatistics"}},"visibility":"internal"}],"src":"2834:37:11"},"scope":4556,"src":"2782:90:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"bbadc93a","id":4555,"implemented":false,"kind":"function","modifiers":[],"name":"getUserStake","nameLocation":"2886:12:11","nodeType":"FunctionDefinition","parameters":{"id":4550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4549,"mutability":"mutable","name":"userAddress","nameLocation":"2907:11:11","nodeType":"VariableDeclaration","scope":4555,"src":"2899:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4548,"name":"address","nodeType":"ElementaryTypeName","src":"2899:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2898:21:11"},"returnParameters":{"id":4554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4555,"src":"2943:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$4534_memory_ptr","typeString":"struct IDappadStake.Stake"},"typeName":{"id":4552,"nodeType":"UserDefinedTypeName","pathNode":{"id":4551,"name":"IDappadStake.Stake","nameLocations":["2943:12:11","2956:5:11"],"nodeType":"IdentifierPath","referencedDeclaration":4534,"src":"2943:18:11"},"referencedDeclaration":4534,"src":"2943:18:11","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$4534_storage_ptr","typeString":"struct IDappadStake.Stake"}},"visibility":"internal"}],"src":"2942:27:11"},"scope":4556,"src":"2877:93:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4801,"src":"1822:1150:11","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IDappadSale","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4714,"linearizedBaseContracts":[4714],"name":"IDappadSale","nameLocation":"2984:11:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IDappadSale.SaleParams","id":4564,"members":[{"constant":false,"id":4559,"mutability":"mutable","name":"sale","nameLocation":"3035:4:11","nodeType":"VariableDeclaration","scope":4564,"src":"3030:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage_ptr","typeString":"struct IDappadSale.Sale"},"typeName":{"id":4558,"nodeType":"UserDefinedTypeName","pathNode":{"id":4557,"name":"Sale","nameLocations":["3030:4:11"],"nodeType":"IdentifierPath","referencedDeclaration":4580,"src":"3030:4:11"},"referencedDeclaration":4580,"src":"3030:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4580_storage_ptr","typeString":"struct IDappadSale.Sale"}},"visibility":"internal"},{"constant":false,"id":4563,"mutability":"mutable","name":"tierDetails","nameLocation":"3067:11:11","nodeType":"VariableDeclaration","scope":4564,"src":"3049:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SaleTierDetails_$4674_storage_$dyn_storage_ptr","typeString":"struct IDappadSale.SaleTierDetails[]"},"typeName":{"baseType":{"id":4561,"nodeType":"UserDefinedTypeName","pathNode":{"id":4560,"name":"SaleTierDetails","nameLocations":["3049:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":4674,"src":"3049:15:11"},"referencedDeclaration":4674,"src":"3049:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4674_storage_ptr","typeString":"struct IDappadSale.SaleTierDetails"}},"id":4562,"nodeType":"ArrayTypeName","src":"3049:17:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SaleTierDetails_$4674_storage_$dyn_storage_ptr","typeString":"struct IDappadSale.SaleTierDetails[]"}},"visibility":"internal"}],"name":"SaleParams","nameLocation":"3009:10:11","nodeType":"StructDefinition","scope":4714,"src":"3002:83:11","visibility":"public"},{"canonicalName":"IDappadSale.Sale","id":4580,"members":[{"constant":false,"id":4567,"mutability":"mutable","name":"saleDetails","nameLocation":"3129:11:11","nodeType":"VariableDeclaration","scope":4580,"src":"3117:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage_ptr","typeString":"struct IDappadSale.SaleDetails"},"typeName":{"id":4566,"nodeType":"UserDefinedTypeName","pathNode":{"id":4565,"name":"SaleDetails","nameLocations":["3117:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":4603,"src":"3117:11:11"},"referencedDeclaration":4603,"src":"3117:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4603_storage_ptr","typeString":"struct IDappadSale.SaleDetails"}},"visibility":"internal"},{"constant":false,"id":4570,"mutability":"mutable","name":"fcfsDetails","nameLocation":"3166:11:11","nodeType":"VariableDeclaration","scope":4580,"src":"3150:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_SaleFcfsDetails_$4608_storage_ptr","typeString":"struct IDappadSale.SaleFcfsDetails"},"typeName":{"id":4569,"nodeType":"UserDefinedTypeName","pathNode":{"id":4568,"name":"SaleFcfsDetails","nameLocations":["3150:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":4608,"src":"3150:15:11"},"referencedDeclaration":4608,"src":"3150:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_SaleFcfsDetails_$4608_storage_ptr","typeString":"struct IDappadSale.SaleFcfsDetails"}},"visibility":"internal"},{"constant":false,"id":4573,"mutability":"mutable","name":"refundDetails","nameLocation":"3205:13:11","nodeType":"VariableDeclaration","scope":4580,"src":"3187:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRefundDetails_$4613_storage_ptr","typeString":"struct IDappadSale.SaleRefundDetails"},"typeName":{"id":4572,"nodeType":"UserDefinedTypeName","pathNode":{"id":4571,"name":"SaleRefundDetails","nameLocations":["3187:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":4613,"src":"3187:17:11"},"referencedDeclaration":4613,"src":"3187:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRefundDetails_$4613_storage_ptr","typeString":"struct IDappadSale.SaleRefundDetails"}},"visibility":"internal"},{"constant":false,"id":4576,"mutability":"mutable","name":"ticketDetails","nameLocation":"3246:13:11","nodeType":"VariableDeclaration","scope":4580,"src":"3228:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTicketDetails_$4618_storage_ptr","typeString":"struct IDappadSale.SaleTicketDetails"},"typeName":{"id":4575,"nodeType":"UserDefinedTypeName","pathNode":{"id":4574,"name":"SaleTicketDetails","nameLocations":["3228:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":4618,"src":"3228:17:11"},"referencedDeclaration":4618,"src":"3228:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTicketDetails_$4618_storage_ptr","typeString":"struct IDappadSale.SaleTicketDetails"}},"visibility":"internal"},{"constant":false,"id":4579,"mutability":"mutable","name":"saleAddresses","nameLocation":"3283:13:11","nodeType":"VariableDeclaration","scope":4580,"src":"3269:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage_ptr","typeString":"struct IDappadSale.SaleAddresses"},"typeName":{"id":4578,"nodeType":"UserDefinedTypeName","pathNode":{"id":4577,"name":"SaleAddresses","nameLocations":["3269:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":4648,"src":"3269:13:11"},"referencedDeclaration":4648,"src":"3269:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4648_storage_ptr","typeString":"struct IDappadSale.SaleAddresses"}},"visibility":"internal"}],"name":"Sale","nameLocation":"3102:4:11","nodeType":"StructDefinition","scope":4714,"src":"3095:208:11","visibility":"public"},{"canonicalName":"IDappadSale.SaleDetails","id":4603,"members":[{"constant":false,"id":4582,"mutability":"mutable","name":"registerStart","nameLocation":"3350:13:11","nodeType":"VariableDeclaration","scope":4603,"src":"3342:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4581,"name":"uint256","nodeType":"ElementaryTypeName","src":"3342:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4584,"mutability":"mutable","name":"registerEnd","nameLocation":"3381:11:11","nodeType":"VariableDeclaration","scope":4603,"src":"3373:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4583,"name":"uint256","nodeType":"ElementaryTypeName","src":"3373:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4586,"mutability":"mutable","name":"registerTokenAmount","nameLocation":"3410:19:11","nodeType":"VariableDeclaration","scope":4603,"src":"3402:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4585,"name":"uint256","nodeType":"ElementaryTypeName","src":"3402:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4588,"mutability":"mutable","name":"saleStart","nameLocation":"3447:9:11","nodeType":"VariableDeclaration","scope":4603,"src":"3439:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4587,"name":"uint256","nodeType":"ElementaryTypeName","src":"3439:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4590,"mutability":"mutable","name":"saleEnd","nameLocation":"3474:7:11","nodeType":"VariableDeclaration","scope":4603,"src":"3466:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4589,"name":"uint256","nodeType":"ElementaryTypeName","src":"3466:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4592,"mutability":"mutable","name":"saleTokenPrice","nameLocation":"3499:14:11","nodeType":"VariableDeclaration","scope":4603,"src":"3491:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4591,"name":"uint256","nodeType":"ElementaryTypeName","src":"3491:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4594,"mutability":"mutable","name":"maxInvestmentAmount","nameLocation":"3531:19:11","nodeType":"VariableDeclaration","scope":4603,"src":"3523:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4593,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4596,"mutability":"mutable","name":"projectOwnerFeePercentage","nameLocation":"3568:25:11","nodeType":"VariableDeclaration","scope":4603,"src":"3560:33:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4595,"name":"uint256","nodeType":"ElementaryTypeName","src":"3560:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4598,"mutability":"mutable","name":"registerTokenEnabled","nameLocation":"3608:20:11","nodeType":"VariableDeclaration","scope":4603,"src":"3603:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4597,"name":"bool","nodeType":"ElementaryTypeName","src":"3603:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4600,"mutability":"mutable","name":"salePaused","nameLocation":"3643:10:11","nodeType":"VariableDeclaration","scope":4603,"src":"3638:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4599,"name":"bool","nodeType":"ElementaryTypeName","src":"3638:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4602,"mutability":"mutable","name":"saleName","nameLocation":"3670:8:11","nodeType":"VariableDeclaration","scope":4603,"src":"3663:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4601,"name":"string","nodeType":"ElementaryTypeName","src":"3663:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"SaleDetails","nameLocation":"3320:11:11","nodeType":"StructDefinition","scope":4714,"src":"3313:372:11","visibility":"public"},{"canonicalName":"IDappadSale.SaleFcfsDetails","id":4608,"members":[{"constant":false,"id":4605,"mutability":"mutable","name":"fcfsSaleDuration","nameLocation":"3732:16:11","nodeType":"VariableDeclaration","scope":4608,"src":"3724:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4604,"name":"uint256","nodeType":"ElementaryTypeName","src":"3724:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4607,"mutability":"mutable","name":"fcfsSaleMultiplier","nameLocation":"3766:18:11","nodeType":"VariableDeclaration","scope":4608,"src":"3758:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4606,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"SaleFcfsDetails","nameLocation":"3698:15:11","nodeType":"StructDefinition","scope":4714,"src":"3691:100:11","visibility":"public"},{"canonicalName":"IDappadSale.SaleRefundDetails","id":4613,"members":[{"constant":false,"id":4610,"mutability":"mutable","name":"refundDuration","nameLocation":"3840:14:11","nodeType":"VariableDeclaration","scope":4613,"src":"3832:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4609,"name":"uint256","nodeType":"ElementaryTypeName","src":"3832:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4612,"mutability":"mutable","name":"refundEnabled","nameLocation":"3869:13:11","nodeType":"VariableDeclaration","scope":4613,"src":"3864:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4611,"name":"bool","nodeType":"ElementaryTypeName","src":"3864:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"SaleRefundDetails","nameLocation":"3804:17:11","nodeType":"StructDefinition","scope":4714,"src":"3797:92:11","visibility":"public"},{"canonicalName":"IDappadSale.SaleTicketDetails","id":4618,"members":[{"constant":false,"id":4615,"mutability":"mutable","name":"ticketPrice","nameLocation":"3938:11:11","nodeType":"VariableDeclaration","scope":4618,"src":"3930:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4614,"name":"uint256","nodeType":"ElementaryTypeName","src":"3930:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4617,"mutability":"mutable","name":"ticketMerkleRoot","nameLocation":"3967:16:11","nodeType":"VariableDeclaration","scope":4618,"src":"3959:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3959:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"SaleTicketDetails","nameLocation":"3902:17:11","nodeType":"StructDefinition","scope":4714,"src":"3895:95:11","visibility":"public"},{"canonicalName":"IDappadSale.SaleRegisterDetails","id":4625,"members":[{"constant":false,"id":4620,"mutability":"mutable","name":"registerTokenAmount","nameLocation":"4041:19:11","nodeType":"VariableDeclaration","scope":4625,"src":"4033:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4619,"name":"uint256","nodeType":"ElementaryTypeName","src":"4033:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4622,"mutability":"mutable","name":"tierIndex","nameLocation":"4078:9:11","nodeType":"VariableDeclaration","scope":4625,"src":"4070:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4621,"name":"uint256","nodeType":"ElementaryTypeName","src":"4070:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4624,"mutability":"mutable","name":"registered","nameLocation":"4102:10:11","nodeType":"VariableDeclaration","scope":4625,"src":"4097:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4623,"name":"bool","nodeType":"ElementaryTypeName","src":"4097:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"SaleRegisterDetails","nameLocation":"4003:19:11","nodeType":"StructDefinition","scope":4714,"src":"3996:123:11","visibility":"public"},{"canonicalName":"IDappadSale.SaleAddresses","id":4648,"members":[{"constant":false,"id":4627,"mutability":"mutable","name":"saleTokenAddress","nameLocation":"4164:16:11","nodeType":"VariableDeclaration","scope":4648,"src":"4156:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4626,"name":"address","nodeType":"ElementaryTypeName","src":"4156:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4629,"mutability":"mutable","name":"registerTokenAddress","nameLocation":"4198:20:11","nodeType":"VariableDeclaration","scope":4648,"src":"4190:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4628,"name":"address","nodeType":"ElementaryTypeName","src":"4190:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4631,"mutability":"mutable","name":"investmentTokenAddress","nameLocation":"4236:22:11","nodeType":"VariableDeclaration","scope":4648,"src":"4228:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4630,"name":"address","nodeType":"ElementaryTypeName","src":"4228:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4633,"mutability":"mutable","name":"factoryContractAddress","nameLocation":"4276:22:11","nodeType":"VariableDeclaration","scope":4648,"src":"4268:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4632,"name":"address","nodeType":"ElementaryTypeName","src":"4268:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4635,"mutability":"mutable","name":"nftContractAddress","nameLocation":"4316:18:11","nodeType":"VariableDeclaration","scope":4648,"src":"4308:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4634,"name":"address","nodeType":"ElementaryTypeName","src":"4308:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4637,"mutability":"mutable","name":"stakeControllerContractAddress","nameLocation":"4352:30:11","nodeType":"VariableDeclaration","scope":4648,"src":"4344:38:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4636,"name":"address","nodeType":"ElementaryTypeName","src":"4344:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4639,"mutability":"mutable","name":"vestingContractAddress","nameLocation":"4400:22:11","nodeType":"VariableDeclaration","scope":4648,"src":"4392:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4638,"name":"address","nodeType":"ElementaryTypeName","src":"4392:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4641,"mutability":"mutable","name":"ownerAddress","nameLocation":"4440:12:11","nodeType":"VariableDeclaration","scope":4648,"src":"4432:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4640,"name":"address","nodeType":"ElementaryTypeName","src":"4432:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4643,"mutability":"mutable","name":"adminAddress","nameLocation":"4470:12:11","nodeType":"VariableDeclaration","scope":4648,"src":"4462:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4642,"name":"address","nodeType":"ElementaryTypeName","src":"4462:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4645,"mutability":"mutable","name":"launchpadFeeAddress","nameLocation":"4500:19:11","nodeType":"VariableDeclaration","scope":4648,"src":"4492:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4644,"name":"address","nodeType":"ElementaryTypeName","src":"4492:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4647,"mutability":"mutable","name":"projectOwnerFeeAddress","nameLocation":"4537:22:11","nodeType":"VariableDeclaration","scope":4648,"src":"4529:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4646,"name":"address","nodeType":"ElementaryTypeName","src":"4529:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"SaleAddresses","nameLocation":"4132:13:11","nodeType":"StructDefinition","scope":4714,"src":"4125:441:11","visibility":"public"},{"canonicalName":"IDappadSale.SaleStatistics","id":4659,"members":[{"constant":false,"id":4650,"mutability":"mutable","name":"totalInvestmentAmount","nameLocation":"4612:21:11","nodeType":"VariableDeclaration","scope":4659,"src":"4604:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4649,"name":"uint256","nodeType":"ElementaryTypeName","src":"4604:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4652,"mutability":"mutable","name":"totalSaleTokenAmount","nameLocation":"4651:20:11","nodeType":"VariableDeclaration","scope":4659,"src":"4643:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4651,"name":"uint256","nodeType":"ElementaryTypeName","src":"4643:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4654,"mutability":"mutable","name":"totalParticipants","nameLocation":"4689:17:11","nodeType":"VariableDeclaration","scope":4659,"src":"4681:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4653,"name":"uint256","nodeType":"ElementaryTypeName","src":"4681:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4656,"mutability":"mutable","name":"totalRegisters","nameLocation":"4724:14:11","nodeType":"VariableDeclaration","scope":4659,"src":"4716:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4655,"name":"uint256","nodeType":"ElementaryTypeName","src":"4716:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4658,"mutability":"mutable","name":"totalRegisterTokenAmountLeft","nameLocation":"4756:28:11","nodeType":"VariableDeclaration","scope":4659,"src":"4748:36:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4657,"name":"uint256","nodeType":"ElementaryTypeName","src":"4748:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"SaleStatistics","nameLocation":"4579:14:11","nodeType":"StructDefinition","scope":4714,"src":"4572:219:11","visibility":"public"},{"canonicalName":"IDappadSale.SaleTierDetails","id":4674,"members":[{"constant":false,"id":4661,"mutability":"mutable","name":"minInvestmentAmount","nameLocation":"4838:19:11","nodeType":"VariableDeclaration","scope":4674,"src":"4830:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4660,"name":"uint256","nodeType":"ElementaryTypeName","src":"4830:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4663,"mutability":"mutable","name":"maxInvestmentAmount","nameLocation":"4875:19:11","nodeType":"VariableDeclaration","scope":4674,"src":"4867:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4662,"name":"uint256","nodeType":"ElementaryTypeName","src":"4867:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4665,"mutability":"mutable","name":"tierMaxInvestmentAmount","nameLocation":"4912:23:11","nodeType":"VariableDeclaration","scope":4674,"src":"4904:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4664,"name":"uint256","nodeType":"ElementaryTypeName","src":"4904:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4667,"mutability":"mutable","name":"ticketAmount","nameLocation":"4953:12:11","nodeType":"VariableDeclaration","scope":4674,"src":"4945:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4666,"name":"uint256","nodeType":"ElementaryTypeName","src":"4945:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4669,"mutability":"mutable","name":"whitelistMerkleRoot","nameLocation":"4983:19:11","nodeType":"VariableDeclaration","scope":4674,"src":"4975:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4975:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4671,"mutability":"mutable","name":"totalInvestmentAmount","nameLocation":"5020:21:11","nodeType":"VariableDeclaration","scope":4674,"src":"5012:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4670,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4673,"mutability":"mutable","name":"totalParticipants","nameLocation":"5059:17:11","nodeType":"VariableDeclaration","scope":4674,"src":"5051:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4672,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"SaleTierDetails","nameLocation":"4804:15:11","nodeType":"StructDefinition","scope":4714,"src":"4797:286:11","visibility":"public"},{"functionSelector":"f15ce722","id":4679,"implemented":false,"kind":"function","modifiers":[],"name":"addSaleToken","nameLocation":"5098:12:11","nodeType":"FunctionDefinition","parameters":{"id":4675,"nodeType":"ParameterList","parameters":[],"src":"5110:2:11"},"returnParameters":{"id":4678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4679,"src":"5131:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4676,"name":"bool","nodeType":"ElementaryTypeName","src":"5131:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5130:6:11"},"scope":4714,"src":"5089:48:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c077da9e","id":4684,"implemented":false,"kind":"function","modifiers":[],"name":"getIsSaleActive","nameLocation":"5151:15:11","nodeType":"FunctionDefinition","parameters":{"id":4680,"nodeType":"ParameterList","parameters":[],"src":"5166:2:11"},"returnParameters":{"id":4683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4684,"src":"5192:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4681,"name":"bool","nodeType":"ElementaryTypeName","src":"5192:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5191:6:11"},"scope":4714,"src":"5142:56:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5e87e5a6","id":4691,"implemented":false,"kind":"function","modifiers":[],"name":"getUserInvestmentAmount","nameLocation":"5212:23:11","nodeType":"FunctionDefinition","parameters":{"id":4687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4686,"mutability":"mutable","name":"userAddress","nameLocation":"5244:11:11","nodeType":"VariableDeclaration","scope":4691,"src":"5236:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4685,"name":"address","nodeType":"ElementaryTypeName","src":"5236:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5235:21:11"},"returnParameters":{"id":4690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4691,"src":"5280:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4688,"name":"uint256","nodeType":"ElementaryTypeName","src":"5280:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5279:9:11"},"scope":4714,"src":"5203:86:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"2ecad13f","id":4696,"implemented":false,"kind":"function","modifiers":[],"name":"getSaleEndDate","nameLocation":"5303:14:11","nodeType":"FunctionDefinition","parameters":{"id":4692,"nodeType":"ParameterList","parameters":[],"src":"5317:2:11"},"returnParameters":{"id":4695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4696,"src":"5343:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4693,"name":"uint256","nodeType":"ElementaryTypeName","src":"5343:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5342:9:11"},"scope":4714,"src":"5294:58:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"85c06faa","id":4701,"implemented":false,"kind":"function","modifiers":[],"name":"getRefundEnabled","nameLocation":"5366:16:11","nodeType":"FunctionDefinition","parameters":{"id":4697,"nodeType":"ParameterList","parameters":[],"src":"5382:2:11"},"returnParameters":{"id":4700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4701,"src":"5408:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4698,"name":"bool","nodeType":"ElementaryTypeName","src":"5408:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5407:6:11"},"scope":4714,"src":"5357:57:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cf72d3db","id":4708,"implemented":false,"kind":"function","modifiers":[],"name":"getUserRefunded","nameLocation":"5428:15:11","nodeType":"FunctionDefinition","parameters":{"id":4704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4703,"mutability":"mutable","name":"userAddress","nameLocation":"5452:11:11","nodeType":"VariableDeclaration","scope":4708,"src":"5444:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4702,"name":"address","nodeType":"ElementaryTypeName","src":"5444:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5443:21:11"},"returnParameters":{"id":4707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4708,"src":"5488:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4705,"name":"bool","nodeType":"ElementaryTypeName","src":"5488:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5487:6:11"},"scope":4714,"src":"5419:75:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"06c8e316","id":4713,"implemented":false,"kind":"function","modifiers":[],"name":"getSaleTokenPrice","nameLocation":"5508:17:11","nodeType":"FunctionDefinition","parameters":{"id":4709,"nodeType":"ParameterList","parameters":[],"src":"5525:2:11"},"returnParameters":{"id":4712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4713,"src":"5551:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4710,"name":"uint256","nodeType":"ElementaryTypeName","src":"5551:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5550:9:11"},"scope":4714,"src":"5499:61:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4801,"src":"2974:2588:11","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IDappadVesting","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4800,"linearizedBaseContracts":[4800],"name":"IDappadVesting","nameLocation":"5574:14:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IDappadVesting.VestingParams","id":4724,"members":[{"constant":false,"id":4717,"mutability":"mutable","name":"defaultVesting","nameLocation":"5634:14:11","nodeType":"VariableDeclaration","scope":4724,"src":"5626:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4741_storage_ptr","typeString":"struct IDappadVesting.Vesting"},"typeName":{"id":4716,"nodeType":"UserDefinedTypeName","pathNode":{"id":4715,"name":"Vesting","nameLocations":["5626:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":4741,"src":"5626:7:11"},"referencedDeclaration":4741,"src":"5626:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4741_storage_ptr","typeString":"struct IDappadVesting.Vesting"}},"visibility":"internal"},{"constant":false,"id":4720,"mutability":"mutable","name":"vestingAddresses","nameLocation":"5675:16:11","nodeType":"VariableDeclaration","scope":4724,"src":"5658:33:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4752_storage_ptr","typeString":"struct IDappadVesting.VestingAddresses"},"typeName":{"id":4719,"nodeType":"UserDefinedTypeName","pathNode":{"id":4718,"name":"VestingAddresses","nameLocations":["5658:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":4752,"src":"5658:16:11"},"referencedDeclaration":4752,"src":"5658:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4752_storage_ptr","typeString":"struct IDappadVesting.VestingAddresses"}},"visibility":"internal"},{"constant":false,"id":4723,"mutability":"mutable","name":"vestingSettings","nameLocation":"5717:15:11","nodeType":"VariableDeclaration","scope":4724,"src":"5701:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_VestingSettings_$4729_storage_ptr","typeString":"struct IDappadVesting.VestingSettings"},"typeName":{"id":4722,"nodeType":"UserDefinedTypeName","pathNode":{"id":4721,"name":"VestingSettings","nameLocations":["5701:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":4729,"src":"5701:15:11"},"referencedDeclaration":4729,"src":"5701:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_VestingSettings_$4729_storage_ptr","typeString":"struct IDappadVesting.VestingSettings"}},"visibility":"internal"}],"name":"VestingParams","nameLocation":"5602:13:11","nodeType":"StructDefinition","scope":4800,"src":"5595:144:11","visibility":"public"},{"canonicalName":"IDappadVesting.VestingSettings","id":4729,"members":[{"constant":false,"id":4726,"mutability":"mutable","name":"startDate","nameLocation":"5786:9:11","nodeType":"VariableDeclaration","scope":4729,"src":"5778:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4725,"name":"uint256","nodeType":"ElementaryTypeName","src":"5778:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4728,"mutability":"mutable","name":"saleTokenPrice","nameLocation":"5813:14:11","nodeType":"VariableDeclaration","scope":4729,"src":"5805:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4727,"name":"uint256","nodeType":"ElementaryTypeName","src":"5805:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"VestingSettings","nameLocation":"5752:15:11","nodeType":"StructDefinition","scope":4800,"src":"5745:89:11","visibility":"public"},{"canonicalName":"IDappadVesting.Vesting","id":4741,"members":[{"constant":false,"id":4731,"mutability":"mutable","name":"vestingCount","nameLocation":"5873:12:11","nodeType":"VariableDeclaration","scope":4741,"src":"5865:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4730,"name":"uint256","nodeType":"ElementaryTypeName","src":"5865:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4733,"mutability":"mutable","name":"vestingDuration","nameLocation":"5903:15:11","nodeType":"VariableDeclaration","scope":4741,"src":"5895:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4732,"name":"uint256","nodeType":"ElementaryTypeName","src":"5895:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4735,"mutability":"mutable","name":"vestingCliffDuration","nameLocation":"5936:20:11","nodeType":"VariableDeclaration","scope":4741,"src":"5928:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4734,"name":"uint256","nodeType":"ElementaryTypeName","src":"5928:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4738,"mutability":"mutable","name":"vestingPercentages","nameLocation":"5976:18:11","nodeType":"VariableDeclaration","scope":4741,"src":"5966:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4736,"name":"uint256","nodeType":"ElementaryTypeName","src":"5966:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4737,"nodeType":"ArrayTypeName","src":"5966:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4740,"mutability":"mutable","name":"onTGE","nameLocation":"6009:5:11","nodeType":"VariableDeclaration","scope":4741,"src":"6004:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4739,"name":"bool","nodeType":"ElementaryTypeName","src":"6004:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Vesting","nameLocation":"5847:7:11","nodeType":"StructDefinition","scope":4800,"src":"5840:181:11","visibility":"public"},{"canonicalName":"IDappadVesting.VestingAddresses","id":4752,"members":[{"constant":false,"id":4743,"mutability":"mutable","name":"saleTokenAddress","nameLocation":"6069:16:11","nodeType":"VariableDeclaration","scope":4752,"src":"6061:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4742,"name":"address","nodeType":"ElementaryTypeName","src":"6061:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4745,"mutability":"mutable","name":"factoryContractAddress","nameLocation":"6103:22:11","nodeType":"VariableDeclaration","scope":4752,"src":"6095:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4744,"name":"address","nodeType":"ElementaryTypeName","src":"6095:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4747,"mutability":"mutable","name":"saleContractAddress","nameLocation":"6143:19:11","nodeType":"VariableDeclaration","scope":4752,"src":"6135:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4746,"name":"address","nodeType":"ElementaryTypeName","src":"6135:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4749,"mutability":"mutable","name":"ownerAddress","nameLocation":"6180:12:11","nodeType":"VariableDeclaration","scope":4752,"src":"6172:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4748,"name":"address","nodeType":"ElementaryTypeName","src":"6172:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4751,"mutability":"mutable","name":"adminAddress","nameLocation":"6210:12:11","nodeType":"VariableDeclaration","scope":4752,"src":"6202:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4750,"name":"address","nodeType":"ElementaryTypeName","src":"6202:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"VestingAddresses","nameLocation":"6034:16:11","nodeType":"StructDefinition","scope":4800,"src":"6027:202:11","visibility":"public"},{"canonicalName":"IDappadVesting.VestingStatistics","id":4757,"members":[{"constant":false,"id":4754,"mutability":"mutable","name":"totalVestingAmount","nameLocation":"6278:18:11","nodeType":"VariableDeclaration","scope":4757,"src":"6270:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4753,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4756,"mutability":"mutable","name":"totalSaleTokenAmount","nameLocation":"6314:20:11","nodeType":"VariableDeclaration","scope":4757,"src":"6306:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4755,"name":"uint256","nodeType":"ElementaryTypeName","src":"6306:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"VestingStatistics","nameLocation":"6242:17:11","nodeType":"StructDefinition","scope":4800,"src":"6235:106:11","visibility":"public"},{"functionSelector":"75420c99","id":4764,"implemented":false,"kind":"function","modifiers":[],"name":"setTotalVestingAmount","nameLocation":"6356:21:11","nodeType":"FunctionDefinition","parameters":{"id":4760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4759,"mutability":"mutable","name":"amount","nameLocation":"6386:6:11","nodeType":"VariableDeclaration","scope":4764,"src":"6378:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4758,"name":"uint256","nodeType":"ElementaryTypeName","src":"6378:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6377:16:11"},"returnParameters":{"id":4763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4764,"src":"6412:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4761,"name":"bool","nodeType":"ElementaryTypeName","src":"6412:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6411:6:11"},"scope":4800,"src":"6347:71:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"7eb16ac2","id":4773,"implemented":false,"kind":"function","modifiers":[],"name":"getVestingClaimed","nameLocation":"6432:17:11","nodeType":"FunctionDefinition","parameters":{"id":4769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4766,"mutability":"mutable","name":"userAddress","nameLocation":"6458:11:11","nodeType":"VariableDeclaration","scope":4773,"src":"6450:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4765,"name":"address","nodeType":"ElementaryTypeName","src":"6450:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4768,"mutability":"mutable","name":"vestingIndex","nameLocation":"6479:12:11","nodeType":"VariableDeclaration","scope":4773,"src":"6471:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4767,"name":"uint256","nodeType":"ElementaryTypeName","src":"6471:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6449:43:11"},"returnParameters":{"id":4772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4773,"src":"6516:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4770,"name":"bool","nodeType":"ElementaryTypeName","src":"6516:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6515:6:11"},"scope":4800,"src":"6423:99:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"17a76955","id":4778,"implemented":false,"kind":"function","modifiers":[],"name":"getTotalVestingAmount","nameLocation":"6536:21:11","nodeType":"FunctionDefinition","parameters":{"id":4774,"nodeType":"ParameterList","parameters":[],"src":"6557:2:11"},"returnParameters":{"id":4777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4778,"src":"6583:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4775,"name":"uint256","nodeType":"ElementaryTypeName","src":"6583:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6582:9:11"},"scope":4800,"src":"6527:65:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"786b4456","id":4785,"implemented":false,"kind":"function","modifiers":[],"name":"getAnyVestingClaimed","nameLocation":"6606:20:11","nodeType":"FunctionDefinition","parameters":{"id":4781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4780,"mutability":"mutable","name":"userAddress","nameLocation":"6635:11:11","nodeType":"VariableDeclaration","scope":4785,"src":"6627:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4779,"name":"address","nodeType":"ElementaryTypeName","src":"6627:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6626:21:11"},"returnParameters":{"id":4784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4785,"src":"6671:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4782,"name":"bool","nodeType":"ElementaryTypeName","src":"6671:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6670:6:11"},"scope":4800,"src":"6597:80:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"bf5a0c59","id":4792,"implemented":false,"kind":"function","modifiers":[],"name":"getUserTotalVestingAmount","nameLocation":"6691:25:11","nodeType":"FunctionDefinition","parameters":{"id":4788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4787,"mutability":"mutable","name":"userAddress","nameLocation":"6725:11:11","nodeType":"VariableDeclaration","scope":4792,"src":"6717:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4786,"name":"address","nodeType":"ElementaryTypeName","src":"6717:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6716:21:11"},"returnParameters":{"id":4791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4792,"src":"6761:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4789,"name":"uint256","nodeType":"ElementaryTypeName","src":"6761:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6760:9:11"},"scope":4800,"src":"6682:88:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cd861e16","id":4799,"implemented":false,"kind":"function","modifiers":[],"name":"getUserUnclaimedTokenAmount","nameLocation":"6784:27:11","nodeType":"FunctionDefinition","parameters":{"id":4795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4794,"mutability":"mutable","name":"userAddress","nameLocation":"6820:11:11","nodeType":"VariableDeclaration","scope":4799,"src":"6812:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4793,"name":"address","nodeType":"ElementaryTypeName","src":"6812:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6811:21:11"},"returnParameters":{"id":4798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4799,"src":"6856:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4796,"name":"uint256","nodeType":"ElementaryTypeName","src":"6856:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6855:9:11"},"scope":4800,"src":"6775:90:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4801,"src":"5564:1303:11","usedErrors":[],"usedEvents":[]}],"src":"33:6834:11"}}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[{"inputs":[],"name":"MerkleProofInvalidMultiproof","type":"error"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MerkleProofInvalidMultiproof\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the Merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates Merkle trees that are safe against this attack out of the box.\",\"errors\":{\"MerkleProofInvalidMultiproof()\":[{\"details\":\"The multiproof provided is not valid.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":null,"zk_version":"1.3.23"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"MerkleProof.sol:MerkleProof\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000484fd3ca1933181ec6513e9dde73ec546582d25a58f81bca582f856a190b4fb3"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 5:\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\"\nobject \"MerkleProof_1140\" {\n    code {\n        {\n            /// @src 5:803:9759  \"library MerkleProof {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"MerkleProof_1140_deployed\")\n            codecopy(_1, dataoffset(\"MerkleProof_1140_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 5:\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\"\n    object \"MerkleProof_1140_deployed\" {\n        code {\n            {\n                /// @src 5:803:9759  \"library MerkleProof {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122021973078dd74a323b878ee3ed782698c1d6beb730c5f21ff62cd8935463d1b6364736f6c63430008140033\"\n    }\n}\n","hash":"010000074b8a549c430b8b1d9225b1d599f1badcd220ce5430c9cecd02843f94","factoryDependencies":{}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"contracts/core/DappadSale.sol":{"DappadSale":{"abi":[{"inputs":[{"components":[{"components":[{"components":[{"internalType":"uint256","name":"registerStart","type":"uint256"},{"internalType":"uint256","name":"registerEnd","type":"uint256"},{"internalType":"uint256","name":"registerTokenAmount","type":"uint256"},{"internalType":"uint256","name":"saleStart","type":"uint256"},{"internalType":"uint256","name":"saleEnd","type":"uint256"},{"internalType":"uint256","name":"saleTokenPrice","type":"uint256"},{"internalType":"uint256","name":"maxInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"projectOwnerFeePercentage","type":"uint256"},{"internalType":"bool","name":"registerTokenEnabled","type":"bool"},{"internalType":"bool","name":"salePaused","type":"bool"},{"internalType":"string","name":"saleName","type":"string"}],"internalType":"struct IDappadSale.SaleDetails","name":"saleDetails","type":"tuple"},{"components":[{"internalType":"uint256","name":"fcfsSaleDuration","type":"uint256"},{"internalType":"uint256","name":"fcfsSaleMultiplier","type":"uint256"}],"internalType":"struct IDappadSale.SaleFcfsDetails","name":"fcfsDetails","type":"tuple"},{"components":[{"internalType":"uint256","name":"refundDuration","type":"uint256"},{"internalType":"bool","name":"refundEnabled","type":"bool"}],"internalType":"struct IDappadSale.SaleRefundDetails","name":"refundDetails","type":"tuple"},{"components":[{"internalType":"uint256","name":"ticketPrice","type":"uint256"},{"internalType":"bytes32","name":"ticketMerkleRoot","type":"bytes32"}],"internalType":"struct IDappadSale.SaleTicketDetails","name":"ticketDetails","type":"tuple"},{"components":[{"internalType":"address","name":"saleTokenAddress","type":"address"},{"internalType":"address","name":"registerTokenAddress","type":"address"},{"internalType":"address","name":"investmentTokenAddress","type":"address"},{"internalType":"address","name":"factoryContractAddress","type":"address"},{"internalType":"address","name":"nftContractAddress","type":"address"},{"internalType":"address","name":"stakeControllerContractAddress","type":"address"},{"internalType":"address","name":"vestingContractAddress","type":"address"},{"internalType":"address","name":"ownerAddress","type":"address"},{"internalType":"address","name":"adminAddress","type":"address"},{"internalType":"address","name":"launchpadFeeAddress","type":"address"},{"internalType":"address","name":"projectOwnerFeeAddress","type":"address"}],"internalType":"struct IDappadSale.SaleAddresses","name":"saleAddresses","type":"tuple"}],"internalType":"struct IDappadSale.Sale","name":"sale","type":"tuple"},{"components":[{"internalType":"uint256","name":"minInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"maxInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"tierMaxInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"ticketAmount","type":"uint256"},{"internalType":"bytes32","name":"whitelistMerkleRoot","type":"bytes32"},{"internalType":"uint256","name":"totalInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"totalParticipants","type":"uint256"}],"internalType":"struct IDappadSale.SaleTierDetails[]","name":"tierDetails","type":"tuple[]"}],"internalType":"struct IDappadSale.SaleParams","name":"saleParams","type":"tuple"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"AlreadyRefundedError","type":"error"},{"inputs":[],"name":"EmptySaleNameError","type":"error"},{"inputs":[],"name":"EmptyTierDetailsError","type":"error"},{"inputs":[],"name":"FCFSSaleAlreadyStartedError","type":"error"},{"inputs":[],"name":"FCFSSaleNotEnabledError","type":"error"},{"inputs":[],"name":"FCFSSaleNotStartedError","type":"error"},{"inputs":[],"name":"FirstVestingAlreadyClaimedError","type":"error"},{"inputs":[],"name":"InsufficientAllowanceError","type":"error"},{"inputs":[],"name":"InsufficientBalanceError","type":"error"},{"inputs":[],"name":"InsufficientContractBalanceError","type":"error"},{"inputs":[],"name":"InvalidAmountError","type":"error"},{"inputs":[],"name":"InvalidMaxInvestmentAmountError","type":"error"},{"inputs":[],"name":"InvalidSaleDurationError","type":"error"},{"inputs":[],"name":"InvalidSaleEndDateError","type":"error"},{"inputs":[],"name":"InvalidSaleStartDateError","type":"error"},{"inputs":[],"name":"MaxTierInvestmentReachedError","type":"error"},{"inputs":[],"name":"MaxTotalInvestmentReachedError","type":"error"},{"inputs":[],"name":"MaximumInvestmentReachedError","type":"error"},{"inputs":[],"name":"MinimumInvestmentNotReachedError","type":"error"},{"inputs":[],"name":"NoTierDetailsFoundError","type":"error"},{"inputs":[],"name":"NotJoinedSaleError","type":"error"},{"inputs":[],"name":"RefundNotEnabledError","type":"error"},{"inputs":[],"name":"RefundPeriodOverError","type":"error"},{"inputs":[],"name":"RegisterAlreadyEndedError","type":"error"},{"inputs":[],"name":"RegisterNotStartedError","type":"error"},{"inputs":[],"name":"SaleAlreadyEndedError","type":"error"},{"inputs":[],"name":"SaleIsPausedError","type":"error"},{"inputs":[],"name":"SaleNotEndedError","type":"error"},{"inputs":[],"name":"SaleNotStartedError","type":"error"},{"inputs":[],"name":"TierOneCannotJoinStakerRoundError","type":"error"},{"inputs":[],"name":"TokenTransferFailedError","type":"error"},{"inputs":[],"name":"UnauthorizedError","type":"error"},{"inputs":[],"name":"UserAlreadyRegisteredError","type":"error"},{"inputs":[],"name":"UserHasNoNFTError","type":"error"},{"inputs":[],"name":"UserNotRegisteredError","type":"error"},{"inputs":[],"name":"UserNotWhitelistedError","type":"error"},{"inputs":[],"name":"ZeroAddressError","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"address","name":"saleTokenAddress","type":"address"},{"internalType":"address","name":"registerTokenAddress","type":"address"},{"internalType":"address","name":"investmentTokenAddress","type":"address"},{"internalType":"address","name":"factoryContractAddress","type":"address"},{"internalType":"address","name":"nftContractAddress","type":"address"},{"internalType":"address","name":"stakeControllerContractAddress","type":"address"},{"internalType":"address","name":"vestingContractAddress","type":"address"},{"internalType":"address","name":"ownerAddress","type":"address"},{"internalType":"address","name":"adminAddress","type":"address"},{"internalType":"address","name":"launchpadFeeAddress","type":"address"},{"internalType":"address","name":"projectOwnerFeeAddress","type":"address"}],"indexed":false,"internalType":"struct IDappadSale.SaleAddresses","name":"newSaleAddresses","type":"tuple"}],"name":"SaleAddressesUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"projectOwnerFeeAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"projectOwnerFeeAmount","type":"uint256"},{"indexed":false,"internalType":"address","name":"launchpadFeeAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"launchpadFeeAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"completedTime","type":"uint256"}],"name":"SaleCompleted","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint256","name":"registerStart","type":"uint256"},{"internalType":"uint256","name":"registerEnd","type":"uint256"},{"internalType":"uint256","name":"registerTokenAmount","type":"uint256"},{"internalType":"uint256","name":"saleStart","type":"uint256"},{"internalType":"uint256","name":"saleEnd","type":"uint256"},{"internalType":"uint256","name":"saleTokenPrice","type":"uint256"},{"internalType":"uint256","name":"maxInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"projectOwnerFeePercentage","type":"uint256"},{"internalType":"bool","name":"registerTokenEnabled","type":"bool"},{"internalType":"bool","name":"salePaused","type":"bool"},{"internalType":"string","name":"saleName","type":"string"}],"indexed":false,"internalType":"struct IDappadSale.SaleDetails","name":"newSaleDetails","type":"tuple"}],"name":"SaleDetailsUpdated","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint256","name":"fcfsSaleDuration","type":"uint256"},{"internalType":"uint256","name":"fcfsSaleMultiplier","type":"uint256"}],"indexed":false,"internalType":"struct IDappadSale.SaleFcfsDetails","name":"newFcfsDetails","type":"tuple"}],"name":"SaleFcfsDetailsUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"salePaused","type":"bool"}],"name":"SalePausedUpdated","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint256","name":"refundDuration","type":"uint256"},{"internalType":"bool","name":"refundEnabled","type":"bool"}],"indexed":false,"internalType":"struct IDappadSale.SaleRefundDetails","name":"newRefundDetails","type":"tuple"}],"name":"SaleRefundDetailsUpdated","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint256","name":"ticketPrice","type":"uint256"},{"internalType":"bytes32","name":"ticketMerkleRoot","type":"bytes32"}],"indexed":false,"internalType":"struct IDappadSale.SaleTicketDetails","name":"newTicketDetails","type":"tuple"}],"name":"SaleTicketDetailsUpdated","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint256","name":"minInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"maxInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"tierMaxInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"ticketAmount","type":"uint256"},{"internalType":"bytes32","name":"whitelistMerkleRoot","type":"bytes32"},{"internalType":"uint256","name":"totalInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"totalParticipants","type":"uint256"}],"indexed":false,"internalType":"struct IDappadSale.SaleTierDetails[]","name":"newTierDetails","type":"tuple[]"}],"name":"SaleTierDetailsBatchUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"tierIndex","type":"uint256"},{"components":[{"internalType":"uint256","name":"minInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"maxInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"tierMaxInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"ticketAmount","type":"uint256"},{"internalType":"bytes32","name":"whitelistMerkleRoot","type":"bytes32"},{"internalType":"uint256","name":"totalInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"totalParticipants","type":"uint256"}],"indexed":false,"internalType":"struct IDappadSale.SaleTierDetails","name":"newTierDetails","type":"tuple"}],"name":"SaleTierDetailsUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"stakeControllerContractAddress","type":"address"}],"name":"StakeControllerContractUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"tierIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"investmentAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalInvestmentAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalParticipants","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"joinedTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nftBalance","type":"uint256"}],"name":"UserJoinedFcfsSale","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"tierIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"investmentAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalInvestmentAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalParticipants","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"joinedTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nftBalance","type":"uint256"}],"name":"UserJoinedSale","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"userTierIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"investmentAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalInvestmentAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"refundedTime","type":"uint256"}],"name":"UserRefundedSale","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"tierIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"registerTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalRegisters","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalRegisterTokenAmountLeft","type":"uint256"}],"name":"UserRegisteredSale","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"vestingContractAddress","type":"address"}],"name":"VestingContractUpdated","type":"event"},{"inputs":[],"name":"ADMIN","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OWNER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"checkTicketEligibility","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"uint256","name":"userTierIndex","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"checkWhitelistEligibility","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"completeSale","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"emergencyOnly","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllTierDetails","outputs":[{"components":[{"internalType":"uint256","name":"minInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"maxInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"tierMaxInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"ticketAmount","type":"uint256"},{"internalType":"bytes32","name":"whitelistMerkleRoot","type":"bytes32"},{"internalType":"uint256","name":"totalInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"totalParticipants","type":"uint256"}],"internalType":"struct IDappadSale.SaleTierDetails[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFactoryContractAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getIsSaleActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRefundEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSaleEndDate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSaleTokenAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSaleTokenPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStakeControllerContractAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTierCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierIndex","type":"uint256"}],"name":"getTierDetailsByIndex","outputs":[{"components":[{"internalType":"uint256","name":"minInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"maxInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"tierMaxInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"ticketAmount","type":"uint256"},{"internalType":"bytes32","name":"whitelistMerkleRoot","type":"bytes32"},{"internalType":"uint256","name":"totalInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"totalParticipants","type":"uint256"}],"internalType":"struct IDappadSale.SaleTierDetails","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserInvestmentAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserRefunded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"investmentAmounts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"investmentToken","outputs":[{"internalType":"contract IERC20Extented","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32[]","name":"whitelistProof","type":"bytes32[]"}],"name":"joinFcfsSale","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32[]","name":"whitelistProof","type":"bytes32[]"},{"internalType":"bytes32[]","name":"ticketProof","type":"bytes32[]"}],"name":"joinSale","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"refund","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"refunded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"registerDetails","outputs":[{"internalType":"uint256","name":"registerTokenAmount","type":"uint256"},{"internalType":"uint256","name":"tierIndex","type":"uint256"},{"internalType":"bool","name":"registered","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registerSale","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"registerToken","outputs":[{"internalType":"contract IERC20Extented","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sale","outputs":[{"components":[{"internalType":"uint256","name":"registerStart","type":"uint256"},{"internalType":"uint256","name":"registerEnd","type":"uint256"},{"internalType":"uint256","name":"registerTokenAmount","type":"uint256"},{"internalType":"uint256","name":"saleStart","type":"uint256"},{"internalType":"uint256","name":"saleEnd","type":"uint256"},{"internalType":"uint256","name":"saleTokenPrice","type":"uint256"},{"internalType":"uint256","name":"maxInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"projectOwnerFeePercentage","type":"uint256"},{"internalType":"bool","name":"registerTokenEnabled","type":"bool"},{"internalType":"bool","name":"salePaused","type":"bool"},{"internalType":"string","name":"saleName","type":"string"}],"internalType":"struct IDappadSale.SaleDetails","name":"saleDetails","type":"tuple"},{"components":[{"internalType":"uint256","name":"fcfsSaleDuration","type":"uint256"},{"internalType":"uint256","name":"fcfsSaleMultiplier","type":"uint256"}],"internalType":"struct IDappadSale.SaleFcfsDetails","name":"fcfsDetails","type":"tuple"},{"components":[{"internalType":"uint256","name":"refundDuration","type":"uint256"},{"internalType":"bool","name":"refundEnabled","type":"bool"}],"internalType":"struct IDappadSale.SaleRefundDetails","name":"refundDetails","type":"tuple"},{"components":[{"internalType":"uint256","name":"ticketPrice","type":"uint256"},{"internalType":"bytes32","name":"ticketMerkleRoot","type":"bytes32"}],"internalType":"struct IDappadSale.SaleTicketDetails","name":"ticketDetails","type":"tuple"},{"components":[{"internalType":"address","name":"saleTokenAddress","type":"address"},{"internalType":"address","name":"registerTokenAddress","type":"address"},{"internalType":"address","name":"investmentTokenAddress","type":"address"},{"internalType":"address","name":"factoryContractAddress","type":"address"},{"internalType":"address","name":"nftContractAddress","type":"address"},{"internalType":"address","name":"stakeControllerContractAddress","type":"address"},{"internalType":"address","name":"vestingContractAddress","type":"address"},{"internalType":"address","name":"ownerAddress","type":"address"},{"internalType":"address","name":"adminAddress","type":"address"},{"internalType":"address","name":"launchpadFeeAddress","type":"address"},{"internalType":"address","name":"projectOwnerFeeAddress","type":"address"}],"internalType":"struct IDappadSale.SaleAddresses","name":"saleAddresses","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"saleStatistics","outputs":[{"internalType":"uint256","name":"totalInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"totalSaleTokenAmount","type":"uint256"},{"internalType":"uint256","name":"totalParticipants","type":"uint256"},{"internalType":"uint256","name":"totalRegisters","type":"uint256"},{"internalType":"uint256","name":"totalRegisterTokenAmountLeft","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"refundDuration","type":"uint256"},{"internalType":"bool","name":"refundEnabled","type":"bool"}],"internalType":"struct IDappadSale.SaleRefundDetails","name":"newRefundDetails","type":"tuple"}],"name":"setRefundDetails","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"saleTokenAddress","type":"address"},{"internalType":"address","name":"registerTokenAddress","type":"address"},{"internalType":"address","name":"investmentTokenAddress","type":"address"},{"internalType":"address","name":"factoryContractAddress","type":"address"},{"internalType":"address","name":"nftContractAddress","type":"address"},{"internalType":"address","name":"stakeControllerContractAddress","type":"address"},{"internalType":"address","name":"vestingContractAddress","type":"address"},{"internalType":"address","name":"ownerAddress","type":"address"},{"internalType":"address","name":"adminAddress","type":"address"},{"internalType":"address","name":"launchpadFeeAddress","type":"address"},{"internalType":"address","name":"projectOwnerFeeAddress","type":"address"}],"internalType":"struct IDappadSale.SaleAddresses","name":"newSaleAddresses","type":"tuple"}],"name":"setSaleAddresses","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"registerStart","type":"uint256"},{"internalType":"uint256","name":"registerEnd","type":"uint256"},{"internalType":"uint256","name":"registerTokenAmount","type":"uint256"},{"internalType":"uint256","name":"saleStart","type":"uint256"},{"internalType":"uint256","name":"saleEnd","type":"uint256"},{"internalType":"uint256","name":"saleTokenPrice","type":"uint256"},{"internalType":"uint256","name":"maxInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"projectOwnerFeePercentage","type":"uint256"},{"internalType":"bool","name":"registerTokenEnabled","type":"bool"},{"internalType":"bool","name":"salePaused","type":"bool"},{"internalType":"string","name":"saleName","type":"string"}],"internalType":"struct IDappadSale.SaleDetails","name":"newSaleDetails","type":"tuple"}],"name":"setSaleDetails","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"fcfsSaleDuration","type":"uint256"},{"internalType":"uint256","name":"fcfsSaleMultiplier","type":"uint256"}],"internalType":"struct IDappadSale.SaleFcfsDetails","name":"newFcfsDetails","type":"tuple"}],"name":"setSaleFcfsDetails","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"salePaused","type":"bool"}],"name":"setSalePaused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"stakeControllerContractAddress","type":"address"}],"name":"setStakeControllerContract","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"ticketPrice","type":"uint256"},{"internalType":"bytes32","name":"ticketMerkleRoot","type":"bytes32"}],"internalType":"struct IDappadSale.SaleTicketDetails","name":"newTicketDetails","type":"tuple"}],"name":"setTicketDetails","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierIndex","type":"uint256"},{"components":[{"internalType":"uint256","name":"minInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"maxInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"tierMaxInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"ticketAmount","type":"uint256"},{"internalType":"bytes32","name":"whitelistMerkleRoot","type":"bytes32"},{"internalType":"uint256","name":"totalInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"totalParticipants","type":"uint256"}],"internalType":"struct IDappadSale.SaleTierDetails","name":"newTierDetails","type":"tuple"}],"name":"setTierDetails","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"minInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"maxInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"tierMaxInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"ticketAmount","type":"uint256"},{"internalType":"bytes32","name":"whitelistMerkleRoot","type":"bytes32"},{"internalType":"uint256","name":"totalInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"totalParticipants","type":"uint256"}],"internalType":"struct IDappadSale.SaleTierDetails[]","name":"newTierDetails","type":"tuple[]"}],"name":"setTierDetailsBatch","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"vestingContractAddress","type":"address"}],"name":"setVestingContract","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stakeControllerContract","outputs":[{"internalType":"contract IDappadStakeController","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tierDetails","outputs":[{"internalType":"uint256","name":"minInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"maxInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"tierMaxInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"ticketAmount","type":"uint256"},{"internalType":"bytes32","name":"whitelistMerkleRoot","type":"bytes32"},{"internalType":"uint256","name":"totalInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"totalParticipants","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"vestingContract","outputs":[{"internalType":"contract IDappadVesting","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawRegisterToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"registerStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registerEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registerTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleTokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"projectOwnerFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"registerTokenEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"salePaused\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"saleName\",\"type\":\"string\"}],\"internalType\":\"struct IDappadSale.SaleDetails\",\"name\":\"saleDetails\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"fcfsSaleDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fcfsSaleMultiplier\",\"type\":\"uint256\"}],\"internalType\":\"struct IDappadSale.SaleFcfsDetails\",\"name\":\"fcfsDetails\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refundDuration\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"refundEnabled\",\"type\":\"bool\"}],\"internalType\":\"struct IDappadSale.SaleRefundDetails\",\"name\":\"refundDetails\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ticketPrice\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"ticketMerkleRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IDappadSale.SaleTicketDetails\",\"name\":\"ticketDetails\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"saleTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"registerTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"investmentTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factoryContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stakeControllerContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vestingContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"adminAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchpadFeeAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"projectOwnerFeeAddress\",\"type\":\"address\"}],\"internalType\":\"struct IDappadSale.SaleAddresses\",\"name\":\"saleAddresses\",\"type\":\"tuple\"}],\"internalType\":\"struct IDappadSale.Sale\",\"name\":\"sale\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tierMaxInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"whitelistMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalParticipants\",\"type\":\"uint256\"}],\"internalType\":\"struct IDappadSale.SaleTierDetails[]\",\"name\":\"tierDetails\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IDappadSale.SaleParams\",\"name\":\"saleParams\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyRefundedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptySaleNameError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyTierDetailsError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FCFSSaleAlreadyStartedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FCFSSaleNotEnabledError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FCFSSaleNotStartedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FirstVestingAlreadyClaimedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAllowanceError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalanceError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientContractBalanceError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmountError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaxInvestmentAmountError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSaleDurationError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSaleEndDateError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSaleStartDateError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxTierInvestmentReachedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxTotalInvestmentReachedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaximumInvestmentReachedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinimumInvestmentNotReachedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoTierDetailsFoundError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotJoinedSaleError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RefundNotEnabledError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RefundPeriodOverError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RegisterAlreadyEndedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RegisterNotStartedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SaleAlreadyEndedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SaleIsPausedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SaleNotEndedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SaleNotStartedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TierOneCannotJoinStakerRoundError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenTransferFailedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserAlreadyRegisteredError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserHasNoNFTError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserNotRegisteredError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserNotWhitelistedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressError\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"saleTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"registerTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"investmentTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factoryContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stakeControllerContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vestingContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"adminAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchpadFeeAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"projectOwnerFeeAddress\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IDappadSale.SaleAddresses\",\"name\":\"newSaleAddresses\",\"type\":\"tuple\"}],\"name\":\"SaleAddressesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"projectOwnerFeeAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"projectOwnerFeeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"launchpadFeeAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"launchpadFeeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"completedTime\",\"type\":\"uint256\"}],\"name\":\"SaleCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"registerStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registerEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registerTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleTokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"projectOwnerFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"registerTokenEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"salePaused\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"saleName\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IDappadSale.SaleDetails\",\"name\":\"newSaleDetails\",\"type\":\"tuple\"}],\"name\":\"SaleDetailsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"fcfsSaleDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fcfsSaleMultiplier\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IDappadSale.SaleFcfsDetails\",\"name\":\"newFcfsDetails\",\"type\":\"tuple\"}],\"name\":\"SaleFcfsDetailsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"salePaused\",\"type\":\"bool\"}],\"name\":\"SalePausedUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refundDuration\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"refundEnabled\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct IDappadSale.SaleRefundDetails\",\"name\":\"newRefundDetails\",\"type\":\"tuple\"}],\"name\":\"SaleRefundDetailsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ticketPrice\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"ticketMerkleRoot\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct IDappadSale.SaleTicketDetails\",\"name\":\"newTicketDetails\",\"type\":\"tuple\"}],\"name\":\"SaleTicketDetailsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tierMaxInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"whitelistMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalParticipants\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IDappadSale.SaleTierDetails[]\",\"name\":\"newTierDetails\",\"type\":\"tuple[]\"}],\"name\":\"SaleTierDetailsBatchUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tierIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tierMaxInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"whitelistMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalParticipants\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IDappadSale.SaleTierDetails\",\"name\":\"newTierDetails\",\"type\":\"tuple\"}],\"name\":\"SaleTierDetailsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakeControllerContractAddress\",\"type\":\"address\"}],\"name\":\"StakeControllerContractUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tierIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"investmentAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalInvestmentAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalParticipants\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinedTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftBalance\",\"type\":\"uint256\"}],\"name\":\"UserJoinedFcfsSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tierIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"investmentAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalInvestmentAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalParticipants\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinedTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftBalance\",\"type\":\"uint256\"}],\"name\":\"UserJoinedSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userTierIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"investmentAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalInvestmentAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refundedTime\",\"type\":\"uint256\"}],\"name\":\"UserRefundedSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tierIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"registerTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalRegisters\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalRegisterTokenAmountLeft\",\"type\":\"uint256\"}],\"name\":\"UserRegisteredSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vestingContractAddress\",\"type\":\"address\"}],\"name\":\"VestingContractUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OWNER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"checkTicketEligibility\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userTierIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"checkWhitelistEligibility\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"completeSale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyOnly\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllTierDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tierMaxInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"whitelistMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalParticipants\",\"type\":\"uint256\"}],\"internalType\":\"struct IDappadSale.SaleTierDetails[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFactoryContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIsSaleActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRefundEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSaleEndDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSaleTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSaleTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakeControllerContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTierCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tierIndex\",\"type\":\"uint256\"}],\"name\":\"getTierDetailsByIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tierMaxInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"whitelistMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalParticipants\",\"type\":\"uint256\"}],\"internalType\":\"struct IDappadSale.SaleTierDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserInvestmentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserRefunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"investmentAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investmentToken\",\"outputs\":[{\"internalType\":\"contract IERC20Extented\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"whitelistProof\",\"type\":\"bytes32[]\"}],\"name\":\"joinFcfsSale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"whitelistProof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"ticketProof\",\"type\":\"bytes32[]\"}],\"name\":\"joinSale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"refunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"registerDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"registerTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tierIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"registered\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerSale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerToken\",\"outputs\":[{\"internalType\":\"contract IERC20Extented\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sale\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"registerStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registerEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registerTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleTokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"projectOwnerFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"registerTokenEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"salePaused\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"saleName\",\"type\":\"string\"}],\"internalType\":\"struct IDappadSale.SaleDetails\",\"name\":\"saleDetails\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"fcfsSaleDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fcfsSaleMultiplier\",\"type\":\"uint256\"}],\"internalType\":\"struct IDappadSale.SaleFcfsDetails\",\"name\":\"fcfsDetails\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refundDuration\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"refundEnabled\",\"type\":\"bool\"}],\"internalType\":\"struct IDappadSale.SaleRefundDetails\",\"name\":\"refundDetails\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ticketPrice\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"ticketMerkleRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IDappadSale.SaleTicketDetails\",\"name\":\"ticketDetails\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"saleTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"registerTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"investmentTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factoryContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stakeControllerContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vestingContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"adminAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchpadFeeAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"projectOwnerFeeAddress\",\"type\":\"address\"}],\"internalType\":\"struct IDappadSale.SaleAddresses\",\"name\":\"saleAddresses\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleStatistics\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSaleTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalParticipants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRegisters\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRegisterTokenAmountLeft\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refundDuration\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"refundEnabled\",\"type\":\"bool\"}],\"internalType\":\"struct IDappadSale.SaleRefundDetails\",\"name\":\"newRefundDetails\",\"type\":\"tuple\"}],\"name\":\"setRefundDetails\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"saleTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"registerTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"investmentTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factoryContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stakeControllerContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vestingContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"adminAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchpadFeeAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"projectOwnerFeeAddress\",\"type\":\"address\"}],\"internalType\":\"struct IDappadSale.SaleAddresses\",\"name\":\"newSaleAddresses\",\"type\":\"tuple\"}],\"name\":\"setSaleAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"registerStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registerEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registerTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleTokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"projectOwnerFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"registerTokenEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"salePaused\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"saleName\",\"type\":\"string\"}],\"internalType\":\"struct IDappadSale.SaleDetails\",\"name\":\"newSaleDetails\",\"type\":\"tuple\"}],\"name\":\"setSaleDetails\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"fcfsSaleDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fcfsSaleMultiplier\",\"type\":\"uint256\"}],\"internalType\":\"struct IDappadSale.SaleFcfsDetails\",\"name\":\"newFcfsDetails\",\"type\":\"tuple\"}],\"name\":\"setSaleFcfsDetails\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"salePaused\",\"type\":\"bool\"}],\"name\":\"setSalePaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakeControllerContractAddress\",\"type\":\"address\"}],\"name\":\"setStakeControllerContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ticketPrice\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"ticketMerkleRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IDappadSale.SaleTicketDetails\",\"name\":\"newTicketDetails\",\"type\":\"tuple\"}],\"name\":\"setTicketDetails\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tierIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tierMaxInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"whitelistMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalParticipants\",\"type\":\"uint256\"}],\"internalType\":\"struct IDappadSale.SaleTierDetails\",\"name\":\"newTierDetails\",\"type\":\"tuple\"}],\"name\":\"setTierDetails\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tierMaxInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"whitelistMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalParticipants\",\"type\":\"uint256\"}],\"internalType\":\"struct IDappadSale.SaleTierDetails[]\",\"name\":\"newTierDetails\",\"type\":\"tuple[]\"}],\"name\":\"setTierDetailsBatch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vestingContractAddress\",\"type\":\"address\"}],\"name\":\"setVestingContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeControllerContract\",\"outputs\":[{\"internalType\":\"contract IDappadStakeController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tierDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tierMaxInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"whitelistMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalParticipants\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingContract\",\"outputs\":[{\"internalType\":\"contract IDappadVesting\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawRegisterToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/DappadSale.sol\":\"DappadSale\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/core/DappadSale.sol\":{\"keccak256\":\"0xbe9804ece31fdccfbcfe899e89f5f444ef8bf8ce1855a5d99d2b0bdfe0666df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22939102223a0eb409cc245c46a0475062256e32cc9e00cecc2bd859a342e8ef\",\"dweb:/ipfs/QmXZ9SmHyuU82cP5GJR3Cahvn52ocX16Y9UndRh95nim8W\"]},\"contracts/errors/Errors.sol\":{\"keccak256\":\"0x1e7bd8e98aaf625e63f63fa8d2bf4f8b4beb93313e33dfb6affdcdd9a7524f70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0613414bf0ad19a7ebc66e8eba189869aacf94f9e734536488a75216942650\",\"dweb:/ipfs/QmRGKqDpx3ef5D3MXMyoR7U23HWqDZmj9Kt2QJgcgD37YR\"]},\"contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xcee038fff82ea087fcca9ccabcc0e8e8d98fe8e907c3d781e16b653badd7bd42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8437b64a0e7587e2d0ab0f37767f9be8bce72b41ecb3c340940a301f35422f48\",\"dweb:/ipfs/QmYy6hA9PY78CDsq71zPsYxBKJxGgSSpSmhXSW4kSLke4a\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":null,"zk_version":"1.3.23"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"DappadSale.sol:DappadSale\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[17]\n\tadd\tr2, r0, r3\n\tptr.add\tr1, r0, r8\n\tptr.add\tr8, r0, stack[@ptr_calldata]\n\tadd\tr8, r0, r1\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r4\n\tst.1\t64, r4\n\tand\t@CPI0_0[0], r1, r2\n\tand!\t1, r3, r1\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r2, r1\n\tjump.lt\t@.BB0_2\n\tld\tr8, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_34[0], r1, r3\n\tjump.gt\t@.BB0_154\n\tsub.s!\t@CPI0_68[0], r1, r3\n\tjump.le\t@.BB0_122\n\tsub.s!\t@CPI0_69[0], r1, r3\n\tjump.le\t@.BB0_138\n\tsub.s!\t@CPI0_70[0], r1, r3\n\tjump.le\t@.BB0_146\n\tsub.s!\t@CPI0_71[0], r1, r3\n\tjump.gt\t@.BB0_152\n\tsub.s!\t@CPI0_74[0], r1, r2\n\tjump.eq\t@.BB0_575\n\tsub.s!\t@CPI0_75[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t22, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_10[0], r1, r1\n\tadd\tr0, r0, r1\n\tjump.ne\t@.BB0_579\n.BB0_594:\n\tst.1\tr4, r1\n\tshl.s\t64, r4, r1\n\tor\t@CPI0_117[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_1[0], r2, r1\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tjump.gt\t@.BB0_6\n.BB0_4:\n\tadd\t@CPI0_164[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB0_5:\n\tst.1\t4, r1\n\tadd\t@CPI0_104[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_154:\n\tsub.s!\t@CPI0_35[0], r1, r3\n\tjump.le\t@.BB0_155\n\tsub.s!\t@CPI0_36[0], r1, r3\n\tjump.le\t@.BB0_171\n\tsub.s!\t@CPI0_37[0], r1, r3\n\tjump.le\t@.BB0_179\n\tsub.s!\t@CPI0_38[0], r1, r3\n\tjump.gt\t@.BB0_185\n\tsub.s!\t@CPI0_41[0], r1, r3\n\tjump.eq\t@.BB0_1110\n\tsub.s!\t@CPI0_42[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr1\n\tand!\t@CPI0_10[0], r1, r1\n\tjump.eq\t@.BB0_336\n\tadd\tr1, r0, stack-[14]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_1120\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_200\n.BB0_1120:\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_81\n\tld\tr1, r1\n\tsub.s!\tstack-[13], r1, r1\n\tjump.le\t@.BB0_343\n\tadd\t33, r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r5\n\tadd\t@CPI0_103[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tcontext.this\tr3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_10[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr2, r0, stack-[11]\n\tadd\tr5, r0, stack-[13]\n\tjump.ne\t@.BB0_1124\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1134\n.BB0_6:\n\tadd\t159, r2, r1\n\tand\t@CPI0_3[0], r1, r1\n\tst.1\t64, r1\n\tand\t31, r2, r1\n\tshr.s!\t5, r2, r3\n\tjump.eq\t@.BB0_1299\n\tadd\tr0, r0, r4\n.BB0_8:\n\tshl.s\t5, r4, r5\n\tptr.add\tr8, r5, r6\n\tld\tr6, r6\n\tadd\t128, r5, r5\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_8\n.BB0_1299:\n\tsub!\tr1, r0, r4\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r3, r3\n\tptr.add\tr8, r3, r4\n\tshl.s\t3, r1, r1\n\tadd\t128, r3, r3\n\tld.1\tr3, r5\n\tshl\tr5, r1, r5\n\tshr\tr5, r1, r5\n\tld\tr4, r4\n\tsub\t256, r1, r1\n\tshr\tr4, r1, r4\n\tshl\tr4, r1, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_10:\n\tsub.s!\t32, r2, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r4\n\tsub.s!\t@CPI0_4[0], r4, r1\n\tjump.gt\t@.BB0_2\n\tadd\t128, r4, r3\n\tadd\t128, r2, r1\n\tsub\tr1, r3, r2\n\tadd\t@CPI0_5[0], r0, r5\n\tsub.s!\t64, r2, r6\n\tadd\tr0, r0, r6\n\tadd.lt\tr5, r0, r6\n\tand\t@CPI0_5[0], r2, r2\n\tsub!\tr2, r0, r7\n\tadd.le\tr0, r0, r5\n\tsub.s!\t@CPI0_5[0], r2, r2\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_13\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_122:\n\tsub.s!\t@CPI0_86[0], r1, r3\n\tjump.gt\t@.BB0_130\n\tsub.s!\t@CPI0_94[0], r1, r3\n\tjump.gt\t@.BB0_127\n\tsub.s!\t@CPI0_98[0], r1, r3\n\tjump.eq\t@.BB0_187\n\tsub.s!\t@CPI0_99[0], r1, r3\n\tjump.eq\t@.BB0_190\n\tsub.s!\t@CPI0_100[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tadd\t192, r0, r1\n\tst.1\t64, r1\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r1\n\tst.1\t128, r1\n\tptr.add.s\t36, r8, r1\n\tld\tr1, r1\n\tst.1\t160, r1\n\tcontext.caller\tr1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\tr1, r0, stack-[14]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_201\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_200\n.BB0_201:\n\tld.1\t128, r1\n\tadd\t11, r0, r2\n\tsstore\tr2, r1\n\tadd\t12, r0, r2\n\tld.1\t160, r3\n\tsstore\tr2, r3\n\tld.1\t64, r2\n\tst.1.inc\tr2, r1, r1\n\tld.1\t160, r3\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_172[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tjump\t@.BB0_202\n.BB0_155:\n\tsub.s!\t@CPI0_53[0], r1, r3\n\tjump.gt\t@.BB0_163\n\tsub.s!\t@CPI0_61[0], r1, r3\n\tjump.gt\t@.BB0_160\n\tsub.s!\t@CPI0_65[0], r1, r3\n\tjump.eq\t@.BB0_791\n\tsub.s!\t@CPI0_66[0], r1, r3\n\tjump.eq\t@.BB0_801\n\tsub.s!\t@CPI0_67[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r2\n\tsub!\tr2, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr2, r0, stack-[14]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_811\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_200\n.BB0_811:\n\tadd\t9, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_135[0], r2, r2\n\tadd\tstack-[14], r0, r4\n\tsub!\tr4, r0, r3\n\tor.ne\t256, r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r4\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_131[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_136[0], r0, r4\n\tjump\t@.BB0_895\n.BB0_138:\n\tsub.s!\t@CPI0_79[0], r1, r3\n\tjump.gt\t@.BB0_142\n\tsub.s!\t@CPI0_83[0], r1, r3\n\tjump.eq\t@.BB0_284\n\tsub.s!\t@CPI0_84[0], r1, r3\n\tjump.eq\t@.BB0_292\n\tsub.s!\t@CPI0_85[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tadd\t192, r0, r1\n\tst.1\t64, r1\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r1\n\tst.1\t128, r1\n\tptr.add.s\t36, r8, r1\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tst.1\t160, r1\n\tcontext.caller\tr1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\tr1, r0, stack-[14]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_325\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_200\n.BB0_325:\n\tld.1\t128, r1\n\tadd\t13, r0, r2\n\tsstore\tr2, r1\n\tadd\t14, r0, r2\n\tsload\tr2, r3\n\tsub.s\t256, r0, r4\n\tand\tr3, r4, r3\n\tld.1\t160, r4\n\tsub!\tr4, r0, r4\n\tor.ne\t1, r3, r3\n\tsstore\tr2, r3\n\tld.1\t64, r2\n\tst.1.inc\tr2, r1, r1\n\tld.1\t160, r3\n\tsub!\tr3, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_166[0], r0, r4\n\tjump\t@.BB0_895\n.BB0_171:\n\tsub.s!\t@CPI0_46[0], r1, r3\n\tjump.gt\t@.BB0_175\n\tsub.s!\t@CPI0_50[0], r1, r3\n\tjump.eq\t@.BB0_902\n\tsub.s!\t@CPI0_51[0], r1, r3\n\tjump.eq\t@.BB0_909\n\tsub.s!\t@CPI0_52[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t39, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tjump\t@.BB0_915\n.BB0_130:\n\tsub.s!\t@CPI0_87[0], r1, r3\n\tjump.gt\t@.BB0_134\n\tsub.s!\t@CPI0_91[0], r1, r3\n\tjump.eq\t@.BB0_220\n\tsub.s!\t@CPI0_92[0], r1, r2\n\tjump.eq\t@.BB0_223\n\tsub.s!\t@CPI0_93[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t17, r0, r1\n\tjump\t@.BB0_189\n.BB0_163:\n\tsub.s!\t@CPI0_54[0], r1, r3\n\tjump.gt\t@.BB0_167\n\tsub.s!\t@CPI0_58[0], r1, r3\n\tjump.eq\t@.BB0_875\n\tsub.s!\t@CPI0_59[0], r1, r3\n\tjump.eq\t@.BB0_880\n\tsub.s!\t@CPI0_60[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tst.1\t128, r0\n\tadd\t@CPI0_129[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_13:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t@CPI0_6[0], r2, r2\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[14], r0, r5\n\tadd\t64, r5, r2\n\tst.1\t64, r2\n\tadd\tr5, r0, stack-[17]\n\tld.1\tr3, r5\n\tsub.s!\t@CPI0_4[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tadd\tr5, r3, r5\n\tsub\tr1, r5, r6\n\tadd\t@CPI0_5[0], r0, r7\n\tsub.s!\t576, r6, r8\n\tadd\tr0, r0, r8\n\tadd.lt\tr7, r0, r8\n\tand\t@CPI0_5[0], r6, r9\n\tsub!\tr9, r0, r10\n\tadd.le\tr0, r0, r7\n\tsub.s!\t@CPI0_5[0], r9, r9\n\tadd.ne\tr8, r0, r7\n\tsub!\tr7, r0, r7\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[14], r0, r7\n\tsub.s!\t@CPI0_7[0], r7, r7\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[14], r0, r7\n\tadd\t224, r7, r8\n\tst.1\t64, r8\n\tld.1.inc\tr5, r9, r7\n\tsub.s!\t@CPI0_4[0], r9, r10\n\tjump.gt\t@.BB0_2\n\tadd\tr9, r5, r9\n\tsub\tr1, r9, r10\n\tadd\t@CPI0_5[0], r0, r11\n\tsub.s!\t352, r10, r12\n\tadd\tr0, r0, r12\n\tadd.lt\tr11, r0, r12\n\tand\t@CPI0_5[0], r10, r10\n\tsub!\tr10, r0, r13\n\tadd.le\tr0, r0, r11\n\tsub.s!\t@CPI0_5[0], r10, r10\n\tadd.ne\tr12, r0, r11\n\tsub!\tr11, r0, r10\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[14], r0, r10\n\tsub.s!\t@CPI0_8[0], r10, r10\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[14], r0, r12\n\tadd\t576, r12, r10\n\tst.1\t64, r10\n\tld.1.inc\tr9, r10, r11\n\tst.1\tr8, r10\n\tld.1\tr11, r10\n\tadd\t256, r12, r11\n\tst.1\tr11, r10\n\tadd\t64, r9, r10\n\tld.1\tr10, r10\n\tadd\t288, r12, r11\n\tst.1\tr11, r10\n\tadd\t96, r9, r10\n\tld.1\tr10, r10\n\tadd\t320, r12, r11\n\tst.1\tr11, r10\n\tadd\t128, r9, r10\n\tld.1\tr10, r10\n\tadd\t352, r12, r11\n\tst.1\tr11, r10\n\tadd\t160, r9, r10\n\tld.1\tr10, r10\n\tadd\t384, r12, r11\n\tst.1\tr11, r10\n\tadd\t192, r9, r10\n\tld.1\tr10, r10\n\tadd\t416, r12, r11\n\tst.1\tr11, r10\n\tadd\t448, r12, r10\n\tadd\t224, r9, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t256, r9, r10\n\tld.1\tr10, r10\n\tsub!\tr10, r0, r11\n\tadd\t0, r0, r11\n\tadd.ne\t1, r0, r11\n\tsub!\tr10, r11, r11\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[14], r0, r11\n\tadd\t480, r11, r11\n\tst.1\tr11, r10\n\tadd\t288, r9, r10\n\tld.1\tr10, r10\n\tsub!\tr10, r0, r11\n\tadd\t0, r0, r11\n\tadd.ne\t1, r0, r11\n\tsub!\tr10, r11, r11\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[14], r0, r11\n\tadd\t512, r11, r11\n\tst.1\tr11, r10\n\tadd\t320, r9, r10\n\tld.1\tr10, r10\n\tsub.s!\t@CPI0_4[0], r10, r11\n\tjump.gt\t@.BB0_2\n\tadd\tr10, r9, r9\n\tadd\t31, r9, r10\n\tsub!\tr10, r1, r10\n\tjump.ge\t@.BB0_2\n\tld.1\tr9, r10\n\tsub.s!\t@CPI0_4[0], r10, r11\n\tjump.gt\t@.BB0_4\n\tadd\t63, r10, r11\n\tsub.s\t32, r0, stack-[13]\n\tand\tstack-[13], r11, r12\n\tld.1\t64, r11\n\tadd\tr11, r12, r12\n\tsub!\tr12, r11, r13\n\tadd\t0, r0, r13\n\tadd.lt\t1, r0, r13\n\tsub.s!\t@CPI0_4[0], r12, r14\n\tjump.gt\t@.BB0_4\n\tand!\t1, r13, r13\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r12\n\tst.1\tr11, r10\n\tadd\t32, r10, r12\n\tadd\tr12, r9, r13\n\tsub!\tr13, r1, r13\n\tjump.gt\t@.BB0_2\n\tsub!\tr10, r0, r13\n\tjump.eq\t@.BB0_31\n\tadd\tr0, r0, r13\n.BB0_30:\n\tadd\t32, r13, r13\n\tadd\tr13, r11, r14\n\tadd\tr13, r9, r15\n\tld.1\tr15, r15\n\tst.1\tr14, r15\n\tsub!\tr13, r10, r14\n\tjump.lt\t@.BB0_30\n.BB0_31:\n\tadd\tr12, r11, r9\n\tst.1\tr9, r0\n\tadd\tstack-[14], r0, r9\n\tadd\t544, r9, r9\n\tst.1\tr9, r11\n\tst.1\tr2, r8\n\tsub.s\t32, r6, r8\n\tadd\t@CPI0_5[0], r0, r9\n\tsub.s!\t64, r8, r10\n\tadd\tr0, r0, r10\n\tadd.lt\tr9, r0, r10\n\tand\t@CPI0_5[0], r8, r8\n\tsub!\tr8, r0, r11\n\tadd.le\tr0, r0, r9\n\tsub.s!\t@CPI0_5[0], r8, r8\n\tadd.ne\tr10, r0, r9\n\tsub!\tr9, r0, r8\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r8\n\tsub.s!\t@CPI0_6[0], r8, r9\n\tjump.gt\t@.BB0_4\n\tadd\t64, r8, r9\n\tst.1\t64, r9\n\tld.1\tr7, r7\n\tst.1.inc\tr8, r7, r7\n\tadd\t64, r5, r9\n\tld.1\tr9, r9\n\tst.1\tr7, r9\n\tadd\tstack-[14], r0, r7\n\tadd\t96, r7, r7\n\tst.1\tr7, r8\n\tsub.s\t96, r6, r7\n\tsub.s!\t64, r7, r7\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r7\n\tsub.s!\t@CPI0_6[0], r7, r8\n\tjump.gt\t@.BB0_4\n\tadd\t64, r7, r8\n\tst.1\t64, r8\n\tadd\t96, r5, r8\n\tld.1\tr8, r8\n\tst.1.inc\tr7, r8, r8\n\tadd\t128, r5, r9\n\tld.1\tr9, r9\n\tsub!\tr9, r0, r10\n\tadd\t0, r0, r10\n\tadd.ne\t1, r0, r10\n\tsub!\tr9, r10, r10\n\tjump.ne\t@.BB0_2\n\tst.1\tr8, r9\n\tadd\tstack-[14], r0, r8\n\tadd\t128, r8, r8\n\tst.1\tr8, r7\n\tsub.s\t160, r6, r7\n\tsub.s!\t64, r7, r7\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r7\n\tsub.s!\t@CPI0_6[0], r7, r8\n\tjump.gt\t@.BB0_4\n\tadd\t64, r7, r8\n\tst.1\t64, r8\n\tadd\t160, r5, r8\n\tld.1\tr8, r8\n\tst.1.inc\tr7, r8, r8\n\tadd\t192, r5, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\tstack-[14], r0, r8\n\tadd\t160, r8, r8\n\tst.1\tr8, r7\n\tsub.s\t224, r6, r6\n\tsub.s!\t352, r6, r6\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r6\n\tsub.s!\t@CPI0_9[0], r6, r7\n\tjump.gt\t@.BB0_4\n\tadd\t352, r6, r7\n\tst.1\t64, r7\n\tadd\t224, r5, r7\n\tld.1\tr7, r7\n\tsub.s!\t@CPI0_10[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr6, r7, r7\n\tadd\t256, r5, r8\n\tld.1\tr8, r8\n\tsub.s!\t@CPI0_10[0], r8, r9\n\tjump.gt\t@.BB0_2\n\tst.1\tr7, r8\n\tadd\t288, r5, r7\n\tld.1\tr7, r7\n\tsub.s!\t@CPI0_10[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tadd\t64, r6, r8\n\tst.1\tr8, r7\n\tadd\t320, r5, r7\n\tld.1\tr7, r7\n\tsub.s!\t@CPI0_10[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tadd\t96, r6, r8\n\tst.1\tr8, r7\n\tadd\t352, r5, r7\n\tld.1\tr7, r7\n\tsub.s!\t@CPI0_10[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tadd\t128, r6, r8\n\tst.1\tr8, r7\n\tadd\t384, r5, r7\n\tld.1\tr7, r7\n\tsub.s!\t@CPI0_10[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tadd\t160, r6, r8\n\tst.1\tr8, r7\n\tadd\t416, r5, r7\n\tld.1\tr7, r7\n\tsub.s!\t@CPI0_10[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tadd\t192, r6, r8\n\tst.1\tr8, r7\n\tadd\t448, r5, r7\n\tld.1\tr7, r7\n\tsub.s!\t@CPI0_10[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tadd\t224, r6, r8\n\tst.1\tr8, r7\n\tadd\t480, r5, r7\n\tld.1\tr7, r7\n\tsub.s!\t@CPI0_10[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tadd\t256, r6, r8\n\tst.1\tr8, r7\n\tadd\t512, r5, r7\n\tld.1\tr7, r7\n\tsub.s!\t@CPI0_10[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tadd\t288, r6, r8\n\tst.1\tr8, r7\n\tadd\t544, r5, r5\n\tld.1\tr5, r5\n\tsub.s!\t@CPI0_10[0], r5, r7\n\tjump.gt\t@.BB0_2\n\tadd\t320, r6, r7\n\tst.1\tr7, r5\n\tadd\tstack-[14], r0, r5\n\tst.1.inc\tr5, r2, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\t192, r5, r2\n\tst.1\tr2, r6\n\tadd\t160, r4, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr2, r3, r2\n\tadd\t31, r2, r3\n\tadd\t@CPI0_5[0], r0, r4\n\tsub!\tr3, r1, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_5[0], r3, r3\n\tsub!\tr3, r0, r6\n\tadd.ge\tr0, r0, r4\n\tsub.s!\t@CPI0_5[0], r3, r3\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr2, r4, r2\n\tsub.s!\t@CPI0_4[0], r4, r3\n\tjump.gt\t@.BB0_4\n\tshl.s\t5, r4, r3\n\tadd\t63, r3, r3\n\tand\tstack-[13], r3, r5\n\tld.1\t64, r3\n\tadd\tr3, r5, r5\n\tsub!\tr5, r3, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_4[0], r5, r7\n\tjump.gt\t@.BB0_4\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r5\n\tst.1\tr3, r4\n\tmul\t224, r4, r4, r5\n\tadd\tr4, r2, r4\n\tsub!\tr4, r1, r5\n\tjump.gt\t@.BB0_2\n\tsub!\tr2, r4, r5\n\tjump.ge\t@.BB0_60\n\tadd\t@CPI0_5[0], r0, r5\n\tadd\tr3, r0, r6\n.BB0_59:\n\tsub\tr1, r2, r7\n\tsub.s!\t224, r7, r8\n\tadd\tr0, r0, r8\n\tadd.lt\tr5, r0, r8\n\tand\t@CPI0_5[0], r7, r7\n\tsub!\tr7, r0, r9\n\tadd\tr0, r0, r9\n\tadd.gt\tr5, r0, r9\n\tsub.s!\t@CPI0_5[0], r7, r7\n\tadd.ne\tr8, r0, r9\n\tsub!\tr9, r0, r7\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r7\n\tsub.s!\t@CPI0_7[0], r7, r8\n\tjump.gt\t@.BB0_4\n\tadd\t32, r6, r6\n\tadd\t224, r7, r8\n\tst.1\t64, r8\n\tld.1.inc\tr2, r8, r9\n\tst.1.inc\tr7, r8, r8\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t64, r2, r8\n\tld.1\tr8, r8\n\tadd\t64, r7, r9\n\tst.1\tr9, r8\n\tadd\t96, r2, r8\n\tld.1\tr8, r8\n\tadd\t96, r7, r9\n\tst.1\tr9, r8\n\tadd\t128, r2, r8\n\tld.1\tr8, r8\n\tadd\t128, r7, r9\n\tst.1\tr9, r8\n\tadd\t160, r2, r8\n\tld.1\tr8, r8\n\tadd\t160, r7, r9\n\tst.1\tr9, r8\n\tadd\t192, r2, r8\n\tld.1\tr8, r8\n\tadd\t192, r7, r9\n\tst.1\tr9, r8\n\tst.1\tr6, r7\n\tadd\t224, r2, r2\n\tsub!\tr2, r4, r7\n\tjump.lt\t@.BB0_59\n.BB0_60:\n\tadd\tstack-[12], r0, r1\n\tst.1\tr1, r3\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tadd\t128, r1, r1\n\tld.1\tr1, r1\n\tadd\t64, r1, r2\n\tld.1\tr2, r2\n\tand!\t@CPI0_10[0], r2, r2\n\tjump.eq\t@.BB0_61\n\tadd\t96, r1, r2\n\tld.1\tr2, r2\n\tand!\t@CPI0_10[0], r2, r2\n\tjump.eq\t@.BB0_61\n\tadd\t224, r1, r2\n\tld.1\tr2, r2\n\tand!\t@CPI0_10[0], r2, r2\n\tjump.eq\t@.BB0_61\n\tadd\t256, r1, r1\n\tld.1\tr1, r1\n\tand!\t@CPI0_10[0], r1, r1\n\tjump.ne\t@.BB0_65\n.BB0_61:\n\tld.1\t64, r1\n\tadd\t@CPI0_33[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_146:\n\tsub.s!\t@CPI0_76[0], r1, r3\n\tjump.eq\t@.BB0_472\n\tsub.s!\t@CPI0_77[0], r1, r3\n\tjump.eq\t@.BB0_569\n\tsub.s!\t@CPI0_78[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r1\n\tadd\tr1, r0, r2\n\tsub.s!\t@CPI0_10[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tr2, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tnear_call\tr0, @fun_notZeroAddress.3, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t40, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tjump\t@.BB0_921\n.BB0_179:\n\tsub.s!\t@CPI0_43[0], r1, r3\n\tjump.eq\t@.BB0_1095\n\tsub.s!\t@CPI0_44[0], r1, r3\n\tjump.eq\t@.BB0_1099\n\tsub.s!\t@CPI0_45[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tsub.s!\t@CPI0_10[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r8, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tadd\t4, r1, r1\n\tnear_call\tr0, @abi_decode_array_bytes32_dyn_calldata, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tadd\tr2, r0, r4\n\tadd\tstack-[14], r0, r1\n\tadd\tr3, r0, r2\n\tadd\tr4, r0, r3\n\tnear_call\tr0, @modifier_notZeroAddress_60592, @DEFAULT_UNWIND\n\tjump\t@.BB0_1108\n.BB0_142:\n\tsub.s!\t@CPI0_80[0], r1, r3\n\tjump.eq\t@.BB0_326\n\tsub.s!\t@CPI0_81[0], r1, r2\n\tjump.eq\t@.BB0_334\n\tsub.s!\t@CPI0_82[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t35, r0, r1\n\tjump\t@.BB0_189\n.BB0_175:\n\tsub.s!\t@CPI0_47[0], r1, r3\n\tjump.eq\t@.BB0_916\n\tsub.s!\t@CPI0_48[0], r1, r3\n\tjump.eq\t@.BB0_922\n\tsub.s!\t@CPI0_49[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tptr.add.s\t36, r8, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r1, r3\n\tadd\t@CPI0_5[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_5[0], r3, r3\n\tsub!\tr3, r0, r6\n\tadd.ge\tr0, r0, r4\n\tsub.s!\t@CPI0_5[0], r3, r3\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r1, r3\n\tptr.add\tr8, r3, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[13]\n\tsub.s!\t@CPI0_4[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\t36, r1, stack-[12]\n\tadd\tstack-[13], r0, r1\n\tshl.s\t5, r1, r1\n\tadd\tstack-[12], r1, r1\n\tsub!\tr1, r2, r1\n\tjump.gt\t@.BB0_2\n\tadd\t9, r0, r2\n\tsload\tr2, r1\n\tand!\t65280, r1, r1\n\tjump.ne\t@.BB0_615\n\tcontext.caller\tr1\n\tand!\t@CPI0_10[0], r1, r3\n\tjump.eq\t@.BB0_336\n\tadd\tr2, r0, stack-[8]\n\tadd\tr1, r0, stack-[10]\n\tadd\t34, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tsload\tr1, r2\n\tadd\t@CPI0_119[0], r0, r1\n\tst.1\t128, r1\n\tadd\tr3, r0, stack-[9]\n\tst.1\t132, r3\n\tcontext.this\tr1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t164, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_10[0], r2, r2\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_934\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_944\n.BB0_127:\n\tsub.s!\t@CPI0_95[0], r1, r2\n\tjump.eq\t@.BB0_203\n\tsub.s!\t@CPI0_96[0], r1, r2\n\tjump.eq\t@.BB0_207\n\tsub.s!\t@CPI0_97[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_11[0], r0, r1\n\tjump\t@.BB0_206\n.BB0_160:\n\tsub.s!\t@CPI0_62[0], r1, r3\n\tjump.eq\t@.BB0_812\n\tsub.s!\t@CPI0_63[0], r1, r3\n\tjump.eq\t@.BB0_816\n\tsub.s!\t@CPI0_64[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr1\n\tand!\t@CPI0_10[0], r1, r1\n\tjump.eq\t@.BB0_336\n\tadd\tr1, r0, stack-[14]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_840\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_200\n.BB0_840:\n\tadd\t34, r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r10\n\tadd\t@CPI0_103[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tcontext.this\tr3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_10[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr2, r0, stack-[12]\n\tjump.ne\t@.BB0_842\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_852\n.BB0_134:\n\tsub.s!\t@CPI0_88[0], r1, r3\n\tjump.eq\t@.BB0_227\n\tsub.s!\t@CPI0_89[0], r1, r3\n\tjump.eq\t@.BB0_229\n\tsub.s!\t@CPI0_90[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t32, r1, r3\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r8, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_4[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tsub\tr1, r3, r1\n\tadd\t@CPI0_5[0], r0, r4\n\tsub.s!\t352, r1, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI0_5[0], r1, r1\n\tsub!\tr1, r0, r6\n\tadd.le\tr0, r0, r4\n\tsub.s!\t@CPI0_5[0], r1, r1\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t480, r0, r1\n\tst.1\t64, r1\n\tadd\t4, r3, r4\n\tptr.add\tr8, r4, r4\n\tld\tr4, r4\n\tst.1\t128, r4\n\tadd\t36, r3, r4\n\tptr.add\tr8, r4, r4\n\tld\tr4, r4\n\tst.1\t160, r4\n\tadd\t68, r3, r4\n\tptr.add\tr8, r4, r4\n\tld\tr4, r4\n\tst.1\t192, r4\n\tadd\t100, r3, r4\n\tptr.add\tr8, r4, r4\n\tld\tr4, r4\n\tst.1\t224, r4\n\tadd\t132, r3, r4\n\tptr.add\tr8, r4, r4\n\tld\tr4, r4\n\tst.1\t256, r4\n\tadd\t164, r3, r4\n\tptr.add\tr8, r4, r4\n\tld\tr4, r4\n\tst.1\t288, r4\n\tadd\t196, r3, r4\n\tptr.add\tr8, r4, r4\n\tld\tr4, r4\n\tst.1\t320, r4\n\tadd\t228, r3, r4\n\tptr.add\tr8, r4, r4\n\tld\tr4, r4\n\tst.1\t352, r4\n\tadd\t260, r3, r4\n\tptr.add\tr8, r4, r5\n\tld\tr5, r5\n\tsub!\tr5, r0, r6\n\tadd\t0, r0, r6\n\tadd.ne\t1, r0, r6\n\tsub!\tr5, r6, r6\n\tjump.ne\t@.BB0_2\n\tst.1\t384, r5\n\tadd\t32, r4, r4\n\tptr.add\tr8, r4, r5\n\tld\tr5, r5\n\tsub!\tr5, r0, r6\n\tadd\t0, r0, r6\n\tadd.ne\t1, r0, r6\n\tsub!\tr5, r6, r6\n\tjump.ne\t@.BB0_2\n\tst.1\t416, r5\n\tadd\t32, r4, r4\n\tptr.add\tr8, r4, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI0_4[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\tr4, r3, r4\n\tadd\t35, r4, r3\n\tsub!\tr3, r2, r3\n\tjump.ge\t@.BB0_2\n\tadd\t4, r4, r5\n\tptr.add\tr8, r5, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_4[0], r3, r6\n\tjump.gt\t@.BB0_4\n\tadd\t543, r3, r6\n\tsub.s\t32, r0, stack-[14]\n\tand\tstack-[14], r6, r6\n\tsub.s!\t@CPI0_4[0], r6, r7\n\tjump.gt\t@.BB0_4\n\tst.1\t64, r6\n\tst.1\t480, r3\n\tadd\tr4, r3, r4\n\tadd\t36, r4, r4\n\tsub!\tr4, r2, r2\n\tjump.gt\t@.BB0_2\n\tadd\t32, r5, r2\n\tptr.add\tr8, r2, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1234\n\tadd\tr0, r0, r6\n.BB0_257:\n\tshl.s\t5, r6, r7\n\tptr.add\tr2, r7, r8\n\tld\tr8, r8\n\tadd\t512, r7, r7\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_257\n.BB0_1234:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_259\n\tshl.s\t5, r5, r5\n\tptr.add\tr2, r5, r2\n\tshl.s\t3, r4, r4\n\tadd\t512, r5, r5\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr2, r2\n\tsub\t256, r4, r4\n\tshr\tr2, r4, r2\n\tshl\tr2, r4, r2\n\tor\tr2, r6, r2\n\tst.1\tr5, r2\n.BB0_259:\n\tadd\t512, r3, r2\n\tst.1\tr2, r0\n\tst.1\t448, r1\n\tcontext.caller\tr1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_263\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_200\n.BB0_263:\n\tld.1\t128, r1\n\tadd\t1, r0, r2\n\tsstore\tr2, r1\n\tadd\t2, r0, r1\n\tld.1\t160, r2\n\tsstore\tr1, r2\n\tadd\t3, r0, r1\n\tld.1\t192, r2\n\tsstore\tr1, r2\n\tadd\t4, r0, r1\n\tld.1\t224, r2\n\tsstore\tr1, r2\n\tadd\t5, r0, r1\n\tld.1\t256, r2\n\tsstore\tr1, r2\n\tadd\t6, r0, r1\n\tld.1\t288, r2\n\tsstore\tr1, r2\n\tadd\t7, r0, r1\n\tld.1\t320, r2\n\tsstore\tr1, r2\n\tadd\t8, r0, r1\n\tld.1\t352, r2\n\tsstore\tr1, r2\n\tld.1\t384, r1\n\tsub!\tr1, r0, r1\n\tadd\t9, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_24[0], r2, r2\n\tor.ne\t1, r2, r2\n\tld.1\t416, r3\n\tsub!\tr3, r0, r3\n\tor.ne\t256, r2, r2\n\tsstore\tr1, r2\n\tld.1\t448, r3\n\tld.1.inc\tr3, r2, r4\n\tsub.s!\t@CPI0_4[0], r2, r1\n\tjump.gt\t@.BB0_4\n\tadd\t10, r0, r1\n\tsload\tr1, r6\n\tand!\t1, r6, r5\n\tshr.s\t1, r6, r7\n\tand\t127, r7, r5\n\tadd.ne\tr7, r0, r5\n\tsub.s!\t31, r5, r7\n\tadd\t0, r0, r7\n\tadd.gt\t1, r0, r7\n\txor\tr6, r7, r6\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_94\n\tsub.s!\t32, r5, r6\n\tjump.lt\t@.BB0_268\n\tadd\t31, r2, r6\n\tshr.s\t5, r6, r6\n\tadd\t@CPI0_25[0], r6, r7\n\tadd\t@CPI0_25[0], r0, r6\n\tsub.s!\t32, r2, r8\n\tadd.ge\tr7, r0, r6\n\tst.1\t0, r1\n\tadd\t31, r5, r5\n\tshr.s\t5, r5, r5\n\tadd\t@CPI0_25[0], r5, r5\n\tsub!\tr6, r5, r7\n\tjump.ge\t@.BB0_268\n.BB0_269:\n\tsstore\tr6, r0\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_269\n.BB0_268:\n\tsub.s!\t31, r2, r5\n\tjump.le\t@.BB0_281\n\tst.1\t0, r1\n\tand!\tstack-[14], r2, r6\n\tadd\t32, r0, r5\n\tadd\t@CPI0_25[0], r0, r4\n\tjump.eq\t@.BB0_278\n\tadd\t@CPI0_25[0], r0, r4\n\tadd\t32, r0, r5\n\tadd\tr0, r0, r7\n.BB0_276:\n\tadd\tr5, r3, r8\n\tld.1\tr8, r8\n\tsstore\tr4, r8\n\tadd\t32, r5, r5\n\tadd\t1, r4, r4\n\tadd\t32, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_276\n.BB0_278:\n\tsub!\tr6, r2, r6\n\tjump.ge\t@.BB0_280\n\tshl.s\t3, r2, r6\n\tand\t248, r6, r6\n\tsub.s\t1, r0, r7\n\tshr\tr7, r6, r6\n\txor\tr6, r7, r6\n\tadd\tr5, r3, r3\n\tld.1\tr3, r3\n\tand\tr3, r6, r3\n\tsstore\tr4, r3\n.BB0_280:\n\tshl.s\t1, r2, r2\n\tor\t1, r2, r2\n\tjump\t@.BB0_270\n.BB0_167:\n\tsub.s!\t@CPI0_55[0], r1, r3\n\tjump.eq\t@.BB0_885\n\tsub.s!\t@CPI0_56[0], r1, r3\n\tjump.eq\t@.BB0_896\n\tsub.s!\t@CPI0_57[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t22, r0, r1\n\tjump\t@.BB0_189\n.BB0_152:\n\tsub.s!\t@CPI0_72[0], r1, r3\n\tjump.eq\t@.BB0_595\n\tsub.s!\t@CPI0_73[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t96, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tptr.add.s\t36, r8, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r1, r3\n\tadd\t@CPI0_5[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_5[0], r3, r3\n\tsub!\tr3, r0, r6\n\tadd.ge\tr0, r0, r4\n\tsub.s!\t@CPI0_5[0], r3, r3\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r1, r3\n\tptr.add\tr8, r3, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[13]\n\tsub.s!\t@CPI0_4[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\t36, r1, stack-[12]\n\tadd\tstack-[13], r0, r1\n\tshl.s\t5, r1, r1\n\tadd\tstack-[12], r1, r1\n\tsub!\tr1, r2, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r8, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r1, r3\n\tadd\t@CPI0_5[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_5[0], r3, r3\n\tsub!\tr3, r0, r6\n\tadd.ge\tr0, r0, r4\n\tsub.s!\t@CPI0_5[0], r3, r3\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r1, r3\n\tptr.add\tr8, r3, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[11]\n\tsub.s!\t@CPI0_4[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\t36, r1, stack-[10]\n\tadd\tstack-[11], r0, r1\n\tshl.s\t5, r1, r1\n\tadd\tstack-[10], r1, r1\n\tsub!\tr1, r2, r1\n\tjump.gt\t@.BB0_2\n\tadd\t9, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tsload\tr1, r1\n\tand!\t65280, r1, r1\n\tjump.ne\t@.BB0_615\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[7]\n\tand!\t@CPI0_10[0], r1, stack-[8]\n\tjump.eq\t@.BB0_336\n\tadd\t34, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tsload\tr1, r2\n\tadd\t@CPI0_119[0], r0, r1\n\tst.1\t128, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\t132, r1\n\tcontext.this\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t164, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_10[0], r2, r2\n\tadd\tr2, r0, stack-[6]\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_619\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_629\n.BB0_185:\n\tsub.s!\t@CPI0_39[0], r1, r3\n\tjump.eq\t@.BB0_1156\n\tsub.s!\t@CPI0_40[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t9, r0, r3\n\tsload\tr3, r1\n\tand!\t65280, r1, r1\n\tjump.ne\t@.BB0_615\n\tcontext.caller\tr2\n\tand!\t@CPI0_10[0], r2, r1\n\tjump.eq\t@.BB0_336\n\tadd\tr3, r0, stack-[12]\n\tadd\tr2, r0, stack-[13]\n\tadd\tr1, r0, stack-[10]\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_81\n\tld\tr1, r1\n\tsub.s!\tstack-[14], r1, r2\n\tjump.ge\t@.BB0_1165\n\tld.1\t64, r1\n\tadd\t@CPI0_113[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_569:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t36, r0, r1\n\tjump\t@.BB0_189\n.BB0_1099:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r8, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tsub.s!\t@CPI0_10[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tnear_call\tr0, @fun_checkRole, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r1\n\tadd\tstack-[14], r0, r2\n\tjump\t@.BB0_291\n.BB0_292:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t352, r1, r1\n\tjump.lt\t@.BB0_2\n\tadd\t480, r0, r1\n\tst.1\t64, r1\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t128, r1\n\tptr.add.s\t36, r8, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t160, r1\n\tptr.add.s\t68, r8, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t192, r1\n\tptr.add.s\t100, r8, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t224, r1\n\tptr.add.s\t132, r8, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t256, r1\n\tptr.add.s\t164, r8, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t288, r1\n\tptr.add.s\t196, r8, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t320, r1\n\tptr.add.s\t228, r8, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t352, r1\n\tptr.add.s\t260, r8, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t384, r1\n\tptr.add.s\t292, r8, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t416, r1\n\tptr.add.s\t324, r8, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t448, r1\n\tcontext.caller\tr1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\tr1, r0, stack-[14]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_309\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_200\n.BB0_309:\n\tld.1\t128, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t17, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_26[0], r3, r3\n\tor\tr3, r1, r3\n\tsstore\tr2, r3\n\tld.1\t160, r2\n\tand!\t@CPI0_10[0], r2, r3\n\tadd\t18, r0, r2\n\tsload\tr2, r4\n\tand\t@CPI0_26[0], r4, r4\n\tor\tr4, r3, r4\n\tsstore\tr2, r4\n\tld.1\t192, r2\n\tand\t@CPI0_10[0], r2, r2\n\tadd\t19, r0, r4\n\tsload\tr4, r5\n\tand\t@CPI0_26[0], r5, r5\n\tor\tr5, r2, r5\n\tsstore\tr4, r5\n\tld.1\t224, r4\n\tand\t@CPI0_10[0], r4, r4\n\tadd\t20, r0, r5\n\tsload\tr5, r6\n\tand\t@CPI0_26[0], r6, r6\n\tor\tr6, r4, r4\n\tsstore\tr5, r4\n\tld.1\t256, r4\n\tand\t@CPI0_10[0], r4, r4\n\tadd\t21, r0, r5\n\tsload\tr5, r6\n\tand\t@CPI0_26[0], r6, r6\n\tor\tr6, r4, r4\n\tsstore\tr5, r4\n\tld.1\t288, r4\n\tand\t@CPI0_10[0], r4, r5\n\tadd\t22, r0, r4\n\tsload\tr4, r6\n\tand\t@CPI0_26[0], r6, r6\n\tor\tr6, r5, r6\n\tsstore\tr4, r6\n\tld.1\t320, r4\n\tand\t@CPI0_10[0], r4, r4\n\tadd\t23, r0, r6\n\tsload\tr6, r7\n\tand\t@CPI0_26[0], r7, r7\n\tor\tr7, r4, r7\n\tsstore\tr6, r7\n\tld.1\t352, r6\n\tand\t@CPI0_10[0], r6, r6\n\tadd\t24, r0, r7\n\tsload\tr7, r8\n\tand\t@CPI0_26[0], r8, r8\n\tor\tr8, r6, r6\n\tsstore\tr7, r6\n\tld.1\t384, r6\n\tand\t@CPI0_10[0], r6, r6\n\tadd\t25, r0, r7\n\tsload\tr7, r8\n\tand\t@CPI0_26[0], r8, r8\n\tor\tr8, r6, r6\n\tsstore\tr7, r6\n\tld.1\t416, r6\n\tand\t@CPI0_10[0], r6, r6\n\tadd\t26, r0, r7\n\tsload\tr7, r8\n\tand\t@CPI0_26[0], r8, r8\n\tor\tr8, r6, r6\n\tsstore\tr7, r6\n\tld.1\t448, r6\n\tand\t@CPI0_10[0], r6, r6\n\tadd\t27, r0, r7\n\tsload\tr7, r8\n\tand\t@CPI0_26[0], r8, r8\n\tor\tr8, r6, r6\n\tsstore\tr7, r6\n\tjump.eq\t@.BB0_311\n\tadd\t33, r0, r6\n\tsload\tr6, r7\n\tand\t@CPI0_26[0], r7, r7\n\tor\tr7, r3, r3\n\tsstore\tr6, r3\n.BB0_311:\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_313\n\tadd\t34, r0, r3\n\tsload\tr3, r6\n\tand\t@CPI0_26[0], r6, r6\n\tor\tr6, r2, r2\n\tsstore\tr3, r2\n.BB0_313:\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_315\n\tadd\t35, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_26[0], r3, r3\n\tor\tr3, r5, r3\n\tsstore\tr2, r3\n.BB0_315:\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_317\n\tadd\t36, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_26[0], r3, r3\n\tor\tr3, r4, r3\n\tsstore\tr2, r3\n.BB0_317:\n\tld.1\t64, r2\n\tst.1.inc\tr2, r1, r1\n\tld.1\t160, r3\n\tand\t@CPI0_10[0], r3, r3\n\tst.1\tr1, r3\n\tld.1\t192, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t64, r2, r3\n\tst.1\tr3, r1\n\tld.1\t224, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t96, r2, r3\n\tst.1\tr3, r1\n\tld.1\t256, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t128, r2, r3\n\tst.1\tr3, r1\n\tld.1\t288, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t160, r2, r3\n\tst.1\tr3, r1\n\tld.1\t320, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t192, r2, r3\n\tst.1\tr3, r1\n\tld.1\t352, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t224, r2, r3\n\tst.1\tr3, r1\n\tld.1\t384, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t256, r2, r3\n\tst.1\tr3, r1\n\tld.1\t416, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t288, r2, r3\n\tst.1\tr3, r1\n\tld.1\t448, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t320, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r2, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_167[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_168[0], r0, r4\n\tjump\t@.BB0_895\n.BB0_909:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t33, r0, r1\n\tjump\t@.BB0_189\n.BB0_334:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr1\n\tand!\t@CPI0_10[0], r1, r1\n\tjump.eq\t@.BB0_336\n\tadd\tr1, r0, stack-[14]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_341\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_200\n.BB0_341:\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_81\n\tld\tr1, r2\n\tsub.s!\tstack-[14], r2, r1\n\tjump.le\t@.BB0_343\n\tadd\tr2, r0, stack-[9]\n\tadd\t34, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tsload\tr1, r2\n\tld.1\t64, r5\n\tadd\t@CPI0_103[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tcontext.this\tr3\n\tadd\tr3, r0, stack-[10]\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_10[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr2, r0, stack-[11]\n\tadd\tr5, r0, stack-[13]\n\tjump.ne\t@.BB0_346\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_356\n.BB0_922:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tsload\tr1, r1\n\tadd\t31, r0, r2\n\tsload\tr2, r2\n\tadd\t30, r0, r3\n\tsload\tr3, r3\n\tadd\t29, r0, r4\n\tsload\tr4, r4\n\tadd\t28, r0, r5\n\tsload\tr5, r5\n\tst.1\t128, r5\n\tst.1\t160, r4\n\tst.1\t192, r3\n\tst.1\t224, r2\n\tst.1\t256, r1\n\tadd\t@CPI0_128[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_575:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t20, r0, r1\n\tjump\t@.BB0_189\n.BB0_1110:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t37, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\t2, r1, r2\n\tsload\tr2, r2\n\tadd\t1, r1, r3\n\tsload\tr3, r3\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tst.1\t160, r3\n\tand!\t255, r2, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t192, r1\n\tadd\t@CPI0_118[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_595:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t480, r0, r6\n\tst.1\t64, r6\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tst.1\t160, r1\n\tadd\t3, r0, r1\n\tsload\tr1, r1\n\tst.1\t192, r1\n\tadd\t4, r0, r1\n\tsload\tr1, r1\n\tst.1\t224, r1\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n\tst.1\t256, r1\n\tadd\t6, r0, r1\n\tsload\tr1, r1\n\tst.1\t288, r1\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tst.1\t320, r1\n\tadd\t8, r0, r1\n\tsload\tr1, r1\n\tst.1\t352, r1\n\tadd\t9, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tst.1\t384, r2\n\tand!\t65280, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t416, r1\n\tadd\t10, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.eq\t@.BB0_597\n.BB0_94:\n\tadd\t@CPI0_164[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB0_5\n.BB0_1156:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t38, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\t6, r1, r2\n\tsload\tr2, r2\n\tadd\t5, r1, r3\n\tsload\tr3, r3\n\tadd\t4, r1, r4\n\tsload\tr4, r4\n\tadd\t3, r1, r5\n\tsload\tr5, r5\n\tadd\t2, r1, r6\n\tsload\tr6, r6\n\tadd\t1, r1, r7\n\tsload\tr7, r7\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tst.1\t160, r7\n\tst.1\t192, r6\n\tst.1\t224, r5\n\tst.1\t256, r4\n\tst.1\t288, r3\n\tst.1\t320, r2\n\tadd\t@CPI0_114[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_472:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr2\n\tand!\t@CPI0_10[0], r2, r1\n\tjump.ne\t@.BB0_474\n.BB0_336:\n\tadd\t@CPI0_33[0], r0, r1\n.BB0_289:\n\tst.1\t128, r1\n\tadd\t@CPI0_139[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1095:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r1\n\tadd\tr1, r0, r2\n\tsub.s!\t@CPI0_10[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tr2, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tnear_call\tr0, @fun_notZeroAddress.3, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t39, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump\t@.BB0_1109\n.BB0_284:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r8, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_288\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r1\n.BB0_291:\n\tnear_call\tr0, @fun_revokeRole, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_902:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tadd\t192, r0, r1\n\tst.1\t64, r1\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r1\n\tst.1\t128, r1\n\tptr.add.s\t36, r8, r1\n\tld\tr1, r1\n\tst.1\t160, r1\n\tcontext.caller\tr1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\tr1, r0, stack-[14]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_908\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_200\n.BB0_908:\n\tld.1\t128, r1\n\tadd\t15, r0, r2\n\tsstore\tr2, r1\n\tadd\t16, r0, r2\n\tld.1\t160, r3\n\tsstore\tr2, r3\n\tld.1\t64, r2\n\tst.1.inc\tr2, r1, r1\n\tld.1\t160, r3\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_130[0], r0, r4\n\tjump\t@.BB0_895\n.BB0_326:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t256, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t352, r0, r1\n\tst.1\t64, r1\n\tptr.add.s\t36, r8, r1\n\tld\tr1, r1\n\tst.1\t128, r1\n\tptr.add.s\t68, r8, r1\n\tld\tr1, r1\n\tst.1\t160, r1\n\tptr.add.s\t100, r8, r1\n\tld\tr1, r1\n\tst.1\t192, r1\n\tptr.add.s\t132, r8, r1\n\tld\tr1, r1\n\tst.1\t224, r1\n\tptr.add.s\t164, r8, r1\n\tld\tr1, r1\n\tst.1\t256, r1\n\tptr.add.s\t196, r8, r1\n\tld\tr1, r1\n\tst.1\t288, r1\n\tptr.add.s\t228, r8, r1\n\tld\tr1, r1\n\tst.1\t320, r1\n\tcontext.caller\tr1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_332\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_200\n.BB0_332:\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t38, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tld.1\t128, r2\n\tsstore\tr1, r2\n\tadd\t1, r1, r2\n\tld.1\t160, r3\n\tsstore\tr2, r3\n\tadd\t2, r1, r2\n\tld.1\t192, r3\n\tsstore\tr2, r3\n\tadd\t3, r1, r2\n\tld.1\t224, r3\n\tsstore\tr2, r3\n\tadd\t4, r1, r2\n\tld.1\t256, r3\n\tsstore\tr2, r3\n\tadd\t5, r1, r2\n\tld.1\t288, r3\n\tsstore\tr2, r3\n\tadd\t6, r1, r1\n\tld.1\t320, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tstack-[14], r0, r2\n\tst.1.inc\tr1, r2, r2\n\tld.1\t128, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tld.1\t160, r3\n\tst.1\tr2, r3\n\tadd\t96, r1, r2\n\tld.1\t192, r3\n\tst.1\tr2, r3\n\tadd\t128, r1, r2\n\tld.1\t224, r3\n\tst.1\tr2, r3\n\tadd\t160, r1, r2\n\tld.1\t256, r3\n\tst.1\tr2, r3\n\tadd\t192, r1, r2\n\tld.1\t288, r3\n\tst.1\tr2, r3\n\tadd\t224, r1, r2\n\tld.1\t320, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_122[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_165[0], r0, r4\n\tjump\t@.BB0_895\n.BB0_916:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_81\n\tld\tr1, r1\n\tsub.s!\tstack-[14], r1, r2\n\tadd\tr0, r0, r2\n\tjump.lt\t@.BB0_920\n\tadd\t5, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r1\n\tadd\t0, r0, r2\n\tadd.le\t1, r0, r2\n.BB0_920:\n\tand\t1, r2, r1\n\tjump\t@.BB0_921\n.BB0_190:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r1\n\tand\t@CPI0_174[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t@CPI0_175[0], r1, r2\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tsub.s!\t@CPI0_176[0], r1, r1\n\tor.eq\t1, r2, r2\n\tand\t1, r2, r1\n\tjump\t@.BB0_206\n.BB0_801:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t14, r0, r1\n\tjump\t@.BB0_803\n.BB0_223:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_15[0], r0, r1\n\tjump\t@.BB0_206\n.BB0_880:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tr8, r0, stack-[14]\n\tnear_call\tr0, @allocate_and_zero_memory_struct_struct_SaleTierDetails, @DEFAULT_UNWIND\n\tptr.add\tstack-[14], r0, r1\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t38, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[14]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[13]\n\tnear_call\tr0, @finalize_allocation_60550, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r4\n\tsload\tr4, r1\n\tadd\tstack-[13], r0, r3\n\tst.1.inc\tr3, r1, r1\n\tadd\t1, r4, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t2, r4, r1\n\tsload\tr1, r1\n\tadd\t64, r3, r2\n\tst.1\tr2, r1\n\tadd\t3, r4, r1\n\tsload\tr1, r1\n\tadd\t96, r3, r2\n\tst.1\tr2, r1\n\tadd\t4, r4, r1\n\tsload\tr1, r1\n\tadd\t128, r3, r2\n\tst.1\tr2, r1\n\tadd\t5, r4, r1\n\tsload\tr1, r1\n\tadd\t160, r3, r2\n\tst.1\tr2, r1\n\tadd\t6, r4, r1\n\tsload\tr1, r4\n\tadd\t192, r3, r2\n\tadd\tr3, r0, r1\n\tst.1\tr2, r4\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[14]\n\tnear_call\tr0, @abi_encode_struct_SaleTierDetails, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack-[14], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tor\t@CPI0_133[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_207:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t22, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_10[0], r1, r3\n\tadd\t160, r0, r2\n\tadd.eq\t192, r0, r2\n\tst.1\t64, r2\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t160, r0, r1\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_214\n\tadd\t224, r2, r1\n\tst.1\t64, r1\n\tadd\t192, r2, r1\n\tst.1\tr1, r0\n\tadd\t160, r2, r1\n\tst.1\tr1, r0\n\tadd\t128, r2, r1\n\tst.1\tr1, r0\n\tadd\t96, r2, r1\n\tst.1\tr1, r0\n\tadd\t64, r2, r1\n\tst.1\tr1, r0\n\tadd\t32, r2, r1\n\tst.1\tr1, r0\n\tst.1\tr2, r0\n\tst.1\t160, r2\n\tst.1\t0, r0\n\tadd\t38, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_7[0], r2, r3\n\tjump.gt\t@.BB0_4\n\tld\tr1, r1\n\tadd\t224, r2, r3\n\tst.1\t64, r3\n\tsload\tr1, r3\n\tst.1.inc\tr2, r3, r3\n\tadd\t1, r1, r4\n\tsload\tr4, r4\n\tst.1\tr3, r4\n\tadd\t2, r1, r3\n\tsload\tr3, r3\n\tadd\t64, r2, r4\n\tst.1\tr4, r3\n\tadd\t3, r1, r3\n\tsload\tr3, r3\n\tadd\t96, r2, r4\n\tst.1\tr4, r3\n\tadd\t4, r1, r3\n\tsload\tr3, r3\n\tadd\t128, r2, r4\n\tst.1\tr4, r3\n\tadd\t5, r1, r3\n\tsload\tr3, r3\n\tadd\t160, r2, r4\n\tst.1\tr4, r3\n\tadd\t192, r2, r3\n\tadd\t6, r1, r1\n\tsload\tr1, r1\n\tst.1\tr3, r1\n\tld.1\t128, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_210\n\tadd\t@CPI0_164[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tjump\t@.BB0_5\n.BB0_816:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r1, r3\n\tadd\t@CPI0_5[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_5[0], r3, r3\n\tsub!\tr3, r0, r6\n\tadd.ge\tr0, r0, r4\n\tsub.s!\t@CPI0_5[0], r3, r3\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r1, r3\n\tptr.add\tr8, r3, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[13]\n\tsub.s!\t@CPI0_4[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[13], r0, r3\n\tmul\t224, r3, r3, r4\n\tadd\t36, r1, stack-[12]\n\tadd\tstack-[12], r3, r1\n\tsub!\tr1, r2, r1\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\tr1, r0, stack-[14]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_826\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_200\n.BB0_826:\n\tadd\tstack-[13], r0, r7\n\tsub!\tr7, r0, r1\n\tjump.eq\t@.BB0_830\n\tadd\t38, r0, stack-[11]\n\tadd\t32784, r0, stack-[10]\n\tadd\tr0, r0, r6\n.BB0_828:\n\tadd\tr6, r0, stack-[14]\n\tst.1\t0, r6\n\tadd\tstack-[11], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[14], r0, r6\n\tmul\t224, r6, r2, r3\n\tadd\tstack-[12], r2, r2\n\tptr.add\tstack[@ptr_calldata], r2, r4\n\tld\tr4, r4\n\tld\tr1, r1\n\tsstore\tr1, r4\n\tadd\t32, r2, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tadd\t1, r1, r5\n\tsstore\tr5, r4\n\tadd\t64, r2, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tadd\t2, r1, r5\n\tsstore\tr5, r4\n\tadd\t96, r2, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tadd\t3, r1, r5\n\tsstore\tr5, r4\n\tadd\t128, r2, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tadd\t4, r1, r5\n\tsstore\tr5, r4\n\tadd\t160, r2, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tadd\t5, r1, r5\n\tsstore\tr5, r4\n\tadd\t192, r2, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tadd\t6, r1, r1\n\tld\tr2, r2\n\tsstore\tr1, r2\n\tadd\t1, r6, r6\n\tadd\tstack-[13], r0, r7\n\tsub!\tr6, r7, r1\n\tjump.lt\t@.BB0_828\n.BB0_830:\n\tld.1\t64, r1\n\tadd\t32, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tst.1\tr2, r7\n\tadd\t64, r1, r2\n\tsub!\tr7, r0, r3\n\tadd\tstack-[12], r0, r8\n\tjump.eq\t@.BB0_833\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tadd\tr0, r0, r4\n.BB0_832:\n\tptr.add\tr3, r8, r5\n\tld\tr5, r5\n\tst.1.inc\tr2, r5, r5\n\tadd\t32, r8, r6\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr5, r6\n\tadd\t64, r8, r5\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tadd\t64, r2, r6\n\tst.1\tr6, r5\n\tadd\t96, r8, r5\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tadd\t96, r2, r6\n\tst.1\tr6, r5\n\tadd\t128, r8, r5\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tadd\t128, r2, r6\n\tst.1\tr6, r5\n\tadd\t160, r8, r5\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tadd\t160, r2, r6\n\tst.1\tr6, r5\n\tadd\t192, r8, r5\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tadd\t192, r2, r6\n\tst.1\tr6, r5\n\tadd\t224, r8, r8\n\tadd\t224, r2, r2\n\tadd\t1, r4, r4\n\tsub!\tr4, r7, r5\n\tjump.lt\t@.BB0_832\n.BB0_833:\n\tsub\tr2, r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_134[0], r0, r4\n\tjump\t@.BB0_895\n.BB0_229:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tptr.add.s\t36, r8, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tsub.s!\t@CPI0_10[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[11]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_237\n\tld.1\t64, r1\n\tadd\t36, r1, r2\n\tadd\tstack-[12], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_171[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[11], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_116[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_896:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t40, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tjump\t@.BB0_205\n.BB0_187:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t34, r0, r1\n.BB0_189:\n\tsload\tr1, r1\n\tand\t@CPI0_10[0], r1, r1\n\tjump\t@.BB0_206\n.BB0_791:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tsub.s!\t@CPI0_10[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_798\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_200\n.BB0_798:\n\tadd\t23, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_26[0], r2, r2\n\tadd\tstack-[14], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tsub!\tr3, r0, r1\n\tjump.eq\t@.BB0_800\n\tadd\t36, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_26[0], r2, r2\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_800:\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_131[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_137[0], r0, r4\n\tjump\t@.BB0_895\n.BB0_220:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\t1, r1, r1\n\tjump\t@.BB0_205\n.BB0_875:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t96, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tsub.s!\t@CPI0_10[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r8, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tadd\t4, r1, r1\n\tnear_call\tr0, @abi_decode_array_bytes32_dyn_calldata, @DEFAULT_UNWIND\n\tadd\t36, r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tadd\tr1, r0, r4\n\tadd\tr2, r0, r5\n\tadd\tstack-[14], r0, r1\n\tadd\tr3, r0, r2\n\tadd\tr4, r0, r3\n\tadd\tr5, r0, r4\n\tnear_call\tr0, @modifier_notZeroAddress, @DEFAULT_UNWIND\n.BB0_1108:\n\tsub!\tr1, r0, r1\n.BB0_1109:\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n.BB0_921:\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_117[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_203:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t6, r0, r1\n\tjump\t@.BB0_205\n.BB0_812:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r8, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tsub.s!\t@CPI0_10[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[13], r0, r2\n.BB0_915:\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n.BB0_803:\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_206\n.BB0_227:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t5, r0, r1\n.BB0_205:\n\tsload\tr1, r1\n.BB0_206:\n\tst.1\t128, r1\n\tadd\t@CPI0_129[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_885:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r2, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r8, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tsub.s!\t@CPI0_10[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_892\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_892\n.BB0_200:\n\tld.1\t64, r1\n\tadd\t@CPI0_173[0], r0, r2\n.BB0_495:\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n.BB0_633:\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_615:\n\tadd\t@CPI0_138[0], r0, r1\n\tjump\t@.BB0_289\n.BB0_579:\n\tadd\t35, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_152[0], r0, r1\n\tst.1\t128, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_10[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_581\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_591\n.BB0_597:\n\tst.1\t480, r1\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_600\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t512, r2\n\tsub!\tr1, r0, r1\n\tadd\t544, r0, r2\n\tadd.eq\t512, r0, r2\n\tjump\t@.BB0_598\n.BB0_474:\n\tadd\tr1, r0, stack-[12]\n\tadd\tr2, r0, stack-[14]\n\tst.1\t0, r2\n\tadd\t40, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r10\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_477\n\tadd\t@CPI0_161[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r10, r2\n\tadd.ge\tr1, r0, r10\n\tshl.s\t64, r10, r1\n\tor\t@CPI0_23[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_581:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_139[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1258\n\tadd\tr0, r0, r7\n.BB0_583:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_583\n.BB0_1258:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_585\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_585:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_586\n.BB0_591:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r4\n\tst.1\t64, r4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_594\n\tadd\t@CPI0_153[0], r0, r1\n\tst.1\tr4, r1\n\tshl.s\t64, r4, r1\n\tor\t@CPI0_23[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_600:\n\tst.1\t0, r3\n\tadd\t512, r0, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_598\n\tadd\t@CPI0_25[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_602:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t512, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_602\n\tadd\t544, r3, r2\n.BB0_598:\n\tsub.s\t480, r2, r2\n\tadd\tr6, r0, r1\n\tadd\tr6, r0, stack-[14]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r1\n\tst.1\t448, r1\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[13]\n\tnear_call\tr0, @finalize_allocation_60549, @DEFAULT_UNWIND\n\tadd\t11, r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tst.1.inc\tr2, r1, r2\n\tadd\tr2, r0, stack-[9]\n\tadd\t12, r0, r1\n\tsload\tr1, r1\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[12]\n\tnear_call\tr0, @finalize_allocation_60549, @DEFAULT_UNWIND\n\tadd\t13, r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tst.1.inc\tr2, r1, r1\n\tadd\t14, r0, r2\n\tsload\tr2, r2\n\tand!\t255, r2, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tst.1\tr1, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[11]\n\tnear_call\tr0, @finalize_allocation_60549, @DEFAULT_UNWIND\n\tadd\t15, r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tst.1.inc\tr2, r1, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\t16, r0, r1\n\tsload\tr1, r1\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[10]\n\tnear_call\tr0, @finalize_allocation_60552, @DEFAULT_UNWIND\n\tadd\t17, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\tstack-[10], r0, r3\n\tst.1.inc\tr3, r1, r1\n\tadd\t18, r0, r2\n\tsload\tr2, r2\n\tand\t@CPI0_10[0], r2, r2\n\tst.1\tr1, r2\n\tadd\t19, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t64, r3, r2\n\tst.1\tr2, r1\n\tadd\t20, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t96, r3, r2\n\tst.1\tr2, r1\n\tadd\t21, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t128, r3, r2\n\tst.1\tr2, r1\n\tadd\t22, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t160, r3, r2\n\tst.1\tr2, r1\n\tadd\t23, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t192, r3, r2\n\tst.1\tr2, r1\n\tadd\t24, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t224, r3, r2\n\tst.1\tr2, r1\n\tadd\t25, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t256, r3, r2\n\tst.1\tr2, r1\n\tadd\t26, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t288, r3, r2\n\tst.1\tr2, r1\n\tadd\t27, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t320, r3, r2\n\tst.1\tr2, r1\n\tadd\t576, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[14]\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t128, r0, r1\n\tadd\t576, r2, r2\n\tnear_call\tr0, @abi_encode_struct_SaleDetails, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[7], r0, r3\n\tst.1\tr3, r2\n\tadd\tstack-[9], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[14], r0, r4\n\tadd\t64, r4, r3\n\tst.1\tr3, r2\n\tadd\tr1, r0, stack-[13]\n\tadd\t96, r4, r2\n\tadd\tstack-[12], r0, r1\n\tnear_call\tr0, @abi_encode_struct_SaleRefundDetails, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[14], r0, r3\n\tadd\t160, r3, r2\n\tst.1\tr2, r1\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n\tadd\t192, r3, r2\n\tst.1\tr2, r1\n\tadd\t224, r3, r2\n\tadd\tstack-[10], r0, r1\n\tnear_call\tr0, @abi_encode_struct_SaleAddresses, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r4\n\tsub\tstack-[13], r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_288:\n\tadd\t@CPI0_169[0], r0, r1\n\tjump\t@.BB0_289\n.BB0_892:\n\tadd\t22, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_26[0], r2, r2\n\tadd\tstack-[14], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tsub!\tr3, r0, r1\n\tjump.eq\t@.BB0_894\n\tadd\t35, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_26[0], r2, r2\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_894:\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_131[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_132[0], r0, r4\n.BB0_895:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_202:\n\tld.1\t64, r1\n\tadd\t1, r0, r2\n.BB0_773:\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_117[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_586:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1257\n\tadd\tr0, r0, r6\n.BB0_588:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_588\n.BB0_1257:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_590\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_590:\n\tjump\t@.BB0_355\n.BB0_477:\n\tadd\t36, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_154[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[14], r0, r3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_10[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_479\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_489\n.BB0_842:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r10, r3\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_104[0], r1, r1\n\tadd\tr10, r0, stack-[13]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1274\n\tadd\tr0, r0, r7\n.BB0_844:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_844\n.BB0_1274:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_846\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_846:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_847\n.BB0_852:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr10, r0, r5\n\tadd\tr1, r10, r3\n\tsub!\tr3, r1, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr3, r0, stack-[13]\n\tsub.s!\t@CPI0_4[0], r3, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tadd\tstack-[13], r0, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r4, r2\n\tjump.lt\t@.BB0_2\n\tld.1\tr5, r2\n\tadd\tstack-[13], r0, r4\n\tadd\t36, r4, r3\n\tst.1\tr3, r2\n\tadd\t@CPI0_115[0], r0, r2\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr2, r3\n\tcontext.gas_left\tr2\n\tadd\tstack-[12], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_856\n\tadd\tr4, r1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_4\n\tst.1\t64, r1\n.BB0_870:\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.lt\tr1, r0, r3\n\tshl.s\t64, r3, r3\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_873\n\tjump\t@.BB0_567\n.BB0_1165:\n\tadd\t2, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r1\n\tjump.ge\t@.BB0_1166\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\t37, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t2, r1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_1169\n\tadd\t21, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_10[0], r1, r2\n\tjump.ne\t@.BB0_1171\n.BB0_1187:\n\tadd\t22, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_10[0], r1, r1\n\tadd\tr0, r0, stack-[9]\n\tjump.ne\t@.BB0_1189\n.BB0_1191:\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_1210\n\tadd\t18, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_10[0], r1, r1\n\tjump.ne\t@.BB0_1213\n.BB0_1210:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[12]\n\tsub.s!\t@CPI0_107[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[12], r0, r3\n\tadd\t96, r3, r1\n\tst.1\t64, r1\n\tadd\t64, r3, r2\n\tadd\tstack-[11], r0, r1\n\tadd\tr2, r0, stack-[8]\n\tst.1\tr2, r1\n\tadd\t32, r3, r2\n\tadd\tstack-[9], r0, r1\n\tadd\tr2, r0, stack-[11]\n\tst.1\tr2, r1\n\tst.1\tr3, r0\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[14], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r2\n\tadd\t1, r1, r3\n\tsstore\tr3, r2\n\tadd\t2, r1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tadd\tstack-[8], r0, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r0, r3\n\tor.ne\t1, r2, r2\n\tsstore\tr1, r2\n.BB0_1207:\n\tadd\t31, r0, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.eq\t@.BB0_365\n\tadd\t1, r2, r2\n\tadd\tr2, r0, stack-[13]\n\tsstore\tr1, r2\n\tadd\t32, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_81\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r3\n\tadd\t128, r3, r2\n\tadd\tstack-[12], r0, r4\n\tst.1\tr2, r4\n\tadd\t96, r3, r2\n\tadd\tstack-[13], r0, r4\n\tst.1\tr2, r4\n\tadd\t64, r3, r2\n\tst.1\tr2, r1\n\tadd\t32, r3, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[10], r0, r1\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_112[0], r0, r4\n\tjump\t@.BB0_895\n.BB0_479:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r10, r4\n\tadd.lt\tr10, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_104[0], r1, r1\n\tadd\tr10, r0, stack-[11]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1256\n\tadd\tr0, r0, r7\n.BB0_481:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_481\n.BB0_1256:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_483\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_483:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_484\n.BB0_489:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr10, r0, r5\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r2\n\tjump.lt\t@.BB0_2\n\tld.1\tr5, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_494\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_81\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tsub.s!\tstack-[11], r1, r1\n\tjump.le\t@.BB0_343\n\tadd\t14, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_500\n\tld.1\t64, r1\n\tadd\t@CPI0_160[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_343:\n\tld.1\t64, r1\n\tadd\t@CPI0_162[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_210:\n\tst.1\t160, r2\n\tld.1\t64, r1\n.BB0_214:\n\tadd\t32, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tld.1\t128, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_217\n\tadd\t160, r0, r4\n\tadd\tr0, r0, r5\n.BB0_216:\n\tld.1.inc\tr4, r6, r4\n\tld.1.inc\tr6, r7, r8\n\tst.1.inc\tr2, r7, r7\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t64, r6, r7\n\tld.1\tr7, r7\n\tadd\t64, r2, r8\n\tst.1\tr8, r7\n\tadd\t96, r6, r7\n\tld.1\tr7, r7\n\tadd\t96, r2, r8\n\tst.1\tr8, r7\n\tadd\t128, r6, r7\n\tld.1\tr7, r7\n\tadd\t128, r2, r8\n\tst.1\tr8, r7\n\tadd\t160, r6, r7\n\tld.1\tr7, r7\n\tadd\t160, r2, r8\n\tst.1\tr8, r7\n\tadd\t192, r6, r6\n\tld.1\tr6, r6\n\tadd\t192, r2, r7\n\tst.1\tr7, r6\n\tadd\t224, r2, r2\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_216\n.BB0_217:\n\tsub\tr2, r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_847:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1273\n\tadd\tr0, r0, r6\n.BB0_849:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_849\n.BB0_1273:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_851\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_851:\n\tjump\t@.BB0_355\n.BB0_1166:\n\tld.1\t64, r1\n\tadd\t@CPI0_101[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_484:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1255\n\tadd\tr0, r0, r6\n.BB0_486:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_486\n.BB0_1255:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_488\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_488:\n\tjump\t@.BB0_355\n.BB0_237:\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_243\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_18[0], r0, r4\n\tadd\tstack-[14], r0, r5\n\tadd\tstack-[13], r0, r6\n\tadd\tstack-[11], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_243:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1124:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_104[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1292\n\tadd\tr0, r0, r7\n.BB0_1126:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1126\n.BB0_1292:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1128\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[13], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1128:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1129\n.BB0_1134:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[13], r1, r3\n\tsub!\tr3, r1, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr3, r0, stack-[12]\n\tsub.s!\t@CPI0_4[0], r3, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tadd\tstack-[12], r0, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r4, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[12], r0, r4\n\tadd\t36, r4, r3\n\tst.1\tr3, r2\n\tadd\t@CPI0_115[0], r0, r2\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr2, r3\n\tcontext.gas_left\tr2\n\tadd\tstack-[11], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_1138\n\tadd\tstack-[12], r1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_4\n\tst.1\t64, r1\n\tjump\t@.BB0_1152\n.BB0_346:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_104[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1248\n\tadd\tr0, r0, r7\n.BB0_348:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_348\n.BB0_1248:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_350\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[13], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_350:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_351\n.BB0_356:\n\tadd\t31, r4, r1\n\tand\t96, r1, r5\n\tadd\tstack-[13], r5, r6\n\tsub!\tr6, r5, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr6, r0, stack-[12]\n\tsub.s!\t@CPI0_4[0], r6, r6\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tadd\tstack-[12], r0, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_363\n\tadd\t@CPI0_124[0], r0, r1\n.BB0_361:\n\tadd\tstack-[12], r0, r3\n.BB0_362:\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tor\t@CPI0_23[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_934:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_120[0], r1, r1\n\tadd\tstack-[11], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1288\n\tadd\tr0, r0, r7\n.BB0_936:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_936\n.BB0_1288:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_938\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_938:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_939\n.BB0_944:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r2\n\tsub.s!\tstack-[14], r2, r2\n\tjump.ge\t@.BB0_947\n.BB0_631:\n\tadd\t@CPI0_127[0], r0, r2\n\tjump\t@.BB0_632\n.BB0_856:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_116[0], r1, r1\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1272\n\tadd\tr0, r0, r7\n.BB0_858:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_858\n.BB0_1272:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_860\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[13], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_860:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_861\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[13], r1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tjump\t@.BB0_870\n.BB0_1129:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1291\n\tadd\tr0, r0, r6\n.BB0_1131:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1131\n.BB0_1291:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1133\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1133:\n\tjump\t@.BB0_355\n.BB0_351:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1247\n\tadd\tr0, r0, r6\n.BB0_353:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_353\n.BB0_1247:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_355\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n\tjump\t@.BB0_355\n.BB0_1169:\n\tld.1\t64, r1\n\tadd\t@CPI0_102[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_939:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1287\n\tadd\tr0, r0, r6\n.BB0_941:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_941\n.BB0_1287:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_943\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_943:\n\tjump\t@.BB0_355\n.BB0_861:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1271\n\tadd\tr0, r0, r6\n.BB0_863:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_863\n.BB0_1271:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_865\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_865:\n.BB0_355:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_947:\n\tadd\t11, r0, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[5]\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_949\n\tadd\t@CPI0_126[0], r0, r2\n.BB0_632:\n\tst.1\tr1, r2\n\tjump\t@.BB0_633\n.BB0_494:\n\tadd\t@CPI0_155[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_1171:\n\tld.1\t64, r3\n\tadd\t@CPI0_103[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[9]\n\tadd\t4, r3, r1\n\tadd\tstack-[13], r0, r3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_1173\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1183\n.BB0_1138:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tadd\tstack-[12], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_116[0], r1, r1\n\tadd\tstack-[11], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1290\n\tadd\tr0, r0, r7\n.BB0_1140:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1140\n.BB0_1290:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1142\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[12], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1142:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1143\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[12], r1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n.BB0_1152:\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.lt\tr1, r0, r3\n\tshl.s\t64, r3, r3\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_1155\n.BB0_567:\n\tadd\t@CPI0_110[0], r0, r2\n\tst.1\tr1, r2\n\tor\t@CPI0_23[0], r3, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_363:\n\tadd\t14, r0, r2\n\tsload\tr2, r2\n\tand!\t255, r2, r2\n\tjump.eq\t@.BB0_368\n\tadd\t13, r0, r2\n\tsload\tr2, r6\n\tadd\tstack-[14], r6, r2\n\tsub!\tr2, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_365\n\tsub!\tstack-[9], r2, r2\n\tjump.le\t@.BB0_367\n.BB0_368:\n\tadd\t@CPI0_103[0], r0, r2\n\tadd\tstack-[12], r0, r6\n\tst.1\tr6, r2\n\tadd\t4, r6, r2\n\tadd\tstack-[10], r0, r6\n\tst.1\tr2, r6\n\tcontext.gas_left\tr2\n\tadd\tstack-[11], r0, r6\n\tsub.s!\t4, r6, r6\n\tjump.eq\t@.BB0_380\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tadd\tstack-[12], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_104[0], r1, r1\n\tadd\tstack-[11], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1246\n\tadd\tr0, r0, r7\n.BB0_371:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_371\n.BB0_1246:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_373\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[12], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_373:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_375\n\tadd\t31, r4, r1\n\tand\t96, r1, r5\n.BB0_380:\n\tadd\tstack-[12], r5, r2\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t@CPI0_4[0], r2, r2\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[14], r0, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\t8, r0, r2\n\tsload\tr2, r6\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r8\n\tmul\tr6, r8, r2, r7\n\tadd\tr8, r0, stack-[13]\n\tsub!\tr8, r0, r7\n\tjump.eq\t@.BB0_384\n\tdiv.s\tstack-[13], r2, r7, r8\n\tsub!\tr7, r6, r6\n\tjump.ne\t@.BB0_365\n.BB0_384:\n\tdiv.s\t10000, r2, r6, r2\n\tadd\tr6, r0, stack-[12]\n\tsub!\tstack-[13], r6, r2\n\tjump.lt\t@.BB0_365\n\tadd\t27, r0, r2\n\tadd\tr2, r0, stack-[9]\n\tsload\tr2, r2\n\tadd\t@CPI0_115[0], r0, r6\n\tadd\tstack-[14], r0, r7\n\tst.1\tr7, r6\n\tand\t@CPI0_10[0], r2, r2\n\tadd\t4, r7, r6\n\tst.1\tr6, r2\n\tadd\t36, r7, r2\n\tadd\tstack-[12], r0, r6\n\tst.1\tr2, r6\n\tcontext.gas_left\tr2\n\tadd\tstack-[11], r0, r6\n\tsub.s!\t4, r6, r6\n\tjump.eq\t@.BB0_397\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tadd\tstack-[14], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_116[0], r1, r1\n\tadd\tstack-[11], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1244\n\tadd\tr0, r0, r7\n.BB0_388:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_388\n.BB0_1244:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_390\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[14], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_390:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_392\n\tadd\t31, r4, r1\n\tand\t96, r1, r5\n.BB0_397:\n\tadd\tstack-[14], r5, r2\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\t@CPI0_4[0], r2, r2\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[11], r0, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r6\n\tadd\t0, r0, r6\n\tadd.ne\t1, r0, r6\n\tsub!\tr2, r6, r6\n\tjump.ne\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_402\n\tadd\t@CPI0_110[0], r0, r1\n\tadd\tstack-[11], r0, r3\n\tjump\t@.BB0_362\n.BB0_949:\n\tadd\t5, r0, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[4]\n\tsub.s!\tstack-[5], r2, r1\n\tjump.ge\t@.BB0_950\n.BB0_365:\n\tadd\t@CPI0_164[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB0_5\n.BB0_1189:\n\tadd\t35, r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r3\n\tadd\t@CPI0_106[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[9]\n\tadd\t4, r3, r1\n\tadd\tstack-[13], r0, r3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_10[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_1192\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1202\n.BB0_1173:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[9], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_104[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1298\n\tadd\tr0, r0, r7\n.BB0_1175:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1175\n.BB0_1298:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1177\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[9], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1177:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1178\n.BB0_1183:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[9], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r4\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[9], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_1187\n.BB0_530:\n\tadd\t@CPI0_105[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_619:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_120[0], r1, r1\n\tadd\tstack-[6], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1270\n\tadd\tr0, r0, r7\n.BB0_621:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_621\n.BB0_1270:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_623\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_623:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_624\n.BB0_629:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r2\n\tsub.s!\tstack-[14], r2, r2\n\tjump.lt\t@.BB0_631\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t37, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t2, r1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_637\n\tld.1\t64, r1\n\tadd\t@CPI0_151[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_1143:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1289\n\tadd\tr0, r0, r6\n.BB0_1145:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1145\n.BB0_1289:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1147\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1147:\n\tjump\t@.BB0_355\n.BB0_950:\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_81\n\tadd\tstack-[4], r0, r3\n\tsub.s\tstack-[5], r3, r2\n\tld\tr1, r1\n\tsub!\tr1, r2, r2\n\tjump.ge\t@.BB0_953\n\tld.1\t64, r1\n\tadd\t@CPI0_125[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_1192:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[9], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_104[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1296\n\tadd\tr0, r0, r7\n.BB0_1194:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1194\n.BB0_1296:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1196\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[9], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1196:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1197\n.BB0_1202:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[9], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tjump\t@.BB0_1191\n.BB0_1178:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1297\n\tadd\tr0, r0, r6\n.BB0_1180:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1180\n.BB0_1297:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1182\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1182:\n\tjump\t@.BB0_355\n.BB0_624:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1269\n\tadd\tr0, r0, r6\n.BB0_626:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_626\n.BB0_1269:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_628\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_628:\n\tjump\t@.BB0_355\n.BB0_500:\n\tadd\t13, r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[11], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_365\n\tsub!\tstack-[10], r1, r1\n\tjump.le\t@.BB0_503\n\tld.1\t64, r1\n\tadd\t@CPI0_159[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_1213:\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tsload\tr1, r1\n\tadd\t32, r0, r2\n\tsload\tr2, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_365\n\tsstore\tr2, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t@CPI0_107[0], r2, r2\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[8], r0, r4\n\tadd\t96, r4, r2\n\tst.1\t64, r2\n\tadd\t64, r4, r3\n\tadd\tstack-[11], r0, r2\n\tadd\tr3, r0, stack-[7]\n\tst.1\tr3, r2\n\tst.1.inc\tr4, r1, r2\n\tadd\tstack-[9], r0, r1\n\tadd\tr2, r0, stack-[11]\n\tst.1\tr2, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[14], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[8], r0, r2\n\tld.1\tr2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r2\n\tadd\t1, r1, r3\n\tsstore\tr3, r2\n\tadd\t2, r1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tadd\tstack-[7], r0, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r0, r3\n\tor.ne\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t33, r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r4\n\tadd\t68, r4, r3\n\tst.1\tr3, r1\n\tcontext.this\tr1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t36, r4, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_108[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tr4, r0, stack-[14]\n\tadd\t4, r4, r1\n\tadd\tstack-[10], r0, r3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_10[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_1218\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1228\n.BB0_1155:\n.BB0_873:\n\tadd\t1, r0, r2\n.BB0_874:\n\tst.1\tr1, r2\n\tor\t@CPI0_117[0], r3, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_375:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1245\n\tadd\tr0, r0, r6\n.BB0_377:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_377\n.BB0_1245:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_379\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_379:\n\tjump\t@.BB0_355\n.BB0_1197:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1295\n\tadd\tr0, r0, r6\n.BB0_1199:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1199\n.BB0_1295:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1201\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1201:\n\tjump\t@.BB0_355\n.BB0_367:\n\tadd\t@CPI0_159[0], r0, r1\n\tjump\t@.BB0_361\n.BB0_953:\n\tsub.s!\tstack-[4], r1, r1\n\tjump.ge\t@.BB0_643\n\tsub!\tstack-[14], r0, r1\n\tjump.ne\t@.BB0_955\n.BB0_647:\n\tld.1\t64, r1\n\tadd\t@CPI0_149[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_637:\n\tadd\t4, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_81\n\tld\tr1, r1\n\tsub.s!\tstack-[2], r1, r2\n\tjump.ge\t@.BB0_640\n\tld.1\t64, r1\n\tadd\t@CPI0_150[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_503:\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t39, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_505\n\tadd\t21, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_10[0], r1, r2\n\tjump.ne\t@.BB0_507\n.BB0_523:\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t37, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\t28, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tsload\tr2, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_365\n\tsub\tr2, r1, r1\n\tadd\tstack-[8], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsstore\tr1, r0\n\tadd\tstack-[11], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t34, r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r3\n\tadd\t@CPI0_103[0], r0, r1\n\tst.1\tr3, r1\n\tcontext.this\tr1\n\tadd\tr3, r0, stack-[11]\n\tadd\t4, r3, r3\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_10[0], r2, r2\n\tadd\tr2, r0, stack-[7]\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_531\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_541\n.BB0_955:\n\tadd\t21, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tsload\tr1, r1\n\tand!\t@CPI0_10[0], r1, r2\n\tjump.ne\t@.BB0_956\n.BB0_972:\n\tadd\t22, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_10[0], r1, r1\n\tjump.ne\t@.BB0_975\n\tcontext.sp\tr1\n\tsub.s\t16, r1, r1\n\tshl.s\t5, r1, r1\n\tadd\t1, r0, stack-[16]\n.BB0_991:\n\tst.1\t0, r0\n\tadd\t38, r0, r2\n\tst.1\t32, r2\n\tadd\t@CPI0_121[0], r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tshr.s\t5, r1, r1\n\tadd\tr2, r0, stack[r1]\n\tadd\tr0, r0, stack-[5]\n\tjump.eq\t@.BB0_993\n\tadd\tstack-[10], r0, r1\n\tadd\tr0, r0, r2\n\tadd\tstack-[12], r0, r3\n\tadd\tstack-[13], r0, r4\n\tnear_call\tr0, @modifier_notZeroAddress, @DEFAULT_UNWIND\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, stack-[5]\n\tjump.ne\t@.BB0_993\n.BB0_674:\n\tld.1\t64, r1\n\tadd\t@CPI0_147[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_281:\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB0_283\n\tld.1\tr4, r3\n.BB0_283:\n\tshl.s\t3, r2, r4\n\tsub.s\t1, r0, r5\n\tshr\tr5, r4, r4\n\txor\tr4, r5, r4\n\tand\tr3, r4, r3\n\tshl.s\t1, r2, r2\n\tor\tr3, r2, r2\n.BB0_270:\n\tsstore\tr1, r2\n\tadd\t32, r0, r2\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r2\n\tld.1\t128, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tld.1\t160, r3\n\tst.1\tr2, r3\n\tadd\t96, r1, r2\n\tld.1\t192, r3\n\tst.1\tr2, r3\n\tadd\t128, r1, r2\n\tld.1\t224, r3\n\tst.1\tr2, r3\n\tadd\t160, r1, r2\n\tld.1\t256, r3\n\tst.1\tr2, r3\n\tadd\t192, r1, r2\n\tld.1\t288, r3\n\tst.1\tr2, r3\n\tadd\t224, r1, r2\n\tld.1\t320, r3\n\tst.1\tr2, r3\n\tadd\t256, r1, r2\n\tld.1\t352, r3\n\tst.1\tr2, r3\n\tld.1\t384, r2\n\tsub!\tr2, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\t288, r1, r3\n\tst.1\tr3, r2\n\tld.1\t416, r2\n\tsub!\tr2, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\t320, r1, r3\n\tst.1\tr3, r2\n\tadd\t352, r1, r2\n\tadd\t352, r0, r4\n\tld.1\t448, r3\n\tst.1\tr2, r4\n\tadd\t384, r1, r4\n\tld.1\tr3, r2\n\tst.1\tr4, r2\n\tadd\t416, r1, r4\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_273\n\tadd\tr0, r0, r5\n.BB0_272:\n\tadd\tr5, r4, r6\n\tadd\t32, r5, r5\n\tadd\tr5, r3, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_272\n.BB0_273:\n\tadd\tr2, r4, r3\n\tst.1\tr3, r0\n\tadd\t447, r2, r2\n\tand\tstack-[14], r2, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_170[0], r0, r4\n\tjump\t@.BB0_895\n.BB0_640:\n\tadd\t5, r0, r2\n\tsload\tr2, r2\n\tadd\t11, r0, r3\n\tsload\tr3, r3\n\tsub!\tr3, r0, r4\n\tjump.ne\t@.BB0_644\n\tsub!\tr1, r2, r1\n\tjump.lt\t@.BB0_641\n.BB0_643:\n\tld.1\t64, r1\n\tadd\t@CPI0_141[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_505:\n\tld.1\t64, r1\n\tadd\t@CPI0_156[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_956:\n\tld.1\t64, r3\n\tadd\t@CPI0_103[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[5]\n\tadd\t4, r3, r1\n\tadd\tstack-[10], r0, r3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_958\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_968\n.BB0_392:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1243\n\tadd\tr0, r0, r6\n.BB0_394:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_394\n.BB0_1243:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_396\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_396:\n\tjump\t@.BB0_355\n.BB0_1218:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[14], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_109[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1294\n\tadd\tr0, r0, r7\n.BB0_1220:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1220\n.BB0_1294:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1222\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[14], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1222:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1223\n.BB0_1228:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[14], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_1207\n.BB0_762:\n\tadd\t@CPI0_110[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_975:\n\tadd\t35, r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r3\n\tadd\t@CPI0_106[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[5]\n\tadd\t4, r3, r1\n\tadd\tstack-[10], r0, r3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_10[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_978\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_988\n.BB0_507:\n\tld.1\t64, r3\n\tadd\t@CPI0_103[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[9]\n\tadd\t4, r3, r1\n\tadd\tstack-[14], r0, r3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_509\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_519\n.BB0_644:\n\tsub!\tr2, r3, r4\n\tjump.lt\t@.BB0_365\n\tsub\tr2, r3, r2\n\tsub!\tr1, r2, r1\n\tjump.ge\t@.BB0_646\n.BB0_641:\n\tsub!\tstack-[14], r0, r1\n\tjump.eq\t@.BB0_647\n\tadd\t21, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tsload\tr1, r1\n\tand!\t@CPI0_10[0], r1, r2\n\tjump.ne\t@.BB0_649\n.BB0_665:\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_670\n\tst.1\t0, r0\n\tadd\t38, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t4, r1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_673\n\tld.1\t64, r1\n\tadd\t@CPI0_148[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_958:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[5], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_104[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1286\n\tadd\tr0, r0, r7\n.BB0_960:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_960\n.BB0_1286:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_962\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[5], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_962:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_963\n.BB0_968:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[5], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r4\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[5], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_972\n\tjump\t@.BB0_530\n.BB0_1223:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1293\n\tadd\tr0, r0, r6\n.BB0_1225:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1225\n.BB0_1293:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1227\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1227:\n\tjump\t@.BB0_355\n.BB0_978:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[5], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_104[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1284\n\tadd\tr0, r0, r7\n.BB0_980:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_980\n.BB0_1284:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_982\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[5], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_982:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_983\n.BB0_988:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[5], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r4\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r2\n\tsub!\tr2, r0, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tcontext.sp\tr1\n\tsub.s\t15, r1, r1\n\tshl.s\t5, r1, r1\n\tadd\tr2, r0, stack-[5]\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_991\n.BB0_993:\n\tld.1\t64, r2\n\tadd\t@CPI0_103[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[13]\n\tadd\t4, r2, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[11], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_995\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1005\n.BB0_509:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[9], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_104[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1254\n\tadd\tr0, r0, r7\n.BB0_511:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_511\n.BB0_1254:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_513\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[9], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_513:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_514\n.BB0_519:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[9], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r4\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[9], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_530\n\tjump\t@.BB0_523\n.BB0_963:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1285\n\tadd\tr0, r0, r6\n.BB0_965:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_965\n.BB0_1285:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_967\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_967:\n\tjump\t@.BB0_355\n.BB0_995:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[13], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_104[0], r1, r1\n\tadd\tstack-[11], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1282\n\tadd\tr0, r0, r7\n.BB0_997:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_997\n.BB0_1282:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_999\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[13], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_999:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1000\n.BB0_1005:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[13], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\tstack-[14], r2, r2\n\tjump.ge\t@.BB0_1010\n.BB0_689:\n\tadd\t@CPI0_124[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_402:\n\tadd\tstack-[13], r0, r6\n\tsub.s\tstack-[12], r6, r8\n\tadd\tstack-[8], r0, r2\n\tsload\tr2, r2\n\tadd\t26, r0, r6\n\tadd\tr6, r0, stack-[7]\n\tsload\tr6, r6\n\tadd\tstack-[11], r0, r9\n\tadd\t36, r9, r7\n\tadd\tr8, r0, stack-[6]\n\tst.1\tr7, r8\n\tadd\t@CPI0_115[0], r0, r7\n\tst.1\tr9, r7\n\tadd\t4, r9, r7\n\tand\t@CPI0_10[0], r6, r6\n\tst.1\tr7, r6\n\tcontext.gas_left\tr6\n\tand\t@CPI0_10[0], r2, r2\n\tsub.s!\t4, r2, r7\n\tjump.eq\t@.BB0_414\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r6, r3\n\tadd.ge\tr1, r0, r6\n\tadd\tstack-[11], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r6, r3\n\tor\tr3, r1, r1\n\tor\t@CPI0_116[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1242\n\tadd\tr0, r0, r7\n.BB0_405:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_405\n.BB0_1242:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_407\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[11], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_407:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_409\n\tadd\t31, r4, r1\n\tand\t96, r1, r5\n.BB0_414:\n\tadd\tstack-[11], r5, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t@CPI0_4[0], r2, r2\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[8], r0, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_419\n.BB0_418:\n\tadd\t@CPI0_110[0], r0, r1\n\tadd\tstack-[8], r0, r3\n\tjump\t@.BB0_362\n.BB0_983:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1283\n\tadd\tr0, r0, r6\n.BB0_985:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_985\n.BB0_1283:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_987\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_987:\n\tjump\t@.BB0_355\n.BB0_646:\n\tld.1\t64, r1\n\tadd\t@CPI0_140[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_514:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1253\n\tadd\tr0, r0, r6\n.BB0_516:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_516\n.BB0_1253:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_518\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_518:\n\tjump\t@.BB0_355\n.BB0_1000:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1281\n\tadd\tr0, r0, r6\n.BB0_1002:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1002\n.BB0_1281:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1004\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1004:\n\tjump\t@.BB0_355\n.BB0_649:\n\tld.1\t64, r3\n\tadd\t@CPI0_103[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[2]\n\tadd\t4, r3, r1\n\tadd\tstack-[7], r0, r3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_651\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_661\n.BB0_651:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[2], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_104[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1268\n\tadd\tr0, r0, r7\n.BB0_653:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_653\n.BB0_1268:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_655\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[2], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_655:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_656\n.BB0_661:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[2], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r4\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[2], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_665\n\tjump\t@.BB0_530\n.BB0_1010:\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t38, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tstack-[14], r1, r1\n\tjump.ge\t@.BB0_1012\n.BB0_692:\n\tld.1\t64, r1\n\tadd\t@CPI0_146[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_409:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1241\n\tadd\tr0, r0, r6\n.BB0_411:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_411\n.BB0_1241:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_413\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_413:\n\tjump\t@.BB0_355\n.BB0_656:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1267\n\tadd\tr0, r0, r6\n.BB0_658:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_658\n.BB0_1267:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_660\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_660:\n\tjump\t@.BB0_355\n.BB0_1012:\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\t40, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[14], r1, stack-[11]\n\tsub!\tstack-[11], r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_365\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\t12, r0, r2\n\tsload\tr2, r2\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r3\n\tmul\tr2, r3, r1, r4\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_1017\n\tdiv\tr1, r3, r3, r4\n\tsub!\tr3, r2, r2\n\tjump.ne\t@.BB0_365\n.BB0_1017:\n\tdiv.s\t1000, r1, r1, r2\n\tsub!\tstack-[11], r1, r1\n\tjump.le\t@.BB0_1018\n.BB0_703:\n\tld.1\t64, r1\n\tadd\t@CPI0_145[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_531:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[11], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_104[0], r1, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1252\n\tadd\tr0, r0, r7\n.BB0_533:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_533\n.BB0_1252:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_535\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[11], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_535:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_536\n.BB0_541:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[11], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tstack-[11], r1, r1\n\tjump.ge\t@.BB0_547\n\tld.1\t64, r1\n\tadd\t@CPI0_158[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_419:\n\tadd\t18, r0, r2\n\tsload\tr2, r2\n\tand!\t@CPI0_10[0], r2, r2\n\tjump.ne\t@.BB0_420\n.BB0_436:\n\tadd\tstack-[9], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tsload\tr2, r2\n\tadd\tstack-[8], r0, r5\n\tadd\t96, r5, r3\n\tadd\tstack-[6], r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r5, r3\n\tadd\tstack-[12], r0, r4\n\tst.1\tr3, r4\n\tand\t@CPI0_10[0], r2, r2\n\tadd\t64, r5, r3\n\tst.1\tr3, r2\n\tand\t@CPI0_10[0], r1, r1\n\tst.1\tr5, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_81\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r3\n\tadd\t128, r3, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_163[0], r0, r4\n\tjump\t@.BB0_895\n.BB0_673:\n\tadd\tstack-[7], r0, r1\n\tadd\tr0, r0, r2\n\tadd\tstack-[12], r0, r3\n\tadd\tstack-[13], r0, r4\n\tnear_call\tr0, @modifier_notZeroAddress, @DEFAULT_UNWIND\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_674\n.BB0_670:\n\tld.1\t64, r2\n\tadd\t@CPI0_103[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[13]\n\tadd\t4, r2, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[6], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_675\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_685\n.BB0_675:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[13], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_104[0], r1, r1\n\tadd\tstack-[6], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1266\n\tadd\tr0, r0, r7\n.BB0_677:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_677\n.BB0_1266:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_679\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[13], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_679:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_680\n.BB0_685:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[13], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\tstack-[14], r2, r2\n\tjump.lt\t@.BB0_689\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\t38, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tstack-[14], r1, r1\n\tjump.lt\t@.BB0_692\n\tadd\t16, r0, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_699\n\tadd\tstack-[7], r0, r1\n\tadd\tstack-[10], r0, r2\n\tadd\tstack-[11], r0, r3\n\tnear_call\tr0, @modifier_notZeroAddress_60592, @DEFAULT_UNWIND\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_704\n.BB0_699:\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t40, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[14], r1, stack-[12]\n\tsub!\tstack-[12], r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_365\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n.BB0_710:\n\tsub!\tstack-[12], r1, r1\n\tjump.gt\t@.BB0_703\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t5, r1, r1\n\tsload\tr1, r1\n\tadd\tstack-[14], r1, stack-[12]\n\tsub!\tstack-[12], r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_365\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t2, r1, r1\n\tsload\tr1, r1\n\tsub!\tstack-[12], r1, r1\n\tjump.le\t@.BB0_712\n\tld.1\t64, r1\n\tadd\t@CPI0_144[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_680:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1265\n\tadd\tr0, r0, r6\n.BB0_682:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_682\n.BB0_1265:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_684\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_684:\n\tjump\t@.BB0_355\n.BB0_536:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1251\n\tadd\tr0, r0, r6\n.BB0_538:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_538\n.BB0_1251:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_540\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_540:\n\tjump\t@.BB0_355\n.BB0_420:\n\tadd\t33, r0, r2\n\tadd\tr2, r0, stack-[13]\n\tsload\tr2, r2\n\tadd\t@CPI0_103[0], r0, r3\n\tadd\tstack-[8], r0, r5\n\tst.1\tr5, r3\n\tadd\t4, r5, r3\n\tadd\tstack-[10], r0, r5\n\tst.1\tr3, r5\n\tcontext.gas_left\tr3\n\tand\t@CPI0_10[0], r2, r2\n\tsub.s!\t4, r2, r5\n\tjump.eq\t@.BB0_433\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tadd\tstack-[8], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tor\t@CPI0_104[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1240\n\tadd\tr0, r0, r7\n.BB0_424:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_424\n.BB0_1240:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_426\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[8], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_426:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_428\n\tadd\t31, r4, r1\n.BB0_433:\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\tstack-[8], r1, r2\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t@CPI0_4[0], r2, r2\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[14], r0, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r4, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[8], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r2\n\tadd\tstack-[14], r0, stack-[8]\n\tjump.eq\t@.BB0_436\n\tadd\tstack-[7], r0, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\tstack-[13], r0, r2\n\tsload\tr2, r3\n\tadd\t@CPI0_103[0], r0, r2\n\tadd\tstack-[14], r0, r4\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tadd\tstack-[10], r0, r4\n\tst.1\tr2, r4\n\tcontext.gas_left\tr2\n\tand\t@CPI0_10[0], r3, r3\n\tadd\tr3, r0, stack-[11]\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_438\n\tadd\tstack-[14], r1, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI0_4[0], r2, r2\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[13], r0, r2\n\tst.1\t64, r2\n\tjump\t@.BB0_452\n.BB0_428:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1239\n\tadd\tr0, r0, r6\n.BB0_430:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_430\n.BB0_1239:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_432\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_432:\n\tjump\t@.BB0_355\n.BB0_547:\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tsload\tr2, r2\n\tld.1\t64, r3\n\tadd\t128, r3, r4\n\tadd\tstack-[10], r0, r5\n\tst.1\tr4, r5\n\tadd\t96, r3, r4\n\tst.1\tr4, r2\n\tadd\t64, r3, r2\n\tst.1\tr2, r1\n\tadd\t32, r3, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[12], r0, r1\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\tr3, r0, stack-[11]\n\tadd\t@CPI0_157[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tld.1\t64, r3\n\tadd\t36, r3, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_115[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[14]\n\tadd\t4, r3, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[7], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_552\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_562\n.BB0_1018:\n\tadd\t28, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tsload\tr1, r2\n\tadd\tstack-[14], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_365\n\tadd\t7, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.le\t@.BB0_1020\n.BB0_714:\n\tld.1\t64, r1\n\tadd\t@CPI0_143[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_438:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tadd\tstack-[14], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_104[0], r1, r1\n\tadd\tstack-[11], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1238\n\tadd\tr0, r0, r7\n.BB0_440:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[14], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_440\n.BB0_1238:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_442\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[14], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_442:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_443\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[14], r1, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI0_4[0], r2, r2\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[13], r0, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n.BB0_452:\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[13], r0, r4\n\tadd\t36, r4, r3\n\tst.1\tr3, r2\n\tadd\t@CPI0_115[0], r0, r2\n\tst.1\tr4, r2\n\tadd\tstack-[8], r0, r2\n\tand\t@CPI0_10[0], r2, r2\n\tadd\t4, r4, r3\n\tst.1\tr3, r2\n\tcontext.gas_left\tr2\n\tadd\tstack-[11], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_453\n\tadd\tstack-[13], r1, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[8], r0, r1\n\tst.1\t64, r1\n\tjump\t@.BB0_467\n.BB0_704:\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t40, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[14], r1, stack-[12]\n\tsub!\tstack-[12], r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_365\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r2\n\tadd\t1, r2, r1\n\tsload\tr1, r1\n\tadd\t3, r2, r2\n\tsload\tr2, r3\n\tadd\t15, r0, r2\n\tsload\tr2, r4\n\tmul\tr3, r4, r2, r5\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_709\n\tdiv\tr2, r4, r4, r5\n\tsub!\tr4, r3, r3\n\tjump.ne\t@.BB0_365\n.BB0_709:\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_365\n\tjump\t@.BB0_710\n.BB0_1020:\n\tadd\tstack-[11], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_1026\n\tadd\t30, r0, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, stack-[3]\n\tsub.s!\tstack-[3], r2, r3\n\tjump.eq\t@.BB0_365\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t6, r1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[3], r2, r3\n\tjump.eq\t@.BB0_365\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n.BB0_1026:\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[14], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_365\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t5, r1, r1\n\tsload\tr1, r3\n\tadd\tstack-[14], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_365\n\tsstore\tr1, r2\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\t30, r0, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[2]\n\tadd\tstack-[11], r0, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[3]\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\tstack-[4], r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_10[0], r1, r2\n\tadd\tr0, r0, stack-[12]\n\tjump.ne\t@.BB0_1032\n.BB0_1048:\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_81\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r3\n\tadd\t224, r3, r2\n\tadd\tstack-[12], r0, r4\n\tst.1\tr2, r4\n\tadd\t192, r3, r2\n\tst.1\tr2, r1\n\tadd\t160, r3, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r3, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\tr1, r2\n\tadd\t96, r3, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tadd\t64, r3, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r3, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[9], r0, r1\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_122[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\tr3, r0, stack-[13]\n\tadd\t@CPI0_123[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r4\n\tadd\t68, r4, r1\n\tadd\tstack-[14], r0, r3\n\tst.1\tr1, r3\n\tadd\tstack-[6], r0, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t36, r4, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_108[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tr4, r0, stack-[14]\n\tadd\t4, r4, r1\n\tadd\tstack-[9], r0, r3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_10[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_1052\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1062\n.BB0_443:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1237\n\tadd\tr0, r0, r6\n.BB0_445:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_445\n.BB0_1237:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_447\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_447:\n\tjump\t@.BB0_355\n.BB0_453:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tadd\tstack-[13], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_116[0], r1, r1\n\tadd\tstack-[11], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1236\n\tadd\tr0, r0, r7\n.BB0_455:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[13], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_455\n.BB0_1236:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_457\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[13], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_457:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_458\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[13], r1, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[8], r0, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n.BB0_467:\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_436\n\tjump\t@.BB0_418\n.BB0_552:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[14], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_116[0], r1, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1250\n\tadd\tr0, r0, r7\n.BB0_554:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[14], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_554\n.BB0_1250:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_556\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[14], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_556:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_557\n.BB0_562:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[14], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.lt\tr1, r0, r3\n\tshl.s\t64, r3, r3\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_567\n\tadd\tstack-[11], r0, r2\n\tjump\t@.BB0_874\n.BB0_458:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1235\n\tadd\tr0, r0, r6\n.BB0_460:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_460\n.BB0_1235:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_462\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_462:\n\tjump\t@.BB0_355\n.BB0_557:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1249\n\tadd\tr0, r0, r6\n.BB0_559:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_559\n.BB0_1249:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_561\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_561:\n\tjump\t@.BB0_355\n.BB0_712:\n\tadd\t28, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tsload\tr1, r2\n\tadd\tstack-[14], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_365\n\tadd\t7, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.gt\t@.BB0_714\n\tadd\tstack-[12], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t40, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_721\n\tadd\t30, r0, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, stack-[10]\n\tsub.s!\tstack-[10], r2, r3\n\tjump.eq\t@.BB0_365\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t6, r1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[10], r2, r3\n\tjump.eq\t@.BB0_365\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n.BB0_721:\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[11], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[14], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_365\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t5, r1, r1\n\tsload\tr1, r3\n\tadd\tstack-[14], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_365\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[11], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\t30, r0, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[6]\n\tadd\tstack-[12], r0, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[10]\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\tstack-[1], r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_10[0], r1, r2\n\tadd\tr0, r0, stack-[12]\n\tjump.eq\t@.BB0_743\n\tadd\t@CPI0_103[0], r0, r1\n\tadd\tstack-[13], r0, r3\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\tstack-[7], r0, r3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_729\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_739\n.BB0_1032:\n\tadd\t@CPI0_103[0], r0, r1\n\tadd\tstack-[13], r0, r3\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\tstack-[10], r0, r3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_1034\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1044\n.BB0_1034:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[13], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_104[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1280\n\tadd\tr0, r0, r7\n.BB0_1036:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[13], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1036\n.BB0_1280:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1038\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[13], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1038:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1039\n.BB0_1044:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[13], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r4\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\tr1, r0, stack-[13]\n\tjump\t@.BB0_1048\n.BB0_1039:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1279\n\tadd\tr0, r0, r6\n.BB0_1041:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1041\n.BB0_1279:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1043\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1043:\n\tjump\t@.BB0_355\n.BB0_1052:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[14], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_109[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1278\n\tadd\tr0, r0, r7\n.BB0_1054:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[14], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1054\n.BB0_1278:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1056\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[14], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1056:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1057\n.BB0_1062:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[14], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_1068\n\tjump\t@.BB0_762\n.BB0_65:\n\tadd\t@CPI0_11[0], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_12[0], r0, r2\n\tsload\tr2, r6\n\tsstore\tr2, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_14[0], r0, r4\n\tadd\t@CPI0_11[0], r0, r5\n\tadd\t@CPI0_11[0], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t@CPI0_15[0], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r6\n\tadd\t@CPI0_11[0], r0, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\tr3, r0, stack-[10]\n\tadd\t@CPI0_14[0], r0, r4\n\tadd\t@CPI0_15[0], r0, r5\n\tadd\t@CPI0_11[0], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tadd\t128, r1, r1\n\tld.1\tr1, r1\n\tadd\t224, r1, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\tr1, r0, stack-[11]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_74\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tcontext.caller\tr7\n\tadd\t@CPI0_18[0], r0, r4\n\tadd\t@CPI0_11[0], r0, r5\n\tadd\tstack-[11], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_74:\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tadd\t128, r1, r1\n\tld.1\tr1, r1\n\tadd\t256, r1, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\tr1, r0, stack-[11]\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_78\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tcontext.caller\tr7\n\tadd\t@CPI0_18[0], r0, r4\n\tadd\t@CPI0_15[0], r0, r5\n\tadd\tstack-[11], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_78:\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tadd\t320, r1, r2\n\tld.1\tr2, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_80\n\tld.1\t64, r1\n\tadd\t@CPI0_32[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_729:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[13], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_104[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1264\n\tadd\tr0, r0, r7\n.BB0_731:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[13], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_731\n.BB0_1264:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_733\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[13], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_733:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_734\n.BB0_739:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[13], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r4\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\tr1, r0, stack-[13]\n.BB0_743:\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_81\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r3\n\tadd\t224, r3, r2\n\tadd\tstack-[12], r0, r4\n\tst.1\tr2, r4\n\tadd\t192, r3, r2\n\tst.1\tr2, r1\n\tadd\t160, r3, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r3, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tadd\t96, r3, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tadd\t64, r3, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r3, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_122[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\tr3, r0, stack-[13]\n\tadd\t@CPI0_142[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[5], r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r4\n\tadd\t68, r4, r1\n\tadd\tstack-[14], r0, r3\n\tst.1\tr1, r3\n\tadd\tstack-[4], r0, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t36, r4, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_108[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tr4, r0, stack-[14]\n\tadd\t4, r4, r1\n\tadd\tstack-[8], r0, r3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_10[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_747\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_757\n.BB0_1057:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1277\n\tadd\tr0, r0, r6\n.BB0_1059:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1059\n.BB0_1277:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1061\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1061:\n\tjump\t@.BB0_355\n.BB0_1068:\n\tadd\tstack-[8], r0, r2\n\tsload\tr2, r2\n\tand!\t255, r2, r2\n\tjump.eq\t@.BB0_1077\n\tadd\t18, r0, r2\n\tsload\tr2, r2\n\tand!\t@CPI0_10[0], r2, r2\n\tjump.eq\t@.BB0_1077\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\t37, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_1073\n\tld.1\t64, r1\n\tjump\t@.BB0_1077\n.BB0_80:\n\tadd\t96, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_81\n\tld\tr1, r5\n\tsub!\tstack-[11], r5, r1\n\tjump.ge\t@.BB0_84\n\tld.1\t64, r1\n\tadd\t@CPI0_31[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_81:\n\trevert\n.BB0_734:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1263\n\tadd\tr0, r0, r6\n.BB0_736:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_736\n.BB0_1263:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_738\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_738:\n\tjump\t@.BB0_355\n.BB0_747:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[14], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_109[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1262\n\tadd\tr0, r0, r7\n.BB0_749:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[14], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_749\n.BB0_1262:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_751\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[14], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_751:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_752\n.BB0_757:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[14], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_762\n\tadd\tstack-[9], r0, r2\n\tsload\tr2, r2\n\tand!\t255, r2, r2\n\tjump.eq\t@.BB0_772\n\tadd\t18, r0, r2\n\tsload\tr2, r2\n\tand!\t@CPI0_10[0], r2, r2\n\tjump.eq\t@.BB0_772\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_768\n\tld.1\t64, r1\n\tjump\t@.BB0_772\n.BB0_1073:\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[14], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\t32, r0, r2\n\tsload\tr2, r3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tsub!\tr3, r1, r1\n\tjump.lt\t@.BB0_365\n\tsub.s\tstack-[12], r3, r1\n\tsstore\tr2, r1\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[14], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsstore\tr1, r0\n\tadd\t33, r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r3\n\tadd\t36, r3, r1\n\tadd\tstack-[12], r0, r4\n\tst.1\tr1, r4\n\tadd\t@CPI0_115[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[14]\n\tadd\t4, r3, r1\n\tadd\tstack-[9], r0, r3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_10[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_1079\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1089\n.BB0_84:\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tld.1.inc\tr1, r3, r2\n\tadd\t128, r3, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r5, r5\n\tjump.ge\t@.BB0_86\n\tld.1\t64, r1\n\tadd\t@CPI0_30[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_752:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1261\n\tadd\tr0, r0, r6\n.BB0_754:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_754\n.BB0_1261:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_756\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_756:\n\tjump\t@.BB0_355\n.BB0_768:\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\t32, r0, r2\n\tsload\tr2, r3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tsub!\tr3, r1, r1\n\tjump.lt\t@.BB0_365\n\tsub.s\tstack-[14], r3, r1\n\tsstore\tr2, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsstore\tr1, r0\n\tadd\t33, r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r3\n\tadd\t36, r3, r1\n\tadd\tstack-[14], r0, r4\n\tst.1\tr1, r4\n\tadd\t@CPI0_115[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[14]\n\tadd\t4, r3, r1\n\tadd\tstack-[8], r0, r3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_10[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_775\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_785\n.BB0_1079:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[14], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_116[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1276\n\tadd\tr0, r0, r7\n.BB0_1081:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[14], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1081\n.BB0_1276:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1083\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[14], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1083:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1084\n.BB0_1089:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[14], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_1077\n\tjump\t@.BB0_762\n.BB0_86:\n\tadd\t96, r3, r5\n\tld.1\tr5, r6\n\tsub!\tr6, r4, r5\n\tjump.ge\t@.BB0_87\n\tadd\t192, r3, r5\n\tld.1\tr5, r5\n\tsub!\tr5, r0, r7\n\tjump.ne\t@.BB0_90\n\tld.1\t64, r1\n\tadd\t@CPI0_29[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_775:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[14], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_116[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1260\n\tadd\tr0, r0, r7\n.BB0_777:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[14], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_777\n.BB0_1260:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_779\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[14], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_779:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_780\n.BB0_785:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[14], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_772\n\tjump\t@.BB0_762\n.BB0_1084:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1275\n\tadd\tr0, r0, r6\n.BB0_1086:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1086\n.BB0_1275:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1088\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1088:\n\tjump\t@.BB0_355\n.BB0_1077:\n.BB0_772:\n\tadd\tstack-[13], r0, r2\n\tjump\t@.BB0_773\n.BB0_87:\n\tld.1\t64, r1\n\tadd\t@CPI0_22[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_90:\n\tadd\tstack-[12], r0, r7\n\tld.1\tr7, r7\n\tld.1\tr7, r7\n\tsub!\tr7, r0, r7\n\tjump.ne\t@.BB0_92\n\tld.1\t64, r1\n\tadd\t@CPI0_28[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_780:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1259\n\tadd\tr0, r0, r6\n.BB0_782:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_782\n.BB0_1259:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_784\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_784:\n\tjump\t@.BB0_355\n.BB0_92:\n\tld.1.inc\tr3, r7, r8\n\tadd\t1, r0, r9\n\tsstore\tr9, r7\n\tld.1\tr8, r7\n\tadd\t2, r0, r8\n\tsstore\tr8, r7\n\tadd\t64, r3, r7\n\tld.1\tr7, r7\n\tadd\t3, r0, r8\n\tsstore\tr8, r7\n\tadd\tstack-[10], r0, r7\n\tsstore\tr7, r6\n\tadd\t5, r0, r6\n\tsstore\tr6, r4\n\tadd\t160, r3, r4\n\tld.1\tr4, r4\n\tadd\t6, r0, r6\n\tsstore\tr6, r4\n\tadd\t7, r0, r4\n\tsstore\tr4, r5\n\tadd\t224, r3, r4\n\tld.1\tr4, r4\n\tadd\t8, r0, r5\n\tsstore\tr5, r4\n\tadd\t256, r3, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r4\n\tadd\t9, r0, r4\n\tsload\tr4, r5\n\tand\t@CPI0_24[0], r5, r5\n\tor.ne\t1, r5, r5\n\tadd\t288, r3, r6\n\tld.1\tr6, r6\n\tsub!\tr6, r0, r6\n\tor.ne\t256, r5, r5\n\tsstore\tr4, r5\n\tadd\t320, r3, r3\n\tld.1\tr3, r5\n\tld.1.inc\tr5, r4, r6\n\tsub.s!\t@CPI0_4[0], r4, r3\n\tjump.gt\t@.BB0_4\n\tadd\t10, r0, r3\n\tsload\tr3, r7\n\tand!\t1, r7, r8\n\tshr.s\t1, r7, r9\n\tand\t127, r9, r7\n\tadd.ne\tr9, r0, r7\n\tsub.s!\t31, r7, r9\n\tadd\t0, r0, r9\n\tadd.gt\t1, r0, r9\n\tand\t1, r9, r9\n\tsub!\tr8, r9, r8\n\tjump.ne\t@.BB0_94\n\tsub.s!\t32, r7, r8\n\tjump.lt\t@.BB0_98\n\tadd\t31, r4, r8\n\tshr.s\t5, r8, r8\n\tadd\t@CPI0_25[0], r8, r9\n\tadd\t@CPI0_25[0], r0, r8\n\tsub.s!\t32, r4, r10\n\tadd.ge\tr9, r0, r8\n\tst.1\t0, r3\n\tadd\t31, r7, r7\n\tshr.s\t5, r7, r7\n\tadd\t@CPI0_25[0], r7, r7\n\tsub!\tr8, r7, r9\n\tjump.ge\t@.BB0_98\n.BB0_99:\n\tsstore\tr8, r0\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_99\n.BB0_98:\n\tsub.s!\t31, r4, r7\n\tjump.le\t@.BB0_108\n\tst.1\t0, r3\n\tand!\tstack-[13], r4, r8\n\tadd\t32, r0, r7\n\tadd\t@CPI0_25[0], r0, r6\n\tjump.eq\t@.BB0_105\n\tadd\t@CPI0_25[0], r0, r6\n\tadd\t32, r0, r7\n\tadd\tr0, r0, r9\n.BB0_103:\n\tadd\tr7, r5, r10\n\tld.1\tr10, r10\n\tsstore\tr6, r10\n\tadd\t32, r7, r7\n\tadd\t1, r6, r6\n\tadd\t32, r9, r9\n\tsub!\tr9, r8, r10\n\tjump.lt\t@.BB0_103\n.BB0_105:\n\tsub!\tr8, r4, r8\n\tjump.ge\t@.BB0_107\n\tshl.s\t3, r4, r8\n\tand\t248, r8, r8\n\tsub.s\t1, r0, r9\n\tshr\tr9, r8, r8\n\txor\tr8, r9, r8\n\tadd\tr7, r5, r5\n\tld.1\tr5, r5\n\tand\tr5, r8, r5\n\tsstore\tr6, r5\n.BB0_107:\n\tshl.s\t1, r4, r4\n\tor\t1, r4, r4\n\tjump\t@.BB0_100\n.BB0_108:\n\tsub!\tr4, r0, r5\n\tadd\tr0, r0, r5\n\tjump.eq\t@.BB0_110\n\tld.1\tr6, r5\n.BB0_110:\n\tshl.s\t3, r4, r6\n\tsub.s\t1, r0, r7\n\tshr\tr7, r6, r6\n\txor\tr6, r7, r6\n\tand\tr5, r6, r5\n\tshl.s\t1, r4, r4\n\tor\tr5, r4, r4\n.BB0_100:\n\tsstore\tr3, r4\n\tld.1\tr2, r2\n\tld.1.inc\tr2, r2, r3\n\tadd\t11, r0, r4\n\tsstore\tr4, r2\n\tld.1\tr3, r2\n\tadd\t12, r0, r3\n\tsstore\tr3, r2\n\tadd\t64, r1, r2\n\tld.1\tr2, r2\n\tadd\t13, r0, r3\n\tld.1.inc\tr2, r2, r4\n\tsstore\tr3, r2\n\tsub.s\t256, r0, r2\n\tadd\t14, r0, r3\n\tsload\tr3, r5\n\tand\tr5, r2, r2\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r4\n\tor.ne\t1, r2, r2\n\tsstore\tr3, r2\n\tadd\t96, r1, r2\n\tld.1\tr2, r2\n\tadd\t15, r0, r3\n\tld.1.inc\tr2, r2, r4\n\tsstore\tr3, r2\n\tld.1\tr4, r2\n\tadd\t16, r0, r3\n\tsstore\tr3, r2\n\tadd\t128, r1, r1\n\tadd\t17, r0, r3\n\tsload\tr3, r2\n\tand\t@CPI0_26[0], r2, r4\n\tld.1\tr1, r2\n\tld.1.inc\tr2, r1, r5\n\tand\t@CPI0_10[0], r1, r1\n\tor\tr4, r1, r1\n\tsstore\tr3, r1\n\tld.1\tr5, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t18, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_26[0], r4, r4\n\tor\tr4, r1, r1\n\tsstore\tr3, r1\n\tadd\t64, r2, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t19, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_26[0], r4, r4\n\tor\tr4, r1, r1\n\tsstore\tr3, r1\n\tadd\t96, r2, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t20, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_26[0], r4, r4\n\tor\tr4, r1, r1\n\tsstore\tr3, r1\n\tadd\t128, r2, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t21, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_26[0], r4, r4\n\tor\tr4, r1, r1\n\tsstore\tr3, r1\n\tadd\t160, r2, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_10[0], r1, r1\n\tadd\t22, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_26[0], r4, r4\n\tor\tr4, r1, r4\n\tsstore\tr3, r4\n\tadd\t192, r2, r3\n\tld.1\tr3, r3\n\tand\t@CPI0_10[0], r3, r3\n\tadd\t23, r0, r4\n\tsload\tr4, r5\n\tand\t@CPI0_26[0], r5, r5\n\tor\tr5, r3, r3\n\tsstore\tr4, r3\n\tadd\t224, r2, r3\n\tld.1\tr3, r3\n\tand\t@CPI0_10[0], r3, r3\n\tadd\t24, r0, r4\n\tsload\tr4, r5\n\tand\t@CPI0_26[0], r5, r5\n\tor\tr5, r3, r3\n\tsstore\tr4, r3\n\tadd\t256, r2, r3\n\tld.1\tr3, r3\n\tand\t@CPI0_10[0], r3, r3\n\tadd\t25, r0, r4\n\tsload\tr4, r5\n\tand\t@CPI0_26[0], r5, r5\n\tor\tr5, r3, r3\n\tsstore\tr4, r3\n\tadd\t288, r2, r3\n\tld.1\tr3, r3\n\tand\t@CPI0_10[0], r3, r3\n\tadd\t26, r0, r4\n\tsload\tr4, r5\n\tand\t@CPI0_26[0], r5, r5\n\tor\tr5, r3, r3\n\tsstore\tr4, r3\n\tadd\t320, r2, r2\n\tld.1\tr2, r2\n\tand\t@CPI0_10[0], r2, r2\n\tadd\t27, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_26[0], r4, r4\n\tor\tr4, r2, r2\n\tsstore\tr3, r2\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tadd\t128, r2, r2\n\tld.1\tr2, r2\n\tadd\t32, r2, r3\n\tld.1\tr3, r3\n\tand!\t@CPI0_10[0], r3, r3\n\tjump.eq\t@.BB0_112\n\tadd\t33, r0, r4\n\tsload\tr4, r5\n\tand\t@CPI0_26[0], r5, r5\n\tor\tr5, r3, r3\n\tsstore\tr4, r3\n.BB0_112:\n\tadd\t34, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_26[0], r4, r4\n\tadd\t64, r2, r5\n\tld.1\tr5, r5\n\tand\t@CPI0_10[0], r5, r5\n\tor\tr4, r5, r4\n\tsstore\tr3, r4\n\tadd\t160, r2, r2\n\tld.1\tr2, r2\n\tand!\t@CPI0_10[0], r2, r2\n\tjump.eq\t@.BB0_114\n\tadd\t35, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_26[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n.BB0_114:\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\tstack-[17], r1, r1\n\tadd\tr1, r0, stack-[10]\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_116\n\tadd\t38, r0, stack-[12]\n\tadd\t32784, r0, stack-[11]\n\tadd\tr0, r0, stack-[14]\n.BB0_117:\n\tadd\tstack-[14], r0, r3\n\tshl.s\t5, r3, r2\n\tadd\tr1, r2, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t0, r3\n\tadd\tstack-[12], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\tstack-[11], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r4\n\tld.1.inc\tr4, r2, r3\n\tsstore\tr1, r2\n\tld.1\tr3, r2\n\tadd\t1, r1, r3\n\tsstore\tr3, r2\n\tadd\t64, r4, r2\n\tld.1\tr2, r2\n\tadd\t2, r1, r3\n\tsstore\tr3, r2\n\tadd\t96, r4, r2\n\tld.1\tr2, r2\n\tadd\t3, r1, r3\n\tsstore\tr3, r2\n\tadd\t128, r4, r2\n\tld.1\tr2, r2\n\tadd\t4, r1, r3\n\tsstore\tr3, r2\n\tadd\t160, r4, r2\n\tld.1\tr2, r2\n\tadd\t5, r1, r3\n\tsstore\tr3, r2\n\tadd\t6, r1, r1\n\tadd\t192, r4, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[14], r0, r3\n\tadd\t1, r3, stack-[14]\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tsub!\tstack-[14], r2, r2\n\tjump.lt\t@.BB0_117\n.BB0_116:\n\tadd\tstack-[9], r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_27[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nfinalize_allocation_60549:\n.func_begin1:\n\tsub.s!\t@CPI1_0[0], r1, r2\n\tjump.ge\t@.BB1_1\n\tadd\t64, r1, r1\n\tst.1\t64, r1\n\tret\n.BB1_1:\n\tadd\t@CPI1_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nfinalize_allocation_60550:\n.func_begin2:\n\tsub.s!\t@CPI2_0[0], r1, r2\n\tjump.ge\t@.BB2_1\n\tadd\t224, r1, r1\n\tst.1\t64, r1\n\tret\n.BB2_1:\n\tadd\t@CPI2_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfinalize_allocation_60552:\n.func_begin3:\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tjump.ge\t@.BB3_1\n\tadd\t352, r1, r1\n\tst.1\t64, r1\n\tret\n.BB3_1:\n\tadd\t@CPI3_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfinalize_allocation:\n.func_begin4:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r3\n\tjump.gt\t@.BB4_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB4_2\n\tst.1\t64, r1\n\tret\n.BB4_2:\n\tadd\t@CPI4_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_encode_struct_SaleTierDetails:\n.func_begin5:\n\tld.1.inc\tr1, r3, r4\n\tst.1.inc\tr2, r3, r3\n\tld.1\tr4, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tld.1\tr3, r3\n\tadd\t64, r2, r4\n\tst.1\tr4, r3\n\tadd\t96, r1, r3\n\tld.1\tr3, r3\n\tadd\t96, r2, r4\n\tst.1\tr4, r3\n\tadd\t128, r1, r3\n\tld.1\tr3, r3\n\tadd\t128, r2, r4\n\tst.1\tr4, r3\n\tadd\t160, r1, r3\n\tld.1\tr3, r3\n\tadd\t160, r2, r4\n\tst.1\tr4, r3\n\tadd\t192, r2, r2\n\tadd\t192, r1, r1\n\tld.1\tr1, r1\n\tst.1\tr2, r1\n\tret\n.func_end5:\n\nabi_encode_struct_SaleDetails:\n.func_begin6:\n\tld.1.inc\tr1, r3, r4\n\tst.1.inc\tr2, r3, r3\n\tld.1\tr4, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tld.1\tr3, r3\n\tadd\t64, r2, r4\n\tst.1\tr4, r3\n\tadd\t96, r1, r3\n\tld.1\tr3, r3\n\tadd\t96, r2, r4\n\tst.1\tr4, r3\n\tadd\t128, r1, r3\n\tld.1\tr3, r3\n\tadd\t128, r2, r4\n\tst.1\tr4, r3\n\tadd\t160, r1, r3\n\tld.1\tr3, r3\n\tadd\t160, r2, r4\n\tst.1\tr4, r3\n\tadd\t192, r1, r3\n\tld.1\tr3, r3\n\tadd\t192, r2, r4\n\tst.1\tr4, r3\n\tadd\t224, r1, r3\n\tld.1\tr3, r3\n\tadd\t224, r2, r4\n\tst.1\tr4, r3\n\tadd\t256, r1, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tadd\t256, r2, r4\n\tst.1\tr4, r3\n\tadd\t288, r1, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tadd\t288, r2, r4\n\tst.1\tr4, r3\n\tadd\t320, r1, r1\n\tld.1\tr1, r1\n\tadd\t320, r2, r3\n\tadd\t352, r0, r4\n\tst.1\tr3, r4\n\tadd\t352, r2, r4\n\tld.1\tr1, r3\n\tst.1\tr4, r3\n\tadd\t384, r2, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB6_3\n\tadd\tr0, r0, r4\n.BB6_2:\n\tadd\tr2, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB6_2\n.BB6_3:\n\tadd\tr2, r3, r1\n\tst.1\tr1, r0\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tret\n.func_end6:\n\nabi_encode_struct_SaleRefundDetails:\n.func_begin7:\n\tld.1.inc\tr1, r1, r3\n\tst.1.inc\tr2, r1, r1\n\tld.1\tr3, r2\n\tsub!\tr2, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tst.1\tr1, r2\n\tret\n.func_end7:\n\nabi_encode_struct_SaleAddresses:\n.func_begin8:\n\tld.1.inc\tr1, r3, r4\n\tand\t@CPI8_0[0], r3, r3\n\tst.1.inc\tr2, r3, r3\n\tld.1\tr4, r4\n\tand\t@CPI8_0[0], r4, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tld.1\tr3, r3\n\tand\t@CPI8_0[0], r3, r3\n\tadd\t64, r2, r4\n\tst.1\tr4, r3\n\tadd\t96, r1, r3\n\tld.1\tr3, r3\n\tand\t@CPI8_0[0], r3, r3\n\tadd\t96, r2, r4\n\tst.1\tr4, r3\n\tadd\t128, r1, r3\n\tld.1\tr3, r3\n\tand\t@CPI8_0[0], r3, r3\n\tadd\t128, r2, r4\n\tst.1\tr4, r3\n\tadd\t160, r1, r3\n\tld.1\tr3, r3\n\tand\t@CPI8_0[0], r3, r3\n\tadd\t160, r2, r4\n\tst.1\tr4, r3\n\tadd\t192, r1, r3\n\tld.1\tr3, r3\n\tand\t@CPI8_0[0], r3, r3\n\tadd\t192, r2, r4\n\tst.1\tr4, r3\n\tadd\t224, r1, r3\n\tld.1\tr3, r3\n\tand\t@CPI8_0[0], r3, r3\n\tadd\t224, r2, r4\n\tst.1\tr4, r3\n\tadd\t256, r1, r3\n\tld.1\tr3, r3\n\tand\t@CPI8_0[0], r3, r3\n\tadd\t256, r2, r4\n\tst.1\tr4, r3\n\tadd\t288, r1, r3\n\tld.1\tr3, r3\n\tand\t@CPI8_0[0], r3, r3\n\tadd\t288, r2, r4\n\tst.1\tr4, r3\n\tadd\t320, r2, r2\n\tadd\t320, r1, r1\n\tld.1\tr1, r1\n\tand\t@CPI8_0[0], r1, r1\n\tst.1\tr2, r1\n\tret\n.func_end8:\n\nabi_decode_array_bytes32_dyn_calldata:\n.func_begin9:\n\tadd\t31, r1, r3\n\tadd\t@CPI9_0[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI9_0[0], r2, r6\n\tand\t@CPI9_0[0], r3, r3\n\tsub!\tr3, r6, r7\n\tadd.le\tr0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI9_0[0], r3, r3\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.eq\t@.BB9_1\n\tptr.add\tstack[@ptr_calldata], r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI9_1[0], r3, r4\n\tjump.gt\t@.BB9_1\n\tshl.s\t5, r3, r4\n\tadd\t32, r1, r1\n\tadd\tr1, r4, r4\n\tsub!\tr4, r2, r2\n\tjump.gt\t@.BB9_1\n\tadd\tr3, r0, r2\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nfun_checkRole:\n.func_begin10:\n\tnop\tstack+=[2]\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI10_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\t@CPI10_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB10_4\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_4:\n\tld.1\t64, r1\n\tadd\t36, r1, r2\n\tadd\tstack-[2], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI10_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[1], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI10_0[0], r0, r2\n\tsub.s!\t@CPI10_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI10_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nfun_revokeRole:\n.func_begin11:\n\tnop\tstack+=[2]\n\tadd\tr2, r0, stack-[1]\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI11_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tand\t@CPI11_2[0], r2, r2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\t@CPI11_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB11_4\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI11_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\t@CPI11_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI11_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tcontext.caller\tr7\n\tadd\t@CPI11_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[1], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB11_1\n.BB11_4:\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nmodifier_notZeroAddress:\n.func_begin12:\n\tnop\tstack+=[6]\n\tadd\tr4, r0, stack-[6]\n\tadd\tr2, r0, stack-[4]\n\tld.1\t64, r2\n\tand!\t@CPI12_0[0], r1, r4\n\tjump.eq\t@.BB12_1\n\tadd\tr3, r0, stack-[3]\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1.inc\tr2, r1, r1\n\tst.1\tr1, r4\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tjump.ge\t@.BB12_3\n\tadd\t64, r2, r3\n\tst.1\t64, r3\n\tadd\t@CPI12_2[0], r0, r3\n\tsub.s!\t@CPI12_2[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI12_2[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_2[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI12_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_5\n\tld\tr1, r3\n\tld.1\t64, r1\n\tadd\tstack-[5], r0, r2\n\tst.1.inc\tr1, r2, r2\n\tst.1\tr2, r3\n\tsub.s!\t@CPI12_4[0], r1, r3\n\tjump.gt\t@.BB12_3\n\tadd\t64, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI12_2[0], r0, r4\n\tsub.s!\t@CPI12_2[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI12_2[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_2[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI12_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_5\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\t38, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI12_2[0], r1, r2\n\tadd.ge\t@CPI12_2[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_5\n\tadd\tstack[@calldatasize], r0, r2\n\tld\tr1, r1\n\tadd\t4, r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t@CPI12_6[0], r1, r1\n\tjump.gt\t@.BB12_3\n\tadd\tstack-[6], r0, r1\n\tshl.s\t5, r1, r1\n\tadd\t63, r1, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tld.1\t64, r4\n\tadd\tr4, r3, r3\n\tadd\tr4, r0, stack-[5]\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI12_6[0], r3, r5\n\tjump.gt\t@.BB12_3\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB12_3\n\tst.1\t64, r3\n\tadd\tstack-[6], r0, r3\n\tadd\tstack-[5], r0, r4\n\tst.1.inc\tr4, r3, r3\n\tadd\tr3, r0, stack-[4]\n\tadd\tstack-[3], r1, r1\n\tsub!\tr1, r2, r2\n\tjump.gt\t@.BB12_5\n\tadd\tstack-[3], r0, r5\n\tsub!\tr1, r5, r2\n\tjump.le\t@.BB12_17\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tadd\tstack-[5], r0, r3\n.BB12_15:\n\tptr.add\tr2, r5, r4\n\tld\tr4, r4\n\tadd\t32, r3, r3\n\tst.1\tr3, r4\n\tadd\t32, r5, r5\n\tsub!\tr5, r1, r4\n\tjump.lt\t@.BB12_15\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n.BB12_17:\n\tsub!\tstack-[6], r0, r1\n\tadd\tstack-[2], r0, r3\n\tjump.eq\t@.BB12_24\n\tadd\t32784, r0, stack-[3]\n\tadd\tr0, r0, r2\n.BB12_19:\n\tadd\tr2, r0, stack-[6]\n\tshl.s\t5, r2, r1\n\tadd\tstack-[4], r1, r1\n\tld.1\tr1, r1\n\tsub!\tr3, r1, r2\n\tjump.ge\t@.BB12_21\n\tst.1\t0, r3\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tjump\t@.BB12_22\n.BB12_21:\n\tst.1\t0, r1\n\tst.1\t32, r3\n\tcontext.gas_left\tr1\n.BB12_22:\n\tsub.s!\t@CPI12_2[0], r1, r2\n\tadd.ge\t@CPI12_2[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_5[0], r1, r1\n\tadd\tstack-[3], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_5\n\tld\tr1, r3\n\tadd\tstack-[6], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB12_19\n.BB12_24:\n\tsub.s!\tstack-[1], r3, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tret\n.BB12_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_3:\n\tadd\t@CPI12_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI12_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_1:\n\tadd\t@CPI12_9[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t@CPI12_2[0], r0, r1\n\tsub.s!\t@CPI12_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI12_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nmodifier_notZeroAddress_60592:\n.func_begin13:\n\tnop\tstack+=[5]\n\tld.1\t64, r5\n\tand!\t@CPI13_0[0], r1, r4\n\tjump.eq\t@.BB13_1\n\tadd\tr2, r0, stack-[5]\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1.inc\tr5, r1, r1\n\tst.1\tr1, r4\n\tsub.s!\t@CPI13_1[0], r5, r2\n\tjump.ge\t@.BB13_3\n\tadd\t64, r5, r2\n\tst.1\t64, r2\n\tadd\t@CPI13_2[0], r0, r6\n\tsub.s!\t@CPI13_2[0], r1, r4\n\tadd.ge\tr6, r0, r1\n\tshl.s\t64, r1, r1\n\tld.1\tr5, r2\n\tsub.s!\t@CPI13_2[0], r2, r4\n\tadd.ge\tr6, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_2[0], r2, r4\n\tadd.ge\tr6, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr3, r0, stack-[2]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r3\n\tld.1\t64, r1\n\tadd\tstack-[4], r0, r2\n\tst.1.inc\tr1, r2, r2\n\tst.1\tr2, r3\n\tsub.s!\t@CPI13_4[0], r1, r3\n\tjump.gt\t@.BB13_3\n\tadd\t64, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI13_2[0], r0, r3\n\tsub.s!\t@CPI13_2[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI13_2[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_2[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r7\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t16, r0, r3\n\tsload\tr3, r3\n\tadd\tr3, r0, stack-[1]\n\tld\tr1, r1\n\tsub.s!\t@CPI13_5[0], r7, r3\n\tjump.gt\t@.BB13_3\n\tshl.s\t5, r7, r3\n\tadd\t63, r3, r4\n\tsub.s\t32, r0, r5\n\tand\tr4, r5, r4\n\tld.1\t64, r5\n\tadd\tr5, r4, r4\n\tadd\tr5, r0, stack-[4]\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI13_5[0], r4, r6\n\tjump.gt\t@.BB13_3\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB13_3\n\tst.1\t64, r4\n\tadd\tstack-[4], r0, r4\n\tst.1.inc\tr4, r7, r4\n\tadd\tr4, r0, stack-[3]\n\tadd\tstack-[5], r3, r3\n\tsub!\tr3, r2, r2\n\tjump.gt\t@.BB13_5\n\tadd\tstack-[5], r0, r6\n\tsub!\tr3, r6, r2\n\tjump.le\t@.BB13_16\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tadd\tstack-[4], r0, r4\n.BB13_14:\n\tptr.add\tr2, r6, r5\n\tld\tr5, r5\n\tadd\t32, r4, r4\n\tst.1\tr4, r5\n\tadd\t32, r6, r6\n\tsub!\tr6, r3, r5\n\tjump.lt\t@.BB13_14\n\tadd\tstack-[4], r0, r2\n\tld.1\tr2, r7\n.BB13_16:\n\tsub!\tr7, r0, r2\n\tjump.eq\t@.BB13_23\n\tadd\t32784, r0, stack-[2]\n\tadd\tr0, r0, r3\n.BB13_18:\n\tadd\tr3, r0, stack-[5]\n\tshl.s\t5, r3, r2\n\tadd\tstack-[3], r2, r2\n\tld.1\tr2, r2\n\tsub!\tr1, r2, r3\n\tjump.ge\t@.BB13_20\n\tst.1\t0, r1\n\tst.1\t32, r2\n\tcontext.gas_left\tr1\n\tjump\t@.BB13_21\n.BB13_20:\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n.BB13_21:\n\tsub.s!\t@CPI13_2[0], r1, r2\n\tadd.ge\t@CPI13_2[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_6[0], r1, r1\n\tadd\tstack-[2], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r3\n\tadd\t1, r3, r3\n\tadd\tstack-[4], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr3, r2, r2\n\tjump.lt\t@.BB13_18\n.BB13_23:\n\tsub.s!\tstack-[1], r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tret\n.BB13_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_3:\n\tadd\t@CPI13_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_1:\n\tadd\t@CPI13_9[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t@CPI13_2[0], r0, r1\n\tsub.s!\t@CPI13_2[0], r5, r3\n\tadd.ge\tr1, r0, r5\n\tshl.s\t64, r5, r1\n\tor\t@CPI13_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nallocate_and_zero_memory_struct_struct_SaleTierDetails:\n.func_begin14:\n\tld.1\t64, r1\n\tsub.s!\t@CPI14_0[0], r1, r2\n\tjump.ge\t@.BB14_1\n\tadd\t224, r1, r2\n\tst.1\t64, r2\n\tadd\t192, r1, r2\n\tst.1\tr2, r0\n\tadd\t160, r1, r2\n\tst.1\tr2, r0\n\tadd\t128, r1, r2\n\tst.1\tr2, r0\n\tadd\t96, r1, r2\n\tst.1\tr2, r0\n\tadd\t64, r1, r2\n\tst.1\tr2, r0\n\tadd\t32, r1, r2\n\tst.1\tr2, r0\n\tst.1\tr1, r0\n\tret\n.BB14_1:\n\tadd\t@CPI14_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI14_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\nfun_notZeroAddress.3:\n.func_begin15:\n\tand!\t@CPI15_0[0], r1, r1\n\tjump.eq\t@.BB15_1\n\tret\n.BB15_1:\n\tld.1\t64, r1\n\tadd\t@CPI15_1[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI15_2[0], r0, r2\n\tsub.s!\t@CPI15_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI15_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\n__cxa_throw:\n\trevert\n\n__sha3:\n.func_begin16:\n\tadd\t@CPI17_0[0], r0, r3\n\tsub.s!\t@CPI17_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI17_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_2\n\tld\tr1, r1\n\tret\n.BB17_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end16:\n\n__farcall:\n.func_begin17:\n.tmp0:\n\tfar_call\tr1, r2, @.BB18_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB18_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end17:\n\n__staticcall:\n.func_begin18:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB19_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB19_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end18:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI10_0:\nCPI11_0:\nCPI12_2:\nCPI13_2:\nCPI15_2:\nCPI17_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -18446744073709551457\nCPI0_2:\n\t.cell -18446744073709551489\nCPI0_3:\n\t.cell 8589934560\nCPI0_4:\nCPI4_0:\nCPI9_1:\nCPI12_6:\nCPI13_5:\n\t.cell 18446744073709551615\nCPI0_5:\nCPI9_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_6:\nCPI12_4:\nCPI13_4:\n\t.cell 18446744073709551551\nCPI0_7:\n\t.cell 18446744073709551391\nCPI0_8:\n\t.cell 18446744073709551039\nCPI0_9:\n\t.cell 18446744073709551263\nCPI0_10:\nCPI8_0:\nCPI11_2:\nCPI12_0:\nCPI13_0:\nCPI15_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_11:\n\t.cell 44526186701075355232631374653616046072493505541712997730802846168811969624347\nCPI0_12:\n\t.cell 8413219402807569600188236340312512697289764467612919156476723688445633815682\nCPI0_13:\nCPI11_3:\nCPI12_3:\nCPI13_3:\nCPI17_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_14:\n\t.cell -30089899419605041018653467143256047862277360661533364420289869028242106941185\nCPI0_15:\n\t.cell -14680205516121397737035688839673284388258461471861438888035447495382811677630\nCPI0_16:\nCPI10_1:\nCPI11_1:\nCPI12_5:\nCPI13_6:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_17:\n\t.cell 8413219402807569600188236340312512697289764467612919156476723688445633815681\nCPI0_18:\n\t.cell 21498167346302451094516930465084812798900530214793017313261708129848854408973\nCPI0_19:\n\t.cell 41951636634120538608643499135161621920062445191352822996721339533853370279351\nCPI0_20:\n\t.cell 54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI0_21:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_22:\n\t.cell 13751696677885317755532561767161551963039782116096155289122330088411982987264\nCPI0_23:\nCPI12_10:\nCPI13_10:\nCPI15_3:\n\t.cell 316912650057057350374175801344\nCPI0_24:\n\t.cell -65536\nCPI0_25:\n\t.cell -26074275084009875412389268311263347690013120251023914000470397511746302913880\nCPI0_26:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_27:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_28:\n\t.cell -8456794021595865987342524897803171136214568266039550662789071899099695939584\nCPI0_29:\n\t.cell -13889643337955740780086569144599697569817978807528723622391277439668012974080\nCPI0_30:\n\t.cell 57717977460035061128319771819070029882430561177641021088440945352900943544320\nCPI0_31:\n\t.cell 3190575643202449146717782151149760628621246718525607881412236225844554498048\nCPI0_32:\n\t.cell 13112214345645464716083482265395700862996959016068220066311992124518669746176\nCPI0_33:\nCPI12_9:\nCPI13_9:\nCPI15_1:\n\t.cell 28485175212064900027977973286507733033835135331909752320915715833089423835136\nCPI0_34:\n\t.cell 1956189544\nCPI0_35:\n\t.cell 2993617851\nCPI0_36:\n\t.cell 3480409050\nCPI0_37:\n\t.cell 3874610111\nCPI0_38:\n\t.cell 4150008727\nCPI0_39:\n\t.cell 4150008728\nCPI0_40:\n\t.cell 4272613445\nCPI0_41:\n\t.cell 3874610112\nCPI0_42:\n\t.cell 4068215109\nCPI0_43:\n\t.cell 3480409051\nCPI0_44:\n\t.cell 3578229791\nCPI0_45:\n\t.cell 3656995998\nCPI0_46:\n\t.cell 3229080221\nCPI0_47:\n\t.cell 3229080222\nCPI0_48:\n\t.cell 3278637169\nCPI0_49:\n\t.cell 3405822709\nCPI0_50:\n\t.cell 2993617852\nCPI0_51:\n\t.cell 3204657482\nCPI0_52:\n\t.cell 3224609936\nCPI0_53:\n\t.cell 2634835448\nCPI0_54:\n\t.cell 2811761822\nCPI0_55:\n\t.cell 2811761823\nCPI0_56:\n\t.cell 2906792647\nCPI0_57:\n\t.cell 2917552658\nCPI0_58:\n\t.cell 2634835449\nCPI0_59:\n\t.cell 2635485920\nCPI0_60:\n\t.cell 2719481311\nCPI0_61:\n\t.cell 2446411859\nCPI0_62:\n\t.cell 2446411860\nCPI0_63:\n\t.cell 2514171358\nCPI0_64:\n\t.cell 2590523469\nCPI0_65:\n\t.cell 1956189545\nCPI0_66:\n\t.cell 2243981226\nCPI0_67:\n\t.cell 2375204557\nCPI0_68:\n\t.cell 911641277\nCPI0_69:\n\t.cell 1494096610\nCPI0_70:\n\t.cell 1673021290\nCPI0_71:\n\t.cell 1792146945\nCPI0_72:\n\t.cell 1792146946\nCPI0_73:\n\t.cell 1792341507\nCPI0_74:\n\t.cell 1673021291\nCPI0_75:\n\t.cell 1729646120\nCPI0_76:\n\t.cell 1494096611\nCPI0_77:\n\t.cell 1584357445\nCPI0_78:\n\t.cell 1585964454\nCPI0_79:\n\t.cell 1103246023\nCPI0_80:\n\t.cell 1103246024\nCPI0_81:\n\t.cell 1296441041\nCPI0_82:\n\t.cell 1297074590\nCPI0_83:\n\t.cell 911641278\nCPI0_84:\n\t.cell 930962711\nCPI0_85:\n\t.cell 979090663\nCPI0_86:\n\t.cell 613063842\nCPI0_87:\n\t.cell 785043774\nCPI0_88:\n\t.cell 785043775\nCPI0_89:\n\t.cell 791671133\nCPI0_90:\n\t.cell 873572555\nCPI0_91:\n\t.cell 613063843\nCPI0_92:\n\t.cell 705350762\nCPI0_93:\n\t.cell 770580456\nCPI0_94:\n\t.cell 113828629\nCPI0_95:\n\t.cell 113828630\nCPI0_96:\n\t.cell 196976862\nCPI0_97:\n\t.cell 293077987\nCPI0_98:\n\t.cell 2556834\nCPI0_99:\n\t.cell 33540519\nCPI0_100:\n\t.cell 88905081\nCPI0_101:\n\t.cell 34780357887655081717316373760447475182708176303772158565619351704285514563584\nCPI0_102:\n\t.cell -20010471590058259202017291911914194408885547216281730265665156881286732709888\nCPI0_103:\n\t.cell 50942633119752846454219349998365661925608737367104304655302372697894809501696\nCPI0_104:\nCPI1_2:\nCPI2_2:\nCPI3_2:\nCPI4_2:\nCPI12_8:\nCPI13_8:\nCPI14_2:\n\t.cell 2852213850513516153367582212096\nCPI0_105:\n\t.cell 4163733147357625509713516898543127591622474663928001007649449242709339406336\nCPI0_106:\n\t.cell -30931615402054950781691737516726849760064634283188006985260466100775258423296\nCPI0_107:\n\t.cell 18446744073709551519\nCPI0_108:\n\t.cell 16156842317565293874272834530371880720966471053262404558597773956279093428224\nCPI0_109:\n\t.cell 7922816251426433759354395033600\nCPI0_110:\n\t.cell -3508710104340800156913118926601560156733032189280569764859821357034798841856\nCPI0_111:\n\t.cell 904625697166532776746648320380374280103671767876822908840556390028853379072\nCPI0_112:\n\t.cell -25208625094861163074193063949528569457685715712736431170597186888451259730746\nCPI0_113:\n\t.cell -31344425674063214703817442137067052952625275460391637470441964883253489827840\nCPI0_114:\n\t.cell 17747108405556394862388667482112\nCPI0_115:\n\t.cell -39341301877480157781710804024396230103289065588583741745104145964028735258624\nCPI0_116:\nCPI10_3:\n\t.cell 5387515050969974956360988622848\nCPI0_117:\n\t.cell 2535301200456458802993406410752\nCPI0_118:\n\t.cell 7605903603730559650415041839104\nCPI0_119:\n\t.cell -15656161302665159201809893145089448837013829615782376627744606809190320570368\nCPI0_120:\n\t.cell 5387515053331158197795811229696\nCPI0_121:\n\t.cell 46684357771790699681650667107281205066648344018449976797659717826852644377520\nCPI0_122:\n\t.cell 904625697166532776746648320380374280103671775482726510209932799009072611328\nCPI0_123:\n\t.cell 41638422153951676560986236689359965207259982644060592423255892922067521569876\nCPI0_124:\n\t.cell 25465983248866914152518254688923763934895802425912479872710970748905268969472\nCPI0_125:\n\t.cell 35314573760135711726155186168455303783804249491545062996148596566780251471872\nCPI0_126:\n\t.cell -49933208583102032374709673083603949502052349935918965922692701963554184495104\nCPI0_127:\n\t.cell 52311555011316887405769734636471207440343477953317721806580174560896384761856\nCPI0_128:\n\t.cell 12676506004643477256401854660608\nCPI0_129:\n\t.cell 2535301202817642044428229017600\nCPI0_130:\n\t.cell -51505141024359387174148918781891233518200646774561854074891159215684369437494\nCPI0_131:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_132:\n\t.cell -25370445129617787650736151035372818897014161950003620716305379390506706313294\nCPI0_133:\n\t.cell 17747108403195211620953844875264\nCPI0_134:\n\t.cell -26108851453933690784140184581713212365540996754886236922472497403251806263515\nCPI0_135:\n\t.cell -65281\nCPI0_136:\n\t.cell -8075675555794914555434061813700232233964586305873321298874307431183265303063\nCPI0_137:\n\t.cell 9447290468755378124011040866371526420867663603989874913391846152571915548649\nCPI0_138:\n\t.cell 54071973072413289658034396867461399819942372968548619627085074389770925244416\nCPI0_139:\n\t.cell 316912652418240591808998408192\nCPI0_140:\n\t.cell 44168047890688938740683626616805099180527791157643093697063150477242462633984\nCPI0_141:\n\t.cell 48571955394447569088347601888605876547223464088162251592176005060280778227712\nCPI0_142:\n\t.cell 21921832625593625430411117152771663160830997712118981048251492661132850991573\nCPI0_143:\n\t.cell -5615771745698091869231666104151502017135118357281778067669319103000940118016\nCPI0_144:\n\t.cell -39728591729173563572453677874919985078355888476691273211672169663527007551488\nCPI0_145:\n\t.cell -8725907292589176990651138023723288130931371338002440290915983779084621578240\nCPI0_146:\n\t.cell -31527145742041748147602765223806785366809146955778206988972035281987582296064\nCPI0_147:\n\t.cell 10007835987525362945189602308227687443252538552990413692156377199989267365888\nCPI0_148:\n\t.cell 50404338423021049890784722828311287950548788268477425216481316707998248206336\nCPI0_149:\n\t.cell 55431984216324797314421127753074413780386124353061787513427566849720150130688\nCPI0_150:\n\t.cell 50303422651615184961821959918779948331521627224040726331624934182807249354752\nCPI0_151:\n\t.cell 36392239125070790835058645669136174687384332547232725468038429391658420273152\nCPI0_152:\n\t.cell 46631167148244035576363399337244966558489473138326941734519632785548687441920\nCPI0_153:\n\t.cell 11296306297840759665269124186606831372799618431975361182984730563092003422208\nCPI0_154:\n\t.cell 54467066103230248861356879960163881408832850697189233546789738793805289619456\nCPI0_155:\n\t.cell 53563261579079250825947737402396042659659867255770882803528678353608049164288\nCPI0_156:\n\t.cell -52231721109406334262607207492727464561914180946705116973186840625811965345792\nCPI0_157:\n\t.cell 20393490264853614529861971076641442696659883021177646288107769865408599558567\nCPI0_158:\n\t.cell -13458040419443566167286873524056966647539233469708205850837245536836683563008\nCPI0_159:\n\t.cell -11038700907042268579707504470743623794455488048746377420761950240245565882368\nCPI0_160:\n\t.cell -51761889633558860054194029116799701891811354305384902810828343350133893627904\nCPI0_161:\n\t.cell 21283588911705326978650385586543672921274388256083795886520406247046406733824\nCPI0_162:\n\t.cell 47333617482398992323075220450119256839188841910151040211444278595887002812416\nCPI0_163:\n\t.cell 22343118195933390995302181200432635060478622715023003297407240432256771043272\nCPI0_164:\nCPI1_1:\nCPI2_1:\nCPI3_1:\nCPI4_1:\nCPI12_7:\nCPI13_7:\nCPI14_1:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_165:\n\t.cell 49935566925146349987977278484839960970971815290738666246036748426385395604897\nCPI0_166:\n\t.cell -44445578643759622755006269926206913936333057746097048581417554279801111731593\nCPI0_167:\n\t.cell 904625697166532776746648320380374280103671783088630111579309207989291843584\nCPI0_168:\n\t.cell -2071582303305118577641016595105097778867420876750619465447895022587553272237\nCPI0_169:\n\t.cell 46403934321121769725732295381905508642689279562898648152983186649040421912576\nCPI0_170:\n\t.cell -2621007207054514952015334389489824617134041016384178264455958950392228096499\nCPI0_171:\nCPI10_2:\n\t.cell -13425406428480953669539741299640702691354761304596208544390623898567197065216\nCPI0_172:\n\t.cell -8920140472460891093152971243141037585433995300447537250833251960770017638005\nCPI0_173:\n\t.cell -52766874028753274426233363142178672704313577740706715646393811206488134254592\nCPI0_174:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_175:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI0_176:\n\t.cell 54909818011127210282586622383458683342160741266077104324147033802515469565952\nCPI1_0:\nCPI12_1:\nCPI13_1:\n\t.cell 18446744073709551552\nCPI2_0:\nCPI14_0:\n\t.cell 18446744073709551392\nCPI3_0:\n\t.cell 18446744073709551264\nCPI11_4:\n\t.cell -4422201763333249725673726406278620787883548942654356884866643620688883542245\n","bytecode":{"object":""},"methodIdentifiers":{"ADMIN()":"2a0acc6a","DEFAULT_ADMIN_ROLE()":"a217fddf","OWNER()":"117803e3","checkTicketEligibility(address,bytes32[])":"d9f9549e","checkWhitelistEligibility(address,uint256,bytes32[])":"9d0c65f9","completeSale()":"4d461ed1","emergencyOnly()":"9a68404d","getAllTierDetails()":"0bbda0de","getFactoryContractAddress()":"63b8476b","getIsSaleActive()":"c077da9e","getRefundEnabled()":"85c06faa","getRoleAdmin(bytes32)":"248a9ca3","getSaleEndDate()":"2ecad13f","getSaleTokenAddress()":"2dee1fe8","getSaleTokenPrice()":"06c8e316","getStakeControllerContractAddress()":"ade65212","getTierCount()":"67184e28","getTierDetailsByIndex(uint256)":"9d1652e0","getUserInvestmentAmount(address)":"5e87e5a6","getUserRefunded(address)":"cf72d3db","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","investmentAmounts(address)":"ad4222c7","investmentToken()":"002703a2","joinFcfsSale(uint256,bytes32[])":"cb00baf5","joinSale(uint256,bytes32[],bytes32[])":"6ad4f603","refund()":"590e1ae3","refunded(address)":"c033a490","registerDetails(address)":"e6f1dbc0","registerSale()":"feaae845","registerToken()":"bf03314a","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","sale()":"6ad1fe02","saleStatistics()":"c36c0871","setRefundDetails((uint256,bool))":"3a5bbce7","setSaleAddresses((address,address,address,address,address,address,address,address,address,address,address))":"377d5d17","setSaleDetails((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,bool,string))":"3411a8cb","setSaleFcfsDetails((uint256,uint256))":"054c9579","setSalePaused(bool)":"8d92becd","setStakeControllerContract(address)":"a798149f","setTicketDetails((uint256,bytes32))":"b26efbbc","setTierDetails(uint256,(uint256,uint256,uint256,uint256,bytes32,uint256,uint256))":"41c232c8","setTierDetailsBatch((uint256,uint256,uint256,uint256,bytes32,uint256,uint256)[])":"95db35de","setVestingContract(address)":"74991569","stakeControllerContract()":"4d4fc99e","supportsInterface(bytes4)":"01ffc9a7","tierDetails(uint256)":"f75c1b98","vestingContract()":"5e6f6045","withdrawRegisterToken()":"f27c0945"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 1:\"@openzeppelin/contracts/access/IAccessControl.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 6:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 7:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\", 8:\"contracts/core/DappadSale.sol\"\nobject \"DappadSale_3854\" {\n    code {\n        {\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"DappadSale_3854\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            if slt(sub(add(memoryDataOffset, argSize), memoryDataOffset), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            let offset := mload(memoryDataOffset)\n            if gt(offset, sub(shl(64, 1), 1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            if slt(sub(add(memoryDataOffset, argSize), add(memoryDataOffset, offset)), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            let value := allocate_memory_19929()\n            let offset_1 := mload(add(memoryDataOffset, offset))\n            if gt(offset_1, sub(shl(64, 1), 1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            if slt(sub(add(memoryDataOffset, argSize), add(add(memoryDataOffset, offset), offset_1)), 0x0240)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            let memPtr := mload(64)\n            let newFreePtr := add(memPtr, 0xa0)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            let offset_2 := mload(add(add(memoryDataOffset, offset), offset_1))\n            if gt(offset_2, sub(shl(64, 1), 1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            let _1 := add(add(add(memoryDataOffset, offset), offset_1), offset_2)\n            if slt(sub(add(memoryDataOffset, argSize), _1), 0x0160)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            let value_1 := allocate_memory_19931()\n            mstore(value_1, mload(_1))\n            mstore(add(value_1, 32), mload(add(_1, 32)))\n            mstore(add(value_1, 64), mload(add(_1, 64)))\n            mstore(add(value_1, 96), mload(add(_1, 96)))\n            mstore(add(value_1, 128), mload(add(_1, 128)))\n            mstore(add(value_1, 0xa0), mload(add(_1, 0xa0)))\n            mstore(add(value_1, 192), mload(add(_1, 192)))\n            mstore(add(value_1, 224), mload(add(_1, 224)))\n            mstore(add(value_1, 256), abi_decode_bool_fromMemory(add(_1, 256)))\n            mstore(add(value_1, 288), abi_decode_bool_fromMemory(add(_1, 288)))\n            let offset_3 := mload(add(_1, 320))\n            if gt(offset_3, sub(shl(64, 1), 1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            if iszero(slt(add(add(_1, offset_3), 0x1f), add(memoryDataOffset, argSize)))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            let _2 := mload(add(_1, offset_3))\n            if gt(_2, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x24)\n            }\n            let array := allocate_memory(add(and(add(_2, 0x1f), not(31)), 32))\n            mstore(array, _2)\n            if gt(add(add(add(_1, offset_3), _2), 32), add(memoryDataOffset, argSize))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            for { } lt(i, _2) { i := add(i, 32) }\n            {\n                mstore(add(add(array, i), 32), mload(add(add(add(_1, offset_3), i), 32)))\n            }\n            mstore(add(add(array, _2), 32), /** @src -1:-1:-1 */ 0)\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            mstore(add(value_1, 320), array)\n            mstore(memPtr, value_1)\n            if slt(add(sub(add(memoryDataOffset, argSize), add(add(memoryDataOffset, offset), offset_1)), not(31)), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            let value_2 := allocate_memory_19929()\n            mstore(value_2, mload(add(add(add(memoryDataOffset, offset), offset_1), 32)))\n            mstore(add(value_2, 32), mload(add(add(add(memoryDataOffset, offset), offset_1), 64)))\n            mstore(add(memPtr, 32), value_2)\n            if slt(add(sub(add(memoryDataOffset, argSize), add(add(memoryDataOffset, offset), offset_1)), not(95)), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            let value_3 := allocate_memory_19929()\n            mstore(value_3, mload(add(add(add(memoryDataOffset, offset), offset_1), 96)))\n            mstore(add(value_3, 32), abi_decode_bool_fromMemory(add(add(add(memoryDataOffset, offset), offset_1), 128)))\n            mstore(add(memPtr, 64), value_3)\n            if slt(add(sub(add(memoryDataOffset, argSize), add(add(memoryDataOffset, offset), offset_1)), not(159)), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            let value_4 := allocate_memory_19929()\n            mstore(value_4, mload(add(add(add(memoryDataOffset, offset), offset_1), 0xa0)))\n            mstore(add(value_4, 32), mload(add(add(add(memoryDataOffset, offset), offset_1), 192)))\n            mstore(add(memPtr, 96), value_4)\n            if slt(add(sub(add(memoryDataOffset, argSize), add(add(memoryDataOffset, offset), offset_1)), not(223)), 0x0160)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            let value_5 := allocate_memory_19931()\n            mstore(value_5, abi_decode_address_fromMemory(add(add(add(memoryDataOffset, offset), offset_1), 224)))\n            mstore(add(value_5, 32), abi_decode_address_fromMemory(add(add(add(memoryDataOffset, offset), offset_1), 256)))\n            mstore(add(value_5, 64), abi_decode_address_fromMemory(add(add(add(memoryDataOffset, offset), offset_1), 288)))\n            mstore(add(value_5, 96), abi_decode_address_fromMemory(add(add(add(memoryDataOffset, offset), offset_1), 320)))\n            mstore(add(value_5, 128), abi_decode_address_fromMemory(add(add(add(memoryDataOffset, offset), offset_1), 0x0160)))\n            mstore(add(value_5, 0xa0), abi_decode_address_fromMemory(add(add(add(memoryDataOffset, offset), offset_1), 384)))\n            mstore(add(value_5, 192), abi_decode_address_fromMemory(add(add(add(memoryDataOffset, offset), offset_1), 416)))\n            mstore(add(value_5, 224), abi_decode_address_fromMemory(add(add(add(memoryDataOffset, offset), offset_1), 448)))\n            mstore(add(value_5, 256), abi_decode_address_fromMemory(add(add(add(memoryDataOffset, offset), offset_1), 480)))\n            mstore(add(value_5, 288), abi_decode_address_fromMemory(add(add(add(memoryDataOffset, offset), offset_1), 512)))\n            mstore(add(value_5, 320), abi_decode_address_fromMemory(add(add(add(memoryDataOffset, offset), offset_1), 544)))\n            mstore(add(memPtr, 128), value_5)\n            mstore(value, memPtr)\n            let offset_4 := mload(add(add(memoryDataOffset, offset), 32))\n            if gt(offset_4, sub(shl(64, 1), 1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            if iszero(slt(add(add(add(memoryDataOffset, offset), offset_4), 0x1f), add(memoryDataOffset, argSize)))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            let _3 := mload(add(add(memoryDataOffset, offset), offset_4))\n            if gt(_3, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x24)\n            }\n            let dst := allocate_memory(add(shl(5, _3), 32))\n            let dst_1 := dst\n            mstore(dst, _3)\n            dst := add(dst, 32)\n            if gt(add(add(add(add(memoryDataOffset, offset), offset_4), mul(_3, 224)), 32), add(memoryDataOffset, argSize))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            let src := add(add(add(memoryDataOffset, offset), offset_4), 32)\n            for { }\n            lt(src, add(add(add(add(memoryDataOffset, offset), offset_4), mul(_3, 224)), 32))\n            { src := add(src, 224) }\n            {\n                if slt(sub(add(memoryDataOffset, argSize), src), 224)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                let memPtr_1 := mload(64)\n                let newFreePtr_1 := add(memPtr_1, 224)\n                if or(gt(newFreePtr_1, sub(shl(64, 1), 1)), lt(newFreePtr_1, memPtr_1))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr_1)\n                mstore(memPtr_1, mload(src))\n                mstore(add(memPtr_1, 32), mload(add(src, 32)))\n                mstore(add(memPtr_1, 64), mload(add(src, 64)))\n                mstore(add(memPtr_1, 96), mload(add(src, 96)))\n                mstore(add(memPtr_1, 128), mload(add(src, 128)))\n                mstore(add(memPtr_1, 0xa0), mload(add(src, 0xa0)))\n                mstore(add(memPtr_1, 192), mload(add(src, 192)))\n                mstore(dst, memPtr_1)\n                dst := add(dst, 32)\n            }\n            mstore(add(value, 32), dst_1)\n            /// @src 8:4542:4550  \"_address\"\n            fun_notZeroAddress(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(mload(/** @src 8:2654:2706  \"saleParams.sale.saleAddresses.investmentTokenAddress\" */ add(/** @src 8:2654:2683  \"saleParams.sale.saleAddresses\" */ mload(add(/** @src 8:2654:2669  \"saleParams.sale\" */ mload(value), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128)), 64)), sub(shl(160, 1), 1)))\n            /// @src 8:4542:4550  \"_address\"\n            fun_notZeroAddress(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(mload(/** @src 8:2732:2784  \"saleParams.sale.saleAddresses.factoryContractAddress\" */ add(/** @src 8:2732:2761  \"saleParams.sale.saleAddresses\" */ mload(add(/** @src 8:2732:2747  \"saleParams.sale\" */ mload(value), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128)), 96)), sub(shl(160, 1), 1)))\n            /// @src 8:4542:4550  \"_address\"\n            fun_notZeroAddress(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(mload(/** @src 8:2810:2852  \"saleParams.sale.saleAddresses.ownerAddress\" */ add(/** @src 8:2810:2839  \"saleParams.sale.saleAddresses\" */ mload(add(/** @src 8:2810:2825  \"saleParams.sale\" */ mload(value), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128)), 224)), sub(shl(160, 1), 1)))\n            /// @src 8:4542:4550  \"_address\"\n            fun_notZeroAddress(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(mload(/** @src 8:2878:2920  \"saleParams.sale.saleAddresses.adminAddress\" */ add(/** @src 8:2878:2907  \"saleParams.sale.saleAddresses\" */ mload(add(/** @src 8:2878:2893  \"saleParams.sale\" */ mload(value), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128)), 256)), sub(shl(160, 1), 1)))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 8:332:350  \"keccak256(\\\"OWNER\\\")\" */ 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b)\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            mstore(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32, /** @src -1:-1:-1 */ 0)\n            /// @src 0:3901:3923  \"_roles[role].adminRole\"\n            let _4 := add(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64), /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            let _5 := sload(_4)\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(_4, /** @src 8:332:350  \"keccak256(\\\"OWNER\\\")\" */ 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b)\n            /// @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\"\n            let _6 := 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff\n            log4(/** @src -1:-1:-1 */ 0, 0, /** @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\" */ _6, /** @src 8:332:350  \"keccak256(\\\"OWNER\\\")\" */ 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b, /** @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\" */ _5, /** @src 8:332:350  \"keccak256(\\\"OWNER\\\")\" */ 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b)\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            let _7 := 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ _7)\n            /// @src 0:3901:3923  \"_roles[role].adminRole\"\n            let _8 := add(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64), /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            let _9 := sload(_8)\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(_8, /** @src 8:332:350  \"keccak256(\\\"OWNER\\\")\" */ 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b)\n            /// @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\"\n            log4(/** @src -1:-1:-1 */ 0, 0, /** @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\" */ _6, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ _7, /** @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\" */ _9, /** @src 8:332:350  \"keccak256(\\\"OWNER\\\")\" */ 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b)\n            /// @src 8:3012:3073  \"_grantRole(OWNER, saleParams.sale.saleAddresses.ownerAddress)\"\n            pop(fun_grantRole_19939(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(mload(/** @src 8:3030:3072  \"saleParams.sale.saleAddresses.ownerAddress\" */ add(/** @src 8:3030:3059  \"saleParams.sale.saleAddresses\" */ mload(add(/** @src 8:3030:3045  \"saleParams.sale\" */ mload(value), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128)), 224)), sub(shl(160, 1), 1))))\n            /// @src 8:3083:3144  \"_grantRole(ADMIN, saleParams.sale.saleAddresses.adminAddress)\"\n            pop(fun_grantRole(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(mload(/** @src 8:3101:3143  \"saleParams.sale.saleAddresses.adminAddress\" */ add(/** @src 8:3101:3130  \"saleParams.sale.saleAddresses\" */ mload(add(/** @src 8:3101:3116  \"saleParams.sale\" */ mload(value), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128)), 256)), sub(shl(160, 1), 1))))\n            /// @src 8:3163:3257  \"if(bytes(saleParams.sale.saleDetails.saleName).length == 0) revert Errors.EmptySaleNameError()\"\n            if /** @src 8:3166:3221  \"bytes(saleParams.sale.saleDetails.saleName).length == 0\" */ iszero(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(/** @src 8:3172:3208  \"saleParams.sale.saleDetails.saleName\" */ mload(add(/** @src 8:3172:3199  \"saleParams.sale.saleDetails\" */ mload(/** @src 8:3172:3187  \"saleParams.sale\" */ mload(value)), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 320))))\n            /// @src 8:3163:3257  \"if(bytes(saleParams.sale.saleDetails.saleName).length == 0) revert Errors.EmptySaleNameError()\"\n            {\n                /// @src 8:3230:3257  \"Errors.EmptySaleNameError()\"\n                let _10 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                /// @src 8:3230:3257  \"Errors.EmptySaleNameError()\"\n                mstore(_10, shl(224, 0x1cfd4015))\n                revert(_10, 4)\n            }\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            let _11 := mload(/** @src 8:3271:3308  \"saleParams.sale.saleDetails.saleStart\" */ add(/** @src 8:3271:3298  \"saleParams.sale.saleDetails\" */ mload(/** @src 8:3271:3286  \"saleParams.sale\" */ mload(value)), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 96))\n            /// @src 8:3267:3369  \"if (saleParams.sale.saleDetails.saleStart < block.timestamp) revert Errors.InvalidSaleStartDateError()\"\n            if /** @src 8:3271:3326  \"saleParams.sale.saleDetails.saleStart < block.timestamp\" */ lt(_11, /** @src 8:3311:3326  \"block.timestamp\" */ timestamp())\n            /// @src 8:3267:3369  \"if (saleParams.sale.saleDetails.saleStart < block.timestamp) revert Errors.InvalidSaleStartDateError()\"\n            {\n                /// @src 8:3335:3369  \"Errors.InvalidSaleStartDateError()\"\n                let _12 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                /// @src 8:3335:3369  \"Errors.InvalidSaleStartDateError()\"\n                mstore(_12, shl(226, 0x01c37351))\n                revert(_12, 4)\n            }\n            /// @src 8:3379:3477  \"if (saleParams.sale.saleDetails.saleEnd < block.timestamp) revert Errors.InvalidSaleEndDateError()\"\n            if /** @src 8:3383:3436  \"saleParams.sale.saleDetails.saleEnd < block.timestamp\" */ lt(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(/** @src 8:3383:3418  \"saleParams.sale.saleDetails.saleEnd\" */ add(/** @src 8:3383:3410  \"saleParams.sale.saleDetails\" */ mload(/** @src 8:3383:3398  \"saleParams.sale\" */ mload(value)), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128)), /** @src 8:3311:3326  \"block.timestamp\" */ timestamp())\n            /// @src 8:3379:3477  \"if (saleParams.sale.saleDetails.saleEnd < block.timestamp) revert Errors.InvalidSaleEndDateError()\"\n            {\n                /// @src 8:3445:3477  \"Errors.InvalidSaleEndDateError()\"\n                let _13 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                /// @src 8:3445:3477  \"Errors.InvalidSaleEndDateError()\"\n                mstore(_13, shl(225, 0x3fcd9bd9))\n                revert(_13, 4)\n            }\n            /// @src 8:3491:3518  \"saleParams.sale.saleDetails\"\n            let _mpos := mload(/** @src 8:3491:3506  \"saleParams.sale\" */ mload(value))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            let _14 := mload(/** @src 8:3491:3528  \"saleParams.sale.saleDetails.saleStart\" */ add(_mpos, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 96))\n            /// @src 8:3487:3609  \"if (saleParams.sale.saleDetails.saleStart >= saleParams.sale.saleDetails.saleEnd) revert Errors.InvalidSaleDurationError()\"\n            if /** @src 8:3491:3567  \"saleParams.sale.saleDetails.saleStart >= saleParams.sale.saleDetails.saleEnd\" */ iszero(lt(_14, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(/** @src 8:3532:3567  \"saleParams.sale.saleDetails.saleEnd\" */ add(_mpos, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128))))\n            /// @src 8:3487:3609  \"if (saleParams.sale.saleDetails.saleStart >= saleParams.sale.saleDetails.saleEnd) revert Errors.InvalidSaleDurationError()\"\n            {\n                /// @src 8:3576:3609  \"Errors.InvalidSaleDurationError()\"\n                let _15 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                /// @src 8:3576:3609  \"Errors.InvalidSaleDurationError()\"\n                mstore(_15, shl(224, 0x1e672f3b))\n                revert(_15, 4)\n            }\n            /// @src 8:3619:3724  \"if (saleParams.sale.saleDetails.maxInvestmentAmount <= 0) revert Errors.InvalidMaxInvestmentAmountError()\"\n            if /** @src 8:3623:3675  \"saleParams.sale.saleDetails.maxInvestmentAmount <= 0\" */ iszero(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(/** @src 8:3623:3670  \"saleParams.sale.saleDetails.maxInvestmentAmount\" */ add(/** @src 8:3623:3650  \"saleParams.sale.saleDetails\" */ mload(/** @src 8:3623:3638  \"saleParams.sale\" */ mload(value)), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 192)))\n            /// @src 8:3619:3724  \"if (saleParams.sale.saleDetails.maxInvestmentAmount <= 0) revert Errors.InvalidMaxInvestmentAmountError()\"\n            {\n                /// @src 8:3684:3724  \"Errors.InvalidMaxInvestmentAmountError()\"\n                let _16 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                /// @src 8:3684:3724  \"Errors.InvalidMaxInvestmentAmountError()\"\n                mstore(_16, shl(224, 0xe14abd8f))\n                revert(_16, 4)\n            }\n            /// @src 8:3734:3811  \"if (saleParams.tierDetails.length == 0) revert Errors.EmptyTierDetailsError()\"\n            if /** @src 8:3738:3772  \"saleParams.tierDetails.length == 0\" */ iszero(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(/** @src 8:3738:3760  \"saleParams.tierDetails\" */ mload(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ add(value, 32))))\n            /// @src 8:3734:3811  \"if (saleParams.tierDetails.length == 0) revert Errors.EmptyTierDetailsError()\"\n            {\n                /// @src 8:3781:3811  \"Errors.EmptyTierDetailsError()\"\n                let _17 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                /// @src 8:3781:3811  \"Errors.EmptyTierDetailsError()\"\n                mstore(_17, shl(226, 0x3b5367f3))\n                revert(_17, 4)\n            }\n            /// @src 8:3829:3844  \"saleParams.sale\"\n            let _18 := mload(value)\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            let _19 := mload(_18)\n            sstore(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(_19))\n            let _20 := mload(add(_19, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(2, _20)\n            let _21 := mload(add(_19, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(3, _21)\n            let _22 := mload(add(_19, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 96))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(4, _22)\n            sstore(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 5, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(add(_19, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128)))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            let _23 := mload(add(_19, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xa0))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(6, _23)\n            sstore(7, mload(add(_19, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 192)))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(8, mload(add(_19, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 224)))\n            let _24 := iszero(iszero(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(add(_19, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 256))))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            let _25 := sload(9)\n            sstore(9, or(or(and(_25, not(65535)), and(_24, 255)), and(shl(8, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ iszero(iszero(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(add(_19, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 288))))), /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 65280)))\n            let _26 := mload(add(_19, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 320))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            let newLen := mload(_26)\n            if gt(newLen, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(64, 1), 1))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            {\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 4, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x24)\n            }\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            let _27 := sload(10)\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            length := shr(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ _27)\n            let outOfPlaceEncoding := and(_27, /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x4e487b71))\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x24)\n            }\n            if gt(length, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x1f)\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 10)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32)\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                let deleteStart := add(data, shr(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 5, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(newLen, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x1f)))\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                if lt(newLen, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32)\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                { deleteStart := data }\n                let start := deleteStart\n                for { }\n                lt(start, add(data, shr(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 5, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(length, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x1f))))\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                {\n                    start := add(start, /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n                }\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            srcOffset := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            switch gt(newLen, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x1f)\n            case /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 1 {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 10)\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32)\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                for { }\n                lt(i_1, and(newLen, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ not(31)))\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                {\n                    i_1 := add(i_1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32)\n                }\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                {\n                    sstore(dstPtr, mload(add(_26, srcOffset)))\n                    dstPtr := add(dstPtr, /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    srcOffset := add(srcOffset, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32)\n                }\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                if lt(and(newLen, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ not(31)), /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ newLen)\n                {\n                    let lastValue := mload(add(_26, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(10, add(shl(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ newLen), /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1))\n            }\n            default /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            {\n                let value_6 := /** @src -1:-1:-1 */ 0\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                if newLen\n                {\n                    value_6 := mload(add(_26, srcOffset))\n                }\n                sstore(10, or(and(value_6, not(shr(shl(3, newLen), not(0)))), shl(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ newLen)))\n            }\n            let _28 := mload(add(_18, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(11, mload(_28))\n            sstore(12, mload(add(_28, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32)))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            let _29 := mload(add(_18, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(13, mload(_29))\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            let _30 := iszero(iszero(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(add(_29, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32))))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            let value_7 := and(sload(14), not(255))\n            sstore(14, or(value_7, and(_30, 255)))\n            let _31 := mload(add(_18, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 96))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(15, mload(_31))\n            sstore(16, mload(add(_31, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32)))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            let _32 := mload(add(_18, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128))\n            let _33 := and(mload(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ _32), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(17, or(and(sload(17), not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), _33))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(18, or(and(sload(18), not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), and(mload(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(_32, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32)), sub(shl(160, 1), 1))))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(19, or(and(sload(19), not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), and(mload(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(_32, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64)), sub(shl(160, 1), 1))))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(20, or(and(sload(20), not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), and(mload(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(_32, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 96)), sub(shl(160, 1), 1))))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(21, or(and(sload(21), not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), and(mload(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(_32, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128)), sub(shl(160, 1), 1))))\n            let _34 := and(mload(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(_32, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xa0)), sub(shl(160, 1), 1))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(22, or(and(sload(22), not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), _34))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(23, or(and(sload(23), not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), and(mload(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(_32, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 192)), sub(shl(160, 1), 1))))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(24, or(and(sload(24), not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), and(mload(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(_32, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 224)), sub(shl(160, 1), 1))))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(25, or(and(sload(25), not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), and(mload(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(_32, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 256)), sub(shl(160, 1), 1))))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(26, or(and(sload(26), not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), and(mload(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(_32, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 288)), sub(shl(160, 1), 1))))\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(27, or(and(sload(27), not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), and(mload(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(_32, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 320)), sub(shl(160, 1), 1))))\n            /// @src 8:3858:3887  \"saleParams.sale.saleAddresses\"\n            let _mpos_1 := mload(add(/** @src 8:3858:3873  \"saleParams.sale\" */ mload(value), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128))\n            let cleaned := and(mload(/** @src 8:3858:3908  \"saleParams.sale.saleAddresses.registerTokenAddress\" */ add(_mpos_1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32)), sub(shl(160, 1), 1))\n            /// @src 8:3855:4006  \"if(saleParams.sale.saleAddresses.registerTokenAddress != address(0)) registerToken = IERC20Extented(saleParams.sale.saleAddresses.registerTokenAddress)\"\n            if /** @src 8:3858:3922  \"saleParams.sale.saleAddresses.registerTokenAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ cleaned))\n            /// @src 8:3855:4006  \"if(saleParams.sale.saleAddresses.registerTokenAddress != address(0)) registerToken = IERC20Extented(saleParams.sale.saleAddresses.registerTokenAddress)\"\n            {\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                sstore(/** @src 8:3924:4006  \"registerToken = IERC20Extented(saleParams.sale.saleAddresses.registerTokenAddress)\" */ 0x21, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ or(and(sload(/** @src 8:3924:4006  \"registerToken = IERC20Extented(saleParams.sale.saleAddresses.registerTokenAddress)\" */ 0x21), /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ cleaned))\n            }\n            sstore(/** @src 8:4025:4111  \"investmentToken = IERC20Extented(saleParams.sale.saleAddresses.investmentTokenAddress)\" */ 0x22, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ or(and(sload(/** @src 8:4025:4111  \"investmentToken = IERC20Extented(saleParams.sale.saleAddresses.investmentTokenAddress)\" */ 0x22), /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), and(mload(/** @src 8:4058:4110  \"saleParams.sale.saleAddresses.investmentTokenAddress\" */ add(_mpos_1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64)), sub(shl(160, 1), 1))))\n            /// @src 8:4122:4326  \"if (saleParams.sale.saleAddresses.stakeControllerContractAddress != address(0)) {...\"\n            if /** @src 8:4126:4200  \"saleParams.sale.saleAddresses.stakeControllerContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(mload(/** @src 8:4126:4186  \"saleParams.sale.saleAddresses.stakeControllerContractAddress\" */ add(_mpos_1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xa0)), sub(shl(160, 1), 1))))\n            /// @src 8:4122:4326  \"if (saleParams.sale.saleAddresses.stakeControllerContractAddress != address(0)) {...\"\n            {\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                sstore(/** @src 8:4216:4315  \"stakeControllerContract = IDappadStakeController(sale.saleAddresses.stakeControllerContractAddress)\" */ 0x23, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ or(and(sload(/** @src 8:4216:4315  \"stakeControllerContract = IDappadStakeController(sale.saleAddresses.stakeControllerContractAddress)\" */ 0x23), /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), _34))\n            }\n            /// @src 8:4340:4353  \"uint256 i = 0\"\n            let var_i := /** @src -1:-1:-1 */ 0\n            /// @src 8:4336:4462  \"for(uint256 i = 0; i < saleParams.tierDetails.length; i++) {...\"\n            for { }\n            /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1\n            /// @src 8:4340:4353  \"uint256 i = 0\"\n            {\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                if eq(var_i, not(0))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x4e487b71))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    mstore(4, 17)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x24)\n                }\n                /// @src 8:4390:4393  \"i++\"\n                var_i := /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(var_i, /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n            }\n            /// @src 8:4390:4393  \"i++\"\n            {\n                /// @src 8:4359:4381  \"saleParams.tierDetails\"\n                let _mpos_2 := mload(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ add(value, 32))\n                /// @src 8:4355:4388  \"i < saleParams.tierDetails.length\"\n                if iszero(lt(var_i, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(/** @src 8:4359:4388  \"saleParams.tierDetails.length\" */ _mpos_2)))\n                /// @src 8:4355:4388  \"i < saleParams.tierDetails.length\"\n                { break }\n                /// @src 8:4426:4451  \"saleParams.tierDetails[i]\"\n                let _35 := mload(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(add(_mpos_2, shl(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 5, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ var_i)), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32))\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ var_i)\n                mstore(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32, /** @src 8:4409:4420  \"tierDetails\" */ 0x26)\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64)\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                sstore(dataSlot, mload(_35))\n                sstore(add(dataSlot, /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1), /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(add(_35, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32)))\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                sstore(add(dataSlot, 2), mload(add(_35, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64)))\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                sstore(add(dataSlot, 3), mload(add(_35, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 96)))\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                sstore(add(dataSlot, 4), mload(add(_35, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128)))\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                sstore(add(dataSlot, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 5), /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(add(_35, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xa0)))\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                sstore(add(dataSlot, 6), mload(add(_35, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 192)))\n            }\n            let _36 := mload(64)\n            let _37 := datasize(\"DappadSale_3854_deployed\")\n            codecopy(_36, dataoffset(\"DappadSale_3854_deployed\"), _37)\n            return(_36, _37)\n        }\n        function allocate_memory_19929() -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, 64)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function allocate_memory_19931() -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, 0x0160)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_bool_fromMemory(offset) -> value\n        {\n            value := mload(offset)\n            if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        }\n        function abi_decode_address_fromMemory(offset) -> value\n        {\n            value := mload(offset)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        }\n        /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n        function fun_grantRole_19939(var_account) -> var\n        {\n            /// @src 8:332:350  \"keccak256(\\\"OWNER\\\")\"\n            let _1 := 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b\n            /// @src 0:2954:2960  \"_roles\"\n            let _2 := 0x00\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:332:350  \"keccak256(\\\"OWNER\\\")\" */ _1)\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _2)\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            let _3 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x40)\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            let _4 := and(var_account, sub(shl(160, 1), 1))\n            mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _4)\n            mstore(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x20, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _3)\n            /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x40)), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xff))\n            case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                /// @src 0:6466:6478  \"return false\"\n                var := /** @src 0:2954:2960  \"_roles\" */ _2\n                /// @src 0:6466:6478  \"return false\"\n                leave\n            }\n            default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:332:350  \"keccak256(\\\"OWNER\\\")\" */ _1)\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _2)\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                let _5 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x40)\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _4)\n                mstore(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x20, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _5)\n                let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x40)\n                sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 0:2954:2960  \"_roles\" */ _2, _2, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 8:332:350  \"keccak256(\\\"OWNER\\\")\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _4, /** @src 4:735:745  \"msg.sender\" */ caller())\n                /// @src 0:6424:6435  \"return true\"\n                var := /** @src 0:6347:6351  \"true\" */ 0x01\n                /// @src 0:6424:6435  \"return true\"\n                leave\n            }\n        }\n        /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n        function fun_grantRole(var_account) -> var_\n        {\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            let _1 := 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n            /// @src 0:2954:2960  \"_roles\"\n            let _2 := 0x00\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ _1)\n            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _2)\n            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n            let _3 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x40)\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            let _4 := and(var_account, sub(shl(160, 1), 1))\n            mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _4)\n            mstore(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x20, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _3)\n            /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x40)), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xff))\n            case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                /// @src 0:6466:6478  \"return false\"\n                var_ := /** @src 0:2954:2960  \"_roles\" */ _2\n                /// @src 0:6466:6478  \"return false\"\n                leave\n            }\n            default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ _1)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _2)\n                /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                let _5 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x40)\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _4)\n                mstore(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x20, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _5)\n                let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x40)\n                sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 0:2954:2960  \"_roles\" */ _2, _2, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _4, /** @src 4:735:745  \"msg.sender\" */ caller())\n                /// @src 0:6424:6435  \"return true\"\n                var_ := /** @src 0:6347:6351  \"true\" */ 0x01\n                /// @src 0:6424:6435  \"return true\"\n                leave\n            }\n        }\n        /// @ast-id 3769 @src 8:25281:25415  \"function _notZeroAddress(address _address) internal pure {...\"\n        function fun_notZeroAddress(var_address)\n        {\n            /// @src 8:25348:25408  \"if (_address == address(0)) revert Errors.ZeroAddressError()\"\n            if /** @src 8:25352:25374  \"_address == address(0)\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(/** @src 8:25352:25374  \"_address == address(0)\" */ var_address, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1)))\n            /// @src 8:25348:25408  \"if (_address == address(0)) revert Errors.ZeroAddressError()\"\n            {\n                /// @src 8:25383:25408  \"Errors.ZeroAddressError()\"\n                let _1 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                /// @src 8:25383:25408  \"Errors.ZeroAddressError()\"\n                mstore(_1, shl(224, 0x3efa09af))\n                revert(_1, 4)\n            }\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 5:\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\", 6:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 8:\"contracts/core/DappadSale.sol\"\n    object \"DappadSale_3854_deployed\" {\n        code {\n            {\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 224\n                    switch shr(_2, calldataload(0))\n                    case 0x002703a2 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        mstore(_1, and(sload(/** @src 8:543:580  \"IERC20Extented public investmentToken\" */ 34), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                        return(_1, 32)\n                    }\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _3 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _3)) { revert(0, 0) }\n                        /// @src 0:2673:2760  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        let expr := /** @src 0:2673:2720  \"interfaceId == type(IAccessControl).interfaceId\" */ eq(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _3, /** @src 0:2688:2720  \"type(IAccessControl).interfaceId\" */ shl(224, 0x7965db0b))\n                        /// @src 0:2673:2760  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 6:861:901  \"interfaceId == type(IERC165).interfaceId\" */ eq(_3, /** @src 6:876:901  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                        }\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, iszero(iszero(expr)))\n                        return(memPos, 32)\n                    }\n                    case 0x054c9579 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let memPtr := mload(64)\n                        finalize_allocation_60549(memPtr)\n                        mstore(memPtr, calldataload(4))\n                        let _4 := add(memPtr, 32)\n                        mstore(_4, calldataload(36))\n                        /// @src 8:4738:4746  \"_address\"\n                        fun_onlyOwnerOrAdmin(/** @src 8:20635:20645  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _5 := mload(memPtr)\n                        sstore(/** @src 8:20672:20688  \"sale.fcfsDetails\" */ 11, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _5)\n                        sstore(12, mload(_4))\n                        /// @src 8:20721:20759  \"SaleFcfsDetailsUpdated(newFcfsDetails)\"\n                        let _6 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        mstore(_6, _5)\n                        mstore(add(_6, 32), mload(_4))\n                        /// @src 8:20721:20759  \"SaleFcfsDetailsUpdated(newFcfsDetails)\"\n                        log1(_6, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64, /** @src 8:20721:20759  \"SaleFcfsDetailsUpdated(newFcfsDetails)\" */ 0xec476120f20dc531dd7815bcb42de192695c3b96b5a351d5673d7173d81fc98b)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, 1)\n                        return(memPos_1, 32)\n                    }\n                    case 0x06c8e316 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _7 := sload(/** @src 8:24196:24227  \"sale.saleDetails.saleTokenPrice\" */ 6)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, _7)\n                        return(memPos_2, 32)\n                    }\n                    case 0x0bbda0de {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 8:23405:23426  \"uint256 tierCount = 0\"\n                        let var_tierCount := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                        /// @src 8:23437:23544  \"if (sale.saleAddresses.stakeControllerContractAddress == address(0)) {...\"\n                        if /** @src 8:23441:23504  \"sale.saleAddresses.stakeControllerContractAddress == address(0)\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:23441:23490  \"sale.saleAddresses.stakeControllerContractAddress\" */ 22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 8:23437:23544  \"if (sale.saleAddresses.stakeControllerContractAddress == address(0)) {...\"\n                        {\n                            /// @src 8:23520:23533  \"tierCount = 1\"\n                            var_tierCount := /** @src 8:23441:23445  \"sale\" */ 0x01\n                        }\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _8 := array_allocation_size_array_bytes32_dyn(var_tierCount)\n                        let memPtr_1 := mload(64)\n                        finalize_allocation(memPtr_1, _8)\n                        mstore(memPtr_1, var_tierCount)\n                        let dataSize := array_allocation_size_array_bytes32_dyn(var_tierCount)\n                        let _9 := 32\n                        let _10 := add(dataSize, not(31))\n                        let i := 0\n                        for { } lt(i, _10) { i := add(i, _9) }\n                        {\n                            mstore(add(add(memPtr_1, i), _9), allocate_and_zero_memory_struct_struct_SaleTierDetails())\n                        }\n                        /// @src 8:23665:23678  \"uint256 i = 0\"\n                        let var_i := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                        /// @src 8:23661:23757  \"for(uint256 i = 0; i < tierCount; i++) {...\"\n                        for { }\n                        /** @src 8:23680:23693  \"i < tierCount\" */ lt(var_i, var_tierCount)\n                        /// @src 8:23665:23678  \"uint256 i = 0\"\n                        {\n                            /// @src 8:23695:23698  \"i++\"\n                            var_i := increment_uint256(var_i)\n                        }\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(0, var_i)\n                            mstore(_9, /** @src 8:23732:23743  \"tierDetails\" */ 0x26)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let dataSlot := keccak256(0, 64)\n                            let memPtr_2 := mload(64)\n                            finalize_allocation_60550(memPtr_2)\n                            mstore(memPtr_2, sload(dataSlot))\n                            mstore(add(memPtr_2, _9), sload(add(dataSlot, 1)))\n                            mstore(add(memPtr_2, 64), sload(add(dataSlot, 2)))\n                            mstore(add(memPtr_2, 96), sload(add(dataSlot, 3)))\n                            mstore(add(memPtr_2, 128), sload(add(dataSlot, 4)))\n                            mstore(add(memPtr_2, 160), sload(add(dataSlot, /** @src 8:23441:23490  \"sale.saleAddresses.stakeControllerContractAddress\" */ 5)))\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(add(memPtr_2, 192), sload(add(dataSlot, 6)))\n                            /// @src 8:23714:23746  \"_tierDetails[i] = tierDetails[i]\"\n                            mstore(memory_array_index_access_bytes32_dyn(memPtr_1, var_i), memPtr_2)\n                            pop(memory_array_index_access_bytes32_dyn(memPtr_1, var_i))\n                        }\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let memPos_3 := mload(64)\n                        let tail := add(memPos_3, _9)\n                        mstore(memPos_3, _9)\n                        let pos := tail\n                        let length := mload(memPtr_1)\n                        mstore(tail, length)\n                        pos := add(memPos_3, 64)\n                        let srcPtr := add(memPtr_1, _9)\n                        let i_1 := 0\n                        for { } lt(i_1, length) { i_1 := add(i_1, 1) }\n                        {\n                            abi_encode_struct_SaleTierDetails(mload(srcPtr), pos)\n                            pos := add(pos, _2)\n                            srcPtr := add(srcPtr, _9)\n                        }\n                        return(memPos_3, sub(pos, memPos_3))\n                    }\n                    case 0x117803e3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, /** @src 8:332:350  \"keccak256(\\\"OWNER\\\")\" */ 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        return(memPos_4, 32)\n                    }\n                    case 0x248a9ca3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, 0)\n                        let _11 := sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), 1))\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, _11)\n                        return(memPos_5, 32)\n                    }\n                    case 0x2a0acc6a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        return(memPos_6, 32)\n                    }\n                    case 0x2dee1fe8 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let cleaned := and(sload(/** @src 8:24610:24628  \"sale.saleAddresses\" */ 17), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, cleaned)\n                        return(memPos_7, 32)\n                    }\n                    case 0x2ecad13f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _12 := sload(/** @src 8:24493:24517  \"sale.saleDetails.saleEnd\" */ 5)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, _12)\n                        return(memPos_8, 32)\n                    }\n                    case 0x2f2ff15d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_1 := calldataload(4)\n                        let value1 := abi_decode_address()\n                        mstore(0, value_1)\n                        mstore(32, 0)\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), 1)))\n                        /// @src 0:4330:4355  \"_grantRole(role, account)\"\n                        pop(fun_grantRole(value_1, value1))\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x3411a8cb {\n                        if callvalue() { revert(0, 0) }\n                        let _13 := not(3)\n                        if slt(add(calldatasize(), _13), 32) { revert(0, 0) }\n                        let offset := calldataload(4)\n                        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                        if slt(add(sub(calldatasize(), offset), _13), 0x0160) { revert(0, 0) }\n                        let memPtr_3 := mload(64)\n                        finalize_allocation_60552(memPtr_3)\n                        mstore(memPtr_3, calldataload(add(4, offset)))\n                        mstore(add(memPtr_3, 32), calldataload(add(offset, 36)))\n                        mstore(add(memPtr_3, 64), calldataload(add(offset, 68)))\n                        mstore(add(memPtr_3, 96), calldataload(add(offset, 100)))\n                        mstore(add(memPtr_3, 128), calldataload(add(offset, 132)))\n                        mstore(add(memPtr_3, 160), calldataload(add(offset, 164)))\n                        mstore(add(memPtr_3, 192), calldataload(add(offset, 196)))\n                        mstore(add(memPtr_3, _2), calldataload(add(offset, 228)))\n                        let _14 := abi_decode_bool(add(offset, 260))\n                        mstore(add(memPtr_3, 256), _14)\n                        let _15 := abi_decode_bool(add(offset, 292))\n                        mstore(add(memPtr_3, 288), _15)\n                        let offset_1 := calldataload(add(offset, 324))\n                        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(add(offset, offset_1), 35), calldatasize())) { revert(0, 0) }\n                        if gt(calldataload(add(add(offset, offset_1), 4)), 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        let memPtr_4 := mload(64)\n                        finalize_allocation(memPtr_4, add(and(add(calldataload(add(add(offset, offset_1), 4)), 0x1f), not(31)), 32))\n                        mstore(memPtr_4, calldataload(add(add(offset, offset_1), 4)))\n                        if gt(add(add(add(offset, offset_1), calldataload(add(add(offset, offset_1), 4))), 36), calldatasize()) { revert(0, 0) }\n                        calldatacopy(add(memPtr_4, 32), add(add(offset, offset_1), 36), calldataload(add(add(offset, offset_1), 4)))\n                        mstore(add(add(memPtr_4, calldataload(add(add(offset, offset_1), 4))), 32), 0)\n                        mstore(add(memPtr_3, 320), memPtr_4)\n                        /// @src 8:4738:4746  \"_address\"\n                        fun_onlyOwnerOrAdmin(/** @src 8:20375:20385  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _16 := mload(memPtr_3)\n                        sstore(1, _16)\n                        sstore(2, mload(add(memPtr_3, 32)))\n                        sstore(3, mload(add(memPtr_3, 64)))\n                        sstore(4, mload(add(memPtr_3, 96)))\n                        sstore(5, mload(add(memPtr_3, 128)))\n                        sstore(6, mload(add(memPtr_3, 160)))\n                        sstore(7, mload(add(memPtr_3, 192)))\n                        sstore(8, mload(add(memPtr_3, _2)))\n                        let _17 := iszero(iszero(mload(add(memPtr_3, 256))))\n                        let value_2 := and(sload(9), not(255))\n                        sstore(9, or(value_2, and(_17, 255)))\n                        update_storage_value_offsett_bool_to_bool_60554(iszero(iszero(mload(add(memPtr_3, 288)))))\n                        let _18 := mload(add(memPtr_3, 320))\n                        let newLen := mload(_18)\n                        if gt(newLen, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        let _19 := extract_byte_array_length(sload(10))\n                        if gt(_19, 0x1f)\n                        {\n                            mstore(0, 10)\n                            let _20 := 89717814153306320011181716697424560163256864414616650038987186496166826726056\n                            let deleteStart := add(_20, shr(5, add(newLen, 0x1f)))\n                            if lt(newLen, 32) { deleteStart := _20 }\n                            let _21 := add(_20, shr(5, add(_19, 0x1f)))\n                            let start := deleteStart\n                            for { } lt(start, _21) { start := add(start, 1) }\n                            { sstore(start, 0) }\n                        }\n                        let srcOffset := 0\n                        srcOffset := 32\n                        switch gt(newLen, 0x1f)\n                        case 1 {\n                            let loopEnd := and(newLen, not(31))\n                            mstore(0, 10)\n                            let dstPtr := 89717814153306320011181716697424560163256864414616650038987186496166826726056\n                            let i_2 := 0\n                            for { } lt(i_2, loopEnd) { i_2 := add(i_2, 32) }\n                            {\n                                sstore(dstPtr, mload(add(_18, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, 32)\n                            }\n                            if lt(loopEnd, newLen)\n                            {\n                                let lastValue := mload(add(_18, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                            }\n                            sstore(10, add(shl(1, newLen), 1))\n                        }\n                        default {\n                            let value_3 := 0\n                            if newLen\n                            {\n                                value_3 := mload(add(_18, srcOffset))\n                            }\n                            sstore(10, or(and(value_3, not(shr(shl(3, newLen), not(0)))), shl(1, newLen)))\n                        }\n                        /// @src 8:20461:20495  \"SaleDetailsUpdated(newSaleDetails)\"\n                        let _22 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        mstore(_22, 32)\n                        /// @src 8:20461:20495  \"SaleDetailsUpdated(newSaleDetails)\"\n                        log1(_22, sub(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ abi_encode_struct_SaleDetails(memPtr_3, add(_22, 32)), /** @src 8:20461:20495  \"SaleDetailsUpdated(newSaleDetails)\" */ _22), 0xfa348fff774a07441f8c4502298c55e3957c7d499ed08a3efffea9a2e849d60d)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, 1)\n                        return(memPos_9, 32)\n                    }\n                    case 0x36568abe {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1_1 := abi_decode_address()\n                        /// @src 0:5417:5519  \"if (callerConfirmation != _msgSender()) {...\"\n                        if /** @src 0:5421:5455  \"callerConfirmation != _msgSender()\" */ iszero(eq(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(/** @src 0:5421:5455  \"callerConfirmation != _msgSender()\" */ value1_1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 4:735:745  \"msg.sender\" */ caller()))\n                        /// @src 0:5417:5519  \"if (callerConfirmation != _msgSender()) {...\"\n                        {\n                            /// @src 0:5478:5508  \"AccessControlBadConfirmation()\"\n                            let _23 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 0:5478:5508  \"AccessControlBadConfirmation()\"\n                            mstore(_23, shl(225, 0x334bd919))\n                            revert(_23, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        /// @src 0:5529:5566  \"_revokeRole(role, callerConfirmation)\"\n                        pop(fun_revokeRole(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ calldataload(4), /** @src 0:5529:5566  \"_revokeRole(role, callerConfirmation)\" */ value1_1))\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x377d5d17 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 352) { revert(0, 0) }\n                        let memPtr_5 := mload(64)\n                        finalize_allocation_60552(memPtr_5)\n                        mstore(memPtr_5, abi_decode_address_60557())\n                        let _24 := abi_decode_address()\n                        mstore(add(memPtr_5, 32), _24)\n                        let value_4 := calldataload(68)\n                        if iszero(eq(value_4, and(value_4, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        mstore(add(memPtr_5, 64), value_4)\n                        let value_5 := calldataload(100)\n                        if iszero(eq(value_5, and(value_5, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        mstore(add(memPtr_5, 96), value_5)\n                        let value_6 := calldataload(132)\n                        if iszero(eq(value_6, and(value_6, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        mstore(add(memPtr_5, 128), value_6)\n                        let value_7 := calldataload(164)\n                        if iszero(eq(value_7, and(value_7, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        mstore(add(memPtr_5, 160), value_7)\n                        let value_8 := calldataload(196)\n                        if iszero(eq(value_8, and(value_8, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        mstore(add(memPtr_5, 192), value_8)\n                        let value_9 := calldataload(228)\n                        if iszero(eq(value_9, and(value_9, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        mstore(add(memPtr_5, _2), value_9)\n                        let value_10 := calldataload(260)\n                        if iszero(eq(value_10, and(value_10, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        mstore(add(memPtr_5, 256), value_10)\n                        let value_11 := calldataload(292)\n                        if iszero(eq(value_11, and(value_11, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        mstore(add(memPtr_5, 288), value_11)\n                        let value_12 := calldataload(324)\n                        if iszero(eq(value_12, and(value_12, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        mstore(add(memPtr_5, 320), value_12)\n                        /// @src 8:4738:4746  \"_address\"\n                        fun_onlyOwnerOrAdmin(/** @src 8:19413:19423  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _25 := and(mload(memPtr_5), sub(shl(160, 1), 1))\n                        sstore(/** @src 8:19450:19468  \"sale.saleAddresses\" */ 17, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ or(and(sload(/** @src 8:19450:19468  \"sale.saleAddresses\" */ 17), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(160, 0xffffffffffffffffffffffff)), _25))\n                        let cleaned_1 := and(mload(add(memPtr_5, 32)), sub(shl(160, 1), 1))\n                        sstore(18, or(and(sload(18), shl(160, 0xffffffffffffffffffffffff)), cleaned_1))\n                        let cleaned_2 := and(mload(add(memPtr_5, 64)), sub(shl(160, 1), 1))\n                        sstore(19, or(and(sload(19), shl(160, 0xffffffffffffffffffffffff)), cleaned_2))\n                        sstore(20, or(and(sload(20), shl(160, 0xffffffffffffffffffffffff)), and(mload(add(memPtr_5, 96)), sub(shl(160, 1), 1))))\n                        sstore(21, or(and(sload(21), shl(160, 0xffffffffffffffffffffffff)), and(mload(add(memPtr_5, 128)), sub(shl(160, 1), 1))))\n                        let cleaned_3 := and(mload(add(memPtr_5, 160)), sub(shl(160, 1), 1))\n                        update_storage_value_offsett_address_to_address_60573(cleaned_3)\n                        let cleaned_4 := and(mload(add(memPtr_5, 192)), sub(shl(160, 1), 1))\n                        update_storage_value_offsett_address_to_address(cleaned_4)\n                        sstore(24, or(and(sload(24), shl(160, 0xffffffffffffffffffffffff)), and(mload(add(memPtr_5, _2)), sub(shl(160, 1), 1))))\n                        sstore(25, or(and(sload(25), shl(160, 0xffffffffffffffffffffffff)), and(mload(add(memPtr_5, 256)), sub(shl(160, 1), 1))))\n                        sstore(26, or(and(sload(26), shl(160, 0xffffffffffffffffffffffff)), and(mload(add(memPtr_5, 288)), sub(shl(160, 1), 1))))\n                        sstore(27, or(and(sload(27), shl(160, 0xffffffffffffffffffffffff)), and(mload(add(memPtr_5, 320)), sub(shl(160, 1), 1))))\n                        /// @src 8:19498:19649  \"if (newSaleAddresses.registerTokenAddress != address(0)) {...\"\n                        if /** @src 8:19502:19553  \"newSaleAddresses.registerTokenAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ cleaned_1))\n                        /// @src 8:19498:19649  \"if (newSaleAddresses.registerTokenAddress != address(0)) {...\"\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            sstore(/** @src 8:19569:19638  \"registerToken = IERC20Extented(newSaleAddresses.registerTokenAddress)\" */ 0x21, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ or(and(sload(/** @src 8:19569:19638  \"registerToken = IERC20Extented(newSaleAddresses.registerTokenAddress)\" */ 0x21), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(160, 0xffffffffffffffffffffffff)), cleaned_1))\n                        }\n                        /// @src 8:19659:19816  \"if (newSaleAddresses.investmentTokenAddress != address(0)) {...\"\n                        if /** @src 8:19663:19716  \"newSaleAddresses.investmentTokenAddress != address(0)\" */ iszero(iszero(cleaned_2))\n                        /// @src 8:19659:19816  \"if (newSaleAddresses.investmentTokenAddress != address(0)) {...\"\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            sstore(/** @src 8:19732:19805  \"investmentToken = IERC20Extented(newSaleAddresses.investmentTokenAddress)\" */ 0x22, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ or(and(sload(/** @src 8:19732:19805  \"investmentToken = IERC20Extented(newSaleAddresses.investmentTokenAddress)\" */ 0x22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(160, 0xffffffffffffffffffffffff)), cleaned_2))\n                        }\n                        /// @src 8:19826:20015  \"if (newSaleAddresses.stakeControllerContractAddress != address(0)) {...\"\n                        if /** @src 8:19830:19891  \"newSaleAddresses.stakeControllerContractAddress != address(0)\" */ iszero(iszero(cleaned_3))\n                        /// @src 8:19826:20015  \"if (newSaleAddresses.stakeControllerContractAddress != address(0)) {...\"\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            sstore(/** @src 8:19907:20004  \"stakeControllerContract = IDappadStakeController(newSaleAddresses.stakeControllerContractAddress)\" */ 0x23, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ or(and(sload(/** @src 8:19907:20004  \"stakeControllerContract = IDappadStakeController(newSaleAddresses.stakeControllerContractAddress)\" */ 0x23), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(160, 0xffffffffffffffffffffffff)), cleaned_3))\n                        }\n                        /// @src 8:20033:20190  \"if (newSaleAddresses.vestingContractAddress != address(0)) {...\"\n                        if /** @src 8:20037:20090  \"newSaleAddresses.vestingContractAddress != address(0)\" */ iszero(iszero(cleaned_4))\n                        /// @src 8:20033:20190  \"if (newSaleAddresses.vestingContractAddress != address(0)) {...\"\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            sstore(36, or(and(sload(36), shl(160, 0xffffffffffffffffffffffff)), cleaned_4))\n                        }\n                        /// @src 8:20205:20243  \"SaleAddressesUpdated(newSaleAddresses)\"\n                        let _26 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        abi_encode_struct_SaleAddresses(memPtr_5, _26)\n                        /// @src 8:20205:20243  \"SaleAddressesUpdated(newSaleAddresses)\"\n                        log1(_26, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 352, /** @src 8:20205:20243  \"SaleAddressesUpdated(newSaleAddresses)\" */ 0xfb6b86a5ca0c935b98085b986b3fc02d706eaf315fd997ba94fd4e6937b3ae53)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, 1)\n                        return(memPos_10, 32)\n                    }\n                    case 0x3a5bbce7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let memPtr_6 := mload(64)\n                        finalize_allocation_60549(memPtr_6)\n                        mstore(memPtr_6, calldataload(4))\n                        let value_13 := calldataload(36)\n                        if iszero(eq(value_13, iszero(iszero(value_13)))) { revert(0, 0) }\n                        let _27 := add(memPtr_6, 32)\n                        mstore(_27, value_13)\n                        /// @src 8:4738:4746  \"_address\"\n                        fun_onlyOwnerOrAdmin(/** @src 8:20901:20911  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        sstore(/** @src 8:20938:20956  \"sale.refundDetails\" */ 13, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(memPtr_6))\n                        let _28 := iszero(iszero(mload(_27)))\n                        let value_14 := and(sload(14), not(255))\n                        sstore(14, or(value_14, and(_28, 255)))\n                        /// @src 8:20991:21033  \"SaleRefundDetailsUpdated(newRefundDetails)\"\n                        let _29 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        abi_encode_struct_SaleRefundDetails(memPtr_6, _29)\n                        /// @src 8:20991:21033  \"SaleRefundDetailsUpdated(newRefundDetails)\"\n                        log1(_29, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64, /** @src 8:20991:21033  \"SaleRefundDetailsUpdated(newRefundDetails)\" */ 0x9dbcb1a73caf828a891c03055263e46b3201ed541142e594dec12b74a18ba277)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let memPos_11 := mload(64)\n                        mstore(memPos_11, 1)\n                        return(memPos_11, 32)\n                    }\n                    case 0x41c232c8 {\n                        if callvalue() { revert(0, 0) }\n                        let _30 := 256\n                        if slt(add(calldatasize(), not(3)), _30) { revert(0, 0) }\n                        let value_15 := calldataload(4)\n                        if slt(add(calldatasize(), not(35)), _2) { revert(0, 0) }\n                        let memPtr_7 := mload(64)\n                        finalize_allocation_60550(memPtr_7)\n                        mstore(memPtr_7, calldataload(36))\n                        let _31 := add(memPtr_7, 32)\n                        mstore(_31, calldataload(68))\n                        let _32 := add(memPtr_7, 64)\n                        mstore(_32, calldataload(100))\n                        let _33 := add(memPtr_7, 96)\n                        mstore(_33, calldataload(132))\n                        let _34 := add(memPtr_7, 128)\n                        mstore(_34, calldataload(164))\n                        let _35 := add(memPtr_7, 160)\n                        mstore(_35, calldataload(196))\n                        let _36 := add(memPtr_7, 192)\n                        mstore(_36, calldataload(228))\n                        /// @src 8:4738:4746  \"_address\"\n                        fun_onlyOwnerOrAdmin(/** @src 8:21462:21472  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(0, value_15)\n                        mstore(32, /** @src 8:21499:21510  \"tierDetails\" */ 0x26)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let dataSlot_1 := keccak256(0, 64)\n                        sstore(dataSlot_1, mload(memPtr_7))\n                        sstore(add(dataSlot_1, 1), mload(_31))\n                        sstore(add(dataSlot_1, 2), mload(_32))\n                        sstore(add(dataSlot_1, 3), mload(_33))\n                        sstore(add(dataSlot_1, 4), mload(_34))\n                        sstore(add(dataSlot_1, 5), mload(_35))\n                        sstore(add(dataSlot_1, 6), mload(_36))\n                        /// @src 8:21554:21603  \"SaleTierDetailsUpdated(tierIndex, newTierDetails)\"\n                        let _37 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        mstore(_37, value_15)\n                        abi_encode_struct_SaleTierDetails(memPtr_7, add(_37, 32))\n                        /// @src 8:21554:21603  \"SaleTierDetailsUpdated(tierIndex, newTierDetails)\"\n                        log1(_37, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _30, /** @src 8:21554:21603  \"SaleTierDetailsUpdated(tierIndex, newTierDetails)\" */ 0x6e66877fc4a645141938cfc2385e96980ee2dca47115fcff57563be8abd8dda1)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let memPos_12 := mload(64)\n                        mstore(memPos_12, 1)\n                        return(memPos_12, 32)\n                    }\n                    case 0x4d461ed1 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 8:4542:4550  \"_address\"\n                        fun_notZeroAddress(/** @src 8:15736:15746  \"msg.sender\" */ caller())\n                        /// @src 8:4738:4746  \"_address\"\n                        fun_onlyOwnerOrAdmin(/** @src 8:15736:15746  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _38 := sload(/** @src 8:15825:15849  \"sale.saleDetails.saleEnd\" */ 5)\n                        /// @src 8:15802:15884  \"if (block.timestamp <= sale.saleDetails.saleEnd) revert Errors.SaleNotEndedError()\"\n                        if /** @src 8:15806:15849  \"block.timestamp <= sale.saleDetails.saleEnd\" */ iszero(gt(/** @src 8:15806:15821  \"block.timestamp\" */ timestamp(), /** @src 8:15806:15849  \"block.timestamp <= sale.saleDetails.saleEnd\" */ _38))\n                        /// @src 8:15802:15884  \"if (block.timestamp <= sale.saleDetails.saleEnd) revert Errors.SaleNotEndedError()\"\n                        {\n                            /// @src 8:15858:15884  \"Errors.SaleNotEndedError()\"\n                            let _39 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:15858:15884  \"Errors.SaleNotEndedError()\"\n                            mstore(_39, shl(224, 0x68a5e0cb))\n                            revert(_39, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        let _40 := sub(shl(160, 1), 1)\n                        let cleaned_5 := and(sload(/** @src 8:15898:15913  \"investmentToken\" */ 0x22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _40)\n                        /// @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\"\n                        let _41 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        let _42 := shl(224, 0x70a08231)\n                        /// @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\"\n                        mstore(_41, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _42)\n                        mstore(/** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ add(_41, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:15932:15936  \"this\" */ address())\n                        /// @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\"\n                        let _43 := 32\n                        let _44 := staticcall(gas(), cleaned_5, _41, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36, /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _41, _43)\n                        if iszero(_44)\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let pos_1 := mload(64)\n                            returndatacopy(pos_1, 0, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\"\n                        let expr_1 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                        /// @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\"\n                        if _44\n                        {\n                            let _45 := _43\n                            if gt(_43, returndatasize()) { _45 := returndatasize() }\n                            finalize_allocation(_41, _45)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            if slt(sub(/** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ add(_41, _45), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _41), /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            { revert(0, 0) }\n                            /// @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\"\n                            expr_1 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_41)\n                        }\n                        /// @src 8:15894:15985  \"if (investmentToken.balanceOf(address(this)) == 0) revert Errors.InsufficientBalanceError()\"\n                        if /** @src 8:15898:15943  \"investmentToken.balanceOf(address(this)) == 0\" */ iszero(expr_1)\n                        /// @src 8:15894:15985  \"if (investmentToken.balanceOf(address(this)) == 0) revert Errors.InsufficientBalanceError()\"\n                        {\n                            /// @src 8:15952:15985  \"Errors.InsufficientBalanceError()\"\n                            let _46 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:15952:15985  \"Errors.InsufficientBalanceError()\"\n                            mstore(_46, shl(224, 0x384d3c59))\n                            revert(_46, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:15999:16114  \"sale.refundDetails.refundEnabled && block.timestamp <= sale.saleDetails.saleEnd + sale.refundDetails.refundDuration\"\n                        let expr_2 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:15999:16031  \"sale.refundDetails.refundEnabled\" */ 14), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xff)\n                        /// @src 8:15999:16114  \"sale.refundDetails.refundEnabled && block.timestamp <= sale.saleDetails.saleEnd + sale.refundDetails.refundDuration\"\n                        if expr_2\n                        {\n                            expr_2 := /** @src 8:16035:16114  \"block.timestamp <= sale.saleDetails.saleEnd + sale.refundDetails.refundDuration\" */ iszero(gt(/** @src 8:15806:15821  \"block.timestamp\" */ timestamp(), /** @src 8:16054:16114  \"sale.saleDetails.saleEnd + sale.refundDetails.refundDuration\" */ checked_add_uint256(_38, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:15999:16017  \"sale.refundDetails\" */ 13))))\n                        }\n                        /// @src 8:15995:16153  \"if (sale.refundDetails.refundEnabled && block.timestamp <= sale.saleDetails.saleEnd + sale.refundDetails.refundDuration) revert Errors.RefundPeriodOverError()\"\n                        if expr_2\n                        {\n                            /// @src 8:16123:16153  \"Errors.RefundPeriodOverError()\"\n                            let _47 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:16123:16153  \"Errors.RefundPeriodOverError()\"\n                            mstore(_47, shl(224, 0xe7985113))\n                            revert(_47, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:16182:16222  \"investmentToken.balanceOf(address(this))\"\n                        let _48 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:16182:16222  \"investmentToken.balanceOf(address(this))\"\n                        mstore(_48, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _42)\n                        mstore(/** @src 8:16182:16222  \"investmentToken.balanceOf(address(this))\" */ add(_48, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:15932:15936  \"this\" */ address())\n                        /// @src 8:16182:16222  \"investmentToken.balanceOf(address(this))\"\n                        let _49 := staticcall(gas(), cleaned_5, _48, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36, /** @src 8:16182:16222  \"investmentToken.balanceOf(address(this))\" */ _48, /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43)\n                        /// @src 8:16182:16222  \"investmentToken.balanceOf(address(this))\"\n                        if iszero(_49)\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let pos_2 := mload(64)\n                            returndatacopy(pos_2, 0, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 8:16182:16222  \"investmentToken.balanceOf(address(this))\"\n                        let expr_3 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                        /// @src 8:16182:16222  \"investmentToken.balanceOf(address(this))\"\n                        if _49\n                        {\n                            let _50 := /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43\n                            /// @src 8:16182:16222  \"investmentToken.balanceOf(address(this))\"\n                            if gt(/** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43, /** @src 8:16182:16222  \"investmentToken.balanceOf(address(this))\" */ returndatasize()) { _50 := returndatasize() }\n                            finalize_allocation(_48, _50)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            if slt(sub(/** @src 8:16182:16222  \"investmentToken.balanceOf(address(this))\" */ add(_48, _50), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _48), /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            { revert(0, 0) }\n                            /// @src 8:16182:16222  \"investmentToken.balanceOf(address(this))\"\n                            expr_3 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_48)\n                        }\n                        let r := div(/** @src 8:16265:16317  \"balance * sale.saleDetails.projectOwnerFeePercentage\" */ checked_mul_uint256(expr_3, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:16275:16317  \"sale.saleDetails.projectOwnerFeePercentage\" */ 8)), /** @src 8:16321:16326  \"10000\" */ 0x2710)\n                        /// @src 8:16365:16396  \"balance - projectOwnerFeeAmount\"\n                        let expr_4 := checked_sub_uint256(expr_3, r)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let cleaned_6 := and(sload(/** @src 8:16462:16503  \"sale.saleAddresses.projectOwnerFeeAddress\" */ 27), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _40)\n                        /// @src 8:16437:16527  \"investmentToken.transfer(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount)\"\n                        let _51 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        let _52 := shl(224, 0xa9059cbb)\n                        /// @src 8:16437:16527  \"investmentToken.transfer(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount)\"\n                        mstore(_51, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _52)\n                        /// @src 8:16437:16527  \"investmentToken.transfer(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount)\"\n                        let _53 := call(gas(), cleaned_5, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0, /** @src 8:16437:16527  \"investmentToken.transfer(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount)\" */ _51, sub(abi_encode_address_uint256(add(_51, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:16437:16527  \"investmentToken.transfer(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount)\" */ cleaned_6, r), _51), _51, /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43)\n                        /// @src 8:16437:16527  \"investmentToken.transfer(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount)\"\n                        if iszero(_53)\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let pos_3 := mload(64)\n                            returndatacopy(pos_3, 0, returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 8:16437:16527  \"investmentToken.transfer(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount)\"\n                        let expr_5 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                        /// @src 8:16437:16527  \"investmentToken.transfer(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount)\"\n                        if _53\n                        {\n                            let _54 := /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43\n                            /// @src 8:16437:16527  \"investmentToken.transfer(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount)\"\n                            if gt(/** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43, /** @src 8:16437:16527  \"investmentToken.transfer(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount)\" */ returndatasize()) { _54 := returndatasize() }\n                            finalize_allocation(_51, _54)\n                            expr_5 := abi_decode_bool_fromMemory(_51, add(_51, _54))\n                        }\n                        /// @src 8:16537:16606  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                        if /** @src 8:16541:16564  \"!successfullyTransfered\" */ iszero(expr_5)\n                        /// @src 8:16537:16606  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                        {\n                            /// @src 8:16573:16606  \"Errors.TokenTransferFailedError()\"\n                            let _55 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:16573:16606  \"Errors.TokenTransferFailedError()\"\n                            mstore(_55, shl(224, 0xf83e23f5))\n                            revert(_55, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        let cleaned_7 := and(sload(/** @src 8:15898:15913  \"investmentToken\" */ 0x22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _40)\n                        let cleaned_8 := and(sload(/** @src 8:16678:16716  \"sale.saleAddresses.launchpadFeeAddress\" */ 26), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _40)\n                        /// @src 8:16653:16737  \"investmentToken.transfer(sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount)\"\n                        let _56 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:16653:16737  \"investmentToken.transfer(sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount)\"\n                        mstore(_56, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _52)\n                        /// @src 8:16653:16737  \"investmentToken.transfer(sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount)\"\n                        let _57 := call(gas(), cleaned_7, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0, /** @src 8:16653:16737  \"investmentToken.transfer(sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount)\" */ _56, sub(abi_encode_address_uint256(add(_56, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:16653:16737  \"investmentToken.transfer(sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount)\" */ cleaned_8, expr_4), _56), _56, /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43)\n                        /// @src 8:16653:16737  \"investmentToken.transfer(sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount)\"\n                        if iszero(_57)\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let pos_4 := mload(64)\n                            returndatacopy(pos_4, 0, returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        /// @src 8:16653:16737  \"investmentToken.transfer(sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount)\"\n                        let expr_6 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                        /// @src 8:16653:16737  \"investmentToken.transfer(sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount)\"\n                        if _57\n                        {\n                            let _58 := /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43\n                            /// @src 8:16653:16737  \"investmentToken.transfer(sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount)\"\n                            if gt(/** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43, /** @src 8:16653:16737  \"investmentToken.transfer(sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount)\" */ returndatasize()) { _58 := returndatasize() }\n                            finalize_allocation(_56, _58)\n                            expr_6 := abi_decode_bool_fromMemory(_56, add(_56, _58))\n                        }\n                        /// @src 8:16747:16822  \"if (!successfullyTransferedSecond) revert Errors.TokenTransferFailedError()\"\n                        if /** @src 8:16751:16780  \"!successfullyTransferedSecond\" */ iszero(expr_6)\n                        /// @src 8:16747:16822  \"if (!successfullyTransferedSecond) revert Errors.TokenTransferFailedError()\"\n                        {\n                            /// @src 8:16789:16822  \"Errors.TokenTransferFailedError()\"\n                            let _59 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:16789:16822  \"Errors.TokenTransferFailedError()\"\n                            mstore(_59, /** @src 8:16573:16606  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                            /// @src 8:16789:16822  \"Errors.TokenTransferFailedError()\"\n                            revert(_59, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:16837:16936  \"sale.saleAddresses.registerTokenAddress != address(0) && registerToken.balanceOf(address(this)) > 0\"\n                        let expr_7 := /** @src 8:16837:16890  \"sale.saleAddresses.registerTokenAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:16837:16876  \"sale.saleAddresses.registerTokenAddress\" */ 18), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _40)))\n                        /// @src 8:16837:16936  \"sale.saleAddresses.registerTokenAddress != address(0) && registerToken.balanceOf(address(this)) > 0\"\n                        if expr_7\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let cleaned_9 := and(sload(/** @src 8:16894:16907  \"registerToken\" */ 0x21), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _40)\n                            /// @src 8:16894:16932  \"registerToken.balanceOf(address(this))\"\n                            let _60 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:16894:16932  \"registerToken.balanceOf(address(this))\"\n                            mstore(_60, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _42)\n                            mstore(/** @src 8:16894:16932  \"registerToken.balanceOf(address(this))\" */ add(_60, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:15932:15936  \"this\" */ address())\n                            /// @src 8:16894:16932  \"registerToken.balanceOf(address(this))\"\n                            let _61 := staticcall(gas(), cleaned_9, _60, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36, /** @src 8:16894:16932  \"registerToken.balanceOf(address(this))\" */ _60, /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43)\n                            /// @src 8:16894:16932  \"registerToken.balanceOf(address(this))\"\n                            if iszero(_61)\n                            {\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let pos_5 := mload(64)\n                                returndatacopy(pos_5, 0, returndatasize())\n                                revert(pos_5, returndatasize())\n                            }\n                            /// @src 8:16894:16932  \"registerToken.balanceOf(address(this))\"\n                            let expr_8 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                            /// @src 8:16894:16932  \"registerToken.balanceOf(address(this))\"\n                            if _61\n                            {\n                                let _62 := /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43\n                                /// @src 8:16894:16932  \"registerToken.balanceOf(address(this))\"\n                                if gt(/** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43, /** @src 8:16894:16932  \"registerToken.balanceOf(address(this))\" */ returndatasize()) { _62 := returndatasize() }\n                                finalize_allocation(_60, _62)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                if slt(sub(/** @src 8:16894:16932  \"registerToken.balanceOf(address(this))\" */ add(_60, _62), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _60), /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                { revert(0, 0) }\n                                /// @src 8:16894:16932  \"registerToken.balanceOf(address(this))\"\n                                expr_8 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_60)\n                            }\n                            /// @src 8:16837:16936  \"sale.saleAddresses.registerTokenAddress != address(0) && registerToken.balanceOf(address(this)) > 0\"\n                            expr_7 := /** @src 8:16894:16936  \"registerToken.balanceOf(address(this)) > 0\" */ iszero(iszero(expr_8))\n                        }\n                        /// @src 8:16833:17188  \"if (sale.saleAddresses.registerTokenAddress != address(0) && registerToken.balanceOf(address(this)) > 0) {...\"\n                        if expr_7\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let cleaned_10 := and(sload(/** @src 8:16987:17000  \"registerToken\" */ 0x21), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _40)\n                            let cleaned_11 := and(sload(/** @src 8:16678:16716  \"sale.saleAddresses.launchpadFeeAddress\" */ 26), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _40)\n                            /// @src 8:17050:17088  \"registerToken.balanceOf(address(this))\"\n                            let _63 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:17050:17088  \"registerToken.balanceOf(address(this))\"\n                            mstore(_63, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _42)\n                            mstore(/** @src 8:17050:17088  \"registerToken.balanceOf(address(this))\" */ add(_63, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:15932:15936  \"this\" */ address())\n                            /// @src 8:17050:17088  \"registerToken.balanceOf(address(this))\"\n                            let _64 := staticcall(gas(), cleaned_10, _63, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36, /** @src 8:17050:17088  \"registerToken.balanceOf(address(this))\" */ _63, /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43)\n                            /// @src 8:17050:17088  \"registerToken.balanceOf(address(this))\"\n                            if iszero(_64)\n                            {\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let pos_6 := mload(64)\n                                returndatacopy(pos_6, 0, returndatasize())\n                                revert(pos_6, returndatasize())\n                            }\n                            /// @src 8:17050:17088  \"registerToken.balanceOf(address(this))\"\n                            let expr_9 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                            /// @src 8:17050:17088  \"registerToken.balanceOf(address(this))\"\n                            if _64\n                            {\n                                let _65 := /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43\n                                /// @src 8:17050:17088  \"registerToken.balanceOf(address(this))\"\n                                if gt(/** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43, /** @src 8:17050:17088  \"registerToken.balanceOf(address(this))\" */ returndatasize()) { _65 := returndatasize() }\n                                finalize_allocation(_63, _65)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                if slt(sub(/** @src 8:17050:17088  \"registerToken.balanceOf(address(this))\" */ add(_63, _65), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _63), /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                { revert(0, 0) }\n                                /// @src 8:17050:17088  \"registerToken.balanceOf(address(this))\"\n                                expr_9 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_63)\n                            }\n                            /// @src 8:16987:17089  \"registerToken.transfer(sale.saleAddresses.launchpadFeeAddress, registerToken.balanceOf(address(this)))\"\n                            let _66 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:16987:17089  \"registerToken.transfer(sale.saleAddresses.launchpadFeeAddress, registerToken.balanceOf(address(this)))\"\n                            mstore(_66, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _52)\n                            /// @src 8:16987:17089  \"registerToken.transfer(sale.saleAddresses.launchpadFeeAddress, registerToken.balanceOf(address(this)))\"\n                            let _67 := call(gas(), cleaned_10, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0, /** @src 8:16987:17089  \"registerToken.transfer(sale.saleAddresses.launchpadFeeAddress, registerToken.balanceOf(address(this)))\" */ _66, sub(abi_encode_address_uint256(add(_66, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:16987:17089  \"registerToken.transfer(sale.saleAddresses.launchpadFeeAddress, registerToken.balanceOf(address(this)))\" */ cleaned_11, expr_9), _66), _66, /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43)\n                            /// @src 8:16987:17089  \"registerToken.transfer(sale.saleAddresses.launchpadFeeAddress, registerToken.balanceOf(address(this)))\"\n                            if iszero(_67)\n                            {\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let pos_7 := mload(64)\n                                returndatacopy(pos_7, 0, returndatasize())\n                                revert(pos_7, returndatasize())\n                            }\n                            /// @src 8:16987:17089  \"registerToken.transfer(sale.saleAddresses.launchpadFeeAddress, registerToken.balanceOf(address(this)))\"\n                            let expr_10 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                            /// @src 8:16987:17089  \"registerToken.transfer(sale.saleAddresses.launchpadFeeAddress, registerToken.balanceOf(address(this)))\"\n                            if _67\n                            {\n                                let _68 := /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43\n                                /// @src 8:16987:17089  \"registerToken.transfer(sale.saleAddresses.launchpadFeeAddress, registerToken.balanceOf(address(this)))\"\n                                if gt(/** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43, /** @src 8:16987:17089  \"registerToken.transfer(sale.saleAddresses.launchpadFeeAddress, registerToken.balanceOf(address(this)))\" */ returndatasize()) { _68 := returndatasize() }\n                                finalize_allocation(_66, _68)\n                                expr_10 := abi_decode_bool_fromMemory(_66, add(_66, _68))\n                            }\n                            /// @src 8:17103:17177  \"if (!successfullyTransferedThird) revert Errors.TokenTransferFailedError()\"\n                            if /** @src 8:17107:17135  \"!successfullyTransferedThird\" */ iszero(expr_10)\n                            /// @src 8:17103:17177  \"if (!successfullyTransferedThird) revert Errors.TokenTransferFailedError()\"\n                            {\n                                /// @src 8:17144:17177  \"Errors.TokenTransferFailedError()\"\n                                let _69 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:17144:17177  \"Errors.TokenTransferFailedError()\"\n                                mstore(_69, /** @src 8:16573:16606  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                                /// @src 8:17144:17177  \"Errors.TokenTransferFailedError()\"\n                                revert(_69, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                            }\n                        }\n                        let cleaned_12 := and(sload(/** @src 8:16462:16503  \"sale.saleAddresses.projectOwnerFeeAddress\" */ 27), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _40)\n                        let cleaned_13 := and(sload(/** @src 8:16678:16716  \"sale.saleAddresses.launchpadFeeAddress\" */ 26), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _40)\n                        /// @src 8:17203:17359  \"SaleCompleted(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount, sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount, block.timestamp)\"\n                        let _70 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        mstore(_70, cleaned_12)\n                        mstore(add(_70, /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ r)\n                        mstore(add(_70, 64), cleaned_13)\n                        mstore(add(_70, 96), expr_4)\n                        mstore(add(_70, 128), /** @src 8:15806:15821  \"block.timestamp\" */ timestamp())\n                        /// @src 8:17203:17359  \"SaleCompleted(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount, sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount, block.timestamp)\"\n                        log1(_70, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 160, /** @src 8:17203:17359  \"SaleCompleted(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount, sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount, block.timestamp)\" */ 0x3165c1ba6101043d0a0f1e26962850bd292ded36bda350ca2044afb9fbfe2fc8)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let memPos_13 := mload(64)\n                        mstore(memPos_13, /** @src 8:15825:15829  \"sale\" */ 0x01)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        return(memPos_13, /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43)\n                    }\n                    case /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x4d4fc99e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_16 := and(sload(/** @src 8:586:639  \"IDappadStakeController public stakeControllerContract\" */ 35), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))\n                        let memPos_14 := mload(64)\n                        mstore(memPos_14, value_16)\n                        return(memPos_14, 32)\n                    }\n                    case 0x590e1ae3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 8:4542:4550  \"_address\"\n                        fun_notZeroAddress(/** @src 8:14031:14041  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(0, /** @src 8:14031:14041  \"msg.sender\" */ caller())\n                        /// @src 8:14072:14089  \"investmentAmounts\"\n                        let _71 := 0x28\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _72 := 0x20\n                        mstore(_72, /** @src 8:14072:14089  \"investmentAmounts\" */ _71)\n                        /// @src 8:14068:14142  \"if (investmentAmounts[msg.sender] == 0) revert Errors.NotJoinedSaleError()\"\n                        if /** @src 8:14072:14106  \"investmentAmounts[msg.sender] == 0\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(keccak256(0, 64)))\n                        /// @src 8:14068:14142  \"if (investmentAmounts[msg.sender] == 0) revert Errors.NotJoinedSaleError()\"\n                        {\n                            /// @src 8:14115:14142  \"Errors.NotJoinedSaleError()\"\n                            let _73 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:14115:14142  \"Errors.NotJoinedSaleError()\"\n                            mstore(_73, shl(224, 0x2f0e159d))\n                            revert(_73, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        let _74 := sub(shl(160, 1), 1)\n                        let cleaned_14 := and(sload(/** @src 8:14156:14171  \"vestingContract\" */ 0x24), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _74)\n                        /// @src 8:14156:14204  \"vestingContract.getAnyVestingClaimed(msg.sender)\"\n                        let _75 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:14156:14204  \"vestingContract.getAnyVestingClaimed(msg.sender)\"\n                        mstore(_75, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(225, 0x3c35a22b))\n                        mstore(/** @src 8:14156:14204  \"vestingContract.getAnyVestingClaimed(msg.sender)\" */ add(_75, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:14031:14041  \"msg.sender\" */ caller())\n                        /// @src 8:14156:14204  \"vestingContract.getAnyVestingClaimed(msg.sender)\"\n                        let _76 := staticcall(gas(), cleaned_14, _75, /** @src 8:14156:14171  \"vestingContract\" */ 0x24, /** @src 8:14156:14204  \"vestingContract.getAnyVestingClaimed(msg.sender)\" */ _75, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _72)\n                        /// @src 8:14156:14204  \"vestingContract.getAnyVestingClaimed(msg.sender)\"\n                        if iszero(_76)\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let pos_8 := mload(64)\n                            returndatacopy(pos_8, 0, returndatasize())\n                            revert(pos_8, returndatasize())\n                        }\n                        /// @src 8:14156:14204  \"vestingContract.getAnyVestingClaimed(msg.sender)\"\n                        let expr_11 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                        /// @src 8:14156:14204  \"vestingContract.getAnyVestingClaimed(msg.sender)\"\n                        if _76\n                        {\n                            let _77 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _72\n                            /// @src 8:14156:14204  \"vestingContract.getAnyVestingClaimed(msg.sender)\"\n                            if gt(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _72, /** @src 8:14156:14204  \"vestingContract.getAnyVestingClaimed(msg.sender)\" */ returndatasize()) { _77 := returndatasize() }\n                            finalize_allocation(_75, _77)\n                            expr_11 := abi_decode_bool_fromMemory(_75, add(_75, _77))\n                        }\n                        /// @src 8:14152:14253  \"if (vestingContract.getAnyVestingClaimed(msg.sender)) revert Errors.FirstVestingAlreadyClaimedError()\"\n                        if expr_11\n                        {\n                            /// @src 8:14213:14253  \"Errors.FirstVestingAlreadyClaimedError()\"\n                            let _78 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:14213:14253  \"Errors.FirstVestingAlreadyClaimedError()\"\n                            mstore(_78, shl(224, 0x766bbb51))\n                            revert(_78, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        let _79 := sload(/** @src 8:14286:14310  \"sale.saleDetails.saleEnd\" */ 5)\n                        /// @src 8:14267:14310  \"block.timestamp <= sale.saleDetails.saleEnd\"\n                        let _80 := gt(/** @src 8:14267:14282  \"block.timestamp\" */ timestamp(), /** @src 8:14267:14310  \"block.timestamp <= sale.saleDetails.saleEnd\" */ _79)\n                        /// @src 8:14263:14345  \"if (block.timestamp <= sale.saleDetails.saleEnd) revert Errors.SaleNotEndedError()\"\n                        if /** @src 8:14267:14310  \"block.timestamp <= sale.saleDetails.saleEnd\" */ iszero(_80)\n                        /// @src 8:14263:14345  \"if (block.timestamp <= sale.saleDetails.saleEnd) revert Errors.SaleNotEndedError()\"\n                        {\n                            /// @src 8:14319:14345  \"Errors.SaleNotEndedError()\"\n                            let _81 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:14319:14345  \"Errors.SaleNotEndedError()\"\n                            mstore(_81, /** @src 8:15858:15884  \"Errors.SaleNotEndedError()\" */ shl(224, 0x68a5e0cb))\n                            /// @src 8:14319:14345  \"Errors.SaleNotEndedError()\"\n                            revert(_81, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:14355:14431  \"if (!sale.refundDetails.refundEnabled) revert Errors.RefundNotEnabledError()\"\n                        if /** @src 8:14359:14392  \"!sale.refundDetails.refundEnabled\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:14360:14392  \"sale.refundDetails.refundEnabled\" */ 14), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xff))\n                        /// @src 8:14355:14431  \"if (!sale.refundDetails.refundEnabled) revert Errors.RefundNotEnabledError()\"\n                        {\n                            /// @src 8:14401:14431  \"Errors.RefundNotEnabledError()\"\n                            let _82 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:14401:14431  \"Errors.RefundNotEnabledError()\"\n                            mstore(_82, shl(225, 0x46c7e783))\n                            revert(_82, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:14447:14572  \"block.timestamp > sale.saleDetails.saleEnd && block.timestamp <= sale.saleDetails.saleEnd + sale.refundDetails.refundDuration\"\n                        let expr_12 := _80\n                        if _80\n                        {\n                            expr_12 := /** @src 8:14493:14572  \"block.timestamp <= sale.saleDetails.saleEnd + sale.refundDetails.refundDuration\" */ iszero(gt(/** @src 8:14267:14282  \"block.timestamp\" */ timestamp(), /** @src 8:14512:14572  \"sale.saleDetails.saleEnd + sale.refundDetails.refundDuration\" */ checked_add_uint256(_79, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:14360:14378  \"sale.refundDetails\" */ 13))))\n                        }\n                        /// @src 8:14441:14612  \"if (!(block.timestamp > sale.saleDetails.saleEnd && block.timestamp <= sale.saleDetails.saleEnd + sale.refundDetails.refundDuration)) revert Errors.RefundPeriodOverError()\"\n                        if /** @src 8:14445:14573  \"!(block.timestamp > sale.saleDetails.saleEnd && block.timestamp <= sale.saleDetails.saleEnd + sale.refundDetails.refundDuration)\" */ iszero(expr_12)\n                        /// @src 8:14441:14612  \"if (!(block.timestamp > sale.saleDetails.saleEnd && block.timestamp <= sale.saleDetails.saleEnd + sale.refundDetails.refundDuration)) revert Errors.RefundPeriodOverError()\"\n                        {\n                            /// @src 8:14582:14612  \"Errors.RefundPeriodOverError()\"\n                            let _83 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:14582:14612  \"Errors.RefundPeriodOverError()\"\n                            mstore(_83, /** @src 8:16123:16153  \"Errors.RefundPeriodOverError()\" */ shl(224, 0xe7985113))\n                            /// @src 8:14582:14612  \"Errors.RefundPeriodOverError()\"\n                            revert(_83, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        mstore(0, /** @src 8:14031:14041  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(_72, /** @src 8:14626:14634  \"refunded\" */ 0x27)\n                        /// @src 8:14622:14684  \"if (refunded[msg.sender]) revert Errors.AlreadyRefundedError()\"\n                        if /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(keccak256(0, 64)), 0xff)\n                        /// @src 8:14622:14684  \"if (refunded[msg.sender]) revert Errors.AlreadyRefundedError()\"\n                        {\n                            /// @src 8:14655:14684  \"Errors.AlreadyRefundedError()\"\n                            let _84 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:14655:14684  \"Errors.AlreadyRefundedError()\"\n                            mstore(_84, shl(226, 0x2321792f))\n                            revert(_84, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:14695:14851  \"if (sale.saleAddresses.nftContractAddress != address(0)) {...\"\n                        if /** @src 8:14699:14750  \"sale.saleAddresses.nftContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:14699:14736  \"sale.saleAddresses.nftContractAddress\" */ 21), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _74)))\n                        /// @src 8:14695:14851  \"if (sale.saleAddresses.nftContractAddress != address(0)) {...\"\n                        {\n                            /// @src 8:4542:4550  \"_address\"\n                            fun_notZeroAddress(/** @src 8:14031:14041  \"msg.sender\" */ caller())\n                            /// @src 8:14766:14840  \"if (_getUserNftBalance(msg.sender) == 0) revert Errors.UserHasNoNFTError()\"\n                            if /** @src 8:14770:14805  \"_getUserNftBalance(msg.sender) == 0\" */ iszero(/** @src 8:24954:25275  \"function _getUserNftBalance(address userAddress) internal view notZeroAddress(userAddress) returns (uint256) {...\" */ fun_getUserNftBalance_inner())\n                            /// @src 8:14766:14840  \"if (_getUserNftBalance(msg.sender) == 0) revert Errors.UserHasNoNFTError()\"\n                            {\n                                /// @src 8:14814:14840  \"Errors.UserHasNoNFTError()\"\n                                let _85 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:14814:14840  \"Errors.UserHasNoNFTError()\"\n                                mstore(_85, shl(225, 0x049a4b73))\n                                revert(_85, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                            }\n                        }\n                        mstore(0, /** @src 8:14031:14041  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(_72, /** @src 8:14885:14900  \"registerDetails\" */ 0x25)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _86 := sload(/** @src 8:14885:14922  \"registerDetails[msg.sender].tierIndex\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), /** @src 8:14286:14290  \"sale\" */ 0x01))\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(_72, /** @src 8:14072:14089  \"investmentAmounts\" */ _71)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        sstore(/** @src 8:14933:14947  \"saleStatistics\" */ 0x1c, /** @src 8:14933:15002  \"saleStatistics.totalInvestmentAmount -= investmentAmounts[msg.sender]\" */ checked_sub_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:14933:14947  \"saleStatistics\" */ 0x1c), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(keccak256(0, 64))))\n                        mstore(0, /** @src 8:14031:14041  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(_72, /** @src 8:14072:14089  \"investmentAmounts\" */ _71)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        sstore(keccak256(0, 64), 0)\n                        mstore(_72, /** @src 8:14626:14634  \"refunded\" */ 0x27)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let dataSlot_2 := keccak256(0, 64)\n                        sstore(dataSlot_2, or(and(sload(dataSlot_2), not(255)), /** @src 8:14286:14290  \"sale\" */ 0x01))\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let cleaned_15 := and(sload(/** @src 8:15191:15206  \"investmentToken\" */ 0x22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _74)\n                        /// @src 8:15191:15231  \"investmentToken.balanceOf(address(this))\"\n                        let _87 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:15191:15231  \"investmentToken.balanceOf(address(this))\"\n                        mstore(_87, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 8:15191:15231  \"investmentToken.balanceOf(address(this))\" */ add(_87, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:15225:15229  \"this\" */ address())\n                        /// @src 8:15191:15231  \"investmentToken.balanceOf(address(this))\"\n                        let _88 := staticcall(gas(), cleaned_15, _87, /** @src 8:14156:14171  \"vestingContract\" */ 0x24, /** @src 8:15191:15231  \"investmentToken.balanceOf(address(this))\" */ _87, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _72)\n                        /// @src 8:15191:15231  \"investmentToken.balanceOf(address(this))\"\n                        if iszero(_88)\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let pos_9 := mload(64)\n                            returndatacopy(pos_9, 0, returndatasize())\n                            revert(pos_9, returndatasize())\n                        }\n                        /// @src 8:15191:15231  \"investmentToken.balanceOf(address(this))\"\n                        let expr_13 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                        /// @src 8:15191:15231  \"investmentToken.balanceOf(address(this))\"\n                        if _88\n                        {\n                            let _89 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _72\n                            /// @src 8:15191:15231  \"investmentToken.balanceOf(address(this))\"\n                            if gt(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _72, /** @src 8:15191:15231  \"investmentToken.balanceOf(address(this))\" */ returndatasize()) { _89 := returndatasize() }\n                            finalize_allocation(_87, _89)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            if slt(sub(/** @src 8:15191:15231  \"investmentToken.balanceOf(address(this))\" */ add(_87, _89), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _87), _72) { revert(0, 0) }\n                            /// @src 8:15191:15231  \"investmentToken.balanceOf(address(this))\"\n                            expr_13 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_87)\n                        }\n                        mstore(0, /** @src 8:14031:14041  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(_72, /** @src 8:14072:14089  \"investmentAmounts\" */ _71)\n                        /// @src 8:15187:15313  \"if (investmentToken.balanceOf(address(this)) < investmentAmounts[msg.sender]) revert Errors.InsufficientContractBalanceError()\"\n                        if /** @src 8:15191:15263  \"investmentToken.balanceOf(address(this)) < investmentAmounts[msg.sender]\" */ lt(expr_13, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(keccak256(0, 64)))\n                        /// @src 8:15187:15313  \"if (investmentToken.balanceOf(address(this)) < investmentAmounts[msg.sender]) revert Errors.InsufficientContractBalanceError()\"\n                        {\n                            /// @src 8:15272:15313  \"Errors.InsufficientContractBalanceError()\"\n                            let _90 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:15272:15313  \"Errors.InsufficientContractBalanceError()\"\n                            mstore(_90, shl(224, 0xe23f04e1))\n                            revert(_90, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        mstore(0, /** @src 8:14031:14041  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(_72, /** @src 8:14072:14089  \"investmentAmounts\" */ _71)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _91 := sload(keccak256(0, 64))\n                        let _92 := sload(/** @src 8:14933:14947  \"saleStatistics\" */ 0x1c)\n                        /// @src 8:15329:15458  \"UserRefundedSale(msg.sender, userTierIndex, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, block.timestamp)\"\n                        let _93 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:15329:15458  \"UserRefundedSale(msg.sender, userTierIndex, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, block.timestamp)\"\n                        log1(_93, sub(abi_encode_address_uint256_uint256_uint256_uint256(_93, /** @src 8:14031:14041  \"msg.sender\" */ caller(), /** @src 8:15329:15458  \"UserRefundedSale(msg.sender, userTierIndex, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, block.timestamp)\" */ _86, _91, _92, /** @src 8:14267:14282  \"block.timestamp\" */ timestamp()), /** @src 8:15329:15458  \"UserRefundedSale(msg.sender, userTierIndex, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, block.timestamp)\" */ _93), 0x2d164e733e691270e0cd64a05caed5b1b4971337b7354d65c89d33d9f53c09a7)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(0, /** @src 8:14031:14041  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(_72, /** @src 8:14072:14089  \"investmentAmounts\" */ _71)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _94 := sload(keccak256(0, 64))\n                        /// @src 8:15499:15566  \"investmentToken.transfer(msg.sender, investmentAmounts[msg.sender])\"\n                        let _95 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:15499:15566  \"investmentToken.transfer(msg.sender, investmentAmounts[msg.sender])\"\n                        mstore(_95, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0xa9059cbb))\n                        /// @src 8:15499:15566  \"investmentToken.transfer(msg.sender, investmentAmounts[msg.sender])\"\n                        let _96 := call(gas(), cleaned_15, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0, /** @src 8:15499:15566  \"investmentToken.transfer(msg.sender, investmentAmounts[msg.sender])\" */ _95, sub(abi_encode_address_uint256(add(_95, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:14031:14041  \"msg.sender\" */ caller(), /** @src 8:15499:15566  \"investmentToken.transfer(msg.sender, investmentAmounts[msg.sender])\" */ _94), _95), _95, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _72)\n                        /// @src 8:15499:15566  \"investmentToken.transfer(msg.sender, investmentAmounts[msg.sender])\"\n                        if iszero(_96)\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let pos_10 := mload(64)\n                            returndatacopy(pos_10, 0, returndatasize())\n                            revert(pos_10, returndatasize())\n                        }\n                        /// @src 8:15499:15566  \"investmentToken.transfer(msg.sender, investmentAmounts[msg.sender])\"\n                        let expr_14 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                        /// @src 8:15499:15566  \"investmentToken.transfer(msg.sender, investmentAmounts[msg.sender])\"\n                        if _96\n                        {\n                            let _97 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _72\n                            /// @src 8:15499:15566  \"investmentToken.transfer(msg.sender, investmentAmounts[msg.sender])\"\n                            if gt(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _72, /** @src 8:15499:15566  \"investmentToken.transfer(msg.sender, investmentAmounts[msg.sender])\" */ returndatasize()) { _97 := returndatasize() }\n                            finalize_allocation(_95, _97)\n                            expr_14 := abi_decode_bool_fromMemory(_95, add(_95, _97))\n                        }\n                        /// @src 8:15576:15645  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                        if /** @src 8:15580:15603  \"!successfullyTransfered\" */ iszero(expr_14)\n                        /// @src 8:15576:15645  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                        {\n                            /// @src 8:15612:15645  \"Errors.TokenTransferFailedError()\"\n                            let _98 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:15612:15645  \"Errors.TokenTransferFailedError()\"\n                            mstore(_98, /** @src 8:16573:16606  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                            /// @src 8:15612:15645  \"Errors.TokenTransferFailedError()\"\n                            revert(_98, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        let memPos_15 := mload(64)\n                        mstore(memPos_15, /** @src 8:14286:14290  \"sale\" */ 0x01)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        return(memPos_15, _72)\n                    }\n                    case 0x5e6f6045 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_17 := and(sload(/** @src 8:645:682  \"IDappadVesting public vestingContract\" */ 36), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))\n                        let memPos_16 := mload(64)\n                        mstore(memPos_16, value_17)\n                        return(memPos_16, 32)\n                    }\n                    case 0x5e87e5a6 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0 := abi_decode_address_60557()\n                        /// @src 8:4542:4550  \"_address\"\n                        fun_notZeroAddress(value0)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(0, and(value0, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 8:22828:22845  \"investmentAmounts\" */ 0x28)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _99 := sload(keccak256(0, 64))\n                        let memPos_17 := mload(64)\n                        mstore(memPos_17, _99)\n                        return(memPos_17, 32)\n                    }\n                    case 0x63b8476b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let cleaned_16 := and(sload(/** @src 8:24744:24785  \"sale.saleAddresses.factoryContractAddress\" */ 20), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))\n                        let memPos_18 := mload(64)\n                        mstore(memPos_18, cleaned_16)\n                        return(memPos_18, 32)\n                    }\n                    case 0x67184e28 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let ret := fun_getTierCount()\n                        let memPos_19 := mload(64)\n                        mstore(memPos_19, ret)\n                        return(memPos_19, 32)\n                    }\n                    case 0x6ad1fe02 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPtr_8 := mload(64)\n                        finalize_allocation_60552(memPtr_8)\n                        /// @src 8:413:441  \"IDappadSale.Sale public sale\"\n                        let _100 := 1\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(memPtr_8, sload(/** @src 8:413:441  \"IDappadSale.Sale public sale\" */ _100))\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _101 := sload(2)\n                        let _102 := 32\n                        mstore(add(memPtr_8, _102), _101)\n                        mstore(add(memPtr_8, 64), sload(3))\n                        mstore(add(memPtr_8, 96), sload(4))\n                        mstore(add(memPtr_8, 128), sload(5))\n                        mstore(add(memPtr_8, 160), sload(6))\n                        mstore(add(memPtr_8, 192), sload(7))\n                        mstore(add(memPtr_8, _2), sload(8))\n                        let _103 := sload(9)\n                        let _104 := 256\n                        mstore(add(memPtr_8, _104), iszero(iszero(and(_103, 0xff))))\n                        let _105 := 288\n                        mstore(add(memPtr_8, _105), iszero(iszero(and(shr(8, _103), 0xff))))\n                        let memPtr_9 := mload(64)\n                        let ret_1 := 0\n                        let slotValue := sload(10)\n                        let length_1 := extract_byte_array_length(slotValue)\n                        mstore(memPtr_9, length_1)\n                        switch and(slotValue, /** @src 8:413:441  \"IDappadSale.Sale public sale\" */ _100)\n                        case /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0 {\n                            mstore(add(memPtr_9, _102), and(slotValue, not(255)))\n                            ret_1 := add(add(memPtr_9, shl(5, iszero(iszero(length_1)))), _102)\n                        }\n                        case 1 {\n                            mstore(0, 10)\n                            let dataPos := 89717814153306320011181716697424560163256864414616650038987186496166826726056\n                            let i_3 := 0\n                            for { } lt(i_3, length_1) { i_3 := add(i_3, _102) }\n                            {\n                                mstore(add(add(memPtr_9, i_3), _102), sload(dataPos))\n                                dataPos := add(dataPos, /** @src 8:413:441  \"IDappadSale.Sale public sale\" */ _100)\n                            }\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            ret_1 := add(add(memPtr_9, i_3), _102)\n                        }\n                        finalize_allocation(memPtr_9, sub(ret_1, memPtr_9))\n                        let _106 := 320\n                        mstore(add(memPtr_8, _106), memPtr_9)\n                        let memPtr_10 := mload(64)\n                        finalize_allocation_60549(memPtr_10)\n                        mstore(memPtr_10, sload(/** @src 8:413:441  \"IDappadSale.Sale public sale\" */ 11))\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _107 := sload(12)\n                        let _108 := add(memPtr_10, _102)\n                        mstore(_108, _107)\n                        let memPtr_11 := mload(64)\n                        finalize_allocation_60549(memPtr_11)\n                        mstore(memPtr_11, sload(/** @src 8:413:441  \"IDappadSale.Sale public sale\" */ 13))\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(add(memPtr_11, _102), iszero(iszero(and(sload(14), 0xff))))\n                        let memPtr_12 := mload(64)\n                        finalize_allocation_60549(memPtr_12)\n                        mstore(memPtr_12, sload(/** @src 8:413:441  \"IDappadSale.Sale public sale\" */ 15))\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _109 := sload(16)\n                        let _110 := add(memPtr_12, _102)\n                        mstore(_110, _109)\n                        let memPtr_13 := mload(64)\n                        finalize_allocation_60552(memPtr_13)\n                        let _111 := sub(shl(160, 1), 1)\n                        mstore(memPtr_13, and(sload(/** @src 8:413:441  \"IDappadSale.Sale public sale\" */ 17), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _111))\n                        mstore(add(memPtr_13, _102), and(sload(18), _111))\n                        mstore(add(memPtr_13, 64), and(sload(19), _111))\n                        mstore(add(memPtr_13, 96), and(sload(20), _111))\n                        mstore(add(memPtr_13, 128), and(sload(21), _111))\n                        mstore(add(memPtr_13, 160), and(sload(22), _111))\n                        mstore(add(memPtr_13, 192), and(sload(23), _111))\n                        mstore(add(memPtr_13, _2), and(sload(24), _111))\n                        mstore(add(memPtr_13, _104), and(sload(25), _111))\n                        mstore(add(memPtr_13, _105), and(sload(26), _111))\n                        mstore(add(memPtr_13, _106), and(sload(27), _111))\n                        let memPos_20 := mload(64)\n                        let _112 := 576\n                        mstore(memPos_20, _112)\n                        let tail_1 := abi_encode_struct_SaleDetails(memPtr_8, add(memPos_20, _112))\n                        mstore(add(memPos_20, _102), mload(memPtr_10))\n                        mstore(add(memPos_20, 64), mload(_108))\n                        abi_encode_struct_SaleRefundDetails(memPtr_11, add(memPos_20, 96))\n                        mstore(add(memPos_20, 160), mload(memPtr_12))\n                        mstore(add(memPos_20, 192), mload(_110))\n                        abi_encode_struct_SaleAddresses(memPtr_13, add(memPos_20, _2))\n                        return(memPos_20, sub(tail_1, memPos_20))\n                    }\n                    case 0x6ad4f603 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value_18 := calldataload(4)\n                        let offset_2 := calldataload(36)\n                        let _113 := 0xffffffffffffffff\n                        if gt(offset_2, _113) { revert(0, 0) }\n                        let value1_2, value2 := abi_decode_array_bytes32_dyn_calldata(add(4, offset_2), calldatasize())\n                        let offset_3 := calldataload(68)\n                        if gt(offset_3, _113) { revert(0, 0) }\n                        let value3, value4 := abi_decode_array_bytes32_dyn_calldata(add(4, offset_3), calldatasize())\n                        /// @src 8:4771:4852  \"modifier whenSaleIsNotPaused() {...\"\n                        fun_whenSaleIsNotPaused()\n                        /// @src 8:4542:4550  \"_address\"\n                        fun_notZeroAddress(/** @src 8:7085:7095  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _114 := sub(shl(160, 1), 1)\n                        let cleaned_17 := and(sload(/** @src 8:7116:7131  \"investmentToken\" */ 0x22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _114)\n                        /// @src 8:4995:5001  \"amount\"\n                        fun_hasEnoughAllowance(cleaned_17, /** @src 8:7085:7095  \"msg.sender\" */ caller(), /** @src 8:4995:5001  \"amount\" */ value_18)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(0, /** @src 8:7085:7095  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _115 := 32\n                        mstore(_115, /** @src 8:7182:7197  \"registerDetails\" */ 0x25)\n                        /// @src 8:7178:7260  \"if(!registerDetails[msg.sender].registered) revert Errors.UserNotRegisteredError()\"\n                        if /** @src 8:7181:7220  \"!registerDetails[msg.sender].registered\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:7182:7220  \"registerDetails[msg.sender].registered\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), /** @src 8:7182:7220  \"registerDetails[msg.sender].registered\" */ 2)), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xff))\n                        /// @src 8:7178:7260  \"if(!registerDetails[msg.sender].registered) revert Errors.UserNotRegisteredError()\"\n                        {\n                            /// @src 8:7229:7260  \"Errors.UserNotRegisteredError()\"\n                            let _116 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:7229:7260  \"Errors.UserNotRegisteredError()\"\n                            mstore(_116, shl(226, 0x141d51c1))\n                            revert(_116, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:7270:7355  \"if (block.timestamp < sale.saleDetails.saleStart) revert Errors.SaleNotStartedError()\"\n                        if /** @src 8:7274:7318  \"block.timestamp < sale.saleDetails.saleStart\" */ lt(/** @src 8:7274:7289  \"block.timestamp\" */ timestamp(), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(4))\n                        /// @src 8:7270:7355  \"if (block.timestamp < sale.saleDetails.saleStart) revert Errors.SaleNotStartedError()\"\n                        {\n                            /// @src 8:7327:7355  \"Errors.SaleNotStartedError()\"\n                            let _117 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:7327:7355  \"Errors.SaleNotStartedError()\"\n                            mstore(_117, shl(224, 0x6f36ba6f))\n                            revert(_117, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        let _118 := sload(/** @src 8:7378:7394  \"sale.fcfsDetails\" */ 11)\n                        /// @src 8:7374:7689  \"if (sale.fcfsDetails.fcfsSaleDuration > 0) {...\"\n                        switch /** @src 8:7378:7415  \"sale.fcfsDetails.fcfsSaleDuration > 0\" */ iszero(iszero(_118))\n                        case /** @src 8:7374:7689  \"if (sale.fcfsDetails.fcfsSaleDuration > 0) {...\" */ 0 {\n                            /// @src 8:7592:7678  \"if (block.timestamp >= sale.saleDetails.saleEnd) revert Errors.SaleAlreadyEndedError()\"\n                            if /** @src 8:7596:7639  \"block.timestamp >= sale.saleDetails.saleEnd\" */ iszero(lt(/** @src 8:7274:7289  \"block.timestamp\" */ timestamp(), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:7615:7639  \"sale.saleDetails.saleEnd\" */ 5)))\n                            /// @src 8:7592:7678  \"if (block.timestamp >= sale.saleDetails.saleEnd) revert Errors.SaleAlreadyEndedError()\"\n                            {\n                                /// @src 8:7648:7678  \"Errors.SaleAlreadyEndedError()\"\n                                let _119 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:7648:7678  \"Errors.SaleAlreadyEndedError()\"\n                                mstore(_119, shl(224, 0x6b62c0a5))\n                                revert(_119, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                            }\n                        }\n                        default /// @src 8:7374:7689  \"if (sale.fcfsDetails.fcfsSaleDuration > 0) {...\"\n                        {\n                            /// @src 8:7431:7561  \"if (block.timestamp >= (sale.saleDetails.saleEnd - sale.fcfsDetails.fcfsSaleDuration)) revert Errors.FCFSSaleAlreadyStartedError()\"\n                            if /** @src 8:7435:7516  \"block.timestamp >= (sale.saleDetails.saleEnd - sale.fcfsDetails.fcfsSaleDuration)\" */ iszero(lt(/** @src 8:7274:7289  \"block.timestamp\" */ timestamp(), /** @src 8:7455:7515  \"sale.saleDetails.saleEnd - sale.fcfsDetails.fcfsSaleDuration\" */ checked_sub_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:7455:7479  \"sale.saleDetails.saleEnd\" */ 5), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _118)))\n                            /// @src 8:7431:7561  \"if (block.timestamp >= (sale.saleDetails.saleEnd - sale.fcfsDetails.fcfsSaleDuration)) revert Errors.FCFSSaleAlreadyStartedError()\"\n                            {\n                                /// @src 8:7525:7561  \"Errors.FCFSSaleAlreadyStartedError()\"\n                                let _120 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:7525:7561  \"Errors.FCFSSaleAlreadyStartedError()\"\n                                mstore(_120, shl(224, 0x61a63aad))\n                                revert(_120, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                            }\n                        }\n                        /// @src 8:7707:7758  \"if (amount == 0) revert Errors.InvalidAmountError()\"\n                        if /** @src 8:7711:7722  \"amount == 0\" */ iszero(value_18)\n                        /// @src 8:7707:7758  \"if (amount == 0) revert Errors.InvalidAmountError()\"\n                        {\n                            /// @src 8:7731:7758  \"Errors.InvalidAmountError()\"\n                            let _121 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:7731:7758  \"Errors.InvalidAmountError()\"\n                            mstore(_121, shl(227, 0x0f51ac85))\n                            revert(_121, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:7769:7925  \"if (sale.saleAddresses.nftContractAddress != address(0)) {...\"\n                        if /** @src 8:7773:7824  \"sale.saleAddresses.nftContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:7773:7810  \"sale.saleAddresses.nftContractAddress\" */ 21), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _114)))\n                        /// @src 8:7769:7925  \"if (sale.saleAddresses.nftContractAddress != address(0)) {...\"\n                        {\n                            /// @src 8:4542:4550  \"_address\"\n                            fun_notZeroAddress(/** @src 8:7085:7095  \"msg.sender\" */ caller())\n                            /// @src 8:7840:7914  \"if (_getUserNftBalance(msg.sender) == 0) revert Errors.UserHasNoNFTError()\"\n                            if /** @src 8:7844:7879  \"_getUserNftBalance(msg.sender) == 0\" */ iszero(/** @src 8:24954:25275  \"function _getUserNftBalance(address userAddress) internal view notZeroAddress(userAddress) returns (uint256) {...\" */ fun_getUserNftBalance_inner())\n                            /// @src 8:7840:7914  \"if (_getUserNftBalance(msg.sender) == 0) revert Errors.UserHasNoNFTError()\"\n                            {\n                                /// @src 8:7888:7914  \"Errors.UserHasNoNFTError()\"\n                                let _122 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:7888:7914  \"Errors.UserHasNoNFTError()\"\n                                mstore(_122, /** @src 8:14814:14840  \"Errors.UserHasNoNFTError()\" */ shl(225, 0x049a4b73))\n                                /// @src 8:7888:7914  \"Errors.UserHasNoNFTError()\"\n                                revert(_122, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                            }\n                        }\n                        mstore(0, /** @src 8:7085:7095  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(_115, /** @src 8:7182:7197  \"registerDetails\" */ 0x25)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _123 := sload(/** @src 8:7959:7996  \"registerDetails[msg.sender].tierIndex\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), 1))\n                        /// @src 8:8015:8351  \"if(userTierIndex == 0) {...\"\n                        if /** @src 8:8018:8036  \"userTierIndex == 0\" */ iszero(_123)\n                        /// @src 8:8015:8351  \"if(userTierIndex == 0) {...\"\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(0, 0)\n                            mstore(_115, /** @src 8:8056:8067  \"tierDetails\" */ 0x26)\n                            /// @src 8:8052:8341  \"if (tierDetails[0].whitelistMerkleRoot != bytes32(0)) {...\"\n                            switch /** @src 8:8056:8104  \"tierDetails[0].whitelistMerkleRoot != bytes32(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:8056:8090  \"tierDetails[0].whitelistMerkleRoot\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), 4))))\n                            case /** @src 8:8052:8341  \"if (tierDetails[0].whitelistMerkleRoot != bytes32(0)) {...\" */ 0 {\n                                /// @src 8:8284:8326  \"Errors.TierOneCannotJoinStakerRoundError()\"\n                                let _124 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:8284:8326  \"Errors.TierOneCannotJoinStakerRoundError()\"\n                                mstore(_124, shl(224, 0x6f6fd835))\n                                revert(_124, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                            }\n                            default /// @src 8:8052:8341  \"if (tierDetails[0].whitelistMerkleRoot != bytes32(0)) {...\"\n                            {\n                                /// @src 8:8124:8238  \"if (!checkWhitelistEligibility(msg.sender, userTierIndex, whitelistProof)) revert Errors.UserNotWhitelistedError()\"\n                                if /** @src 8:8128:8197  \"!checkWhitelistEligibility(msg.sender, userTierIndex, whitelistProof)\" */ iszero(/** @src 8:22182:22186  \"bool\" */ modifier_notZeroAddress(/** @src 8:7085:7095  \"msg.sender\" */ caller(), /** @src 8:8129:8197  \"checkWhitelistEligibility(msg.sender, userTierIndex, whitelistProof)\" */ _123, value1_2, value2))\n                                /// @src 8:8124:8238  \"if (!checkWhitelistEligibility(msg.sender, userTierIndex, whitelistProof)) revert Errors.UserNotWhitelistedError()\"\n                                {\n                                    /// @src 8:8206:8238  \"Errors.UserNotWhitelistedError()\"\n                                    let _125 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:8206:8238  \"Errors.UserNotWhitelistedError()\"\n                                    mstore(_125, shl(226, 0x05880f01))\n                                    revert(_125, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                            }\n                        }\n                        /// @src 8:8365:8402  \"investmentToken.balanceOf(msg.sender)\"\n                        let _126 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:8365:8402  \"investmentToken.balanceOf(msg.sender)\"\n                        mstore(_126, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 8:8365:8402  \"investmentToken.balanceOf(msg.sender)\" */ add(_126, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:7085:7095  \"msg.sender\" */ caller())\n                        /// @src 8:8365:8402  \"investmentToken.balanceOf(msg.sender)\"\n                        let _127 := staticcall(gas(), cleaned_17, _126, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36, /** @src 8:8365:8402  \"investmentToken.balanceOf(msg.sender)\" */ _126, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _115)\n                        /// @src 8:8365:8402  \"investmentToken.balanceOf(msg.sender)\"\n                        if iszero(_127)\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let pos_11 := mload(64)\n                            returndatacopy(pos_11, 0, returndatasize())\n                            revert(pos_11, returndatasize())\n                        }\n                        /// @src 8:8365:8402  \"investmentToken.balanceOf(msg.sender)\"\n                        let expr_15 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                        /// @src 8:8365:8402  \"investmentToken.balanceOf(msg.sender)\"\n                        if _127\n                        {\n                            let _128 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _115\n                            /// @src 8:8365:8402  \"investmentToken.balanceOf(msg.sender)\"\n                            if gt(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _115, /** @src 8:8365:8402  \"investmentToken.balanceOf(msg.sender)\" */ returndatasize()) { _128 := returndatasize() }\n                            finalize_allocation(_126, _128)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            if slt(sub(/** @src 8:8365:8402  \"investmentToken.balanceOf(msg.sender)\" */ add(_126, _128), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _126), _115) { revert(0, 0) }\n                            /// @src 8:8365:8402  \"investmentToken.balanceOf(msg.sender)\"\n                            expr_15 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_126)\n                        }\n                        /// @src 8:8361:8453  \"if (investmentToken.balanceOf(msg.sender) < amount) revert Errors.InsufficientBalanceError()\"\n                        if /** @src 8:8365:8411  \"investmentToken.balanceOf(msg.sender) < amount\" */ lt(expr_15, value_18)\n                        /// @src 8:8361:8453  \"if (investmentToken.balanceOf(msg.sender) < amount) revert Errors.InsufficientBalanceError()\"\n                        {\n                            /// @src 8:8420:8453  \"Errors.InsufficientBalanceError()\"\n                            let _129 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:8420:8453  \"Errors.InsufficientBalanceError()\"\n                            mstore(_129, /** @src 8:15952:15985  \"Errors.InsufficientBalanceError()\" */ shl(224, 0x384d3c59))\n                            /// @src 8:8420:8453  \"Errors.InsufficientBalanceError()\"\n                            revert(_129, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        mstore(0, _123)\n                        /// @src 8:8476:8487  \"tierDetails\"\n                        let _130 := 0x26\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(_115, /** @src 8:8476:8487  \"tierDetails\" */ _130)\n                        /// @src 8:8463:8572  \"if (amount < tierDetails[userTierIndex].minInvestmentAmount) revert Errors.MinimumInvestmentNotReachedError()\"\n                        if /** @src 8:8467:8522  \"amount < tierDetails[userTierIndex].minInvestmentAmount\" */ lt(value_18, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(keccak256(0, 64)))\n                        /// @src 8:8463:8572  \"if (amount < tierDetails[userTierIndex].minInvestmentAmount) revert Errors.MinimumInvestmentNotReachedError()\"\n                        {\n                            /// @src 8:8531:8572  \"Errors.MinimumInvestmentNotReachedError()\"\n                            let _131 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:8531:8572  \"Errors.MinimumInvestmentNotReachedError()\"\n                            mstore(_131, shl(224, 0xba4c4493))\n                            revert(_131, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:8587:8687  \"sale.ticketDetails.ticketMerkleRoot != bytes32(0) && checkTicketEligibility(msg.sender, ticketProof)\"\n                        let expr_16 := /** @src 8:8587:8636  \"sale.ticketDetails.ticketMerkleRoot != bytes32(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:8587:8622  \"sale.ticketDetails.ticketMerkleRoot\" */ 16)))\n                        /// @src 8:8587:8687  \"sale.ticketDetails.ticketMerkleRoot != bytes32(0) && checkTicketEligibility(msg.sender, ticketProof)\"\n                        if expr_16\n                        {\n                            expr_16 := /** @src 8:22509:22513  \"bool\" */ modifier_notZeroAddress_60592(/** @src 8:7085:7095  \"msg.sender\" */ caller(), /** @src 8:8640:8687  \"checkTicketEligibility(msg.sender, ticketProof)\" */ value3, value4)\n                        }\n                        /// @src 8:8583:9100  \"if (sale.ticketDetails.ticketMerkleRoot != bytes32(0) && checkTicketEligibility(msg.sender, ticketProof)) {...\"\n                        switch expr_16\n                        case 0 {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(0, /** @src 8:7085:7095  \"msg.sender\" */ caller())\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(_115, /** @src 8:8955:8972  \"investmentAmounts\" */ 0x28)\n                            /// @src 8:8955:8993  \"investmentAmounts[msg.sender] + amount\"\n                            let expr_17 := checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(keccak256(0, 64)), /** @src 8:8955:8993  \"investmentAmounts[msg.sender] + amount\" */ value_18)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(0, _123)\n                            mstore(_115, /** @src 8:8476:8487  \"tierDetails\" */ _130)\n                            /// @src 8:8951:9089  \"if (investmentAmounts[msg.sender] + amount > tierDetails[userTierIndex].maxInvestmentAmount) revert Errors.MaximumInvestmentReachedError()\"\n                            if /** @src 8:8955:9042  \"investmentAmounts[msg.sender] + amount > tierDetails[userTierIndex].maxInvestmentAmount\" */ gt(expr_17, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:8996:9042  \"tierDetails[userTierIndex].maxInvestmentAmount\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), 1)))\n                            /// @src 8:8951:9089  \"if (investmentAmounts[msg.sender] + amount > tierDetails[userTierIndex].maxInvestmentAmount) revert Errors.MaximumInvestmentReachedError()\"\n                            {\n                                /// @src 8:9051:9089  \"Errors.MaximumInvestmentReachedError()\"\n                                let _132 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:9051:9089  \"Errors.MaximumInvestmentReachedError()\"\n                                mstore(_132, shl(225, 0x765aa7df))\n                                revert(_132, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                            }\n                        }\n                        default /// @src 8:8583:9100  \"if (sale.ticketDetails.ticketMerkleRoot != bytes32(0) && checkTicketEligibility(msg.sender, ticketProof)) {...\"\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(0, /** @src 8:7085:7095  \"msg.sender\" */ caller())\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(_115, /** @src 8:8707:8724  \"investmentAmounts\" */ 0x28)\n                            /// @src 8:8707:8745  \"investmentAmounts[msg.sender] + amount\"\n                            let expr_18 := checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(keccak256(0, 64)), /** @src 8:8707:8745  \"investmentAmounts[msg.sender] + amount\" */ value_18)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(0, _123)\n                            mstore(_115, /** @src 8:8476:8487  \"tierDetails\" */ _130)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let dataSlot_3 := keccak256(0, 64)\n                            let _133 := sload(/** @src 8:8749:8795  \"tierDetails[userTierIndex].maxInvestmentAmount\" */ add(/** @src 8:8749:8775  \"tierDetails[userTierIndex]\" */ dataSlot_3, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 1))\n                            let _134 := sload(/** @src 8:8587:8605  \"sale.ticketDetails\" */ 15)\n                            /// @src 8:8703:8920  \"if (investmentAmounts[msg.sender] + amount > (tierDetails[userTierIndex].maxInvestmentAmount + (sale.ticketDetails.ticketPrice * tierDetails[userTierIndex].ticketAmount))) revert Errors.MaximumInvestmentReachedError()\"\n                            if /** @src 8:8707:8873  \"investmentAmounts[msg.sender] + amount > (tierDetails[userTierIndex].maxInvestmentAmount + (sale.ticketDetails.ticketPrice * tierDetails[userTierIndex].ticketAmount))\" */ gt(expr_18, /** @src 8:8749:8872  \"tierDetails[userTierIndex].maxInvestmentAmount + (sale.ticketDetails.ticketPrice * tierDetails[userTierIndex].ticketAmount)\" */ checked_add_uint256(_133, /** @src 8:8799:8871  \"sale.ticketDetails.ticketPrice * tierDetails[userTierIndex].ticketAmount\" */ checked_mul_uint256(_134, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:8832:8871  \"tierDetails[userTierIndex].ticketAmount\" */ add(/** @src 8:8832:8858  \"tierDetails[userTierIndex]\" */ dataSlot_3, /** @src 8:7292:7318  \"sale.saleDetails.saleStart\" */ 3)))))\n                            /// @src 8:8703:8920  \"if (investmentAmounts[msg.sender] + amount > (tierDetails[userTierIndex].maxInvestmentAmount + (sale.ticketDetails.ticketPrice * tierDetails[userTierIndex].ticketAmount))) revert Errors.MaximumInvestmentReachedError()\"\n                            {\n                                /// @src 8:8882:8920  \"Errors.MaximumInvestmentReachedError()\"\n                                let _135 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:8882:8920  \"Errors.MaximumInvestmentReachedError()\"\n                                mstore(_135, /** @src 8:9051:9089  \"Errors.MaximumInvestmentReachedError()\" */ shl(225, 0x765aa7df))\n                                /// @src 8:8882:8920  \"Errors.MaximumInvestmentReachedError()\"\n                                revert(_135, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                            }\n                        }\n                        mstore(0, _123)\n                        mstore(_115, /** @src 8:8476:8487  \"tierDetails\" */ _130)\n                        /// @src 8:9114:9171  \"tierDetails[userTierIndex].totalInvestmentAmount + amount\"\n                        let expr_19 := checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:9114:9162  \"tierDetails[userTierIndex].totalInvestmentAmount\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), /** @src 8:9114:9162  \"tierDetails[userTierIndex].totalInvestmentAmount\" */ 5)), /** @src 8:9114:9171  \"tierDetails[userTierIndex].totalInvestmentAmount + amount\" */ value_18)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(0, _123)\n                        mstore(_115, /** @src 8:8476:8487  \"tierDetails\" */ _130)\n                        /// @src 8:9110:9271  \"if (tierDetails[userTierIndex].totalInvestmentAmount + amount > tierDetails[userTierIndex].tierMaxInvestmentAmount) revert Errors.MaxTierInvestmentReachedError()\"\n                        if /** @src 8:9114:9224  \"tierDetails[userTierIndex].totalInvestmentAmount + amount > tierDetails[userTierIndex].tierMaxInvestmentAmount\" */ gt(expr_19, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:9174:9224  \"tierDetails[userTierIndex].tierMaxInvestmentAmount\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), /** @src 8:7182:7220  \"registerDetails[msg.sender].registered\" */ 2)))\n                        /// @src 8:9110:9271  \"if (tierDetails[userTierIndex].totalInvestmentAmount + amount > tierDetails[userTierIndex].tierMaxInvestmentAmount) revert Errors.MaxTierInvestmentReachedError()\"\n                        {\n                            /// @src 8:9233:9271  \"Errors.MaxTierInvestmentReachedError()\"\n                            let _136 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:9233:9271  \"Errors.MaxTierInvestmentReachedError()\"\n                            mstore(_136, shl(227, 0x15054d3f))\n                            revert(_136, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        let _137 := sload(/** @src 8:9285:9299  \"saleStatistics\" */ 0x1c)\n                        /// @src 8:9285:9330  \"saleStatistics.totalInvestmentAmount + amount\"\n                        let expr_20 := checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _137, /** @src 8:9285:9330  \"saleStatistics.totalInvestmentAmount + amount\" */ value_18)\n                        /// @src 8:9281:9417  \"if (saleStatistics.totalInvestmentAmount + amount > sale.saleDetails.maxInvestmentAmount) revert Errors.MaxTotalInvestmentReachedError()\"\n                        if /** @src 8:9285:9369  \"saleStatistics.totalInvestmentAmount + amount > sale.saleDetails.maxInvestmentAmount\" */ gt(expr_20, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:9333:9369  \"sale.saleDetails.maxInvestmentAmount\" */ 7))\n                        /// @src 8:9281:9417  \"if (saleStatistics.totalInvestmentAmount + amount > sale.saleDetails.maxInvestmentAmount) revert Errors.MaxTotalInvestmentReachedError()\"\n                        {\n                            /// @src 8:9378:9417  \"Errors.MaxTotalInvestmentReachedError()\"\n                            let _138 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:9378:9417  \"Errors.MaxTotalInvestmentReachedError()\"\n                            mstore(_138, shl(224, 0xf39595f9))\n                            revert(_138, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        sstore(/** @src 8:9285:9299  \"saleStatistics\" */ 0x1c, /** @src 8:9436:9482  \"saleStatistics.totalInvestmentAmount += amount\" */ checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _137, /** @src 8:9436:9482  \"saleStatistics.totalInvestmentAmount += amount\" */ value_18))\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(0, /** @src 8:7085:7095  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(_115, /** @src 8:9496:9513  \"investmentAmounts\" */ 0x28)\n                        /// @src 8:9493:9651  \"if(investmentAmounts[msg.sender] == 0) {...\"\n                        if /** @src 8:9496:9530  \"investmentAmounts[msg.sender] == 0\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(keccak256(0, 64)))\n                        /// @src 8:9493:9651  \"if(investmentAmounts[msg.sender] == 0) {...\"\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            sstore(/** @src 8:9546:9578  \"saleStatistics.totalParticipants\" */ 30, /** @src 8:9546:9580  \"saleStatistics.totalParticipants++\" */ increment_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:9546:9578  \"saleStatistics.totalParticipants\" */ 30)))\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(0, _123)\n                            mstore(_115, /** @src 8:8476:8487  \"tierDetails\" */ _130)\n                            /// @src 8:9594:9638  \"tierDetails[userTierIndex].totalParticipants\"\n                            let _139 := add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), /** @src 8:9333:9369  \"sale.saleDetails.maxInvestmentAmount\" */ 6)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            sstore(_139, /** @src 8:9594:9640  \"tierDetails[userTierIndex].totalParticipants++\" */ increment_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:9594:9640  \"tierDetails[userTierIndex].totalParticipants++\" */ _139)))\n                        }\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(0, /** @src 8:7085:7095  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(_115, /** @src 8:9496:9513  \"investmentAmounts\" */ 0x28)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let dataSlot_4 := keccak256(0, 64)\n                        sstore(dataSlot_4, /** @src 8:9661:9700  \"investmentAmounts[msg.sender] += amount\" */ checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:9661:9700  \"investmentAmounts[msg.sender] += amount\" */ dataSlot_4), value_18))\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(0, _123)\n                        mstore(_115, /** @src 8:8476:8487  \"tierDetails\" */ _130)\n                        /// @src 8:9710:9758  \"tierDetails[userTierIndex].totalInvestmentAmount\"\n                        let _140 := add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), /** @src 8:9114:9162  \"tierDetails[userTierIndex].totalInvestmentAmount\" */ 5)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        sstore(_140, /** @src 8:9710:9768  \"tierDetails[userTierIndex].totalInvestmentAmount += amount\" */ checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:9710:9768  \"tierDetails[userTierIndex].totalInvestmentAmount += amount\" */ _140), value_18))\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(0, /** @src 8:7085:7095  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(_115, /** @src 8:9496:9513  \"investmentAmounts\" */ 0x28)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _141 := sload(keccak256(0, 64))\n                        let _142 := sload(/** @src 8:9285:9299  \"saleStatistics\" */ 0x1c)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _143 := sload(/** @src 8:9903:9935  \"saleStatistics.totalParticipants\" */ 30)\n                        /// @src 8:4542:4550  \"_address\"\n                        fun_notZeroAddress(/** @src 8:7085:7095  \"msg.sender\" */ caller())\n                        /// @src 8:4561:4562  \"_\"\n                        let _144 := /** @src 8:24954:25275  \"function _getUserNftBalance(address userAddress) internal view notZeroAddress(userAddress) returns (uint256) {...\" */ fun_getUserNftBalance_inner()\n                        /// @src 8:9784:9985  \"UserJoinedSale(msg.sender, userTierIndex, amount, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, saleStatistics.totalParticipants, block.timestamp, _getUserNftBalance(msg.sender))\"\n                        let _145 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:9784:9985  \"UserJoinedSale(msg.sender, userTierIndex, amount, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, saleStatistics.totalParticipants, block.timestamp, _getUserNftBalance(msg.sender))\"\n                        log1(_145, sub(abi_encode_address_uint256_uint256_uint256_uint256_uint256_uint256_uint256(_145, /** @src 8:7085:7095  \"msg.sender\" */ caller(), /** @src 8:9784:9985  \"UserJoinedSale(msg.sender, userTierIndex, amount, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, saleStatistics.totalParticipants, block.timestamp, _getUserNftBalance(msg.sender))\" */ _123, value_18, _141, _142, _143, /** @src 8:7274:7289  \"block.timestamp\" */ timestamp(), /** @src 8:9784:9985  \"UserJoinedSale(msg.sender, userTierIndex, amount, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, saleStatistics.totalParticipants, block.timestamp, _getUserNftBalance(msg.sender))\" */ _144), _145), 0x3077514c17881ba96cff640eeeb00482d42c4d374fb0d3a7fb42c9f06c4591d5)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let cleaned_18 := and(sload(/** @src 8:7116:7131  \"investmentToken\" */ 0x22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _114)\n                        /// @src 8:10026:10089  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                        let _146 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:10026:10089  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                        mstore(_146, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x23b872dd))\n                        /// @src 8:10026:10089  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                        let _147 := call(gas(), cleaned_18, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0, /** @src 8:10026:10089  \"investmentToken.transferFrom(msg.sender, address(this), amount)\" */ _146, sub(abi_encode_address_address_uint256(add(_146, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:7085:7095  \"msg.sender\" */ caller(), /** @src 8:10075:10079  \"this\" */ address(), /** @src 8:10026:10089  \"investmentToken.transferFrom(msg.sender, address(this), amount)\" */ value_18), _146), _146, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _115)\n                        /// @src 8:10026:10089  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                        if iszero(_147)\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let pos_12 := mload(64)\n                            returndatacopy(pos_12, 0, returndatasize())\n                            revert(pos_12, returndatasize())\n                        }\n                        /// @src 8:10026:10089  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                        let expr_21 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                        /// @src 8:10026:10089  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                        if _147\n                        {\n                            let _148 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _115\n                            /// @src 8:10026:10089  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                            if gt(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _115, /** @src 8:10026:10089  \"investmentToken.transferFrom(msg.sender, address(this), amount)\" */ returndatasize()) { _148 := returndatasize() }\n                            finalize_allocation(_146, _148)\n                            expr_21 := abi_decode_bool_fromMemory(_146, add(_146, _148))\n                        }\n                        /// @src 8:10099:10168  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                        if /** @src 8:10103:10126  \"!successfullyTransfered\" */ iszero(expr_21)\n                        /// @src 8:10099:10168  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                        {\n                            /// @src 8:10135:10168  \"Errors.TokenTransferFailedError()\"\n                            let _149 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:10135:10168  \"Errors.TokenTransferFailedError()\"\n                            mstore(_149, /** @src 8:16573:16606  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                            /// @src 8:10135:10168  \"Errors.TokenTransferFailedError()\"\n                            revert(_149, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:10183:10277  \"sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0)\"\n                        let expr_22 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:10183:10220  \"sale.saleDetails.registerTokenEnabled\" */ 9), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xff)\n                        /// @src 8:10183:10277  \"sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0)\"\n                        if expr_22\n                        {\n                            expr_22 := /** @src 8:10224:10277  \"sale.saleAddresses.registerTokenAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:10224:10263  \"sale.saleAddresses.registerTokenAddress\" */ 18), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _114)))\n                        }\n                        /// @src 8:10183:10332  \"sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0) && registerDetails[msg.sender].registerTokenAmount > 0\"\n                        let expr_23 := expr_22\n                        if expr_22\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(0, /** @src 8:7085:7095  \"msg.sender\" */ caller())\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(_115, /** @src 8:7182:7197  \"registerDetails\" */ 0x25)\n                            /// @src 8:10183:10332  \"sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0) && registerDetails[msg.sender].registerTokenAmount > 0\"\n                            expr_23 := /** @src 8:10281:10332  \"registerDetails[msg.sender].registerTokenAmount > 0\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(keccak256(0, 64))))\n                        }\n                        /// @src 8:10179:10797  \"if (sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0) && registerDetails[msg.sender].registerTokenAmount > 0) {...\"\n                        if expr_23\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(0, /** @src 8:7085:7095  \"msg.sender\" */ caller())\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(_115, /** @src 8:7182:7197  \"registerDetails\" */ 0x25)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let _150 := sload(keccak256(0, 64))\n                            sstore(_115, /** @src 8:10440:10534  \"saleStatistics.totalRegisterTokenAmountLeft -= registerDetails[msg.sender].registerTokenAmount\" */ checked_sub_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(_115), /** @src 8:10487:10534  \"registerDetails[msg.sender].registerTokenAmount\" */ _150))\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(0, /** @src 8:7085:7095  \"msg.sender\" */ caller())\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(_115, /** @src 8:7182:7197  \"registerDetails\" */ 0x25)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            sstore(keccak256(0, 64), 0)\n                            let cleaned_19 := and(sload(/** @src 8:10646:10659  \"registerToken\" */ 0x21), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _114)\n                            /// @src 8:10646:10701  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                            let _151 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:10646:10701  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                            mstore(_151, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0xa9059cbb))\n                            /// @src 8:10646:10701  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                            let _152 := call(gas(), cleaned_19, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0, /** @src 8:10646:10701  \"registerToken.transfer(msg.sender, registerTokenAmount)\" */ _151, sub(abi_encode_address_uint256(add(_151, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:7085:7095  \"msg.sender\" */ caller(), /** @src 8:10646:10701  \"registerToken.transfer(msg.sender, registerTokenAmount)\" */ _150), _151), _151, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _115)\n                            /// @src 8:10646:10701  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                            if iszero(_152)\n                            {\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let pos_13 := mload(64)\n                                returndatacopy(pos_13, 0, returndatasize())\n                                revert(pos_13, returndatasize())\n                            }\n                            /// @src 8:10646:10701  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                            let expr_24 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                            /// @src 8:10646:10701  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                            if _152\n                            {\n                                let _153 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _115\n                                /// @src 8:10646:10701  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                                if gt(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _115, /** @src 8:10646:10701  \"registerToken.transfer(msg.sender, registerTokenAmount)\" */ returndatasize()) { _153 := returndatasize() }\n                                finalize_allocation(_151, _153)\n                                expr_24 := abi_decode_bool_fromMemory(_151, add(_151, _153))\n                            }\n                            /// @src 8:10715:10786  \"if (!successfullyTransferedRA) revert Errors.TokenTransferFailedError()\"\n                            if /** @src 8:10719:10744  \"!successfullyTransferedRA\" */ iszero(expr_24)\n                            /// @src 8:10715:10786  \"if (!successfullyTransferedRA) revert Errors.TokenTransferFailedError()\"\n                            {\n                                /// @src 8:10753:10786  \"Errors.TokenTransferFailedError()\"\n                                let _154 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:10753:10786  \"Errors.TokenTransferFailedError()\"\n                                mstore(_154, /** @src 8:16573:16606  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                                /// @src 8:10753:10786  \"Errors.TokenTransferFailedError()\"\n                                revert(_154, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                            }\n                        }\n                        let memPos_21 := mload(64)\n                        mstore(memPos_21, 1)\n                        return(memPos_21, _115)\n                    }\n                    case 0x74991569 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0_1 := abi_decode_address_60557()\n                        /// @src 8:4738:4746  \"_address\"\n                        fun_onlyOwnerOrAdmin(/** @src 8:18478:18488  \"msg.sender\" */ caller())\n                        /// @src 8:18515:18581  \"sale.saleAddresses.vestingContractAddress = vestingContractAddress\"\n                        update_storage_value_offsett_address_to_address(value0_1)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _155 := and(/** @src 8:18596:18632  \"vestingContractAddress != address(0)\" */ value0_1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))\n                        /// @src 8:18592:18715  \"if (vestingContractAddress != address(0)) {...\"\n                        if /** @src 8:18596:18632  \"vestingContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _155))\n                        /// @src 8:18592:18715  \"if (vestingContractAddress != address(0)) {...\"\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            sstore(/** @src 8:18648:18704  \"vestingContract = IDappadVesting(vestingContractAddress)\" */ 0x24, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ or(and(sload(/** @src 8:18648:18704  \"vestingContract = IDappadVesting(vestingContractAddress)\" */ 0x24), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(160, 0xffffffffffffffffffffffff)), _155))\n                        }\n                        /// @src 8:18730:18776  \"VestingContractUpdated(vestingContractAddress)\"\n                        let _156 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        mstore(_156, _155)\n                        /// @src 8:18730:18776  \"VestingContractUpdated(vestingContractAddress)\"\n                        log1(_156, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32, /** @src 8:18730:18776  \"VestingContractUpdated(vestingContractAddress)\" */ 0x14e2fa1723f00282251323682126d9621e96707e56748f1f0c101fca472b37e9)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let memPos_22 := mload(64)\n                        mstore(memPos_22, /** @src 8:18515:18519  \"sale\" */ 0x01)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        return(memPos_22, 32)\n                    }\n                    case 0x85c06faa {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_19 := and(sload(/** @src 8:22945:22977  \"sale.refundDetails.refundEnabled\" */ 14), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xff)\n                        let memPos_23 := mload(64)\n                        mstore(memPos_23, iszero(iszero(value_19)))\n                        return(memPos_23, 32)\n                    }\n                    case 0x8d92becd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_20 := calldataload(4)\n                        let _157 := iszero(iszero(value_20))\n                        if iszero(eq(value_20, _157)) { revert(0, 0) }\n                        /// @src 8:4738:4746  \"_address\"\n                        fun_onlyOwnerOrAdmin(/** @src 8:18235:18245  \"msg.sender\" */ caller())\n                        /// @src 8:18272:18312  \"sale.saleDetails.salePaused = salePaused\"\n                        update_storage_value_offsett_bool_to_bool_60554(value_20)\n                        /// @src 8:18328:18357  \"SalePausedUpdated(salePaused)\"\n                        let _158 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        mstore(_158, _157)\n                        /// @src 8:18328:18357  \"SalePausedUpdated(salePaused)\"\n                        log1(_158, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32, /** @src 8:18328:18357  \"SalePausedUpdated(salePaused)\" */ 0xee255461932c47fb16cadcbfbbabc370146f9cea6f622aea8131cde4cdeff5e9)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let memPos_24 := mload(64)\n                        mstore(memPos_24, /** @src 8:18272:18276  \"sale\" */ 0x01)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        return(memPos_24, 32)\n                    }\n                    case 0x91d14854 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1_3 := abi_decode_address()\n                        mstore(0, calldataload(4))\n                        mstore(32, 0)\n                        let _159 := keccak256(0, 64)\n                        mstore(0, and(value1_3, sub(shl(160, 1), 1)))\n                        mstore(32, _159)\n                        let value_21 := and(sload(keccak256(0, 64)), 0xff)\n                        let memPos_25 := mload(64)\n                        mstore(memPos_25, iszero(iszero(value_21)))\n                        return(memPos_25, 32)\n                    }\n                    case 0x95db35de {\n                        if callvalue() { revert(0, 0) }\n                        let _160 := 32\n                        if slt(add(calldatasize(), not(3)), _160) { revert(0, 0) }\n                        let offset_4 := calldataload(4)\n                        let _161 := 0xffffffffffffffff\n                        if gt(offset_4, _161) { revert(0, 0) }\n                        if iszero(slt(add(offset_4, 35), calldatasize())) { revert(0, 0) }\n                        let length_2 := calldataload(add(4, offset_4))\n                        if gt(length_2, _161) { revert(0, 0) }\n                        let _162 := 36\n                        if gt(add(add(offset_4, mul(length_2, _2)), _162), calldatasize()) { revert(0, 0) }\n                        /// @src 8:4738:4746  \"_address\"\n                        fun_onlyOwnerOrAdmin(/** @src 8:21748:21758  \"msg.sender\" */ caller())\n                        /// @src 8:21841:21854  \"uint256 i = 0\"\n                        let var_i_1 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                        /// @src 8:21837:21935  \"for(uint256 i = 0; i < tierCount; i++) {...\"\n                        for { }\n                        /** @src 8:21856:21869  \"i < tierCount\" */ lt(var_i_1, length_2)\n                        /// @src 8:21841:21854  \"uint256 i = 0\"\n                        {\n                            /// @src 8:21871:21874  \"i++\"\n                            var_i_1 := increment_uint256(var_i_1)\n                        }\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let _163 := add(offset_4, mul(var_i_1, _2))\n                            mstore(0, var_i_1)\n                            mstore(_160, /** @src 8:21890:21901  \"tierDetails\" */ 0x26)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let dataSlot_5 := keccak256(0, 64)\n                            sstore(dataSlot_5, calldataload(add(_163, _162)))\n                            sstore(add(dataSlot_5, 1), calldataload(add(_163, 68)))\n                            sstore(add(dataSlot_5, 2), calldataload(add(_163, 100)))\n                            sstore(add(dataSlot_5, 3), calldataload(add(_163, 132)))\n                            sstore(add(dataSlot_5, 4), calldataload(add(_163, 164)))\n                            sstore(add(dataSlot_5, 5), calldataload(add(_163, 196)))\n                            sstore(add(dataSlot_5, 6), calldataload(add(_163, 228)))\n                        }\n                        /// @src 8:21950:21993  \"SaleTierDetailsBatchUpdated(newTierDetails)\"\n                        let _164 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        let tail_2 := add(_164, _160)\n                        mstore(_164, _160)\n                        let pos_14 := tail_2\n                        mstore(tail_2, length_2)\n                        pos_14 := add(_164, 64)\n                        let srcPtr_1 := add(offset_4, _162)\n                        let i_4 := 0\n                        for { } lt(i_4, length_2) { i_4 := add(i_4, 1) }\n                        {\n                            mstore(pos_14, calldataload(srcPtr_1))\n                            mstore(add(pos_14, _160), calldataload(add(srcPtr_1, _160)))\n                            mstore(add(pos_14, 64), calldataload(add(srcPtr_1, 64)))\n                            let _165 := 96\n                            mstore(add(pos_14, _165), calldataload(add(srcPtr_1, _165)))\n                            let _166 := 128\n                            mstore(add(pos_14, _166), calldataload(add(srcPtr_1, _166)))\n                            let _167 := 160\n                            mstore(add(pos_14, _167), calldataload(add(srcPtr_1, _167)))\n                            let _168 := 192\n                            mstore(add(pos_14, _168), calldataload(add(srcPtr_1, _168)))\n                            pos_14 := add(pos_14, _2)\n                            srcPtr_1 := add(srcPtr_1, _2)\n                        }\n                        /// @src 8:21950:21993  \"SaleTierDetailsBatchUpdated(newTierDetails)\"\n                        log1(_164, sub(pos_14, _164), 0xc646e9ebff3183f592a7b159713c5fce975d40a6cd6a7824e45b318c7156a725)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let memPos_26 := mload(64)\n                        mstore(memPos_26, 1)\n                        return(memPos_26, _160)\n                    }\n                    case 0x9a68404d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 8:4542:4550  \"_address\"\n                        fun_notZeroAddress(/** @src 8:17877:17887  \"msg.sender\" */ caller())\n                        /// @src 8:4738:4746  \"_address\"\n                        fun_onlyOwnerOrAdmin(/** @src 8:17877:17887  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let cleaned_20 := and(sload(/** @src 8:17975:17990  \"investmentToken\" */ 0x22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))\n                        /// @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\"\n                        let _169 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\"\n                        mstore(_169, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\" */ add(_169, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:18046:18050  \"this\" */ address())\n                        /// @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\"\n                        let _170 := 32\n                        let _171 := staticcall(gas(), cleaned_20, _169, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36, /** @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\" */ _169, _170)\n                        if iszero(_171)\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let pos_15 := mload(64)\n                            returndatacopy(pos_15, 0, returndatasize())\n                            revert(pos_15, returndatasize())\n                        }\n                        /// @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\"\n                        let expr_25 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                        /// @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\"\n                        if _171\n                        {\n                            let _172 := _170\n                            if gt(_170, returndatasize()) { _172 := returndatasize() }\n                            finalize_allocation(_169, _172)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            if slt(sub(/** @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\" */ add(_169, _172), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _169), /** @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\" */ _170)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            { revert(0, 0) }\n                            /// @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\"\n                            expr_25 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_169)\n                        }\n                        /// @src 8:17975:18053  \"investmentToken.transfer(msg.sender, investmentToken.balanceOf(address(this)))\"\n                        let _173 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:17975:18053  \"investmentToken.transfer(msg.sender, investmentToken.balanceOf(address(this)))\"\n                        mstore(_173, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0xa9059cbb))\n                        /// @src 8:17975:18053  \"investmentToken.transfer(msg.sender, investmentToken.balanceOf(address(this)))\"\n                        let _174 := call(gas(), cleaned_20, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0, /** @src 8:17975:18053  \"investmentToken.transfer(msg.sender, investmentToken.balanceOf(address(this)))\" */ _173, sub(abi_encode_address_uint256(add(_173, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:17877:17887  \"msg.sender\" */ caller(), /** @src 8:17975:18053  \"investmentToken.transfer(msg.sender, investmentToken.balanceOf(address(this)))\" */ expr_25), _173), _173, /** @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\" */ _170)\n                        /// @src 8:17975:18053  \"investmentToken.transfer(msg.sender, investmentToken.balanceOf(address(this)))\"\n                        if iszero(_174)\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let pos_16 := mload(64)\n                            returndatacopy(pos_16, 0, returndatasize())\n                            revert(pos_16, returndatasize())\n                        }\n                        /// @src 8:17975:18053  \"investmentToken.transfer(msg.sender, investmentToken.balanceOf(address(this)))\"\n                        let expr_26 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                        /// @src 8:17975:18053  \"investmentToken.transfer(msg.sender, investmentToken.balanceOf(address(this)))\"\n                        if _174\n                        {\n                            let _175 := /** @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\" */ _170\n                            /// @src 8:17975:18053  \"investmentToken.transfer(msg.sender, investmentToken.balanceOf(address(this)))\"\n                            if gt(/** @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\" */ _170, /** @src 8:17975:18053  \"investmentToken.transfer(msg.sender, investmentToken.balanceOf(address(this)))\" */ returndatasize()) { _175 := returndatasize() }\n                            finalize_allocation(_173, _175)\n                            expr_26 := abi_decode_bool_fromMemory(_173, add(_173, _175))\n                        }\n                        /// @src 8:18063:18134  \"if (!successfullyTransferedIT) revert Errors.TokenTransferFailedError()\"\n                        if /** @src 8:18067:18092  \"!successfullyTransferedIT\" */ iszero(expr_26)\n                        /// @src 8:18063:18134  \"if (!successfullyTransferedIT) revert Errors.TokenTransferFailedError()\"\n                        {\n                            /// @src 8:18101:18134  \"Errors.TokenTransferFailedError()\"\n                            let _176 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:18101:18134  \"Errors.TokenTransferFailedError()\"\n                            mstore(_176, /** @src 8:16573:16606  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                            /// @src 8:18101:18134  \"Errors.TokenTransferFailedError()\"\n                            revert(_176, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        let memPos_27 := mload(64)\n                        mstore(memPos_27, /** @src 8:18152:18156  \"true\" */ 0x01)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        return(memPos_27, /** @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\" */ _170)\n                    }\n                    case /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x9d0c65f9 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0_2 := abi_decode_address_60557()\n                        let offset_5 := calldataload(68)\n                        if gt(offset_5, 0xffffffffffffffff) { revert(0, 0) }\n                        let value2_1, value3_1 := abi_decode_array_bytes32_dyn_calldata(add(4, offset_5), calldatasize())\n                        let ret_2 := /** @src 8:22182:22186  \"bool\" */ modifier_notZeroAddress(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ value0_2, calldataload(36), value2_1, value3_1)\n                        let memPos_28 := mload(64)\n                        mstore(memPos_28, iszero(iszero(ret_2)))\n                        return(memPos_28, 32)\n                    }\n                    case 0x9d1652e0 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        pop(allocate_and_zero_memory_struct_struct_SaleTierDetails())\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 8:23270:23281  \"tierDetails\" */ 0x26)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let dataSlot_6 := keccak256(0, 64)\n                        let memPtr_14 := mload(64)\n                        finalize_allocation_60550(memPtr_14)\n                        mstore(memPtr_14, sload(dataSlot_6))\n                        mstore(add(memPtr_14, 32), sload(add(dataSlot_6, 1)))\n                        mstore(add(memPtr_14, 64), sload(add(dataSlot_6, 2)))\n                        mstore(add(memPtr_14, 96), sload(add(dataSlot_6, 3)))\n                        mstore(add(memPtr_14, 128), sload(add(dataSlot_6, 4)))\n                        mstore(add(memPtr_14, 160), sload(add(dataSlot_6, 5)))\n                        mstore(add(memPtr_14, 192), sload(add(dataSlot_6, 6)))\n                        let memPos_29 := mload(64)\n                        abi_encode_struct_SaleTierDetails(memPtr_14, memPos_29)\n                        return(memPos_29, _2)\n                    }\n                    case 0xa217fddf {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_30 := mload(64)\n                        mstore(memPos_30, 0)\n                        return(memPos_30, 32)\n                    }\n                    case 0xa798149f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0_3 := abi_decode_address_60557()\n                        /// @src 8:4738:4746  \"_address\"\n                        fun_onlyOwnerOrAdmin(/** @src 8:18913:18923  \"msg.sender\" */ caller())\n                        /// @src 8:18950:19032  \"sale.saleAddresses.stakeControllerContractAddress = stakeControllerContractAddress\"\n                        update_storage_value_offsett_address_to_address_60573(value0_3)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _177 := and(/** @src 8:19047:19091  \"stakeControllerContractAddress != address(0)\" */ value0_3, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))\n                        /// @src 8:19043:19198  \"if (stakeControllerContractAddress != address(0)) {...\"\n                        if /** @src 8:19047:19091  \"stakeControllerContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _177))\n                        /// @src 8:19043:19198  \"if (stakeControllerContractAddress != address(0)) {...\"\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            sstore(/** @src 8:19107:19187  \"stakeControllerContract = IDappadStakeController(stakeControllerContractAddress)\" */ 0x23, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ or(and(sload(/** @src 8:19107:19187  \"stakeControllerContract = IDappadStakeController(stakeControllerContractAddress)\" */ 0x23), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(160, 0xffffffffffffffffffffffff)), _177))\n                        }\n                        /// @src 8:19213:19275  \"StakeControllerContractUpdated(stakeControllerContractAddress)\"\n                        let _178 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        mstore(_178, _177)\n                        /// @src 8:19213:19275  \"StakeControllerContractUpdated(stakeControllerContractAddress)\"\n                        log1(_178, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32, /** @src 8:19213:19275  \"StakeControllerContractUpdated(stakeControllerContractAddress)\" */ 0xc7e8d640cba1ef6286349798e8879e216a16e2a9b04ec71677a4aab6e6f95fb2)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let memPos_31 := mload(64)\n                        mstore(memPos_31, /** @src 8:18950:18954  \"sale\" */ 0x01)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        return(memPos_31, 32)\n                    }\n                    case 0xad4222c7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address_60557(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 8:887:939  \"mapping(address => uint256) public investmentAmounts\" */ 40)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _179 := sload(keccak256(0, 64))\n                        let memPos_32 := mload(64)\n                        mstore(memPos_32, _179)\n                        return(memPos_32, 32)\n                    }\n                    case 0xade65212 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let cleaned_21 := and(sload(/** @src 8:24892:24941  \"sale.saleAddresses.stakeControllerContractAddress\" */ 22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))\n                        let memPos_33 := mload(64)\n                        mstore(memPos_33, cleaned_21)\n                        return(memPos_33, 32)\n                    }\n                    case 0xb26efbbc {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let memPtr_15 := mload(64)\n                        finalize_allocation_60549(memPtr_15)\n                        mstore(memPtr_15, calldataload(4))\n                        let _180 := add(memPtr_15, 32)\n                        mstore(_180, calldataload(36))\n                        /// @src 8:4738:4746  \"_address\"\n                        fun_onlyOwnerOrAdmin(/** @src 8:21175:21185  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _181 := mload(memPtr_15)\n                        sstore(/** @src 8:21212:21230  \"sale.ticketDetails\" */ 15, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _181)\n                        sstore(16, mload(_180))\n                        /// @src 8:21265:21307  \"SaleTicketDetailsUpdated(newTicketDetails)\"\n                        let _182 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        mstore(_182, _181)\n                        mstore(add(_182, 32), mload(_180))\n                        /// @src 8:21265:21307  \"SaleTicketDetailsUpdated(newTicketDetails)\"\n                        log1(_182, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64, /** @src 8:21265:21307  \"SaleTicketDetailsUpdated(newTicketDetails)\" */ 0x8e211f8d34487ff0db8d0799459246b2b6e106767b7281309df4d88ac9312cca)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let memPos_34 := mload(64)\n                        mstore(memPos_34, 1)\n                        return(memPos_34, 32)\n                    }\n                    case 0xbf03314a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_22 := and(sload(/** @src 8:502:537  \"IERC20Extented public registerToken\" */ 33), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))\n                        let memPos_35 := mload(64)\n                        mstore(memPos_35, value_22)\n                        return(memPos_35, 32)\n                    }\n                    case 0xc033a490 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address_60557(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 8:841:881  \"mapping(address => bool) public refunded\" */ 39)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let value_23 := and(sload(keccak256(0, 64)), 0xff)\n                        let memPos_36 := mload(64)\n                        mstore(memPos_36, iszero(iszero(value_23)))\n                        return(memPos_36, 32)\n                    }\n                    case 0xc077da9e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 8:24313:24405  \"block.timestamp >= sale.saleDetails.saleStart && block.timestamp <= sale.saleDetails.saleEnd\"\n                        let expr_27 := /** @src 8:24313:24358  \"block.timestamp >= sale.saleDetails.saleStart\" */ iszero(lt(/** @src 8:24313:24328  \"block.timestamp\" */ timestamp(), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(4)))\n                        /// @src 8:24313:24405  \"block.timestamp >= sale.saleDetails.saleStart && block.timestamp <= sale.saleDetails.saleEnd\"\n                        if expr_27\n                        {\n                            expr_27 := /** @src 8:24362:24405  \"block.timestamp <= sale.saleDetails.saleEnd\" */ iszero(gt(/** @src 8:24313:24328  \"block.timestamp\" */ timestamp(), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:24381:24405  \"sale.saleDetails.saleEnd\" */ 5)))\n                        }\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let memPos_37 := mload(64)\n                        mstore(memPos_37, iszero(iszero(expr_27)))\n                        return(memPos_37, 32)\n                    }\n                    case 0xc36c0871 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _183 := sload(/** @src 8:447:495  \"IDappadSale.SaleStatistics public saleStatistics\" */ 28)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _184 := sload(/** @src 8:447:495  \"IDappadSale.SaleStatistics public saleStatistics\" */ 29)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _185 := sload(/** @src 8:447:495  \"IDappadSale.SaleStatistics public saleStatistics\" */ 30)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _186 := sload(/** @src 8:447:495  \"IDappadSale.SaleStatistics public saleStatistics\" */ 31)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _187 := sload(/** @src 8:447:495  \"IDappadSale.SaleStatistics public saleStatistics\" */ 32)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let memPos_38 := mload(64)\n                        mstore(memPos_38, _183)\n                        mstore(add(memPos_38, /** @src 8:447:495  \"IDappadSale.SaleStatistics public saleStatistics\" */ 32), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _184)\n                        mstore(add(memPos_38, 64), _185)\n                        mstore(add(memPos_38, 96), _186)\n                        mstore(add(memPos_38, 128), _187)\n                        return(memPos_38, 160)\n                    }\n                    case 0xcb00baf5 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_24 := calldataload(4)\n                        let offset_6 := calldataload(36)\n                        if gt(offset_6, 0xffffffffffffffff) { revert(0, 0) }\n                        let value1_4, value2_2 := abi_decode_array_bytes32_dyn_calldata(add(4, offset_6), calldatasize())\n                        /// @src 8:4771:4852  \"modifier whenSaleIsNotPaused() {...\"\n                        fun_whenSaleIsNotPaused()\n                        /// @src 8:4542:4550  \"_address\"\n                        fun_notZeroAddress(/** @src 8:10948:10958  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _188 := sub(shl(160, 1), 1)\n                        let cleaned_22 := and(sload(/** @src 8:10979:10994  \"investmentToken\" */ 0x22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _188)\n                        /// @src 8:4995:5001  \"amount\"\n                        fun_hasEnoughAllowance(cleaned_22, /** @src 8:10948:10958  \"msg.sender\" */ caller(), /** @src 8:4995:5001  \"amount\" */ value_24)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _189 := sload(/** @src 8:11045:11061  \"sale.fcfsDetails\" */ 11)\n                        /// @src 8:11041:11124  \"if (sale.fcfsDetails.fcfsSaleDuration <= 0) revert Errors.FCFSSaleNotEnabledError()\"\n                        if /** @src 8:11045:11083  \"sale.fcfsDetails.fcfsSaleDuration <= 0\" */ iszero(_189)\n                        /// @src 8:11041:11124  \"if (sale.fcfsDetails.fcfsSaleDuration <= 0) revert Errors.FCFSSaleNotEnabledError()\"\n                        {\n                            /// @src 8:11092:11124  \"Errors.FCFSSaleNotEnabledError()\"\n                            let _190 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:11092:11124  \"Errors.FCFSSaleNotEnabledError()\"\n                            mstore(_190, shl(226, 0x2466b38d))\n                            revert(_190, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        let _191 := sload(/** @src 8:11157:11181  \"sale.saleDetails.saleEnd\" */ 5)\n                        /// @src 8:11134:11259  \"if (block.timestamp < (sale.saleDetails.saleEnd - sale.fcfsDetails.fcfsSaleDuration)) revert Errors.FCFSSaleNotStartedError()\"\n                        if /** @src 8:11138:11218  \"block.timestamp < (sale.saleDetails.saleEnd - sale.fcfsDetails.fcfsSaleDuration)\" */ lt(/** @src 8:11138:11153  \"block.timestamp\" */ timestamp(), /** @src 8:11157:11217  \"sale.saleDetails.saleEnd - sale.fcfsDetails.fcfsSaleDuration\" */ checked_sub_uint256(_191, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _189))\n                        /// @src 8:11134:11259  \"if (block.timestamp < (sale.saleDetails.saleEnd - sale.fcfsDetails.fcfsSaleDuration)) revert Errors.FCFSSaleNotStartedError()\"\n                        {\n                            /// @src 8:11227:11259  \"Errors.FCFSSaleNotStartedError()\"\n                            let _192 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:11227:11259  \"Errors.FCFSSaleNotStartedError()\"\n                            mstore(_192, shl(225, 0x2709ab93))\n                            revert(_192, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:11269:11355  \"if (block.timestamp >= sale.saleDetails.saleEnd) revert Errors.SaleAlreadyEndedError()\"\n                        if /** @src 8:11273:11316  \"block.timestamp >= sale.saleDetails.saleEnd\" */ iszero(lt(/** @src 8:11138:11153  \"block.timestamp\" */ timestamp(), /** @src 8:11273:11316  \"block.timestamp >= sale.saleDetails.saleEnd\" */ _191))\n                        /// @src 8:11269:11355  \"if (block.timestamp >= sale.saleDetails.saleEnd) revert Errors.SaleAlreadyEndedError()\"\n                        {\n                            /// @src 8:11325:11355  \"Errors.SaleAlreadyEndedError()\"\n                            let _193 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:11325:11355  \"Errors.SaleAlreadyEndedError()\"\n                            mstore(_193, /** @src 8:7648:7678  \"Errors.SaleAlreadyEndedError()\" */ shl(224, 0x6b62c0a5))\n                            /// @src 8:11325:11355  \"Errors.SaleAlreadyEndedError()\"\n                            revert(_193, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:11366:11417  \"if (amount == 0) revert Errors.InvalidAmountError()\"\n                        if /** @src 8:11370:11381  \"amount == 0\" */ iszero(value_24)\n                        /// @src 8:11366:11417  \"if (amount == 0) revert Errors.InvalidAmountError()\"\n                        {\n                            /// @src 8:11390:11417  \"Errors.InvalidAmountError()\"\n                            let _194 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:11390:11417  \"Errors.InvalidAmountError()\"\n                            mstore(_194, /** @src 8:7731:7758  \"Errors.InvalidAmountError()\" */ shl(227, 0x0f51ac85))\n                            /// @src 8:11390:11417  \"Errors.InvalidAmountError()\"\n                            revert(_194, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:11428:11584  \"if (sale.saleAddresses.nftContractAddress != address(0)) {...\"\n                        if /** @src 8:11432:11483  \"sale.saleAddresses.nftContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:11432:11469  \"sale.saleAddresses.nftContractAddress\" */ 21), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _188)))\n                        /// @src 8:11428:11584  \"if (sale.saleAddresses.nftContractAddress != address(0)) {...\"\n                        {\n                            /// @src 8:4542:4550  \"_address\"\n                            fun_notZeroAddress(/** @src 8:10948:10958  \"msg.sender\" */ caller())\n                            /// @src 8:11499:11573  \"if (_getUserNftBalance(msg.sender) == 0) revert Errors.UserHasNoNFTError()\"\n                            if /** @src 8:11503:11538  \"_getUserNftBalance(msg.sender) == 0\" */ iszero(/** @src 8:24954:25275  \"function _getUserNftBalance(address userAddress) internal view notZeroAddress(userAddress) returns (uint256) {...\" */ fun_getUserNftBalance_inner())\n                            /// @src 8:11499:11573  \"if (_getUserNftBalance(msg.sender) == 0) revert Errors.UserHasNoNFTError()\"\n                            {\n                                /// @src 8:11547:11573  \"Errors.UserHasNoNFTError()\"\n                                let _195 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:11547:11573  \"Errors.UserHasNoNFTError()\"\n                                mstore(_195, /** @src 8:14814:14840  \"Errors.UserHasNoNFTError()\" */ shl(225, 0x049a4b73))\n                                /// @src 8:11547:11573  \"Errors.UserHasNoNFTError()\"\n                                revert(_195, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                            }\n                        }\n                        /// @src 8:11594:11619  \"uint256 userTierIndex = 0\"\n                        let var_userTierIndex := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                        /// @src 8:11630:11791  \"if (sale.saleAddresses.stakeControllerContractAddress != address(0)) {...\"\n                        if /** @src 8:11634:11697  \"sale.saleAddresses.stakeControllerContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:11634:11683  \"sale.saleAddresses.stakeControllerContractAddress\" */ 22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _188)))\n                        /// @src 8:11630:11791  \"if (sale.saleAddresses.stakeControllerContractAddress != address(0)) {...\"\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let cleaned_23 := and(sload(/** @src 8:11728:11751  \"stakeControllerContract\" */ 0x23), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _188)\n                            /// @src 8:11728:11780  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                            let _196 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:11728:11780  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                            mstore(_196, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0xbb9d537b))\n                            mstore(/** @src 8:11728:11780  \"stakeControllerContract.getUserTierIndex(msg.sender)\" */ add(_196, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:10948:10958  \"msg.sender\" */ caller())\n                            /// @src 8:11728:11780  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                            let _197 := staticcall(gas(), cleaned_23, _196, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36, /** @src 8:11728:11780  \"stakeControllerContract.getUserTierIndex(msg.sender)\" */ _196, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32)\n                            /// @src 8:11728:11780  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                            if iszero(_197)\n                            {\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let pos_17 := mload(64)\n                                returndatacopy(pos_17, 0, returndatasize())\n                                revert(pos_17, returndatasize())\n                            }\n                            /// @src 8:11728:11780  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                            let expr_28 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                            /// @src 8:11728:11780  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                            if _197\n                            {\n                                let _198 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32\n                                /// @src 8:11728:11780  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                                if gt(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _198, /** @src 8:11728:11780  \"stakeControllerContract.getUserTierIndex(msg.sender)\" */ returndatasize()) { _198 := returndatasize() }\n                                finalize_allocation(_196, _198)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                if slt(sub(/** @src 8:11728:11780  \"stakeControllerContract.getUserTierIndex(msg.sender)\" */ add(_196, _198), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _196), 32) { revert(0, 0) }\n                                /// @src 8:11728:11780  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                                expr_28 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_196)\n                            }\n                            /// @src 8:11712:11780  \"userTierIndex = stakeControllerContract.getUserTierIndex(msg.sender)\"\n                            var_userTierIndex := expr_28\n                        }\n                        /// @src 8:11805:11875  \"userTierIndex == 0 && tierDetails[0].whitelistMerkleRoot != bytes32(0)\"\n                        let expr_29 := /** @src 8:11805:11823  \"userTierIndex == 0\" */ iszero(var_userTierIndex)\n                        /// @src 8:11805:11875  \"userTierIndex == 0 && tierDetails[0].whitelistMerkleRoot != bytes32(0)\"\n                        if expr_29\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(0, 0)\n                            mstore(32, /** @src 8:11827:11838  \"tierDetails\" */ 0x26)\n                            /// @src 8:11805:11875  \"userTierIndex == 0 && tierDetails[0].whitelistMerkleRoot != bytes32(0)\"\n                            expr_29 := /** @src 8:11827:11875  \"tierDetails[0].whitelistMerkleRoot != bytes32(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:11827:11861  \"tierDetails[0].whitelistMerkleRoot\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), 4))))\n                        }\n                        /// @src 8:11801:12016  \"if (userTierIndex == 0 && tierDetails[0].whitelistMerkleRoot != bytes32(0)) {...\"\n                        if expr_29\n                        {\n                            /// @src 8:11891:12005  \"if (!checkWhitelistEligibility(msg.sender, userTierIndex, whitelistProof)) revert Errors.UserNotWhitelistedError()\"\n                            if /** @src 8:11895:11964  \"!checkWhitelistEligibility(msg.sender, userTierIndex, whitelistProof)\" */ iszero(/** @src 8:22182:22186  \"bool\" */ modifier_notZeroAddress(/** @src 8:10948:10958  \"msg.sender\" */ caller(), /** @src 8:11896:11964  \"checkWhitelistEligibility(msg.sender, userTierIndex, whitelistProof)\" */ var_userTierIndex, value1_4, value2_2))\n                            /// @src 8:11891:12005  \"if (!checkWhitelistEligibility(msg.sender, userTierIndex, whitelistProof)) revert Errors.UserNotWhitelistedError()\"\n                            {\n                                /// @src 8:11973:12005  \"Errors.UserNotWhitelistedError()\"\n                                let _199 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:11973:12005  \"Errors.UserNotWhitelistedError()\"\n                                mstore(_199, /** @src 8:8206:8238  \"Errors.UserNotWhitelistedError()\" */ shl(226, 0x05880f01))\n                                /// @src 8:11973:12005  \"Errors.UserNotWhitelistedError()\"\n                                revert(_199, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                            }\n                        }\n                        /// @src 8:12030:12067  \"investmentToken.balanceOf(msg.sender)\"\n                        let _200 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:12030:12067  \"investmentToken.balanceOf(msg.sender)\"\n                        mstore(_200, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 8:12030:12067  \"investmentToken.balanceOf(msg.sender)\" */ add(_200, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:10948:10958  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _201 := 32\n                        /// @src 8:12030:12067  \"investmentToken.balanceOf(msg.sender)\"\n                        let _202 := staticcall(gas(), cleaned_22, _200, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36, /** @src 8:12030:12067  \"investmentToken.balanceOf(msg.sender)\" */ _200, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _201)\n                        /// @src 8:12030:12067  \"investmentToken.balanceOf(msg.sender)\"\n                        if iszero(_202)\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let pos_18 := mload(64)\n                            returndatacopy(pos_18, 0, returndatasize())\n                            revert(pos_18, returndatasize())\n                        }\n                        /// @src 8:12030:12067  \"investmentToken.balanceOf(msg.sender)\"\n                        let expr_30 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                        /// @src 8:12030:12067  \"investmentToken.balanceOf(msg.sender)\"\n                        if _202\n                        {\n                            let _203 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _201\n                            /// @src 8:12030:12067  \"investmentToken.balanceOf(msg.sender)\"\n                            if gt(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _201, /** @src 8:12030:12067  \"investmentToken.balanceOf(msg.sender)\" */ returndatasize()) { _203 := returndatasize() }\n                            finalize_allocation(_200, _203)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            if slt(sub(/** @src 8:12030:12067  \"investmentToken.balanceOf(msg.sender)\" */ add(_200, _203), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _200), _201) { revert(0, 0) }\n                            /// @src 8:12030:12067  \"investmentToken.balanceOf(msg.sender)\"\n                            expr_30 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_200)\n                        }\n                        /// @src 8:12026:12118  \"if (investmentToken.balanceOf(msg.sender) < amount) revert Errors.InsufficientBalanceError()\"\n                        if /** @src 8:12030:12076  \"investmentToken.balanceOf(msg.sender) < amount\" */ lt(expr_30, value_24)\n                        /// @src 8:12026:12118  \"if (investmentToken.balanceOf(msg.sender) < amount) revert Errors.InsufficientBalanceError()\"\n                        {\n                            /// @src 8:12085:12118  \"Errors.InsufficientBalanceError()\"\n                            let _204 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:12085:12118  \"Errors.InsufficientBalanceError()\"\n                            mstore(_204, /** @src 8:15952:15985  \"Errors.InsufficientBalanceError()\" */ shl(224, 0x384d3c59))\n                            /// @src 8:12085:12118  \"Errors.InsufficientBalanceError()\"\n                            revert(_204, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        mstore(0, var_userTierIndex)\n                        mstore(_201, /** @src 8:12141:12152  \"tierDetails\" */ 0x26)\n                        /// @src 8:12128:12237  \"if (amount < tierDetails[userTierIndex].minInvestmentAmount) revert Errors.MinimumInvestmentNotReachedError()\"\n                        if /** @src 8:12132:12187  \"amount < tierDetails[userTierIndex].minInvestmentAmount\" */ lt(value_24, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(keccak256(0, 64)))\n                        /// @src 8:12128:12237  \"if (amount < tierDetails[userTierIndex].minInvestmentAmount) revert Errors.MinimumInvestmentNotReachedError()\"\n                        {\n                            /// @src 8:12196:12237  \"Errors.MinimumInvestmentNotReachedError()\"\n                            let _205 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:12196:12237  \"Errors.MinimumInvestmentNotReachedError()\"\n                            mstore(_205, /** @src 8:8531:8572  \"Errors.MinimumInvestmentNotReachedError()\" */ shl(224, 0xba4c4493))\n                            /// @src 8:12196:12237  \"Errors.MinimumInvestmentNotReachedError()\"\n                            revert(_205, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        mstore(0, /** @src 8:10948:10958  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(_201, /** @src 8:12251:12268  \"investmentAmounts\" */ 0x28)\n                        /// @src 8:12251:12289  \"investmentAmounts[msg.sender] + amount\"\n                        let expr_31 := checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(keccak256(0, 64)), /** @src 8:12251:12289  \"investmentAmounts[msg.sender] + amount\" */ value_24)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(0, var_userTierIndex)\n                        mstore(_201, /** @src 8:12141:12152  \"tierDetails\" */ 0x26)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _206 := sload(/** @src 8:12293:12339  \"tierDetails[userTierIndex].maxInvestmentAmount\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), 1))\n                        /// @src 8:12247:12432  \"if (investmentAmounts[msg.sender] + amount > (tierDetails[userTierIndex].maxInvestmentAmount * sale.fcfsDetails.fcfsSaleMultiplier / 1000)) revert Errors.MaximumInvestmentReachedError()\"\n                        if /** @src 8:12251:12385  \"investmentAmounts[msg.sender] + amount > (tierDetails[userTierIndex].maxInvestmentAmount * sale.fcfsDetails.fcfsSaleMultiplier / 1000)\" */ gt(expr_31, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ div(/** @src 8:12293:12377  \"tierDetails[userTierIndex].maxInvestmentAmount * sale.fcfsDetails.fcfsSaleMultiplier\" */ checked_mul_uint256(_206, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:12342:12377  \"sale.fcfsDetails.fcfsSaleMultiplier\" */ 12)), /** @src 8:12380:12384  \"1000\" */ 0x03e8))\n                        /// @src 8:12247:12432  \"if (investmentAmounts[msg.sender] + amount > (tierDetails[userTierIndex].maxInvestmentAmount * sale.fcfsDetails.fcfsSaleMultiplier / 1000)) revert Errors.MaximumInvestmentReachedError()\"\n                        {\n                            /// @src 8:12394:12432  \"Errors.MaximumInvestmentReachedError()\"\n                            let _207 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:12394:12432  \"Errors.MaximumInvestmentReachedError()\"\n                            mstore(_207, /** @src 8:9051:9089  \"Errors.MaximumInvestmentReachedError()\" */ shl(225, 0x765aa7df))\n                            /// @src 8:12394:12432  \"Errors.MaximumInvestmentReachedError()\"\n                            revert(_207, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        let _208 := sload(/** @src 8:12447:12461  \"saleStatistics\" */ 0x1c)\n                        /// @src 8:12447:12492  \"saleStatistics.totalInvestmentAmount + amount\"\n                        let expr_32 := checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _208, /** @src 8:12447:12492  \"saleStatistics.totalInvestmentAmount + amount\" */ value_24)\n                        /// @src 8:12443:12579  \"if (saleStatistics.totalInvestmentAmount + amount > sale.saleDetails.maxInvestmentAmount) revert Errors.MaxTotalInvestmentReachedError()\"\n                        if /** @src 8:12447:12531  \"saleStatistics.totalInvestmentAmount + amount > sale.saleDetails.maxInvestmentAmount\" */ gt(expr_32, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:12495:12531  \"sale.saleDetails.maxInvestmentAmount\" */ 7))\n                        /// @src 8:12443:12579  \"if (saleStatistics.totalInvestmentAmount + amount > sale.saleDetails.maxInvestmentAmount) revert Errors.MaxTotalInvestmentReachedError()\"\n                        {\n                            /// @src 8:12540:12579  \"Errors.MaxTotalInvestmentReachedError()\"\n                            let _209 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:12540:12579  \"Errors.MaxTotalInvestmentReachedError()\"\n                            mstore(_209, /** @src 8:9378:9417  \"Errors.MaxTotalInvestmentReachedError()\" */ shl(224, 0xf39595f9))\n                            /// @src 8:12540:12579  \"Errors.MaxTotalInvestmentReachedError()\"\n                            revert(_209, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        sstore(/** @src 8:12447:12461  \"saleStatistics\" */ 0x1c, /** @src 8:12590:12636  \"saleStatistics.totalInvestmentAmount += amount\" */ checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _208, /** @src 8:12590:12636  \"saleStatistics.totalInvestmentAmount += amount\" */ value_24))\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(0, /** @src 8:10948:10958  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(_201, /** @src 8:12251:12268  \"investmentAmounts\" */ 0x28)\n                        /// @src 8:12647:12805  \"if(investmentAmounts[msg.sender] == 0) {...\"\n                        if /** @src 8:12650:12684  \"investmentAmounts[msg.sender] == 0\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(keccak256(0, 64)))\n                        /// @src 8:12647:12805  \"if(investmentAmounts[msg.sender] == 0) {...\"\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            sstore(/** @src 8:12700:12732  \"saleStatistics.totalParticipants\" */ 30, /** @src 8:12700:12734  \"saleStatistics.totalParticipants++\" */ increment_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:12700:12732  \"saleStatistics.totalParticipants\" */ 30)))\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(0, var_userTierIndex)\n                            mstore(_201, /** @src 8:12141:12152  \"tierDetails\" */ 0x26)\n                            /// @src 8:12748:12792  \"tierDetails[userTierIndex].totalParticipants\"\n                            let _210 := add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), /** @src 8:12495:12531  \"sale.saleDetails.maxInvestmentAmount\" */ 6)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            sstore(_210, /** @src 8:12748:12794  \"tierDetails[userTierIndex].totalParticipants++\" */ increment_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:12748:12794  \"tierDetails[userTierIndex].totalParticipants++\" */ _210)))\n                        }\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(0, /** @src 8:10948:10958  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(_201, /** @src 8:12251:12268  \"investmentAmounts\" */ 0x28)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let dataSlot_7 := keccak256(0, 64)\n                        sstore(dataSlot_7, /** @src 8:12815:12854  \"investmentAmounts[msg.sender] += amount\" */ checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:12815:12854  \"investmentAmounts[msg.sender] += amount\" */ dataSlot_7), value_24))\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(0, var_userTierIndex)\n                        mstore(_201, /** @src 8:12141:12152  \"tierDetails\" */ 0x26)\n                        /// @src 8:12864:12912  \"tierDetails[userTierIndex].totalInvestmentAmount\"\n                        let _211 := add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), /** @src 8:11157:11181  \"sale.saleDetails.saleEnd\" */ 5)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        sstore(_211, /** @src 8:12864:12922  \"tierDetails[userTierIndex].totalInvestmentAmount += amount\" */ checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:12864:12922  \"tierDetails[userTierIndex].totalInvestmentAmount += amount\" */ _211), value_24))\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(0, /** @src 8:10948:10958  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(_201, /** @src 8:12251:12268  \"investmentAmounts\" */ 0x28)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _212 := sload(keccak256(0, 64))\n                        let _213 := sload(/** @src 8:12447:12461  \"saleStatistics\" */ 0x1c)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _214 := sload(/** @src 8:13061:13093  \"saleStatistics.totalParticipants\" */ 30)\n                        /// @src 8:4542:4550  \"_address\"\n                        fun_notZeroAddress(/** @src 8:10948:10958  \"msg.sender\" */ caller())\n                        /// @src 8:4561:4562  \"_\"\n                        let _215 := /** @src 8:24954:25275  \"function _getUserNftBalance(address userAddress) internal view notZeroAddress(userAddress) returns (uint256) {...\" */ fun_getUserNftBalance_inner()\n                        /// @src 8:12938:13143  \"UserJoinedFcfsSale(msg.sender, userTierIndex, amount, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, saleStatistics.totalParticipants, block.timestamp, _getUserNftBalance(msg.sender))\"\n                        let _216 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:12938:13143  \"UserJoinedFcfsSale(msg.sender, userTierIndex, amount, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, saleStatistics.totalParticipants, block.timestamp, _getUserNftBalance(msg.sender))\"\n                        log1(_216, sub(abi_encode_address_uint256_uint256_uint256_uint256_uint256_uint256_uint256(_216, /** @src 8:10948:10958  \"msg.sender\" */ caller(), /** @src 8:12938:13143  \"UserJoinedFcfsSale(msg.sender, userTierIndex, amount, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, saleStatistics.totalParticipants, block.timestamp, _getUserNftBalance(msg.sender))\" */ var_userTierIndex, value_24, _212, _213, _214, /** @src 8:11138:11153  \"block.timestamp\" */ timestamp(), /** @src 8:12938:13143  \"UserJoinedFcfsSale(msg.sender, userTierIndex, amount, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, saleStatistics.totalParticipants, block.timestamp, _getUserNftBalance(msg.sender))\" */ _215), _216), 0x5c0e83039564cf1c09a1233d5865e63cb005ae1aae497e1edb14cae9fdb70454)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let cleaned_24 := and(sload(/** @src 8:10979:10994  \"investmentToken\" */ 0x22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _188)\n                        /// @src 8:13184:13247  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                        let _217 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:13184:13247  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                        mstore(_217, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x23b872dd))\n                        /// @src 8:13184:13247  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                        let _218 := call(gas(), cleaned_24, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0, /** @src 8:13184:13247  \"investmentToken.transferFrom(msg.sender, address(this), amount)\" */ _217, sub(abi_encode_address_address_uint256(add(_217, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:10948:10958  \"msg.sender\" */ caller(), /** @src 8:13233:13237  \"this\" */ address(), /** @src 8:13184:13247  \"investmentToken.transferFrom(msg.sender, address(this), amount)\" */ value_24), _217), _217, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _201)\n                        /// @src 8:13184:13247  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                        if iszero(_218)\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let pos_19 := mload(64)\n                            returndatacopy(pos_19, 0, returndatasize())\n                            revert(pos_19, returndatasize())\n                        }\n                        /// @src 8:13184:13247  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                        let expr_33 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                        /// @src 8:13184:13247  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                        if _218\n                        {\n                            let _219 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _201\n                            /// @src 8:13184:13247  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                            if gt(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _201, /** @src 8:13184:13247  \"investmentToken.transferFrom(msg.sender, address(this), amount)\" */ returndatasize()) { _219 := returndatasize() }\n                            finalize_allocation(_217, _219)\n                            expr_33 := abi_decode_bool_fromMemory(_217, add(_217, _219))\n                        }\n                        /// @src 8:13257:13326  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                        if /** @src 8:13261:13284  \"!successfullyTransfered\" */ iszero(expr_33)\n                        /// @src 8:13257:13326  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                        {\n                            /// @src 8:13293:13326  \"Errors.TokenTransferFailedError()\"\n                            let _220 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:13293:13326  \"Errors.TokenTransferFailedError()\"\n                            mstore(_220, /** @src 8:16573:16606  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                            /// @src 8:13293:13326  \"Errors.TokenTransferFailedError()\"\n                            revert(_220, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:13341:13435  \"sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0)\"\n                        let expr_34 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:13341:13378  \"sale.saleDetails.registerTokenEnabled\" */ 9), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xff)\n                        /// @src 8:13341:13435  \"sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0)\"\n                        if expr_34\n                        {\n                            expr_34 := /** @src 8:13382:13435  \"sale.saleAddresses.registerTokenAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:13382:13421  \"sale.saleAddresses.registerTokenAddress\" */ 18), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _188)))\n                        }\n                        /// @src 8:13341:13490  \"sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0) && registerDetails[msg.sender].registerTokenAmount > 0\"\n                        let expr_35 := expr_34\n                        if expr_34\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(0, /** @src 8:10948:10958  \"msg.sender\" */ caller())\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(_201, /** @src 8:13439:13454  \"registerDetails\" */ 0x25)\n                            /// @src 8:13341:13490  \"sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0) && registerDetails[msg.sender].registerTokenAmount > 0\"\n                            expr_35 := /** @src 8:13439:13490  \"registerDetails[msg.sender].registerTokenAmount > 0\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(keccak256(0, 64))))\n                        }\n                        /// @src 8:13337:13955  \"if (sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0) && registerDetails[msg.sender].registerTokenAmount > 0) {...\"\n                        if expr_35\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(0, /** @src 8:10948:10958  \"msg.sender\" */ caller())\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(_201, /** @src 8:13536:13551  \"registerDetails\" */ 0x25)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let _221 := sload(keccak256(0, 64))\n                            sstore(_201, /** @src 8:13598:13692  \"saleStatistics.totalRegisterTokenAmountLeft -= registerDetails[msg.sender].registerTokenAmount\" */ checked_sub_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(_201), /** @src 8:13645:13692  \"registerDetails[msg.sender].registerTokenAmount\" */ _221))\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(0, /** @src 8:10948:10958  \"msg.sender\" */ caller())\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(_201, /** @src 8:13536:13551  \"registerDetails\" */ 0x25)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            sstore(keccak256(0, 64), 0)\n                            let cleaned_25 := and(sload(/** @src 8:13804:13817  \"registerToken\" */ 0x21), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _188)\n                            /// @src 8:13804:13859  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                            let _222 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:13804:13859  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                            mstore(_222, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0xa9059cbb))\n                            /// @src 8:13804:13859  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                            let _223 := call(gas(), cleaned_25, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0, /** @src 8:13804:13859  \"registerToken.transfer(msg.sender, registerTokenAmount)\" */ _222, sub(abi_encode_address_uint256(add(_222, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:10948:10958  \"msg.sender\" */ caller(), /** @src 8:13804:13859  \"registerToken.transfer(msg.sender, registerTokenAmount)\" */ _221), _222), _222, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _201)\n                            /// @src 8:13804:13859  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                            if iszero(_223)\n                            {\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let pos_20 := mload(64)\n                                returndatacopy(pos_20, 0, returndatasize())\n                                revert(pos_20, returndatasize())\n                            }\n                            /// @src 8:13804:13859  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                            let expr_36 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                            /// @src 8:13804:13859  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                            if _223\n                            {\n                                let _224 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _201\n                                /// @src 8:13804:13859  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                                if gt(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _201, /** @src 8:13804:13859  \"registerToken.transfer(msg.sender, registerTokenAmount)\" */ returndatasize()) { _224 := returndatasize() }\n                                finalize_allocation(_222, _224)\n                                expr_36 := abi_decode_bool_fromMemory(_222, add(_222, _224))\n                            }\n                            /// @src 8:13873:13944  \"if (!successfullyTransferedRA) revert Errors.TokenTransferFailedError()\"\n                            if /** @src 8:13877:13902  \"!successfullyTransferedRA\" */ iszero(expr_36)\n                            /// @src 8:13873:13944  \"if (!successfullyTransferedRA) revert Errors.TokenTransferFailedError()\"\n                            {\n                                /// @src 8:13911:13944  \"Errors.TokenTransferFailedError()\"\n                                let _225 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:13911:13944  \"Errors.TokenTransferFailedError()\"\n                                mstore(_225, /** @src 8:16573:16606  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                                /// @src 8:13911:13944  \"Errors.TokenTransferFailedError()\"\n                                revert(_225, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                            }\n                        }\n                        let memPos_39 := mload(64)\n                        mstore(memPos_39, 1)\n                        return(memPos_39, _201)\n                    }\n                    case 0xcf72d3db {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0_4 := abi_decode_address_60557()\n                        /// @src 8:4542:4550  \"_address\"\n                        fun_notZeroAddress(value0_4)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(0, and(value0_4, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 8:23110:23118  \"refunded\" */ 0x27)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let value_25 := and(sload(keccak256(0, 64)), 0xff)\n                        let memPos_40 := mload(64)\n                        mstore(memPos_40, iszero(iszero(value_25)))\n                        return(memPos_40, 32)\n                    }\n                    case 0xd547741f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_26 := calldataload(4)\n                        let value1_5 := abi_decode_address()\n                        mstore(0, value_26)\n                        mstore(32, 0)\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), 1)))\n                        /// @src 0:4747:4773  \"_revokeRole(role, account)\"\n                        pop(fun_revokeRole(value_26, value1_5))\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0xd9f9549e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_5 := abi_decode_address_60557()\n                        let offset_7 := calldataload(36)\n                        if gt(offset_7, 0xffffffffffffffff) { revert(0, 0) }\n                        let value1_6, value2_3 := abi_decode_array_bytes32_dyn_calldata(add(4, offset_7), calldatasize())\n                        let ret_3 := /** @src 8:22509:22513  \"bool\" */ modifier_notZeroAddress_60592(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ value0_5, value1_6, value2_3)\n                        let memPos_41 := mload(64)\n                        mstore(memPos_41, iszero(iszero(ret_3)))\n                        return(memPos_41, 32)\n                    }\n                    case 0xe6f1dbc0 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address_60557(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 8:689:763  \"mapping(address => IDappadSale.SaleRegisterDetails) public registerDetails\" */ 37)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let dataSlot_8 := keccak256(0, 64)\n                        let _226 := sload(/** @src 8:689:763  \"mapping(address => IDappadSale.SaleRegisterDetails) public registerDetails\" */ dataSlot_8)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _227 := sload(/** @src 8:689:763  \"mapping(address => IDappadSale.SaleRegisterDetails) public registerDetails\" */ add(dataSlot_8, 1))\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let value_27 := and(sload(/** @src 8:689:763  \"mapping(address => IDappadSale.SaleRegisterDetails) public registerDetails\" */ add(dataSlot_8, 2)), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xff)\n                        let memPos_42 := mload(64)\n                        mstore(memPos_42, _226)\n                        mstore(add(memPos_42, 32), _227)\n                        mstore(add(memPos_42, 64), iszero(iszero(value_27)))\n                        return(memPos_42, 96)\n                    }\n                    case 0xf27c0945 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 8:4542:4550  \"_address\"\n                        fun_notZeroAddress(/** @src 8:17451:17461  \"msg.sender\" */ caller())\n                        /// @src 8:4738:4746  \"_address\"\n                        fun_onlyOwnerOrAdmin(/** @src 8:17451:17461  \"msg.sender\" */ caller())\n                        /// @src 8:17517:17599  \"if (block.timestamp <= sale.saleDetails.saleEnd) revert Errors.SaleNotEndedError()\"\n                        if /** @src 8:17521:17564  \"block.timestamp <= sale.saleDetails.saleEnd\" */ iszero(gt(/** @src 8:17521:17536  \"block.timestamp\" */ timestamp(), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:17540:17564  \"sale.saleDetails.saleEnd\" */ 5)))\n                        /// @src 8:17517:17599  \"if (block.timestamp <= sale.saleDetails.saleEnd) revert Errors.SaleNotEndedError()\"\n                        {\n                            /// @src 8:17573:17599  \"Errors.SaleNotEndedError()\"\n                            let _228 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:17573:17599  \"Errors.SaleNotEndedError()\"\n                            mstore(_228, /** @src 8:15858:15884  \"Errors.SaleNotEndedError()\" */ shl(224, 0x68a5e0cb))\n                            /// @src 8:17573:17599  \"Errors.SaleNotEndedError()\"\n                            revert(_228, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        let cleaned_26 := and(sload(/** @src 8:17640:17653  \"registerToken\" */ 0x21), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))\n                        /// @src 8:17675:17713  \"registerToken.balanceOf(address(this))\"\n                        let _229 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:17675:17713  \"registerToken.balanceOf(address(this))\"\n                        mstore(_229, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 8:17675:17713  \"registerToken.balanceOf(address(this))\" */ add(_229, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:17707:17711  \"this\" */ address())\n                        /// @src 8:17675:17713  \"registerToken.balanceOf(address(this))\"\n                        let _230 := 32\n                        let _231 := staticcall(gas(), cleaned_26, _229, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36, /** @src 8:17675:17713  \"registerToken.balanceOf(address(this))\" */ _229, _230)\n                        if iszero(_231)\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let pos_21 := mload(64)\n                            returndatacopy(pos_21, 0, returndatasize())\n                            revert(pos_21, returndatasize())\n                        }\n                        /// @src 8:17675:17713  \"registerToken.balanceOf(address(this))\"\n                        let expr_37 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                        /// @src 8:17675:17713  \"registerToken.balanceOf(address(this))\"\n                        if _231\n                        {\n                            let _232 := _230\n                            if gt(_230, returndatasize()) { _232 := returndatasize() }\n                            finalize_allocation(_229, _232)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            if slt(sub(/** @src 8:17675:17713  \"registerToken.balanceOf(address(this))\" */ add(_229, _232), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _229), /** @src 8:17675:17713  \"registerToken.balanceOf(address(this))\" */ _230)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            { revert(0, 0) }\n                            /// @src 8:17675:17713  \"registerToken.balanceOf(address(this))\"\n                            expr_37 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_229)\n                        }\n                        /// @src 8:17640:17714  \"registerToken.transfer(msg.sender, registerToken.balanceOf(address(this)))\"\n                        let _233 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:17640:17714  \"registerToken.transfer(msg.sender, registerToken.balanceOf(address(this)))\"\n                        mstore(_233, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0xa9059cbb))\n                        /// @src 8:17640:17714  \"registerToken.transfer(msg.sender, registerToken.balanceOf(address(this)))\"\n                        let _234 := call(gas(), cleaned_26, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0, /** @src 8:17640:17714  \"registerToken.transfer(msg.sender, registerToken.balanceOf(address(this)))\" */ _233, sub(abi_encode_address_uint256(add(_233, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:17451:17461  \"msg.sender\" */ caller(), /** @src 8:17640:17714  \"registerToken.transfer(msg.sender, registerToken.balanceOf(address(this)))\" */ expr_37), _233), _233, /** @src 8:17675:17713  \"registerToken.balanceOf(address(this))\" */ _230)\n                        /// @src 8:17640:17714  \"registerToken.transfer(msg.sender, registerToken.balanceOf(address(this)))\"\n                        if iszero(_234)\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let pos_22 := mload(64)\n                            returndatacopy(pos_22, 0, returndatasize())\n                            revert(pos_22, returndatasize())\n                        }\n                        /// @src 8:17640:17714  \"registerToken.transfer(msg.sender, registerToken.balanceOf(address(this)))\"\n                        let expr_38 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                        /// @src 8:17640:17714  \"registerToken.transfer(msg.sender, registerToken.balanceOf(address(this)))\"\n                        if _234\n                        {\n                            let _235 := /** @src 8:17675:17713  \"registerToken.balanceOf(address(this))\" */ _230\n                            /// @src 8:17640:17714  \"registerToken.transfer(msg.sender, registerToken.balanceOf(address(this)))\"\n                            if gt(/** @src 8:17675:17713  \"registerToken.balanceOf(address(this))\" */ _230, /** @src 8:17640:17714  \"registerToken.transfer(msg.sender, registerToken.balanceOf(address(this)))\" */ returndatasize()) { _235 := returndatasize() }\n                            finalize_allocation(_233, _235)\n                            expr_38 := abi_decode_bool_fromMemory(_233, add(_233, _235))\n                        }\n                        /// @src 8:17724:17793  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                        if /** @src 8:17728:17751  \"!successfullyTransfered\" */ iszero(expr_38)\n                        /// @src 8:17724:17793  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                        {\n                            /// @src 8:17760:17793  \"Errors.TokenTransferFailedError()\"\n                            let _236 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:17760:17793  \"Errors.TokenTransferFailedError()\"\n                            mstore(_236, /** @src 8:16573:16606  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                            /// @src 8:17760:17793  \"Errors.TokenTransferFailedError()\"\n                            revert(_236, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        let memPos_43 := mload(64)\n                        mstore(memPos_43, /** @src 8:17540:17544  \"sale\" */ 0x01)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        return(memPos_43, /** @src 8:17675:17713  \"registerToken.balanceOf(address(this))\" */ _230)\n                    }\n                    case /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xf75c1b98 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 8:769:835  \"mapping(uint256 => IDappadSale.SaleTierDetails) public tierDetails\" */ 38)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let dataSlot_9 := keccak256(0, 64)\n                        let _237 := sload(/** @src 8:769:835  \"mapping(uint256 => IDappadSale.SaleTierDetails) public tierDetails\" */ dataSlot_9)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _238 := sload(/** @src 8:769:835  \"mapping(uint256 => IDappadSale.SaleTierDetails) public tierDetails\" */ add(dataSlot_9, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 1))\n                        let _239 := sload(/** @src 8:769:835  \"mapping(uint256 => IDappadSale.SaleTierDetails) public tierDetails\" */ add(dataSlot_9, 2))\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _240 := sload(/** @src 8:769:835  \"mapping(uint256 => IDappadSale.SaleTierDetails) public tierDetails\" */ add(dataSlot_9, 3))\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _241 := sload(/** @src 8:769:835  \"mapping(uint256 => IDappadSale.SaleTierDetails) public tierDetails\" */ add(dataSlot_9, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4))\n                        let _242 := sload(/** @src 8:769:835  \"mapping(uint256 => IDappadSale.SaleTierDetails) public tierDetails\" */ add(dataSlot_9, 5))\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _243 := sload(/** @src 8:769:835  \"mapping(uint256 => IDappadSale.SaleTierDetails) public tierDetails\" */ add(dataSlot_9, 6))\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let memPos_44 := mload(64)\n                        mstore(memPos_44, _237)\n                        mstore(add(memPos_44, 32), _238)\n                        mstore(add(memPos_44, 64), _239)\n                        mstore(add(memPos_44, 96), _240)\n                        mstore(add(memPos_44, 128), _241)\n                        mstore(add(memPos_44, 160), _242)\n                        mstore(add(memPos_44, 192), _243)\n                        return(memPos_44, _2)\n                    }\n                    case 0xfeaae845 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 8:4771:4852  \"modifier whenSaleIsNotPaused() {...\"\n                        fun_whenSaleIsNotPaused()\n                        /// @src 8:4542:4550  \"_address\"\n                        fun_notZeroAddress(/** @src 8:5094:5104  \"msg.sender\" */ caller())\n                        /// @src 8:5153:5157  \"sale\"\n                        let _244 := 0x01\n                        /// @src 8:5131:5224  \"if (block.timestamp < sale.saleDetails.registerStart) revert Errors.RegisterNotStartedError()\"\n                        if /** @src 8:5135:5183  \"block.timestamp < sale.saleDetails.registerStart\" */ lt(/** @src 8:5135:5150  \"block.timestamp\" */ timestamp(), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:5153:5157  \"sale\" */ _244))\n                        /// @src 8:5131:5224  \"if (block.timestamp < sale.saleDetails.registerStart) revert Errors.RegisterNotStartedError()\"\n                        {\n                            /// @src 8:5192:5224  \"Errors.RegisterNotStartedError()\"\n                            let _245 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:5192:5224  \"Errors.RegisterNotStartedError()\"\n                            mstore(_245, shl(224, 0xbab3af0b))\n                            revert(_245, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:5234:5328  \"if (block.timestamp >= sale.saleDetails.registerEnd) revert Errors.RegisterAlreadyEndedError()\"\n                        if /** @src 8:5238:5285  \"block.timestamp >= sale.saleDetails.registerEnd\" */ iszero(lt(/** @src 8:5135:5150  \"block.timestamp\" */ timestamp(), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:5257:5285  \"sale.saleDetails.registerEnd\" */ 2)))\n                        /// @src 8:5234:5328  \"if (block.timestamp >= sale.saleDetails.registerEnd) revert Errors.RegisterAlreadyEndedError()\"\n                        {\n                            /// @src 8:5294:5328  \"Errors.RegisterAlreadyEndedError()\"\n                            let _246 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:5294:5328  \"Errors.RegisterAlreadyEndedError()\"\n                            mstore(_246, shl(225, 0x26727e13))\n                            revert(_246, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        mstore(0, /** @src 8:5094:5104  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _247 := 0x20\n                        mstore(_247, /** @src 8:5342:5357  \"registerDetails\" */ 0x25)\n                        /// @src 8:5338:5424  \"if (registerDetails[msg.sender].registered) revert Errors.UserAlreadyRegisteredError()\"\n                        if /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:5342:5380  \"registerDetails[msg.sender].registered\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), /** @src 8:5257:5285  \"sale.saleDetails.registerEnd\" */ 2)), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xff)\n                        /// @src 8:5338:5424  \"if (registerDetails[msg.sender].registered) revert Errors.UserAlreadyRegisteredError()\"\n                        {\n                            /// @src 8:5389:5424  \"Errors.UserAlreadyRegisteredError()\"\n                            let _248 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:5389:5424  \"Errors.UserAlreadyRegisteredError()\"\n                            mstore(_248, shl(224, 0xd3c27975))\n                            revert(_248, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:5435:5460  \"uint256 userTierIndex = 0\"\n                        let var_userTierIndex_1 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                        let _249 := sub(shl(160, 1), 1)\n                        /// @src 8:5471:5627  \"if (sale.saleAddresses.nftContractAddress != address(0)) {...\"\n                        if /** @src 8:5475:5526  \"sale.saleAddresses.nftContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:5475:5512  \"sale.saleAddresses.nftContractAddress\" */ 21), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _249)))\n                        /// @src 8:5471:5627  \"if (sale.saleAddresses.nftContractAddress != address(0)) {...\"\n                        {\n                            /// @src 8:4542:4550  \"_address\"\n                            fun_notZeroAddress(/** @src 8:5094:5104  \"msg.sender\" */ caller())\n                            /// @src 8:5542:5616  \"if (_getUserNftBalance(msg.sender) == 0) revert Errors.UserHasNoNFTError()\"\n                            if /** @src 8:5546:5581  \"_getUserNftBalance(msg.sender) == 0\" */ iszero(/** @src 8:24954:25275  \"function _getUserNftBalance(address userAddress) internal view notZeroAddress(userAddress) returns (uint256) {...\" */ fun_getUserNftBalance_inner())\n                            /// @src 8:5542:5616  \"if (_getUserNftBalance(msg.sender) == 0) revert Errors.UserHasNoNFTError()\"\n                            {\n                                /// @src 8:5590:5616  \"Errors.UserHasNoNFTError()\"\n                                let _250 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:5590:5616  \"Errors.UserHasNoNFTError()\"\n                                mstore(_250, /** @src 8:14814:14840  \"Errors.UserHasNoNFTError()\" */ shl(225, 0x049a4b73))\n                                /// @src 8:5590:5616  \"Errors.UserHasNoNFTError()\"\n                                revert(_250, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                            }\n                        }\n                        /// @src 8:5637:5799  \"if (sale.saleAddresses.stakeControllerContractAddress != address(0)) {...\"\n                        if /** @src 8:5641:5704  \"sale.saleAddresses.stakeControllerContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:5641:5690  \"sale.saleAddresses.stakeControllerContractAddress\" */ 22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _249)))\n                        /// @src 8:5637:5799  \"if (sale.saleAddresses.stakeControllerContractAddress != address(0)) {...\"\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let cleaned_27 := and(sload(/** @src 8:5736:5759  \"stakeControllerContract\" */ 0x23), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _249)\n                            /// @src 8:5736:5788  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                            let _251 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:5736:5788  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                            mstore(_251, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0xbb9d537b))\n                            mstore(/** @src 8:5736:5788  \"stakeControllerContract.getUserTierIndex(msg.sender)\" */ add(_251, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:5094:5104  \"msg.sender\" */ caller())\n                            /// @src 8:5736:5788  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                            let _252 := staticcall(gas(), cleaned_27, _251, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36, /** @src 8:5736:5788  \"stakeControllerContract.getUserTierIndex(msg.sender)\" */ _251, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _247)\n                            /// @src 8:5736:5788  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                            if iszero(_252)\n                            {\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let pos_23 := mload(64)\n                                returndatacopy(pos_23, 0, returndatasize())\n                                revert(pos_23, returndatasize())\n                            }\n                            /// @src 8:5736:5788  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                            let expr_39 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                            /// @src 8:5736:5788  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                            if _252\n                            {\n                                let _253 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _247\n                                /// @src 8:5736:5788  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                                if gt(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _247, /** @src 8:5736:5788  \"stakeControllerContract.getUserTierIndex(msg.sender)\" */ returndatasize()) { _253 := returndatasize() }\n                                finalize_allocation(_251, _253)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                if slt(sub(/** @src 8:5736:5788  \"stakeControllerContract.getUserTierIndex(msg.sender)\" */ add(_251, _253), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _251), _247) { revert(0, 0) }\n                                /// @src 8:5736:5788  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                                expr_39 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_251)\n                            }\n                            /// @src 8:5720:5788  \"userTierIndex = stakeControllerContract.getUserTierIndex(msg.sender)\"\n                            var_userTierIndex_1 := expr_39\n                        }\n                        /// @src 8:5820:5914  \"sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0)\"\n                        let expr_40 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:5820:5857  \"sale.saleDetails.registerTokenEnabled\" */ 9), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xff)\n                        /// @src 8:5820:5914  \"sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0)\"\n                        if expr_40\n                        {\n                            expr_40 := /** @src 8:5861:5914  \"sale.saleAddresses.registerTokenAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:5861:5900  \"sale.saleAddresses.registerTokenAddress\" */ 18), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _249)))\n                        }\n                        /// @src 8:5816:6710  \"if (sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0)) {...\"\n                        switch expr_40\n                        case 0 {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let memPtr_16 := mload(64)\n                            finalize_allocation_60616(memPtr_16)\n                            mstore(memPtr_16, 0)\n                            /// @src 8:6536:6699  \"IDappadSale.SaleRegisterDetails({...\"\n                            let _254 := add(memPtr_16, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _247)\n                            mstore(_254, var_userTierIndex_1)\n                            /// @src 8:6536:6699  \"IDappadSale.SaleRegisterDetails({...\"\n                            let _255 := add(memPtr_16, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64)\n                            mstore(_255, /** @src 8:5153:5157  \"sale\" */ _244)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(0, /** @src 8:5094:5104  \"msg.sender\" */ caller())\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(_247, /** @src 8:5342:5357  \"registerDetails\" */ 0x25)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let dataSlot_10 := keccak256(0, 64)\n                            sstore(dataSlot_10, mload(memPtr_16))\n                            sstore(add(dataSlot_10, /** @src 8:5153:5157  \"sale\" */ _244), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_254))\n                            update_storage_value_offsett_bool_to_bool(add(dataSlot_10, /** @src 8:5257:5285  \"sale.saleDetails.registerEnd\" */ 2), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ iszero(iszero(mload(_255))))\n                        }\n                        default /// @src 8:5816:6710  \"if (sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0)) {...\"\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let _256 := sload(/** @src 8:5977:6013  \"sale.saleDetails.registerTokenAmount\" */ 3)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            sstore(_247, /** @src 8:5930:6013  \"saleStatistics.totalRegisterTokenAmountLeft += sale.saleDetails.registerTokenAmount\" */ checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(_247), _256))\n                            let memPtr_17 := mload(64)\n                            finalize_allocation_60616(memPtr_17)\n                            mstore(memPtr_17, _256)\n                            /// @src 8:6058:6256  \"IDappadSale.SaleRegisterDetails({...\"\n                            let _257 := add(memPtr_17, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _247)\n                            mstore(_257, var_userTierIndex_1)\n                            /// @src 8:6058:6256  \"IDappadSale.SaleRegisterDetails({...\"\n                            let _258 := add(memPtr_17, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64)\n                            mstore(_258, /** @src 8:5153:5157  \"sale\" */ _244)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(0, /** @src 8:5094:5104  \"msg.sender\" */ caller())\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(_247, /** @src 8:5342:5357  \"registerDetails\" */ 0x25)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let dataSlot_11 := keccak256(0, 64)\n                            sstore(dataSlot_11, mload(memPtr_17))\n                            sstore(add(dataSlot_11, /** @src 8:5153:5157  \"sale\" */ _244), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_257))\n                            update_storage_value_offsett_bool_to_bool(add(dataSlot_11, /** @src 8:5257:5285  \"sale.saleDetails.registerEnd\" */ 2), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ iszero(iszero(mload(_258))))\n                            let cleaned_28 := and(sload(/** @src 8:6301:6314  \"registerToken\" */ 0x21), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _249)\n                            let _259 := sload(/** @src 8:5977:6013  \"sale.saleDetails.registerTokenAmount\" */ 3)\n                            /// @src 8:6301:6392  \"registerToken.transferFrom(msg.sender, address(this), sale.saleDetails.registerTokenAmount)\"\n                            let _260 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:6301:6392  \"registerToken.transferFrom(msg.sender, address(this), sale.saleDetails.registerTokenAmount)\"\n                            mstore(_260, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x23b872dd))\n                            /// @src 8:6301:6392  \"registerToken.transferFrom(msg.sender, address(this), sale.saleDetails.registerTokenAmount)\"\n                            let _261 := call(gas(), cleaned_28, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0, /** @src 8:6301:6392  \"registerToken.transferFrom(msg.sender, address(this), sale.saleDetails.registerTokenAmount)\" */ _260, sub(abi_encode_address_address_uint256(add(_260, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:5094:5104  \"msg.sender\" */ caller(), /** @src 8:6348:6352  \"this\" */ address(), /** @src 8:6301:6392  \"registerToken.transferFrom(msg.sender, address(this), sale.saleDetails.registerTokenAmount)\" */ _259), _260), _260, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _247)\n                            /// @src 8:6301:6392  \"registerToken.transferFrom(msg.sender, address(this), sale.saleDetails.registerTokenAmount)\"\n                            if iszero(_261)\n                            {\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let pos_24 := mload(64)\n                                returndatacopy(pos_24, 0, returndatasize())\n                                revert(pos_24, returndatasize())\n                            }\n                            /// @src 8:6301:6392  \"registerToken.transferFrom(msg.sender, address(this), sale.saleDetails.registerTokenAmount)\"\n                            let expr_41 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                            /// @src 8:6301:6392  \"registerToken.transferFrom(msg.sender, address(this), sale.saleDetails.registerTokenAmount)\"\n                            if _261\n                            {\n                                let _262 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _247\n                                /// @src 8:6301:6392  \"registerToken.transferFrom(msg.sender, address(this), sale.saleDetails.registerTokenAmount)\"\n                                if gt(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _247, /** @src 8:6301:6392  \"registerToken.transferFrom(msg.sender, address(this), sale.saleDetails.registerTokenAmount)\" */ returndatasize()) { _262 := returndatasize() }\n                                finalize_allocation(_260, _262)\n                                expr_41 := abi_decode_bool_fromMemory(_260, add(_260, _262))\n                            }\n                            /// @src 8:6406:6475  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                            if /** @src 8:6410:6433  \"!successfullyTransfered\" */ iszero(expr_41)\n                            /// @src 8:6406:6475  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                            {\n                                /// @src 8:6442:6475  \"Errors.TokenTransferFailedError()\"\n                                let _263 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:6442:6475  \"Errors.TokenTransferFailedError()\"\n                                mstore(_263, /** @src 8:16573:16606  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                                /// @src 8:6442:6475  \"Errors.TokenTransferFailedError()\"\n                                revert(_263, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                            }\n                        }\n                        /// @src 8:6720:6751  \"saleStatistics.totalRegisters++\"\n                        let _264 := increment_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:6720:6749  \"saleStatistics.totalRegisters\" */ 31))\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        sstore(/** @src 8:6720:6749  \"saleStatistics.totalRegisters\" */ 31, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _264)\n                        let _265 := sload(_247)\n                        /// @src 8:6767:6905  \"UserRegisteredSale(msg.sender, userTierIndex, block.timestamp, saleStatistics.totalRegisters, saleStatistics.totalRegisterTokenAmountLeft)\"\n                        let _266 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:6767:6905  \"UserRegisteredSale(msg.sender, userTierIndex, block.timestamp, saleStatistics.totalRegisters, saleStatistics.totalRegisterTokenAmountLeft)\"\n                        log1(_266, sub(abi_encode_address_uint256_uint256_uint256_uint256(_266, /** @src 8:5094:5104  \"msg.sender\" */ caller(), /** @src 8:6767:6905  \"UserRegisteredSale(msg.sender, userTierIndex, block.timestamp, saleStatistics.totalRegisters, saleStatistics.totalRegisterTokenAmountLeft)\" */ var_userTierIndex_1, /** @src 8:5135:5150  \"block.timestamp\" */ timestamp(), /** @src 8:6767:6905  \"UserRegisteredSale(msg.sender, userTierIndex, block.timestamp, saleStatistics.totalRegisters, saleStatistics.totalRegisterTokenAmountLeft)\" */ _264, _265), _266), 0xc8446c7f7a4908f4630e7fa05c8de17f788b84b0ed604aba7c531ba9589674c6)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let memPos_45 := mload(64)\n                        mstore(memPos_45, /** @src 8:5153:5157  \"sale\" */ _244)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        return(memPos_45, _247)\n                    }\n                }\n                revert(0, 0)\n            }\n            function finalize_allocation_60549(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_60550(memPtr)\n            {\n                let newFreePtr := add(memPtr, 224)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_60552(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0x0160)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_60616(memPtr)\n            {\n                let newFreePtr := add(memPtr, 96)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_encode_struct_SaleTierDetails(value, pos)\n            {\n                mstore(pos, mload(value))\n                mstore(add(pos, 0x20), mload(add(value, 0x20)))\n                mstore(add(pos, 0x40), mload(add(value, 0x40)))\n                mstore(add(pos, 0x60), mload(add(value, 0x60)))\n                mstore(add(pos, 0x80), mload(add(value, 0x80)))\n                mstore(add(pos, 0xa0), mload(add(value, 0xa0)))\n                mstore(add(pos, 0xc0), mload(add(value, 0xc0)))\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_60557() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_bool(offset) -> value\n            {\n                value := calldataload(offset)\n                if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function abi_encode_struct_SaleDetails(value, pos) -> end\n            {\n                let _1 := 0x0160\n                mstore(pos, mload(value))\n                let _2 := 0x20\n                mstore(add(pos, _2), mload(add(value, _2)))\n                mstore(add(pos, 0x40), mload(add(value, 0x40)))\n                mstore(add(pos, 0x60), mload(add(value, 0x60)))\n                mstore(add(pos, 0x80), mload(add(value, 0x80)))\n                mstore(add(pos, 0xa0), mload(add(value, 0xa0)))\n                mstore(add(pos, 0xc0), mload(add(value, 0xc0)))\n                mstore(add(pos, 0xe0), mload(add(value, 0xe0)))\n                let _3 := 0x0100\n                mstore(add(pos, _3), iszero(iszero(mload(add(value, _3)))))\n                let _4 := 0x0120\n                mstore(add(pos, _4), iszero(iszero(mload(add(value, _4)))))\n                let _5 := 0x0140\n                let memberValue0 := mload(add(value, _5))\n                mstore(add(pos, _5), _1)\n                let length := mload(memberValue0)\n                mstore(add(pos, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _2) }\n                {\n                    mstore(add(add(pos, i), 384), mload(add(add(memberValue0, i), _2)))\n                }\n                let _6 := 384\n                mstore(add(add(pos, length), _6), 0)\n                end := add(add(pos, and(add(length, 31), not(31))), _6)\n            }\n            function abi_encode_struct_SaleRefundDetails(value, pos)\n            {\n                mstore(pos, mload(value))\n                mstore(add(pos, 0x20), iszero(iszero(mload(add(value, 0x20)))))\n            }\n            function abi_encode_struct_SaleAddresses(value, pos)\n            {\n                let _1 := sub(shl(160, 1), 1)\n                mstore(pos, and(mload(value), _1))\n                mstore(add(pos, 0x20), and(mload(add(value, 0x20)), _1))\n                mstore(add(pos, 0x40), and(mload(add(value, 0x40)), _1))\n                mstore(add(pos, 0x60), and(mload(add(value, 0x60)), _1))\n                mstore(add(pos, 0x80), and(mload(add(value, 0x80)), _1))\n                mstore(add(pos, 0xa0), and(mload(add(value, 0xa0)), _1))\n                mstore(add(pos, 0xc0), and(mload(add(value, 0xc0)), _1))\n                mstore(add(pos, 0xe0), and(mload(add(value, 0xe0)), _1))\n                let _2 := 0x0100\n                mstore(add(pos, _2), and(mload(add(value, _2)), _1))\n                let _3 := 0x0120\n                mstore(add(pos, _3), and(mload(add(value, _3)), _1))\n                let _4 := 0x0140\n                mstore(add(pos, _4), and(mload(add(value, _4)), _1))\n            }\n            function abi_decode_array_bytes32_dyn_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n            }\n            /// @ast-id 93 @src 0:3199:3302  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun_checkRole(var_role)\n            {\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x00)\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                let _1 := keccak256(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)\n                mstore(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 4:735:745  \"msg.sender\" */ caller())\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                mstore(0x20, _1)\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                if /** @src 0:3519:3542  \"!hasRole(role, account)\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)), 0xff))\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    let _2 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(0x40)\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(_2, shl(224, 0xe2517d3f))\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    mstore(/** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ add(_2, 4), /** @src 4:735:745  \"msg.sender\" */ caller())\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    mstore(add(/** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ _2, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36), var_role)\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(_2, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 68)\n                }\n            }\n            function update_storage_value_offsett_bool_to_bool(slot, value)\n            {\n                let value_1 := and(sload(slot), not(255))\n                sstore(slot, or(value_1, and(iszero(iszero(value)), 255)))\n            }\n            /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_grantRole(var_role, var_account) -> var\n            {\n                /// @src 0:2954:2960  \"_roles\"\n                let _1 := 0x00\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                let _2 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)\n                let _3 := and(var_account, sub(shl(160, 1), 1))\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _3)\n                mstore(0x20, _2)\n                /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)), 0xff))\n                case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:6466:6478  \"return false\"\n                    var := /** @src 0:2954:2960  \"_roles\" */ _1\n                    /// @src 0:6466:6478  \"return false\"\n                    leave\n                }\n                default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ var_role)\n                    mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    let _4 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _3)\n                    mstore(0x20, _4)\n                    let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)\n                    sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                    /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 0:2954:2960  \"_roles\" */ _1, _1, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, var_role, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _3, /** @src 4:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:6424:6435  \"return true\"\n                    var := /** @src 0:6347:6351  \"true\" */ 0x01\n                    /// @src 0:6424:6435  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 294 @src 0:6730:7047  \"function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_revokeRole(var_role, var_account) -> var\n            {\n                /// @src 0:2954:2960  \"_roles\"\n                let _1 := 0x00\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                let _2 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)\n                let _3 := and(var_account, sub(shl(160, 1), 1))\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _3)\n                mstore(0x20, _2)\n                /// @src 0:6824:7041  \"if (hasRole(role, account)) {...\"\n                switch /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)), 0xff)\n                case /** @src 0:6824:7041  \"if (hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:7018:7030  \"return false\"\n                    var := /** @src 0:2954:2960  \"_roles\" */ _1\n                    /// @src 0:7018:7030  \"return false\"\n                    leave\n                }\n                default /// @src 0:6824:7041  \"if (hasRole(role, account)) {...\"\n                {\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ var_role)\n                    mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    let _4 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _3)\n                    mstore(0x20, _4)\n                    let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)\n                    sstore(dataSlot, and(sload(dataSlot), not(255)))\n                    /// @src 0:6922:6962  \"RoleRevoked(role, account, _msgSender())\"\n                    log4(/** @src 0:2954:2960  \"_roles\" */ _1, _1, /** @src 0:6922:6962  \"RoleRevoked(role, account, _msgSender())\" */ 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b, var_role, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _3, /** @src 4:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:6976:6987  \"return true\"\n                    var := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 1\n                    /// @src 0:6976:6987  \"return true\"\n                    leave\n                }\n            }\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, iszero(iszero(value))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                value0 := value\n            }\n            function abi_encode_address_address_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), value2)\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n            function abi_encode_address_uint256_uint256_uint256_uint256(headStart, value0, value1, value2, value3, value4) -> tail\n            {\n                tail := add(headStart, 160)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), value3)\n                mstore(add(headStart, 128), value4)\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function checked_mul_uint256(x, y) -> product\n            {\n                product := mul(x, y)\n                if iszero(or(iszero(x), eq(y, div(product, x))))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function abi_encode_address_uint256_uint256_uint256_uint256_uint256_uint256_uint256(headStart, value0, value1, value2, value3, value4, value5, value6, value7) -> tail\n            {\n                tail := add(headStart, 256)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), value3)\n                mstore(add(headStart, 128), value4)\n                mstore(add(headStart, 160), value5)\n                mstore(add(headStart, 192), value6)\n                mstore(add(headStart, 224), value7)\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n            function update_storage_value_offsett_bool_to_bool_60554(value)\n            {\n                let _1 := sload(9)\n                sstore(9, or(and(_1, not(65280)), and(shl(8, iszero(iszero(value))), 65280)))\n            }\n            function update_storage_value_offsett_address_to_address_60573(value)\n            {\n                sstore(22, or(and(sload(22), shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            function update_storage_value_offsett_address_to_address(value)\n            {\n                sstore(23, or(and(sload(23), shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            /// @ast-id 1574 @src 8:4474:4569  \"modifier notZeroAddress(address _address) {...\"\n            function modifier_notZeroAddress(var_userAddress, var_userTierIndex, var_proof_offset, var_proof_length) -> _1\n            {\n                /// @src 8:4542:4550  \"_address\"\n                fun_notZeroAddress(var_userAddress)\n                /// @src 8:22246:22269  \"abi.encode(userAddress)\"\n                let expr_mpos := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                /// @src 8:22246:22269  \"abi.encode(userAddress)\"\n                let _2 := add(expr_mpos, 0x20)\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                mstore(_2, and(var_userAddress, sub(shl(160, 1), 1)))\n                /// @src 8:22246:22269  \"abi.encode(userAddress)\"\n                mstore(expr_mpos, 0x20)\n                finalize_allocation_60549(expr_mpos)\n                /// @src 8:22236:22270  \"keccak256(abi.encode(userAddress))\"\n                let _3 := keccak256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _2, mload(/** @src 8:22236:22270  \"keccak256(abi.encode(userAddress))\" */ expr_mpos))\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                let outPtr := mload(64)\n                let _4 := add(outPtr, /** @src 8:22246:22269  \"abi.encode(userAddress)\" */ 0x20)\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                mstore(_4, _3)\n                mstore(outPtr, /** @src 8:22246:22269  \"abi.encode(userAddress)\" */ 0x20)\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                finalize_allocation_60549(outPtr)\n                /// @src 8:22213:22272  \"keccak256(bytes.concat(keccak256(abi.encode(userAddress))))\"\n                let _5 := keccak256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _4, mload(/** @src 8:22213:22272  \"keccak256(bytes.concat(keccak256(abi.encode(userAddress))))\" */ outPtr))\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ var_userTierIndex)\n                mstore(/** @src 8:22246:22269  \"abi.encode(userAddress)\" */ 0x20, /** @src 8:22315:22326  \"tierDetails\" */ 0x26)\n                /// @src 8:4561:4562  \"_\"\n                _1 := /** @src 8:22289:22368  \"MerkleProof.verify(proof, tierDetails[userTierIndex].whitelistMerkleRoot, leaf)\" */ fun_verify(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ abi_decode_available_length_array_bytes32_dyn(/** @src 8:22289:22368  \"MerkleProof.verify(proof, tierDetails[userTierIndex].whitelistMerkleRoot, leaf)\" */ var_proof_offset, var_proof_length, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ calldatasize()), sload(/** @src 8:22315:22361  \"tierDetails[userTierIndex].whitelistMerkleRoot\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64), /** @src 8:22315:22361  \"tierDetails[userTierIndex].whitelistMerkleRoot\" */ 4)), /** @src 8:22213:22272  \"keccak256(bytes.concat(keccak256(abi.encode(userAddress))))\" */ _5)\n            }\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            function array_allocation_size_array_bytes32_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n            function abi_decode_available_length_array_bytes32_dyn(offset, length, end) -> array\n            {\n                let _1 := array_allocation_size_array_bytes32_dyn(length)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                array := memPtr\n                let dst := memPtr\n                mstore(memPtr, length)\n                let _2 := 0x20\n                dst := add(memPtr, _2)\n                let srcEnd := add(offset, shl(5, length))\n                if gt(srcEnd, end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                let src := offset\n                for { } lt(src, srcEnd) { src := add(src, _2) }\n                {\n                    mstore(dst, calldataload(src))\n                    dst := add(dst, _2)\n                }\n            }\n            /// @ast-id 630 @src 5:1265:1419  \"function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {...\"\n            function fun_verify(var_proof_mpos, var_root, var_leaf) -> var\n            {\n                /// @src 5:2069:2096  \"bytes32 computedHash = leaf\"\n                let var_computedHash := var_leaf\n                /// @src 5:2111:2124  \"uint256 i = 0\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 5:2106:2222  \"for (uint256 i = 0; i < proof.length; i++) {...\"\n                for { }\n                /** @src 5:2111:2124  \"uint256 i = 0\" */ 1\n                {\n                    /// @src 5:2144:2147  \"i++\"\n                    var_i := increment_uint256(var_i)\n                }\n                {\n                    /// @src 5:2126:2142  \"i < proof.length\"\n                    if iszero(lt(var_i, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(/** @src 5:2130:2142  \"proof.length\" */ var_proof_mpos)))\n                    /// @src 5:2126:2142  \"i < proof.length\"\n                    { break }\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    let _1 := mload(/** @src 5:2202:2210  \"proof[i]\" */ memory_array_index_access_bytes32_dyn(var_proof_mpos, var_i))\n                    /// @src 5:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                    let expr := /** @src -1:-1:-1 */ 0\n                    /// @src 5:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                    switch /** @src 5:9318:9323  \"a < b\" */ lt(var_computedHash, _1)\n                    case /** @src 5:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\" */ 0 {\n                        /// @src 5:9632:9751  \"assembly {...\"\n                        mstore(/** @src -1:-1:-1 */ expr, /** @src 5:9632:9751  \"assembly {...\" */ _1)\n                        mstore(0x20, var_computedHash)\n                        /// @src 5:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                        expr := /** @src 5:9632:9751  \"assembly {...\" */ keccak256(/** @src -1:-1:-1 */ expr, /** @src 5:9632:9751  \"assembly {...\" */ 0x40)\n                    }\n                    default /// @src 5:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                    {\n                        /// @src 5:9632:9751  \"assembly {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 5:9632:9751  \"assembly {...\" */ var_computedHash)\n                        mstore(0x20, _1)\n                        /// @src 5:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                        expr := /** @src 5:9632:9751  \"assembly {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:9632:9751  \"assembly {...\" */ 0x40)\n                    }\n                    /// @src 5:2163:2211  \"computedHash = _hashPair(computedHash, proof[i])\"\n                    var_computedHash := expr\n                }\n                /// @src 5:1372:1412  \"return processProof(proof, leaf) == root\"\n                var := /** @src 5:1379:1412  \"processProof(proof, leaf) == root\" */ eq(var_computedHash, var_root)\n            }\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            function memory_array_index_access_bytes32_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            /// @ast-id 1574 @src 8:4474:4569  \"modifier notZeroAddress(address _address) {...\"\n            function modifier_notZeroAddress_60592(var_userAddress, var_proof_offset, var_proof_length) -> _1\n            {\n                /// @src 8:4542:4550  \"_address\"\n                fun_notZeroAddress(var_userAddress)\n                /// @src 8:22573:22596  \"abi.encode(userAddress)\"\n                let expr_mpos := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                /// @src 8:22573:22596  \"abi.encode(userAddress)\"\n                let _2 := add(expr_mpos, 0x20)\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                mstore(_2, and(var_userAddress, sub(shl(160, 1), 1)))\n                /// @src 8:22573:22596  \"abi.encode(userAddress)\"\n                mstore(expr_mpos, 0x20)\n                finalize_allocation_60549(expr_mpos)\n                /// @src 8:22563:22597  \"keccak256(abi.encode(userAddress))\"\n                let _3 := keccak256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _2, mload(/** @src 8:22563:22597  \"keccak256(abi.encode(userAddress))\" */ expr_mpos))\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                let outPtr := mload(64)\n                let _4 := add(outPtr, /** @src 8:22573:22596  \"abi.encode(userAddress)\" */ 0x20)\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                mstore(_4, _3)\n                mstore(outPtr, /** @src 8:22573:22596  \"abi.encode(userAddress)\" */ 0x20)\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                finalize_allocation_60549(outPtr)\n                /// @src 8:4561:4562  \"_\"\n                _1 := /** @src 8:22616:22684  \"MerkleProof.verify(proof, sale.ticketDetails.ticketMerkleRoot, leaf)\" */ fun_verify(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ abi_decode_available_length_array_bytes32_dyn(/** @src 8:22616:22684  \"MerkleProof.verify(proof, sale.ticketDetails.ticketMerkleRoot, leaf)\" */ var_proof_offset, var_proof_length, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ calldatasize()), sload(/** @src 8:22642:22677  \"sale.ticketDetails.ticketMerkleRoot\" */ 16), /** @src 8:22540:22599  \"keccak256(bytes.concat(keccak256(abi.encode(userAddress))))\" */ keccak256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _4, mload(/** @src 8:22540:22599  \"keccak256(bytes.concat(keccak256(abi.encode(userAddress))))\" */ outPtr)))\n            }\n            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n            function allocate_and_zero_memory_struct_struct_SaleTierDetails() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_60550(memPtr_1)\n                memPtr := memPtr_1\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                mstore(memPtr_1, /** @src -1:-1:-1 */ _1)\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                mstore(add(memPtr_1, 32), /** @src -1:-1:-1 */ _1)\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                mstore(add(memPtr_1, 64), /** @src -1:-1:-1 */ _1)\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                mstore(add(memPtr_1, 96), /** @src -1:-1:-1 */ _1)\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                mstore(add(memPtr_1, 128), /** @src -1:-1:-1 */ _1)\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                mstore(add(memPtr_1, 160), /** @src -1:-1:-1 */ _1)\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                mstore(add(memPtr_1, 192), /** @src -1:-1:-1 */ _1)\n            }\n            /// @ast-id 3647 @src 8:23799:24112  \"function getTierCount() public view returns (uint256) {...\"\n            function fun_getTierCount() -> var\n            {\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 8:23863:23940  \"if (sale.saleAddresses.stakeControllerContractAddress == address(0)) return 0\"\n                if /** @src 8:23867:23930  \"sale.saleAddresses.stakeControllerContractAddress == address(0)\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:23867:23916  \"sale.saleAddresses.stakeControllerContractAddress\" */ 22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _1))\n                /// @src 8:23863:23940  \"if (sale.saleAddresses.stakeControllerContractAddress == address(0)) return 0\"\n                {\n                    /// @src 8:23932:23940  \"return 0\"\n                    var := /** @src -1:-1:-1 */ 0\n                    /// @src 8:23932:23940  \"return 0\"\n                    leave\n                }\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                let cleaned := and(sload(/** @src 8:23971:23994  \"stakeControllerContract\" */ 0x23), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _1)\n                /// @src 8:23971:24009  \"stakeControllerContract.getTierCount()\"\n                let _2 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                /// @src 8:23971:24009  \"stakeControllerContract.getTierCount()\"\n                mstore(_2, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(227, 0x0ce309c5))\n                /// @src 8:23971:24009  \"stakeControllerContract.getTierCount()\"\n                let _3 := staticcall(gas(), cleaned, _2, 4, _2, 32)\n                if iszero(_3)\n                {\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    let pos := mload(64)\n                    returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 8:23971:24009  \"stakeControllerContract.getTierCount()\"\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 8:23971:24009  \"stakeControllerContract.getTierCount()\"\n                if _3\n                {\n                    let _4 := 32\n                    if gt(_4, returndatasize()) { _4 := returndatasize() }\n                    finalize_allocation(_2, _4)\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    if slt(sub(/** @src 8:23971:24009  \"stakeControllerContract.getTierCount()\" */ add(_2, _4), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _2), /** @src 8:23971:24009  \"stakeControllerContract.getTierCount()\" */ 32)\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    {\n                        revert(/** @src -1:-1:-1 */ expr, expr)\n                    }\n                    /// @src 8:23971:24009  \"stakeControllerContract.getTierCount()\"\n                    expr := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_2)\n                }\n                /// @src 8:24019:24078  \"if (tierCount == 0) revert Errors.NoTierDetailsFoundError()\"\n                if /** @src 8:24023:24037  \"tierCount == 0\" */ iszero(expr)\n                /// @src 8:24019:24078  \"if (tierCount == 0) revert Errors.NoTierDetailsFoundError()\"\n                {\n                    /// @src 8:24046:24078  \"Errors.NoTierDetailsFoundError()\"\n                    let _5 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                    /// @src 8:24046:24078  \"Errors.NoTierDetailsFoundError()\"\n                    mstore(_5, shl(227, 0x031f2f73))\n                    revert(_5, /** @src 8:23971:24009  \"stakeControllerContract.getTierCount()\" */ 4)\n                }\n                /// @src 8:24089:24105  \"return tierCount\"\n                var := expr\n            }\n            /// @src 8:24954:25275  \"function _getUserNftBalance(address userAddress) internal view notZeroAddress(userAddress) returns (uint256) {...\"\n            function fun_getUserNftBalance_inner() -> var\n            {\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                let cleaned := and(sload(/** @src 8:25077:25114  \"sale.saleAddresses.nftContractAddress\" */ 21), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))\n                /// @src 8:25073:25269  \"if (sale.saleAddresses.nftContractAddress == address(0)) {...\"\n                switch /** @src 8:25077:25128  \"sale.saleAddresses.nftContractAddress == address(0)\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ cleaned)\n                case /** @src 8:25073:25269  \"if (sale.saleAddresses.nftContractAddress == address(0)) {...\" */ 0 {\n                    /// @src 8:25190:25258  \"IERC721(sale.saleAddresses.nftContractAddress).balanceOf(msg.sender)\"\n                    let _1 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                    /// @src 8:25190:25258  \"IERC721(sale.saleAddresses.nftContractAddress).balanceOf(msg.sender)\"\n                    mstore(_1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x70a08231))\n                    mstore(/** @src 8:25190:25258  \"IERC721(sale.saleAddresses.nftContractAddress).balanceOf(msg.sender)\" */ add(_1, /** @src 8:25077:25114  \"sale.saleAddresses.nftContractAddress\" */ 4), /** @src 8:25247:25257  \"msg.sender\" */ caller())\n                    /// @src 8:25190:25258  \"IERC721(sale.saleAddresses.nftContractAddress).balanceOf(msg.sender)\"\n                    let _2 := staticcall(gas(), cleaned, _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36, /** @src 8:25190:25258  \"IERC721(sale.saleAddresses.nftContractAddress).balanceOf(msg.sender)\" */ _1, 32)\n                    if iszero(_2)\n                    {\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let pos := mload(64)\n                        returndatacopy(pos, 0, returndatasize())\n                        revert(pos, returndatasize())\n                    }\n                    /// @src 8:25190:25258  \"IERC721(sale.saleAddresses.nftContractAddress).balanceOf(msg.sender)\"\n                    let expr := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                    /// @src 8:25190:25258  \"IERC721(sale.saleAddresses.nftContractAddress).balanceOf(msg.sender)\"\n                    if _2\n                    {\n                        let _3 := 32\n                        if gt(_3, returndatasize()) { _3 := returndatasize() }\n                        finalize_allocation(_1, _3)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        if slt(sub(/** @src 8:25190:25258  \"IERC721(sale.saleAddresses.nftContractAddress).balanceOf(msg.sender)\" */ add(_1, _3), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _1), /** @src 8:25190:25258  \"IERC721(sale.saleAddresses.nftContractAddress).balanceOf(msg.sender)\" */ 32)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        { revert(expr, expr) }\n                        /// @src 8:25190:25258  \"IERC721(sale.saleAddresses.nftContractAddress).balanceOf(msg.sender)\"\n                        expr := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_1)\n                    }\n                    /// @src 8:25183:25258  \"return IERC721(sale.saleAddresses.nftContractAddress).balanceOf(msg.sender)\"\n                    var := expr\n                    leave\n                }\n                default /// @src 8:25073:25269  \"if (sale.saleAddresses.nftContractAddress == address(0)) {...\"\n                {\n                    /// @src 8:25144:25152  \"return 0\"\n                    var := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                    /// @src 8:25144:25152  \"return 0\"\n                    leave\n                }\n            }\n            /// @ast-id 3769 @src 8:25281:25415  \"function _notZeroAddress(address _address) internal pure {...\"\n            function fun_notZeroAddress(var_address)\n            {\n                /// @src 8:25348:25408  \"if (_address == address(0)) revert Errors.ZeroAddressError()\"\n                if /** @src 8:25352:25374  \"_address == address(0)\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(/** @src 8:25352:25374  \"_address == address(0)\" */ var_address, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                /// @src 8:25348:25408  \"if (_address == address(0)) revert Errors.ZeroAddressError()\"\n                {\n                    /// @src 8:25383:25408  \"Errors.ZeroAddressError()\"\n                    let _1 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                    /// @src 8:25383:25408  \"Errors.ZeroAddressError()\"\n                    mstore(_1, shl(224, 0x3efa09af))\n                    revert(_1, 4)\n                }\n            }\n            /// @ast-id 3809 @src 8:25560:25729  \"function _onlyOwnerOrAdmin(address _address) internal view {...\"\n            function fun_onlyOwnerOrAdmin(var__address)\n            {\n                /// @src 0:2954:2960  \"_roles\"\n                let _1 := 0x00\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:332:350  \"keccak256(\\\"OWNER\\\")\" */ 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b)\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                let _2 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)\n                let _3 := and(var__address, sub(shl(160, 1), 1))\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _3)\n                mstore(0x20, _2)\n                /// @src 8:25633:25687  \"!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)\"\n                let expr := /** @src 8:25633:25658  \"!hasRole(OWNER, _address)\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)), 0xff))\n                /// @src 8:25633:25687  \"!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)\"\n                if expr\n                {\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42)\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    let _4 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _3)\n                    mstore(0x20, _4)\n                    /// @src 8:25633:25687  \"!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)\"\n                    expr := /** @src 8:25662:25687  \"!hasRole(ADMIN, _address)\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)), 0xff))\n                }\n                /// @src 8:25629:25722  \"if (!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)) revert Errors.UnauthorizedError()\"\n                if expr\n                {\n                    /// @src 8:25696:25722  \"Errors.UnauthorizedError()\"\n                    let _5 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(0x40)\n                    /// @src 8:25696:25722  \"Errors.UnauthorizedError()\"\n                    mstore(_5, shl(224, 0x8b5701f7))\n                    revert(_5, 4)\n                }\n            }\n            /// @ast-id 3822 @src 8:25735:25863  \"function _whenSaleIsNotPaused() internal view {...\"\n            function fun_whenSaleIsNotPaused()\n            {\n                /// @src 8:25791:25856  \"if(sale.saleDetails.salePaused) revert Errors.SaleIsPausedError()\"\n                if /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(shr(/** @src 8:25794:25821  \"sale.saleDetails.salePaused\" */ 8, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:25794:25821  \"sale.saleDetails.salePaused\" */ 9)), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xff)\n                /// @src 8:25791:25856  \"if(sale.saleDetails.salePaused) revert Errors.SaleIsPausedError()\"\n                {\n                    /// @src 8:25830:25856  \"Errors.SaleIsPausedError()\"\n                    let _1 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                    /// @src 8:25830:25856  \"Errors.SaleIsPausedError()\"\n                    mstore(_1, shl(224, 0x778ba6f7))\n                    revert(_1, 4)\n                }\n            }\n            /// @ast-id 3853 @src 8:25869:26134  \"function _hasEnoughAllowance(IERC20Extented token, address userAddress, uint256 amount) internal view {...\"\n            function fun_hasEnoughAllowance(var_token_address, var_userAddress, var_amount)\n            {\n                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 8:26005:26048  \"token.allowance(userAddress, address(this))\"\n                let _2 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                /// @src 8:26005:26048  \"token.allowance(userAddress, address(this))\"\n                mstore(_2, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(225, 0x6eb1769f))\n                mstore(/** @src 8:26005:26048  \"token.allowance(userAddress, address(this))\" */ add(_2, 4), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(var_userAddress, _1))\n                mstore(add(/** @src 8:26005:26048  \"token.allowance(userAddress, address(this))\" */ _2, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36), /** @src 8:26042:26046  \"this\" */ address())\n                /// @src 8:26005:26048  \"token.allowance(userAddress, address(this))\"\n                let _3 := staticcall(gas(), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(/** @src 8:26005:26020  \"token.allowance\" */ var_token_address, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _1), /** @src 8:26005:26048  \"token.allowance(userAddress, address(this))\" */ _2, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 68, /** @src 8:26005:26048  \"token.allowance(userAddress, address(this))\" */ _2, 32)\n                if iszero(_3)\n                {\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    let pos := mload(64)\n                    returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 8:26005:26048  \"token.allowance(userAddress, address(this))\"\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 8:26005:26048  \"token.allowance(userAddress, address(this))\"\n                if _3\n                {\n                    let _4 := 32\n                    if gt(_4, returndatasize()) { _4 := returndatasize() }\n                    finalize_allocation(_2, _4)\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    if slt(sub(/** @src 8:26005:26048  \"token.allowance(userAddress, address(this))\" */ add(_2, _4), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _2), /** @src 8:26005:26048  \"token.allowance(userAddress, address(this))\" */ 32)\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    {\n                        revert(/** @src -1:-1:-1 */ expr, expr)\n                    }\n                    /// @src 8:26005:26048  \"token.allowance(userAddress, address(this))\"\n                    expr := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_2)\n                }\n                /// @src 8:26058:26127  \"if(amount > userAllowance) revert Errors.InsufficientAllowanceError()\"\n                if /** @src 8:26061:26083  \"amount > userAllowance\" */ gt(var_amount, expr)\n                /// @src 8:26058:26127  \"if(amount > userAllowance) revert Errors.InsufficientAllowanceError()\"\n                {\n                    /// @src 8:26092:26127  \"Errors.InsufficientAllowanceError()\"\n                    let _5 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                    /// @src 8:26092:26127  \"Errors.InsufficientAllowanceError()\"\n                    mstore(_5, shl(227, 0x0e74e94f))\n                    revert(_5, /** @src 8:26005:26048  \"token.allowance(userAddress, address(this))\" */ 4)\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220f28ef4812c9109f1ed4bdf7f2a208b7ebecc5537826062fd1286f309ca99b68964736f6c63430008140033\"\n    }\n}\n","hash":"01000a5f68803d1a45dd51b555583e101afe8282614ddbf3c7fb7afc10604e40","factoryDependencies":{}}},"contracts/core/DappadSaleFactory.sol":{"DappadSaleFactory":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"adminAddress","type":"address"}],"internalType":"struct IDappadSaleFactory.SaleFactoryParams","name":"saleFactoryParams","type":"tuple"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"EmptySaleNameError","type":"error"},{"inputs":[],"name":"EmptyTierDetailsError","type":"error"},{"inputs":[],"name":"InvalidMaxInvestmentAmountError","type":"error"},{"inputs":[],"name":"InvalidSaleDurationError","type":"error"},{"inputs":[],"name":"InvalidSaleEndDateError","type":"error"},{"inputs":[],"name":"InvalidSaleIndexError","type":"error"},{"inputs":[],"name":"InvalidSaleStartDateError","type":"error"},{"inputs":[],"name":"UnauthorizedError","type":"error"},{"inputs":[],"name":"ZeroAddressError","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"saleName","type":"string"},{"indexed":false,"internalType":"uint256","name":"saleStart","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"saleEnd","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maxInvestmentAmount","type":"uint256"},{"indexed":false,"internalType":"address","name":"investmentTokenAddress","type":"address"},{"indexed":false,"internalType":"address","name":"saleTokenAddress","type":"address"},{"indexed":false,"internalType":"address","name":"factoryContractAddress","type":"address"}],"name":"SaleCreated","type":"event"},{"inputs":[],"name":"ADMIN","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OWNER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allSales","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"components":[{"internalType":"uint256","name":"registerStart","type":"uint256"},{"internalType":"uint256","name":"registerEnd","type":"uint256"},{"internalType":"uint256","name":"registerTokenAmount","type":"uint256"},{"internalType":"uint256","name":"saleStart","type":"uint256"},{"internalType":"uint256","name":"saleEnd","type":"uint256"},{"internalType":"uint256","name":"saleTokenPrice","type":"uint256"},{"internalType":"uint256","name":"maxInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"projectOwnerFeePercentage","type":"uint256"},{"internalType":"bool","name":"registerTokenEnabled","type":"bool"},{"internalType":"bool","name":"salePaused","type":"bool"},{"internalType":"string","name":"saleName","type":"string"}],"internalType":"struct IDappadSale.SaleDetails","name":"saleDetails","type":"tuple"},{"components":[{"internalType":"uint256","name":"fcfsSaleDuration","type":"uint256"},{"internalType":"uint256","name":"fcfsSaleMultiplier","type":"uint256"}],"internalType":"struct IDappadSale.SaleFcfsDetails","name":"fcfsDetails","type":"tuple"},{"components":[{"internalType":"uint256","name":"refundDuration","type":"uint256"},{"internalType":"bool","name":"refundEnabled","type":"bool"}],"internalType":"struct IDappadSale.SaleRefundDetails","name":"refundDetails","type":"tuple"},{"components":[{"internalType":"uint256","name":"ticketPrice","type":"uint256"},{"internalType":"bytes32","name":"ticketMerkleRoot","type":"bytes32"}],"internalType":"struct IDappadSale.SaleTicketDetails","name":"ticketDetails","type":"tuple"},{"components":[{"internalType":"address","name":"saleTokenAddress","type":"address"},{"internalType":"address","name":"registerTokenAddress","type":"address"},{"internalType":"address","name":"investmentTokenAddress","type":"address"},{"internalType":"address","name":"factoryContractAddress","type":"address"},{"internalType":"address","name":"nftContractAddress","type":"address"},{"internalType":"address","name":"stakeControllerContractAddress","type":"address"},{"internalType":"address","name":"vestingContractAddress","type":"address"},{"internalType":"address","name":"ownerAddress","type":"address"},{"internalType":"address","name":"adminAddress","type":"address"},{"internalType":"address","name":"launchpadFeeAddress","type":"address"},{"internalType":"address","name":"projectOwnerFeeAddress","type":"address"}],"internalType":"struct IDappadSale.SaleAddresses","name":"saleAddresses","type":"tuple"}],"internalType":"struct IDappadSale.Sale","name":"sale","type":"tuple"},{"components":[{"internalType":"uint256","name":"minInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"maxInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"tierMaxInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"ticketAmount","type":"uint256"},{"internalType":"bytes32","name":"whitelistMerkleRoot","type":"bytes32"},{"internalType":"uint256","name":"totalInvestmentAmount","type":"uint256"},{"internalType":"uint256","name":"totalParticipants","type":"uint256"}],"internalType":"struct IDappadSale.SaleTierDetails[]","name":"tierDetails","type":"tuple[]"}],"internalType":"struct IDappadSale.SaleParams","name":"_saleParams","type":"tuple"}],"name":"createSale","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getIsSaleActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getSale","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSaleCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"adminAddress\",\"type\":\"address\"}],\"internalType\":\"struct IDappadSaleFactory.SaleFactoryParams\",\"name\":\"saleFactoryParams\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptySaleNameError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyTierDetailsError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaxInvestmentAmountError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSaleDurationError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSaleEndDateError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSaleIndexError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSaleStartDateError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressError\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"saleName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"saleStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"saleEnd\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxInvestmentAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"investmentTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"saleTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factoryContractAddress\",\"type\":\"address\"}],\"name\":\"SaleCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OWNER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allSales\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"registerStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registerEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registerTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleTokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"projectOwnerFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"registerTokenEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"salePaused\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"saleName\",\"type\":\"string\"}],\"internalType\":\"struct IDappadSale.SaleDetails\",\"name\":\"saleDetails\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"fcfsSaleDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fcfsSaleMultiplier\",\"type\":\"uint256\"}],\"internalType\":\"struct IDappadSale.SaleFcfsDetails\",\"name\":\"fcfsDetails\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"refundDuration\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"refundEnabled\",\"type\":\"bool\"}],\"internalType\":\"struct IDappadSale.SaleRefundDetails\",\"name\":\"refundDetails\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ticketPrice\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"ticketMerkleRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IDappadSale.SaleTicketDetails\",\"name\":\"ticketDetails\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"saleTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"registerTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"investmentTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factoryContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stakeControllerContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vestingContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"adminAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchpadFeeAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"projectOwnerFeeAddress\",\"type\":\"address\"}],\"internalType\":\"struct IDappadSale.SaleAddresses\",\"name\":\"saleAddresses\",\"type\":\"tuple\"}],\"internalType\":\"struct IDappadSale.Sale\",\"name\":\"sale\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tierMaxInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"whitelistMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalParticipants\",\"type\":\"uint256\"}],\"internalType\":\"struct IDappadSale.SaleTierDetails[]\",\"name\":\"tierDetails\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IDappadSale.SaleParams\",\"name\":\"_saleParams\",\"type\":\"tuple\"}],\"name\":\"createSale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getIsSaleActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getSale\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSaleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/DappadSaleFactory.sol\":\"DappadSaleFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/core/DappadSale.sol\":{\"keccak256\":\"0xbe9804ece31fdccfbcfe899e89f5f444ef8bf8ce1855a5d99d2b0bdfe0666df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22939102223a0eb409cc245c46a0475062256e32cc9e00cecc2bd859a342e8ef\",\"dweb:/ipfs/QmXZ9SmHyuU82cP5GJR3Cahvn52ocX16Y9UndRh95nim8W\"]},\"contracts/core/DappadSaleFactory.sol\":{\"keccak256\":\"0xd48e8ae1c50e01679d5fde5491b0e088714debad649537092ecba30dba46413e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2eed64a47a451ac6791b3cefcf924d09abe88dcc89a68658c9336b1ed0e1565c\",\"dweb:/ipfs/QmPMbs7GwkszzmRsuFc9w5CEyNaVJNwjWtBxHNnWzaoZLr\"]},\"contracts/errors/Errors.sol\":{\"keccak256\":\"0x1e7bd8e98aaf625e63f63fa8d2bf4f8b4beb93313e33dfb6affdcdd9a7524f70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0613414bf0ad19a7ebc66e8eba189869aacf94f9e734536488a75216942650\",\"dweb:/ipfs/QmRGKqDpx3ef5D3MXMyoR7U23HWqDZmj9Kt2QJgcgD37YR\"]},\"contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xcee038fff82ea087fcca9ccabcc0e8e8d98fe8e907c3d781e16b653badd7bd42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8437b64a0e7587e2d0ab0f37767f9be8bce72b41ecb3c340940a301f35422f48\",\"dweb:/ipfs/QmYy6hA9PY78CDsq71zPsYxBKJxGgSSpSmhXSW4kSLke4a\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":null,"zk_version":"1.3.23"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"DappadSaleFactory.sol:DappadSaleFactory\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[5]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_15[0], r2, r4\n\tjump.gt\t@.BB0_36\n\tsub.s!\t@CPI0_25[0], r2, r4\n\tjump.le\t@.BB0_28\n\tsub.s!\t@CPI0_26[0], r2, r4\n\tjump.gt\t@.BB0_34\n\tsub.s!\t@CPI0_29[0], r2, r4\n\tjump.eq\t@.BB0_55\n\tsub.s!\t@CPI0_30[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[4]\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t@CPI0_5[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_65\n\tld.1\t64, r1\n\tadd\t36, r1, r2\n\tadd\tstack-[2], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_64[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[1], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_65[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_1[0], r3, r2\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tjump.gt\t@.BB0_5\n.BB0_4:\n\tadd\t@CPI0_57[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_58[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_36:\n\tsub.s!\t@CPI0_16[0], r2, r4\n\tjump.le\t@.BB0_37\n\tsub.s!\t@CPI0_17[0], r2, r4\n\tjump.gt\t@.BB0_43\n\tsub.s!\t@CPI0_20[0], r2, r4\n\tjump.eq\t@.BB0_93\n\tsub.s!\t@CPI0_21[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\t1, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.ge\t@.BB0_100\n\tjump\t@.BB0_83\n.BB0_5:\n\tadd\t159, r3, r2\n\tand\t@CPI0_3[0], r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_218\n\tadd\tr0, r0, r5\n.BB0_7:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_7\n.BB0_218:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_9\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_9:\n\tsub.s!\t32, r3, r1\n\tjump.ge\t@.BB0_10\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_10:\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_4[0], r2, r1\n\tjump.gt\t@.BB0_4\n\tadd\tr2, r0, stack-[4]\n\tadd\t32, r2, r1\n\tst.1\t64, r1\n\tld.1\t128, r1\n\tsub.s!\t@CPI0_5[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[4], r0, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r6\n\tadd\t@CPI0_6[0], r0, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_9[0], r0, r4\n\tadd\t@CPI0_6[0], r0, r5\n\tadd\t@CPI0_6[0], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t@CPI0_10[0], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r6\n\tadd\t@CPI0_6[0], r0, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_9[0], r0, r4\n\tadd\t@CPI0_10[0], r0, r5\n\tadd\t@CPI0_6[0], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[2]\n\tand\t@CPI0_5[0], r1, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tadd\t@CPI0_11[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_20\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_11[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_12[0], r0, r4\n\tadd\t@CPI0_6[0], r0, r5\n\tadd\tstack-[3], r0, r6\n\tadd\tstack-[2], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_20:\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_5[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t@CPI0_13[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_24\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_13[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_12[0], r0, r4\n\tadd\t@CPI0_10[0], r0, r5\n\tadd\tstack-[4], r0, r6\n\tadd\tstack-[2], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_24:\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_14[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_28:\n\tsub.s!\t@CPI0_31[0], r2, r4\n\tjump.eq\t@.BB0_45\n\tsub.s!\t@CPI0_32[0], r2, r4\n\tjump.eq\t@.BB0_49\n\tsub.s!\t@CPI0_33[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\t1, r1, r1\n\tjump\t@.BB0_92\n.BB0_37:\n\tsub.s!\t@CPI0_22[0], r2, r4\n\tjump.eq\t@.BB0_84\n\tsub.s!\t@CPI0_23[0], r2, r1\n\tjump.eq\t@.BB0_88\n\tsub.s!\t@CPI0_24[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n.BB0_92:\n\tsload\tr1, r1\n\tjump\t@.BB0_51\n.BB0_34:\n\tsub.s!\t@CPI0_27[0], r2, r4\n\tjump.eq\t@.BB0_72\n\tsub.s!\t@CPI0_28[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\t1, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.ge\t@.BB0_2\n.BB0_83:\n\tnear_call\tr0, @storage_array_index_access_address_dyn, @DEFAULT_UNWIND\n\tshl.s\t3, r2, r2\n\tsload\tr1, r1\n\tshr\tr1, r2, r1\n\tand\t@CPI0_5[0], r1, r1\n\tsub.s!\t255, r2, r2\n\tadd.gt\tr0, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_49[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_43:\n\tsub.s!\t@CPI0_18[0], r2, r4\n\tjump.eq\t@.BB0_102\n\tsub.s!\t@CPI0_19[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r6\n\tsub.s!\t32, r6, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_34[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tsub\tr6, r2, r4\n\tadd\t@CPI0_35[0], r0, r5\n\tsub.s!\t64, r4, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr5, r0, r7\n\tand\t@CPI0_35[0], r4, r4\n\tsub!\tr4, r0, r8\n\tadd.le\tr0, r0, r5\n\tsub.s!\t@CPI0_35[0], r4, r4\n\tadd.ne\tr7, r0, r5\n\tsub!\tr5, r0, r4\n\tjump.ne\t@.BB0_2\n\tadd\t128, r0, stack-[5]\n\tadd\t192, r0, r4\n\tst.1\t64, r4\n\tadd\t4, r2, r5\n\tptr.add\tr1, r5, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI0_34[0], r5, r7\n\tjump.gt\t@.BB0_2\n\tadd\tr5, r2, r5\n\tsub\tr6, r5, r7\n\tadd\t@CPI0_35[0], r0, r8\n\tsub.s!\t576, r7, r9\n\tadd\tr0, r0, r9\n\tadd.lt\tr8, r0, r9\n\tand\t@CPI0_35[0], r7, r7\n\tsub!\tr7, r0, r10\n\tadd.le\tr0, r0, r8\n\tsub.s!\t@CPI0_35[0], r7, r7\n\tadd.ne\tr9, r0, r8\n\tsub!\tr8, r0, r7\n\tjump.ne\t@.BB0_2\n\tadd\t352, r0, r7\n\tadd\tr7, r0, stack-[4]\n\tst.1\t64, r7\n\tadd\t4, r5, r7\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI0_34[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tadd\tr7, r5, r7\n\tsub\tr6, r7, r6\n\tadd\t@CPI0_35[0], r0, r8\n\tsub.s!\t352, r6, r9\n\tadd\tr0, r0, r9\n\tadd.lt\tr8, r0, r9\n\tand\t@CPI0_35[0], r6, r6\n\tsub!\tr6, r0, r10\n\tadd.le\tr0, r0, r8\n\tsub.s!\t@CPI0_35[0], r6, r6\n\tadd.ne\tr9, r0, r8\n\tsub!\tr8, r0, r6\n\tjump.ne\t@.BB0_2\n\tadd\t704, r0, r6\n\tst.1\t64, r6\n\tadd\t4, r7, r8\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\t352, r8\n\tadd\t36, r7, r8\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\t384, r8\n\tadd\t68, r7, r8\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\t416, r8\n\tadd\t100, r7, r8\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\t448, r8\n\tadd\t132, r7, r8\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\t480, r8\n\tadd\t164, r7, r8\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\t512, r8\n\tadd\t196, r7, r8\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\t544, r8\n\tadd\t228, r7, r8\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\t576, r8\n\tadd\t260, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tsub!\tr9, r0, r10\n\tadd\t0, r0, r10\n\tadd.ne\t1, r0, r10\n\tsub!\tr9, r10, r10\n\tjump.ne\t@.BB0_2\n\tst.1\t608, r9\n\tadd\t32, r8, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tsub!\tr9, r0, r10\n\tadd\t0, r0, r10\n\tadd.ne\t1, r0, r10\n\tsub!\tr9, r10, r10\n\tjump.ne\t@.BB0_2\n\tst.1\t640, r9\n\tadd\t32, r8, r8\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tsub.s!\t@CPI0_34[0], r8, r9\n\tjump.gt\t@.BB0_2\n\tadd\tr8, r7, r8\n\tadd\t35, r8, r7\n\tsub!\tr7, r3, r7\n\tjump.ge\t@.BB0_2\n\tadd\t4, r8, r9\n\tptr.add\tr1, r9, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI0_34[0], r7, r10\n\tjump.gt\t@.BB0_4\n\tadd\t767, r7, r10\n\tsub.s\t32, r0, stack-[3]\n\tand\tstack-[3], r10, r10\n\tsub.s!\t@CPI0_34[0], r10, r11\n\tjump.gt\t@.BB0_4\n\tst.1\t64, r10\n\tst.1\t704, r7\n\tadd\tr8, r7, r8\n\tadd\t36, r8, r8\n\tsub!\tr8, r3, r8\n\tjump.gt\t@.BB0_2\n\tadd\t32, r9, r8\n\tptr.add\tr1, r8, r8\n\tand\t31, r7, r9\n\tshr.s!\t5, r7, r10\n\tjump.eq\t@.BB0_217\n\tadd\tr0, r0, r11\n.BB0_138:\n\tshl.s\t5, r11, r12\n\tptr.add\tr8, r12, r13\n\tld\tr13, r13\n\tadd\t736, r12, r12\n\tst.1\tr12, r13\n\tadd\t1, r11, r11\n\tsub!\tr11, r10, r12\n\tjump.lt\t@.BB0_138\n.BB0_217:\n\tsub!\tr9, r0, r11\n\tjump.eq\t@.BB0_140\n\tshl.s\t5, r10, r10\n\tptr.add\tr8, r10, r8\n\tshl.s\t3, r9, r9\n\tadd\t736, r10, r10\n\tld.1\tr10, r11\n\tshl\tr11, r9, r11\n\tshr\tr11, r9, r11\n\tld\tr8, r8\n\tsub\t256, r9, r9\n\tshr\tr8, r9, r8\n\tshl\tr8, r9, r8\n\tor\tr8, r11, r8\n\tst.1\tr10, r8\n.BB0_140:\n\tadd\t736, r7, r7\n\tst.1\tr7, r0\n\tst.1\t672, r6\n\tadd\tstack-[4], r0, r6\n\tst.1\t192, r6\n\tld.1\t64, r6\n\tsub.s!\t@CPI0_36[0], r6, r7\n\tjump.gt\t@.BB0_4\n\tadd\t64, r6, r7\n\tst.1\t64, r7\n\tadd\t36, r5, r7\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1.inc\tr6, r7, r7\n\tadd\t68, r5, r5\n\tptr.add\tr1, r5, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tst.1\t224, r6\n\tld.1\t64, r6\n\tsub.s!\t@CPI0_36[0], r6, r7\n\tjump.gt\t@.BB0_4\n\tadd\t64, r6, r7\n\tst.1\t64, r7\n\tadd\t32, r5, r7\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1.inc\tr6, r7, r7\n\tadd\t64, r5, r5\n\tptr.add\tr1, r5, r8\n\tld\tr8, r8\n\tsub!\tr8, r0, r9\n\tadd\t0, r0, r9\n\tadd.ne\t1, r0, r9\n\tsub!\tr8, r9, r9\n\tjump.ne\t@.BB0_2\n\tst.1\tr7, r8\n\tst.1\t256, r6\n\tld.1\t64, r6\n\tsub.s!\t@CPI0_36[0], r6, r7\n\tjump.gt\t@.BB0_4\n\tadd\t64, r6, r7\n\tst.1\t64, r7\n\tadd\t32, r5, r7\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1.inc\tr6, r7, r8\n\tadd\t64, r5, r7\n\tptr.add\tr1, r7, r5\n\tld\tr5, r5\n\tst.1\tr8, r5\n\tst.1\t288, r6\n\tld.1\t64, r5\n\tsub.s!\t@CPI0_37[0], r5, r6\n\tjump.gt\t@.BB0_4\n\tadd\t352, r5, r6\n\tst.1\t64, r6\n\tadd\t32, r7, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI0_5[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr5, r7, r7\n\tadd\t32, r6, r6\n\tptr.add\tr1, r6, r8\n\tld\tr8, r8\n\tsub.s!\t@CPI0_5[0], r8, r9\n\tjump.gt\t@.BB0_2\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI0_5[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tadd\t64, r5, r8\n\tst.1\tr8, r7\n\tadd\t32, r6, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI0_5[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tadd\t96, r5, r8\n\tst.1\tr8, r7\n\tadd\t32, r6, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI0_5[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tadd\t128, r5, r8\n\tst.1\tr8, r7\n\tadd\t32, r6, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI0_5[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tadd\t160, r5, r8\n\tst.1\tr8, r7\n\tadd\t32, r6, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI0_5[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tadd\t192, r5, r8\n\tst.1\tr8, r7\n\tadd\t32, r6, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI0_5[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tadd\t224, r5, r8\n\tst.1\tr8, r7\n\tadd\t32, r6, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI0_5[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tadd\t256, r5, r8\n\tst.1\tr8, r7\n\tadd\t32, r6, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI0_5[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tadd\t288, r5, r8\n\tst.1\tr8, r7\n\tadd\t32, r6, r6\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI0_5[0], r6, r7\n\tjump.gt\t@.BB0_2\n\tadd\t320, r5, r7\n\tst.1\tr7, r6\n\tst.1\t320, r5\n\tst.1\t128, r4\n\tadd\t36, r2, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI0_34[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\tr4, r2, r4\n\tadd\t35, r4, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_2\n\tadd\t4, r4, r2\n\tptr.add\tr1, r2, r2\n\tld\tr2, r6\n\tsub.s!\t@CPI0_34[0], r6, r2\n\tjump.gt\t@.BB0_4\n\tshl.s\t5, r6, r2\n\tadd\t63, r2, r2\n\tand\tstack-[3], r2, r5\n\tld.1\t64, r2\n\tadd\tr2, r5, r5\n\tsub!\tr5, r2, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_34[0], r5, r8\n\tjump.gt\t@.BB0_4\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r5\n\tst.1\tr2, r6\n\tadd\t36, r4, r4\n\tmul\t224, r6, r5, r7\n\tadd\tr5, r4, r5\n\tsub!\tr5, r3, r7\n\tjump.gt\t@.BB0_2\n\tsub!\tr6, r0, r6\n\tjump.eq\t@.BB0_165\n\tadd\t@CPI0_35[0], r0, r6\n\tadd\tr2, r0, r7\n.BB0_164:\n\tsub\tr3, r4, r8\n\tsub.s!\t224, r8, r9\n\tadd\tr0, r0, r9\n\tadd.lt\tr6, r0, r9\n\tand\t@CPI0_35[0], r8, r8\n\tsub!\tr8, r0, r10\n\tadd\tr0, r0, r10\n\tadd.gt\tr6, r0, r10\n\tsub.s!\t@CPI0_35[0], r8, r8\n\tadd.ne\tr9, r0, r10\n\tsub!\tr10, r0, r8\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r8\n\tsub.s!\t@CPI0_38[0], r8, r9\n\tjump.gt\t@.BB0_4\n\tadd\t32, r7, r7\n\tadd\t224, r8, r9\n\tst.1\t64, r9\n\tptr.add\tr1, r4, r9\n\tld\tr9, r9\n\tst.1.inc\tr8, r9, r9\n\tadd\t32, r4, r10\n\tptr.add\tr1, r10, r10\n\tld\tr10, r10\n\tst.1\tr9, r10\n\tadd\t64, r4, r9\n\tptr.add\tr1, r9, r9\n\tld\tr9, r9\n\tadd\t64, r8, r10\n\tst.1\tr10, r9\n\tadd\t96, r4, r9\n\tptr.add\tr1, r9, r9\n\tld\tr9, r9\n\tadd\t96, r8, r10\n\tst.1\tr10, r9\n\tadd\t128, r4, r9\n\tptr.add\tr1, r9, r9\n\tld\tr9, r9\n\tadd\t128, r8, r10\n\tst.1\tr10, r9\n\tadd\t160, r4, r9\n\tptr.add\tr1, r9, r9\n\tld\tr9, r9\n\tadd\t160, r8, r10\n\tst.1\tr10, r9\n\tadd\t192, r4, r9\n\tptr.add\tr1, r9, r9\n\tld\tr9, r9\n\tadd\t192, r8, r10\n\tst.1\tr10, r9\n\tst.1\tr7, r8\n\tadd\t224, r4, r4\n\tsub!\tr4, r5, r8\n\tjump.lt\t@.BB0_164\n.BB0_165:\n\tst.1\t160, r2\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\t@CPI0_11[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_173\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_13[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_173\n\tld.1\t64, r1\n\tadd\t@CPI0_56[0], r0, r2\n\tjump\t@.BB0_172\n.BB0_55:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_10[0], r0, r1\n\tjump\t@.BB0_51\n.BB0_93:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[4]\n\tsub.s!\t@CPI0_5[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tnear_call\tr0, @fun_checkRole, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r1\n\tadd\tstack-[4], r0, r2\n\tjump\t@.BB0_79\n.BB0_72:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_5[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr2\n\tsub!\tr3, r2, r3\n\tjump.ne\t@.BB0_76\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n.BB0_79:\n\tnear_call\tr0, @fun_revokeRole, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_102:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\t1, r0, r2\n\tsload\tr2, r3\n\tsub!\tr1, r3, r3\n\tjump.ge\t@.BB0_100\n\tst.1\t0, r2\n\tadd\t@CPI0_46[0], r1, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_59[0], r0, r1\n\tst.1\t128, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_5[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_107\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_117\n.BB0_45:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_66[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t@CPI0_67[0], r1, r2\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tsub.s!\t@CPI0_68[0], r1, r1\n\tor.eq\t1, r2, r2\n\tand\t1, r2, r1\n\tjump\t@.BB0_51\n.BB0_84:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[4]\n\tsub.s!\t@CPI0_5[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[3], r0, r2\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_51\n.BB0_49:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_6[0], r0, r1\n.BB0_51:\n\tst.1\t128, r1\n\tadd\t@CPI0_62[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_88:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tst.1\t128, r0\n\tadd\t@CPI0_62[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_100:\n\tadd\t@CPI0_61[0], r0, r1\n.BB0_77:\n\tst.1\t128, r1\n\tadd\t@CPI0_60[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_76:\n\tadd\t@CPI0_63[0], r0, r1\n\tjump\t@.BB0_77\n.BB0_107:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_60[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_215\n\tadd\tr0, r0, r7\n.BB0_109:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_109\n.BB0_215:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_111\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_111:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_112\n.BB0_117:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tst.1\tr1, r2\n.BB0_119:\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_112:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_214\n\tadd\tr0, r0, r6\n.BB0_114:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_114\n.BB0_214:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_116\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_116:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_65:\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_71\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_12[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[3], r0, r6\n\tadd\tstack-[1], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_71:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_173:\n\tld.1\t128, r1\n\tadd\t128, r1, r2\n\tld.1\tr2, r2\n\tadd\t64, r2, r3\n\tld.1\tr3, r3\n\tand!\t@CPI0_5[0], r3, r3\n\tjump.eq\t@.BB0_174\n\tadd\t320, r2, r3\n\tld.1\tr3, r3\n\tand!\t@CPI0_5[0], r3, r3\n\tjump.eq\t@.BB0_174\n\tadd\t288, r2, r2\n\tld.1\tr2, r2\n\tand!\t@CPI0_5[0], r2, r2\n\tjump.ne\t@.BB0_177\n.BB0_174:\n\tld.1\t64, r1\n\tadd\t@CPI0_55[0], r0, r2\n.BB0_172:\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_177:\n\tld.1\tr1, r1\n\tadd\t320, r1, r2\n\tld.1\tr2, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_179\n\tld.1\t64, r1\n\tadd\t@CPI0_54[0], r0, r2\n\tjump\t@.BB0_172\n.BB0_179:\n\tadd\t96, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI0_39[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_40[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_180\n\tld.1\t64, r2\n\tld\tr1, r3\n\tsub!\tstack-[2], r3, r1\n\tjump.ge\t@.BB0_184\n\tadd\t@CPI0_53[0], r0, r1\n\tjump\t@.BB0_183\n.BB0_180:\n\trevert\n.BB0_184:\n\tld.1\t128, r1\n\tld.1\tr1, r1\n\tadd\t128, r1, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r3, r3\n\tjump.ge\t@.BB0_186\n\tadd\t@CPI0_52[0], r0, r1\n\tjump\t@.BB0_183\n.BB0_186:\n\tadd\t96, r1, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_187\n\tadd\t192, r1, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_190\n\tadd\t@CPI0_51[0], r0, r1\n\tjump\t@.BB0_183\n.BB0_187:\n\tadd\t@CPI0_41[0], r0, r1\n\tjump\t@.BB0_183\n.BB0_190:\n\tld.1\t160, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_192\n\tadd\t@CPI0_50[0], r0, r1\n.BB0_183:\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_42[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_192:\n\tsub.s!\t@CPI0_43[0], r2, r1\n\tjump.gt\t@.BB0_4\n\tadd\t132, r2, r1\n\tadd\t32, r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r2, r1\n\tadd\t@CPI0_44[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t164, r2, r1\n\tld.1\t128, r4\n\tadd\t64, r0, r3\n\tst.1\tr1, r3\n\tld.1.inc\tr4, r1, r5\n\tadd\t228, r2, r3\n\tadd\t576, r0, r6\n\tst.1\tr3, r6\n\tadd\t804, r2, r3\n\tld.1.inc\tr1, r6, r7\n\tst.1\tr3, r6\n\tld.1\tr7, r3\n\tadd\t836, r2, r6\n\tst.1\tr6, r3\n\tadd\t64, r1, r3\n\tld.1\tr3, r3\n\tadd\t868, r2, r6\n\tst.1\tr6, r3\n\tadd\t96, r1, r3\n\tld.1\tr3, r3\n\tadd\t900, r2, r6\n\tst.1\tr6, r3\n\tadd\t128, r1, r3\n\tld.1\tr3, r3\n\tadd\t932, r2, r6\n\tst.1\tr6, r3\n\tadd\t160, r1, r3\n\tld.1\tr3, r3\n\tadd\t964, r2, r6\n\tst.1\tr6, r3\n\tadd\t192, r1, r3\n\tld.1\tr3, r3\n\tadd\t996, r2, r6\n\tst.1\tr6, r3\n\tadd\t224, r1, r3\n\tld.1\tr3, r3\n\tadd\t1028, r2, r6\n\tst.1\tr6, r3\n\tadd\t256, r1, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tadd\t1060, r2, r6\n\tst.1\tr6, r3\n\tadd\t288, r1, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tadd\t1092, r2, r6\n\tst.1\tr6, r3\n\tadd\t320, r1, r1\n\tld.1\tr1, r6\n\tadd\t1124, r2, r1\n\tadd\tstack-[4], r0, r3\n\tst.1\tr1, r3\n\tadd\t1156, r2, r1\n\tld.1\tr6, r3\n\tst.1\tr1, r3\n\tadd\t1188, r2, r1\n\tsub!\tr3, r0, r7\n\tjump.eq\t@.BB0_196\n\tadd\tr0, r0, r7\n.BB0_195:\n\tadd\tr7, r1, r8\n\tadd\t32, r7, r7\n\tadd\tr7, r6, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tsub!\tr7, r3, r8\n\tjump.lt\t@.BB0_195\n.BB0_196:\n\tadd\tr3, r1, r6\n\tst.1\tr6, r0\n\tld.1\tr5, r5\n\tld.1.inc\tr5, r5, r6\n\tadd\t260, r2, r7\n\tst.1\tr7, r5\n\tld.1\tr6, r5\n\tadd\t292, r2, r6\n\tst.1\tr6, r5\n\tadd\t64, r4, r5\n\tld.1\tr5, r5\n\tadd\t324, r2, r6\n\tld.1.inc\tr5, r5, r7\n\tst.1\tr6, r5\n\tld.1\tr7, r5\n\tsub!\tr5, r0, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t356, r2, r6\n\tst.1\tr6, r5\n\tadd\t96, r4, r5\n\tld.1\tr5, r5\n\tadd\t388, r2, r6\n\tld.1.inc\tr5, r5, r7\n\tst.1\tr6, r5\n\tld.1\tr7, r5\n\tadd\t420, r2, r6\n\tst.1\tr6, r5\n\tadd\t128, r4, r4\n\tld.1\tr4, r4\n\tld.1.inc\tr4, r5, r6\n\tand\t@CPI0_5[0], r5, r5\n\tadd\t452, r2, r7\n\tst.1\tr7, r5\n\tld.1\tr6, r5\n\tand\t@CPI0_5[0], r5, r5\n\tadd\t484, r2, r6\n\tst.1\tr6, r5\n\tadd\t64, r4, r5\n\tld.1\tr5, r5\n\tand\t@CPI0_5[0], r5, r5\n\tadd\t516, r2, r6\n\tst.1\tr6, r5\n\tadd\t96, r4, r5\n\tld.1\tr5, r5\n\tand\t@CPI0_5[0], r5, r5\n\tadd\t548, r2, r6\n\tst.1\tr6, r5\n\tadd\t128, r4, r5\n\tld.1\tr5, r5\n\tand\t@CPI0_5[0], r5, r5\n\tadd\t580, r2, r6\n\tst.1\tr6, r5\n\tadd\t160, r4, r5\n\tld.1\tr5, r5\n\tand\t@CPI0_5[0], r5, r5\n\tadd\t612, r2, r6\n\tst.1\tr6, r5\n\tadd\t192, r4, r5\n\tld.1\tr5, r5\n\tand\t@CPI0_5[0], r5, r5\n\tadd\t644, r2, r6\n\tst.1\tr6, r5\n\tadd\t224, r4, r5\n\tld.1\tr5, r5\n\tand\t@CPI0_5[0], r5, r5\n\tadd\t676, r2, r6\n\tst.1\tr6, r5\n\tadd\t256, r4, r5\n\tld.1\tr5, r5\n\tand\t@CPI0_5[0], r5, r5\n\tadd\t708, r2, r6\n\tst.1\tr6, r5\n\tadd\t288, r4, r5\n\tld.1\tr5, r5\n\tand\t@CPI0_5[0], r5, r5\n\tadd\t740, r2, r6\n\tst.1\tr6, r5\n\tadd\t320, r4, r4\n\tld.1\tr4, r4\n\tand\t@CPI0_5[0], r4, r4\n\tadd\t772, r2, r5\n\tst.1\tr5, r4\n\tadd\t31, r3, r3\n\tand\tstack-[3], r3, r4\n\tadd\t196, r2, r5\n\tadd\tstack-[5], r0, r3\n\tadd\tr3, r0, stack-[4]\n\tadd\t32, r3, r3\n\tld.1\tr3, r3\n\tadd\t1024, r4, r6\n\tst.1\tr5, r6\n\tadd\tr4, r1, r1\n\tld.1\tr3, r4\n\tst.1.inc\tr1, r4, r1\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_199\n\tadd\tr0, r0, r5\n.BB0_198:\n\tadd\t32, r3, r3\n\tld.1\tr3, r6\n\tld.1.inc\tr6, r7, r8\n\tst.1.inc\tr1, r7, r7\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t64, r6, r7\n\tld.1\tr7, r7\n\tadd\t64, r1, r8\n\tst.1\tr8, r7\n\tadd\t96, r6, r7\n\tld.1\tr7, r7\n\tadd\t96, r1, r8\n\tst.1\tr8, r7\n\tadd\t128, r6, r7\n\tld.1\tr7, r7\n\tadd\t128, r1, r8\n\tst.1\tr8, r7\n\tadd\t160, r6, r7\n\tld.1\tr7, r7\n\tadd\t160, r1, r8\n\tst.1\tr8, r7\n\tadd\t192, r6, r6\n\tld.1\tr6, r6\n\tadd\t192, r1, r7\n\tst.1\tr7, r6\n\tadd\t224, r1, r1\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_198\n.BB0_199:\n\tadd\t68, r2, r3\n\tcontext.gas_left\tr4\n\tadd\t96, r0, r5\n\tst.1\tr3, r5\n\tsub\tr1, r2, r1\n\tsub.s\t132, r1, r3\n\tadd\t100, r2, r5\n\tst.1\tr5, r3\n\tadd\t@CPI0_45[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd.ge\tr3, r0, r4\n\tshl.s\t192, r4, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_200\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_208\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_203\n.BB0_200:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_203:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_216\n\tadd\tr0, r0, r6\n.BB0_205:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_205\n.BB0_216:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_207\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_207:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r1\n\tshl.s\t64, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_208:\n\tadd\t1, r0, r3\n\tsload\tr3, r2\n\tsub.s!\t@CPI0_34[0], r2, r4\n\tjump.gt\t@.BB0_4\n\tadd\t1, r2, r4\n\tsstore\tr3, r4\n\tst.1\t0, r3\n\tand\t@CPI0_5[0], r1, r1\n\tadd\t@CPI0_46[0], r2, r2\n\tsload\tr2, r3\n\tand\t@CPI0_47[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n\tadd\t128, r1, r2\n\tld.1\tr2, r4\n\tld.1\tr1, r5\n\tadd\t192, r5, r1\n\tld.1\tr1, r2\n\tadd\t128, r5, r1\n\tld.1\tr1, r1\n\tadd\t96, r5, r3\n\tld.1\tr3, r3\n\tadd\t64, r4, r6\n\tld.1\tr6, r7\n\tld.1\tr4, r9\n\tadd\t320, r5, r4\n\tld.1\tr4, r8\n\tadd\t224, r0, r5\n\tld.1\t64, r4\n\tst.1.inc\tr4, r5, r5\n\tadd\t224, r4, r10\n\tld.1\tr8, r6\n\tst.1\tr10, r6\n\tadd\t256, r4, r10\n\tand\t@CPI0_5[0], r9, r9\n\tand\t@CPI0_5[0], r7, r7\n\tsub!\tr6, r0, r11\n\tjump.eq\t@.BB0_212\n\tadd\tr0, r0, r11\n.BB0_211:\n\tadd\tr11, r10, r12\n\tadd\t32, r11, r11\n\tadd\tr11, r8, r13\n\tld.1\tr13, r13\n\tst.1\tr12, r13\n\tsub!\tr11, r6, r12\n\tjump.lt\t@.BB0_211\n.BB0_212:\n\tadd\tr6, r10, r8\n\tst.1\tr8, r0\n\tadd\t192, r4, r8\n\tcontext.this\tr10\n\tst.1\tr8, r10\n\tadd\t160, r4, r8\n\tst.1\tr8, r9\n\tadd\t128, r4, r8\n\tst.1\tr8, r7\n\tadd\t96, r4, r7\n\tst.1\tr7, r2\n\tadd\t64, r4, r2\n\tst.1\tr2, r1\n\tst.1\tr5, r3\n\tadd\t287, r6, r1\n\tand\tstack-[3], r1, r1\n\tadd\t@CPI0_0[0], r0, r5\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd.ge\tr5, r0, r4\n\tshl.s\t64, r4, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr5, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr5, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\tr3, r0, stack-[4]\n\tadd\t@CPI0_48[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tjump\t@.BB0_119\n.func_end0:\n\nstorage_array_index_access_address_dyn:\n.func_begin1:\n\tadd\t1, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB1_1\n\tst.1\t0, r2\n\tadd\t@CPI1_2[0], r1, r1\n\tadd\tr0, r0, r2\n\tret\n.BB1_1:\n\tadd\t@CPI1_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nfun_checkRole:\n.func_begin2:\n\tnop\tstack+=[2]\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI2_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_1\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI2_0[0], r1, r2\n\tadd.ge\t@CPI2_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB2_4\n\tret\n.BB2_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_4:\n\tld.1\t64, r1\n\tadd\t36, r1, r2\n\tadd\tstack-[2], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[1], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_0[0], r0, r2\n\tsub.s!\t@CPI2_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfun_revokeRole:\n.func_begin3:\n\tnop\tstack+=[2]\n\tadd\tr2, r0, stack-[1]\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI3_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tand\t@CPI3_2[0], r2, r2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tadd.ge\t@CPI3_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB3_4\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI3_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tadd.ge\t@CPI3_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t@CPI3_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI3_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tcontext.caller\tr7\n\tadd\t@CPI3_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[1], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_1\n.BB3_4:\n\tret\n.BB3_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\n__cxa_throw:\n\trevert\n\n__sha3:\n.func_begin4:\n\tadd\t@CPI5_0[0], r0, r3\n\tsub.s!\t@CPI5_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI5_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI5_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_2\n\tld\tr1, r1\n\tret\n.BB5_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\n__farcall:\n.func_begin5:\n.tmp0:\n\tfar_call\tr1, r2, @.BB6_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB6_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end5:\n\n__staticcall:\n.func_begin6:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB7_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB7_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end6:\n\n\t.data\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI2_0:\nCPI3_0:\nCPI5_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -18446744073709551457\nCPI0_2:\n\t.cell -18446744073709551489\nCPI0_3:\n\t.cell 8589934560\nCPI0_4:\n\t.cell 18446744073709551583\nCPI0_5:\nCPI3_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_6:\n\t.cell 44526186701075355232631374653616046072493505541712997730802846168811969624347\nCPI0_7:\nCPI2_1:\nCPI3_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_8:\nCPI3_3:\nCPI5_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_9:\n\t.cell -30089899419605041018653467143256047862277360661533364420289869028242106941185\nCPI0_10:\n\t.cell -14680205516121397737035688839673284388258461471861438888035447495382811677630\nCPI0_11:\n\t.cell 8413219402807569600188236340312512697289764467612919156476723688445633815681\nCPI0_12:\n\t.cell 21498167346302451094516930465084812798900530214793017313261708129848854408973\nCPI0_13:\n\t.cell 41951636634120538608643499135161621920062445191352822996721339533853370279351\nCPI0_14:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_15:\n\t.cell 2446411859\nCPI0_16:\n\t.cell 3578229790\nCPI0_17:\n\t.cell 3755110989\nCPI0_18:\n\t.cell 3755110990\nCPI0_19:\n\t.cell 3766791715\nCPI0_20:\n\t.cell 3578229791\nCPI0_21:\n\t.cell 3640055190\nCPI0_22:\n\t.cell 2446411860\nCPI0_23:\n\t.cell 2719481311\nCPI0_24:\n\t.cell 3259310534\nCPI0_25:\n\t.cell 705350761\nCPI0_26:\n\t.cell 911641277\nCPI0_27:\n\t.cell 911641278\nCPI0_28:\n\t.cell 1529918504\nCPI0_29:\n\t.cell 705350762\nCPI0_30:\n\t.cell 791671133\nCPI0_31:\n\t.cell 33540519\nCPI0_32:\n\t.cell 293077987\nCPI0_33:\n\t.cell 613063843\nCPI0_34:\n\t.cell 18446744073709551615\nCPI0_35:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_36:\n\t.cell 18446744073709551551\nCPI0_37:\n\t.cell 18446744073709551263\nCPI0_38:\n\t.cell 18446744073709551391\nCPI0_39:\n\t.cell 54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI0_40:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_41:\n\t.cell 13751696677885317755532561767161551963039782116096155289122330088411982987264\nCPI0_42:\n\t.cell 316912650057057350374175801344\nCPI0_43:\n\t.cell 18446744073709551483\nCPI0_44:\n\t.cell 452384438246900340824623171999316517052646341225398663043315529462830878272\nCPI0_45:\n\t.cell -45094662312588414058508742492242807367897819822786606328124609013070528553987\nCPI0_46:\nCPI1_2:\n\t.cell -35707666377435648211887908874984608119992236509074197713628505308453184860938\nCPI0_47:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_48:\n\t.cell -34489934931009399440061571699135750751797300527212913842946782928166646095555\nCPI0_49:\n\t.cell 2535301200456458802993406410752\nCPI0_50:\n\t.cell -8456794021595865987342524897803171136214568266039550662789071899099695939584\nCPI0_51:\n\t.cell -13889643337955740780086569144599697569817978807528723622391277439668012974080\nCPI0_52:\n\t.cell 57717977460035061128319771819070029882430561177641021088440945352900943544320\nCPI0_53:\n\t.cell 3190575643202449146717782151149760628621246718525607881412236225844554498048\nCPI0_54:\n\t.cell 13112214345645464716083482265395700862996959016068220066311992124518669746176\nCPI0_55:\n\t.cell 28485175212064900027977973286507733033835135331909752320915715833089423835136\nCPI0_56:\n\t.cell -52766874028753274426233363142178672704313577740706715646393811206488134254592\nCPI0_57:\nCPI1_0:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_58:\nCPI1_1:\n\t.cell 2852213850513516153367582212096\nCPI0_59:\n\t.cell -28736258668245247367965585515417209519283744806257190448168447419373253033984\nCPI0_60:\n\t.cell 316912652418240591808998408192\nCPI0_61:\n\t.cell 44469874253128383661716529520163745447025462846099716365676343553489345970176\nCPI0_62:\n\t.cell 2535301202817642044428229017600\nCPI0_63:\n\t.cell 46403934321121769725732295381905508642689279562898648152983186649040421912576\nCPI0_64:\nCPI2_2:\n\t.cell -13425406428480953669539741299640702691354761304596208544390623898567197065216\nCPI0_65:\nCPI2_3:\n\t.cell 5387515050969974956360988622848\nCPI0_66:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_67:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI0_68:\n\t.cell 54909818011127210282586622383458683342160741266077104324147033802515469565952\nCPI3_4:\n\t.cell -4422201763333249725673726406278620787883548942654356884866643620688883542245\n","bytecode":{"object":""},"methodIdentifiers":{"ADMIN()":"2a0acc6a","DEFAULT_ADMIN_ROLE()":"a217fddf","OWNER()":"117803e3","allSales(uint256)":"5b30b428","createSale((((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,bool,string),(uint256,uint256),(uint256,bool),(uint256,bytes32),(address,address,address,address,address,address,address,address,address,address,address)),(uint256,uint256,uint256,uint256,bytes32,uint256,uint256)[]))":"e084ae23","getIsSaleActive(uint256)":"dfd2724e","getRoleAdmin(bytes32)":"248a9ca3","getSale(uint256)":"d8f6d596","getSaleCount()":"c24521c6","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 1:\"@openzeppelin/contracts/access/IAccessControl.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 6:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 7:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\", 9:\"contracts/core/DappadSaleFactory.sol\"\nobject \"DappadSaleFactory_4243\" {\n    code {\n        {\n            /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"DappadSaleFactory_4243\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            let _2 := sub(shl(64, 1), 1)\n            if or(gt(newFreePtr, _2), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0x24)\n            }\n            let _3 := 64\n            mstore(_3, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n            let memPtr := mload(_3)\n            let newFreePtr_1 := add(memPtr, 32)\n            if or(gt(newFreePtr_1, _2), lt(newFreePtr_1, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0x24)\n            }\n            mstore(_3, newFreePtr_1)\n            let value := mload(_1)\n            let _4 := sub(shl(160, 1), 1)\n            if iszero(eq(value, and(value, _4)))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n            mstore(memPtr, value)\n            /// @src 9:297:315  \"keccak256(\\\"OWNER\\\")\"\n            let _5 := 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b\n            /// @src -1:-1:-1\n            let _6 := 0\n            /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ _6, /** @src 9:297:315  \"keccak256(\\\"OWNER\\\")\" */ _5)\n            /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n            mstore(32, /** @src -1:-1:-1 */ _6)\n            /// @src 0:3901:3923  \"_roles[role].adminRole\"\n            let _7 := add(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ _6, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ _3), /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n            /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n            let _8 := sload(_7)\n            sstore(_7, /** @src 9:297:315  \"keccak256(\\\"OWNER\\\")\" */ _5)\n            /// @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\"\n            let _9 := 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff\n            log4(/** @src -1:-1:-1 */ _6, _6, /** @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\" */ _9, /** @src 9:297:315  \"keccak256(\\\"OWNER\\\")\" */ _5, /** @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\" */ _8, /** @src 9:297:315  \"keccak256(\\\"OWNER\\\")\" */ _5)\n            /// @src 9:353:371  \"keccak256(\\\"ADMIN\\\")\"\n            let _10 := 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n            /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ _6, /** @src 9:353:371  \"keccak256(\\\"ADMIN\\\")\" */ _10)\n            /// @src 0:3901:3923  \"_roles[role].adminRole\"\n            let _11 := add(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ _6, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ _3), /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n            /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n            let _12 := sload(_11)\n            sstore(_11, /** @src 9:297:315  \"keccak256(\\\"OWNER\\\")\" */ _5)\n            /// @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\"\n            log4(/** @src -1:-1:-1 */ _6, _6, /** @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\" */ _9, /** @src 9:353:371  \"keccak256(\\\"ADMIN\\\")\" */ _10, /** @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\" */ _12, /** @src 9:297:315  \"keccak256(\\\"OWNER\\\")\" */ _5)\n            /// @src 9:828:857  \"_grantRole(OWNER, msg.sender)\"\n            pop(fun_grantRole(/** @src 9:846:856  \"msg.sender\" */ caller()))\n            /// @src 9:867:916  \"_grantRole(ADMIN, saleFactoryParams.adminAddress)\"\n            pop(fun_grantRole_689(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ and(/** @src 9:353:371  \"keccak256(\\\"ADMIN\\\")\" */ mload(/** @src 9:885:915  \"saleFactoryParams.adminAddress\" */ memPtr), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ _4)))\n            let _13 := mload(_3)\n            let _14 := datasize(\"DappadSaleFactory_4243_deployed\")\n            codecopy(_13, dataoffset(\"DappadSaleFactory_4243_deployed\"), _14)\n            return(_13, _14)\n        }\n        /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n        function fun_grantRole(var_account) -> var_\n        {\n            /// @src 9:297:315  \"keccak256(\\\"OWNER\\\")\"\n            let _1 := 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b\n            /// @src 0:2954:2960  \"_roles\"\n            let _2 := 0x00\n            /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n            mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:297:315  \"keccak256(\\\"OWNER\\\")\" */ _1)\n            /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _2)\n            /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n            let _3 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0x40)\n            let _4 := and(var_account, sub(shl(160, 1), 1))\n            mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ _4)\n            mstore(0x20, _3)\n            /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0x40)), 0xff))\n            case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                /// @src 0:6466:6478  \"return false\"\n                var_ := /** @src 0:2954:2960  \"_roles\" */ _2\n                /// @src 0:6466:6478  \"return false\"\n                leave\n            }\n            default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:297:315  \"keccak256(\\\"OWNER\\\")\" */ _1)\n                /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _2)\n                /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                let _5 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0x40)\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ _4)\n                mstore(0x20, _5)\n                let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0x40)\n                sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 0:2954:2960  \"_roles\" */ _2, _2, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 9:297:315  \"keccak256(\\\"OWNER\\\")\" */ _1, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ _4, /** @src 4:735:745  \"msg.sender\" */ caller())\n                /// @src 0:6424:6435  \"return true\"\n                var_ := /** @src 0:6347:6351  \"true\" */ 0x01\n                /// @src 0:6424:6435  \"return true\"\n                leave\n            }\n        }\n        /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n        function fun_grantRole_689(var_account) -> var\n        {\n            /// @src 9:353:371  \"keccak256(\\\"ADMIN\\\")\"\n            let _1 := 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n            /// @src 0:2954:2960  \"_roles\"\n            let _2 := 0x00\n            /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n            mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:353:371  \"keccak256(\\\"ADMIN\\\")\" */ _1)\n            /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _2)\n            /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n            let _3 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0x40)\n            let _4 := and(var_account, sub(shl(160, 1), 1))\n            mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ _4)\n            mstore(0x20, _3)\n            /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0x40)), 0xff))\n            case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                /// @src 0:6466:6478  \"return false\"\n                var := /** @src 0:2954:2960  \"_roles\" */ _2\n                /// @src 0:6466:6478  \"return false\"\n                leave\n            }\n            default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:353:371  \"keccak256(\\\"ADMIN\\\")\" */ _1)\n                /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _2)\n                /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                let _5 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0x40)\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ _4)\n                mstore(0x20, _5)\n                let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0x40)\n                sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 0:2954:2960  \"_roles\" */ _2, _2, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 9:353:371  \"keccak256(\\\"ADMIN\\\")\" */ _1, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ _4, /** @src 4:735:745  \"msg.sender\" */ caller())\n                /// @src 0:6424:6435  \"return true\"\n                var := /** @src 0:6347:6351  \"true\" */ 0x01\n                /// @src 0:6424:6435  \"return true\"\n                leave\n            }\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 6:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 9:\"contracts/core/DappadSaleFactory.sol\"\n    object \"DappadSaleFactory_4243_deployed\" {\n        code {\n            {\n                /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _2 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _2)) { revert(0, 0) }\n                        /// @src 0:2673:2760  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        let expr := /** @src 0:2673:2720  \"interfaceId == type(IAccessControl).interfaceId\" */ eq(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ _2, /** @src 0:2688:2720  \"type(IAccessControl).interfaceId\" */ shl(224, 0x7965db0b))\n                        /// @src 0:2673:2760  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 6:861:901  \"interfaceId == type(IERC165).interfaceId\" */ eq(_2, /** @src 6:876:901  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                        }\n                        /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                        mstore(_1, iszero(iszero(expr)))\n                        return(_1, 32)\n                    }\n                    case 0x117803e3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos := mload(64)\n                        mstore(memPos, /** @src 9:297:315  \"keccak256(\\\"OWNER\\\")\" */ 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b)\n                        /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                        return(memPos, 32)\n                    }\n                    case 0x248a9ca3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, 0)\n                        let _3 := sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ keccak256(0, 64), 1))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, _3)\n                        return(memPos_1, 32)\n                    }\n                    case 0x2a0acc6a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, /** @src 9:353:371  \"keccak256(\\\"ADMIN\\\")\" */ 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42)\n                        /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                        return(memPos_2, 32)\n                    }\n                    case 0x2f2ff15d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_1 := calldataload(4)\n                        let value1 := abi_decode_address_17680()\n                        mstore(0, value_1)\n                        mstore(32, 0)\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ keccak256(0, 64), 1)))\n                        /// @src 0:4330:4355  \"_grantRole(role, account)\"\n                        pop(fun_grantRole(value_1, value1))\n                        /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x36568abe {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1_1 := abi_decode_address_17680()\n                        /// @src 0:5417:5519  \"if (callerConfirmation != _msgSender()) {...\"\n                        if /** @src 0:5421:5455  \"callerConfirmation != _msgSender()\" */ iszero(eq(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ and(/** @src 0:5421:5455  \"callerConfirmation != _msgSender()\" */ value1_1, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 4:735:745  \"msg.sender\" */ caller()))\n                        /// @src 0:5417:5519  \"if (callerConfirmation != _msgSender()) {...\"\n                        {\n                            /// @src 0:5478:5508  \"AccessControlBadConfirmation()\"\n                            let _4 := /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ mload(64)\n                            /// @src 0:5478:5508  \"AccessControlBadConfirmation()\"\n                            mstore(_4, shl(225, 0x334bd919))\n                            revert(_4, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 4)\n                        }\n                        /// @src 0:5529:5566  \"_revokeRole(role, callerConfirmation)\"\n                        pop(fun_revokeRole(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ calldataload(4), /** @src 0:5529:5566  \"_revokeRole(role, callerConfirmation)\" */ value1_1))\n                        /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x5b30b428 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_2 := calldataload(4)\n                        /// @src 9:378:403  \"address[] public allSales\"\n                        if iszero(lt(value_2, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ sload(1)))\n                        /// @src 9:378:403  \"address[] public allSales\"\n                        {\n                            revert(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0, 0)\n                        }\n                        /// @src 9:378:403  \"address[] public allSales\"\n                        let slot, offset := storage_array_index_access_address_dyn(value_2)\n                        /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                        let _5 := sload(/** @src 9:378:403  \"address[] public allSales\" */ slot)\n                        /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, and(shr(shl(3, offset), _5), sub(shl(160, 1), 1)))\n                        return(memPos_3, 32)\n                    }\n                    case 0x91d14854 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1_2 := abi_decode_address_17680()\n                        mstore(0, calldataload(4))\n                        mstore(32, 0)\n                        let _6 := keccak256(0, 64)\n                        mstore(0, and(value1_2, sub(shl(160, 1), 1)))\n                        mstore(32, _6)\n                        let value_3 := and(sload(keccak256(0, 64)), 0xff)\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, iszero(iszero(value_3)))\n                        return(memPos_4, 32)\n                    }\n                    case 0xa217fddf {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, 0)\n                        return(memPos_5, 32)\n                    }\n                    case 0xc24521c6 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let length := sload(/** @src 9:3076:3084  \"allSales\" */ 0x01)\n                        /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, length)\n                        return(memPos_6, 32)\n                    }\n                    case 0xd547741f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_4 := calldataload(4)\n                        let value1_3 := abi_decode_address_17680()\n                        mstore(0, value_4)\n                        mstore(32, 0)\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ keccak256(0, 64), 1)))\n                        /// @src 0:4747:4773  \"_revokeRole(role, account)\"\n                        pop(fun_revokeRole(value_4, value1_3))\n                        /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0xd8f6d596 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_5 := calldataload(4)\n                        /// @src 9:3178:3270  \"if (index >= allSales.length) {...\"\n                        if /** @src 9:3182:3206  \"index >= allSales.length\" */ iszero(lt(value_5, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ sload(1)))\n                        /// @src 9:3178:3270  \"if (index >= allSales.length) {...\"\n                        {\n                            /// @src 9:3229:3259  \"Errors.InvalidSaleIndexError()\"\n                            let _7 := /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ mload(64)\n                            /// @src 9:3229:3259  \"Errors.InvalidSaleIndexError()\"\n                            mstore(_7, shl(224, 0x62510e8f))\n                            revert(_7, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 4)\n                        }\n                        /// @src 9:3286:3301  \"allSales[index]\"\n                        let _8, _9 := storage_array_index_access_address_dyn(value_5)\n                        /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                        let _10 := sload(/** @src 9:3286:3301  \"allSales[index]\" */ _8)\n                        /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, and(shr(shl(3, _9), _10), sub(shl(160, 1), 1)))\n                        return(memPos_7, 32)\n                    }\n                    case 0xdfd2724e {\n                        if callvalue() { revert(0, 0) }\n                        let _11 := 32\n                        if slt(add(calldatasize(), not(3)), _11) { revert(0, 0) }\n                        let value_6 := calldataload(4)\n                        /// @src 9:3393:3485  \"if (index >= allSales.length) {...\"\n                        if /** @src 9:3397:3421  \"index >= allSales.length\" */ iszero(lt(value_6, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ sload(1)))\n                        /// @src 9:3393:3485  \"if (index >= allSales.length) {...\"\n                        {\n                            /// @src 9:3444:3474  \"Errors.InvalidSaleIndexError()\"\n                            let _12 := /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ mload(64)\n                            /// @src 9:3444:3474  \"Errors.InvalidSaleIndexError()\"\n                            mstore(_12, /** @src 9:3229:3259  \"Errors.InvalidSaleIndexError()\" */ shl(224, 0x62510e8f))\n                            /// @src 9:3444:3474  \"Errors.InvalidSaleIndexError()\"\n                            revert(_12, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 4)\n                        }\n                        /// @src 9:3513:3528  \"allSales[index]\"\n                        let _13, _14 := storage_array_index_access_address_dyn(value_6)\n                        /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                        let _15 := sload(/** @src 9:3513:3528  \"allSales[index]\" */ _13)\n                        /// @src 9:3501:3547  \"IDappadSale(allSales[index]).getIsSaleActive()\"\n                        let _16 := /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ mload(64)\n                        /// @src 9:3501:3547  \"IDappadSale(allSales[index]).getIsSaleActive()\"\n                        mstore(_16, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ shl(225, 0x603bed4f))\n                        /// @src 9:3501:3547  \"IDappadSale(allSales[index]).getIsSaleActive()\"\n                        let _17 := staticcall(gas(), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ and(shr(shl(3, _14), _15), sub(shl(160, 1), 1)), /** @src 9:3501:3547  \"IDappadSale(allSales[index]).getIsSaleActive()\" */ _16, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 4, /** @src 9:3501:3547  \"IDappadSale(allSales[index]).getIsSaleActive()\" */ _16, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ _11)\n                        /// @src 9:3501:3547  \"IDappadSale(allSales[index]).getIsSaleActive()\"\n                        if iszero(_17)\n                        {\n                            /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, 0, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 9:3501:3547  \"IDappadSale(allSales[index]).getIsSaleActive()\"\n                        let expr_1 := /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0\n                        /// @src 9:3501:3547  \"IDappadSale(allSales[index]).getIsSaleActive()\"\n                        if _17\n                        {\n                            let _18 := /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ _11\n                            /// @src 9:3501:3547  \"IDappadSale(allSales[index]).getIsSaleActive()\"\n                            if gt(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ _11, /** @src 9:3501:3547  \"IDappadSale(allSales[index]).getIsSaleActive()\" */ returndatasize()) { _18 := returndatasize() }\n                            finalize_allocation(_16, _18)\n                            /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                            if slt(sub(/** @src 9:3501:3547  \"IDappadSale(allSales[index]).getIsSaleActive()\" */ add(_16, _18), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ _16), _11) { revert(0, 0) }\n                            let value_7 := mload(_16)\n                            if iszero(eq(value_7, iszero(iszero(value_7)))) { revert(0, 0) }\n                            /// @src 9:3501:3547  \"IDappadSale(allSales[index]).getIsSaleActive()\"\n                            expr_1 := value_7\n                        }\n                        /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, iszero(iszero(expr_1)))\n                        return(memPos_8, _11)\n                    }\n                    case 0xe084ae23 {\n                        if callvalue() { revert(0, 0) }\n                        let _19 := not(3)\n                        if slt(add(calldatasize(), _19), 32) { revert(0, 0) }\n                        if gt(calldataload(4), 0xffffffffffffffff) { revert(0, 0) }\n                        if slt(add(sub(calldatasize(), calldataload(4)), _19), 64) { revert(0, 0) }\n                        let memPtr := mload(64)\n                        finalize_allocation_17687(memPtr)\n                        let offset_1 := calldataload(add(4, calldataload(4)))\n                        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n                        if slt(add(sub(calldatasize(), add(calldataload(4), offset_1)), _19), 0x0240) { revert(0, 0) }\n                        let memPtr_1 := mload(64)\n                        if or(gt(add(memPtr_1, 0xa0), 0xffffffffffffffff), lt(add(memPtr_1, 0xa0), memPtr_1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, add(memPtr_1, 0xa0))\n                        let offset_2 := calldataload(add(add(calldataload(4), offset_1), 4))\n                        if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n                        if slt(add(sub(calldatasize(), add(add(calldataload(4), offset_1), offset_2)), _19), 0x0160) { revert(0, 0) }\n                        finalize_allocation_17689(add(memPtr_1, 0xa0))\n                        mstore(add(memPtr_1, 0xa0), calldataload(add(add(add(calldataload(4), offset_1), offset_2), 4)))\n                        mstore(add(memPtr_1, 192), calldataload(add(add(add(calldataload(4), offset_1), offset_2), 36)))\n                        mstore(add(memPtr_1, 224), calldataload(add(add(add(calldataload(4), offset_1), offset_2), 68)))\n                        mstore(add(memPtr_1, 256), calldataload(add(add(add(calldataload(4), offset_1), offset_2), 100)))\n                        mstore(add(memPtr_1, 288), calldataload(add(add(add(calldataload(4), offset_1), offset_2), 132)))\n                        mstore(add(memPtr_1, 320), calldataload(add(add(add(calldataload(4), offset_1), offset_2), 164)))\n                        mstore(add(memPtr_1, 0x0160), calldataload(add(add(add(calldataload(4), offset_1), offset_2), 196)))\n                        mstore(add(memPtr_1, 384), calldataload(add(add(add(calldataload(4), offset_1), offset_2), 228)))\n                        let _20 := abi_decode_bool(add(add(add(calldataload(4), offset_1), offset_2), 260))\n                        mstore(add(memPtr_1, 416), _20)\n                        let _21 := abi_decode_bool(add(add(add(calldataload(4), offset_1), offset_2), 292))\n                        mstore(add(memPtr_1, 448), _21)\n                        let offset_3 := calldataload(add(add(add(calldataload(4), offset_1), offset_2), 324))\n                        if gt(offset_3, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(add(add(add(calldataload(4), offset_1), offset_2), offset_3), 35), calldatasize())) { revert(0, 0) }\n                        if gt(calldataload(add(add(add(add(calldataload(4), offset_1), offset_2), offset_3), 4)), 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        let memPtr_2 := mload(64)\n                        finalize_allocation(memPtr_2, add(and(add(calldataload(add(add(add(add(calldataload(4), offset_1), offset_2), offset_3), 4)), 0x1f), not(31)), 32))\n                        mstore(memPtr_2, calldataload(add(add(add(add(calldataload(4), offset_1), offset_2), offset_3), 4)))\n                        if gt(add(add(add(add(add(calldataload(4), offset_1), offset_2), offset_3), calldataload(add(add(add(add(calldataload(4), offset_1), offset_2), offset_3), 4))), 36), calldatasize()) { revert(0, 0) }\n                        calldatacopy(add(memPtr_2, 32), add(add(add(add(calldataload(4), offset_1), offset_2), offset_3), 36), calldataload(add(add(add(add(calldataload(4), offset_1), offset_2), offset_3), 4)))\n                        mstore(add(add(memPtr_2, calldataload(add(add(add(add(calldataload(4), offset_1), offset_2), offset_3), 4))), 32), 0)\n                        mstore(add(memPtr_1, 480), memPtr_2)\n                        mstore(memPtr_1, add(memPtr_1, 0xa0))\n                        if slt(add(sub(calldatasize(), add(calldataload(4), offset_1)), not(35)), 64) { revert(0, 0) }\n                        let memPtr_3 := mload(64)\n                        finalize_allocation_17687(memPtr_3)\n                        mstore(memPtr_3, calldataload(add(add(calldataload(4), offset_1), 36)))\n                        mstore(add(memPtr_3, 32), calldataload(add(add(calldataload(4), offset_1), 68)))\n                        mstore(add(memPtr_1, 32), memPtr_3)\n                        if slt(add(sub(calldatasize(), add(calldataload(4), offset_1)), not(99)), 64) { revert(0, 0) }\n                        let memPtr_4 := mload(64)\n                        finalize_allocation_17687(memPtr_4)\n                        mstore(memPtr_4, calldataload(add(add(calldataload(4), offset_1), 100)))\n                        mstore(add(memPtr_4, 32), abi_decode_bool(add(add(calldataload(4), offset_1), 132)))\n                        mstore(add(memPtr_1, 64), memPtr_4)\n                        if slt(add(sub(calldatasize(), add(calldataload(4), offset_1)), not(163)), 64) { revert(0, 0) }\n                        let memPtr_5 := mload(64)\n                        finalize_allocation_17687(memPtr_5)\n                        mstore(memPtr_5, calldataload(add(add(calldataload(4), offset_1), 164)))\n                        mstore(add(memPtr_5, 32), calldataload(add(add(calldataload(4), offset_1), 196)))\n                        mstore(add(memPtr_1, 96), memPtr_5)\n                        if slt(add(sub(calldatasize(), add(calldataload(4), offset_1)), not(227)), 0x0160) { revert(0, 0) }\n                        let memPtr_6 := mload(64)\n                        finalize_allocation_17689(memPtr_6)\n                        mstore(memPtr_6, abi_decode_address(add(add(calldataload(4), offset_1), 228)))\n                        mstore(add(memPtr_6, 32), abi_decode_address(add(add(calldataload(4), offset_1), 260)))\n                        mstore(add(memPtr_6, 64), abi_decode_address(add(add(calldataload(4), offset_1), 292)))\n                        mstore(add(memPtr_6, 96), abi_decode_address(add(add(calldataload(4), offset_1), 324)))\n                        let _22 := abi_decode_address(add(add(calldataload(4), offset_1), 356))\n                        mstore(add(memPtr_6, 128), _22)\n                        mstore(add(memPtr_6, 0xa0), abi_decode_address(add(add(calldataload(4), offset_1), 388)))\n                        mstore(add(memPtr_6, 192), abi_decode_address(add(add(calldataload(4), offset_1), 420)))\n                        mstore(add(memPtr_6, 224), abi_decode_address(add(add(calldataload(4), offset_1), 452)))\n                        mstore(add(memPtr_6, 256), abi_decode_address(add(add(calldataload(4), offset_1), 484)))\n                        mstore(add(memPtr_6, 288), abi_decode_address(add(add(calldataload(4), offset_1), 516)))\n                        mstore(add(memPtr_6, 320), abi_decode_address(add(add(calldataload(4), offset_1), 548)))\n                        mstore(add(memPtr_1, 128), memPtr_6)\n                        mstore(memPtr, memPtr_1)\n                        let offset_4 := calldataload(add(calldataload(4), 36))\n                        if gt(offset_4, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(add(calldataload(4), offset_4), 35), calldatasize())) { revert(0, 0) }\n                        if gt(calldataload(add(add(calldataload(4), offset_4), 4)), 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        let memPtr_7 := mload(64)\n                        finalize_allocation(memPtr_7, add(shl(5, calldataload(add(add(calldataload(4), offset_4), 4))), 32))\n                        let dst := memPtr_7\n                        mstore(memPtr_7, calldataload(add(add(calldataload(4), offset_4), 4)))\n                        dst := add(memPtr_7, 32)\n                        if gt(add(add(add(calldataload(4), offset_4), mul(calldataload(add(add(calldataload(4), offset_4), 4)), 224)), 36), calldatasize()) { revert(0, 0) }\n                        let src := add(add(calldataload(4), offset_4), 36)\n                        for { }\n                        lt(src, add(add(add(calldataload(4), offset_4), mul(calldataload(add(add(calldataload(4), offset_4), 4)), 224)), 36))\n                        { src := add(src, 224) }\n                        {\n                            if slt(sub(calldatasize(), src), 224) { revert(0, 0) }\n                            let memPtr_8 := mload(64)\n                            if or(gt(add(memPtr_8, 224), 0xffffffffffffffff), lt(add(memPtr_8, 224), memPtr_8))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 36)\n                            }\n                            mstore(64, add(memPtr_8, 224))\n                            mstore(memPtr_8, calldataload(src))\n                            mstore(add(memPtr_8, 32), calldataload(add(src, 32)))\n                            mstore(add(memPtr_8, 64), calldataload(add(src, 64)))\n                            mstore(add(memPtr_8, 96), calldataload(add(src, 96)))\n                            mstore(add(memPtr_8, 128), calldataload(add(src, 128)))\n                            mstore(add(memPtr_8, 0xa0), calldataload(add(src, 0xa0)))\n                            mstore(add(memPtr_8, 192), calldataload(add(src, 192)))\n                            mstore(dst, memPtr_8)\n                            dst := add(dst, 32)\n                        }\n                        mstore(add(memPtr, 32), memPtr_7)\n                        mstore(0, /** @src 9:297:315  \"keccak256(\\\"OWNER\\\")\" */ 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b)\n                        /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                        mstore(32, 0)\n                        let _23 := keccak256(0, 64)\n                        mstore(0, /** @src 9:1329:1339  \"msg.sender\" */ caller())\n                        /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                        mstore(32, _23)\n                        /// @src 9:3912:3966  \"!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)\"\n                        let expr_2 := /** @src 9:3912:3937  \"!hasRole(OWNER, _address)\" */ iszero(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ and(sload(keccak256(0, 64)), 0xff))\n                        /// @src 9:3912:3966  \"!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)\"\n                        if expr_2\n                        {\n                            /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                            mstore(0, /** @src 9:353:371  \"keccak256(\\\"ADMIN\\\")\" */ 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42)\n                            /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                            mstore(32, 0)\n                            let _24 := keccak256(0, 64)\n                            mstore(0, /** @src 9:1329:1339  \"msg.sender\" */ caller())\n                            /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                            mstore(32, _24)\n                            /// @src 9:3912:3966  \"!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)\"\n                            expr_2 := /** @src 9:3941:3966  \"!hasRole(ADMIN, _address)\" */ iszero(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ and(sload(keccak256(0, 64)), 0xff))\n                        }\n                        /// @src 9:3908:4001  \"if (!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)) revert Errors.UnauthorizedError()\"\n                        if expr_2\n                        {\n                            /// @src 9:3975:4001  \"Errors.UnauthorizedError()\"\n                            let _25 := /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ mload(64)\n                            /// @src 9:3975:4001  \"Errors.UnauthorizedError()\"\n                            mstore(_25, shl(224, 0x8b5701f7))\n                            revert(_25, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 4)\n                        }\n                        /// @src 9:997:1005  \"_address\"\n                        fun_notZeroAddress(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ and(mload(/** @src 9:1364:1417  \"_saleParams.sale.saleAddresses.investmentTokenAddress\" */ add(/** @src 9:1364:1394  \"_saleParams.sale.saleAddresses\" */ mload(add(/** @src 9:1364:1380  \"_saleParams.sale\" */ mload(memPtr), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 128)), 64)), sub(shl(160, 1), 1)))\n                        /// @src 9:997:1005  \"_address\"\n                        fun_notZeroAddress(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ and(mload(/** @src 9:1442:1495  \"_saleParams.sale.saleAddresses.projectOwnerFeeAddress\" */ add(/** @src 9:1442:1472  \"_saleParams.sale.saleAddresses\" */ mload(add(/** @src 9:1442:1458  \"_saleParams.sale\" */ mload(memPtr), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 128)), 320)), sub(shl(160, 1), 1)))\n                        /// @src 9:997:1005  \"_address\"\n                        fun_notZeroAddress(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ and(mload(/** @src 9:1520:1570  \"_saleParams.sale.saleAddresses.launchpadFeeAddress\" */ add(/** @src 9:1520:1550  \"_saleParams.sale.saleAddresses\" */ mload(add(/** @src 9:1520:1536  \"_saleParams.sale\" */ mload(memPtr), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 128)), 288)), sub(shl(160, 1), 1)))\n                        /// @src 9:1674:1794  \"if (bytes(saleParams.sale.saleDetails.saleName).length == 0) {...\"\n                        if /** @src 9:1678:1733  \"bytes(saleParams.sale.saleDetails.saleName).length == 0\" */ iszero(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ mload(/** @src 9:1684:1720  \"saleParams.sale.saleDetails.saleName\" */ mload(add(/** @src 9:1684:1711  \"saleParams.sale.saleDetails\" */ mload(/** @src 9:1684:1699  \"saleParams.sale\" */ mload(memPtr)), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 320))))\n                        /// @src 9:1674:1794  \"if (bytes(saleParams.sale.saleDetails.saleName).length == 0) {...\"\n                        {\n                            /// @src 9:1756:1783  \"Errors.EmptySaleNameError()\"\n                            let _26 := /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ mload(64)\n                            /// @src 9:1756:1783  \"Errors.EmptySaleNameError()\"\n                            mstore(_26, shl(224, 0x1cfd4015))\n                            revert(_26, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 4)\n                        }\n                        let _27 := mload(/** @src 9:1807:1844  \"saleParams.sale.saleDetails.saleStart\" */ add(/** @src 9:1807:1834  \"saleParams.sale.saleDetails\" */ mload(/** @src 9:1807:1822  \"saleParams.sale\" */ mload(memPtr)), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 96))\n                        /// @src 9:1803:1930  \"if (saleParams.sale.saleDetails.saleStart < block.timestamp) {...\"\n                        if /** @src 9:1807:1862  \"saleParams.sale.saleDetails.saleStart < block.timestamp\" */ lt(_27, /** @src 9:1847:1862  \"block.timestamp\" */ timestamp())\n                        /// @src 9:1803:1930  \"if (saleParams.sale.saleDetails.saleStart < block.timestamp) {...\"\n                        {\n                            /// @src 9:1885:1919  \"Errors.InvalidSaleStartDateError()\"\n                            let _28 := /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ mload(64)\n                            /// @src 9:1885:1919  \"Errors.InvalidSaleStartDateError()\"\n                            mstore(_28, shl(226, 0x01c37351))\n                            revert(_28, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 4)\n                        }\n                        /// @src 9:1939:2062  \"if (saleParams.sale.saleDetails.saleEnd < block.timestamp) {...\"\n                        if /** @src 9:1943:1996  \"saleParams.sale.saleDetails.saleEnd < block.timestamp\" */ lt(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ mload(/** @src 9:1943:1978  \"saleParams.sale.saleDetails.saleEnd\" */ add(/** @src 9:1943:1970  \"saleParams.sale.saleDetails\" */ mload(/** @src 9:1943:1958  \"saleParams.sale\" */ mload(memPtr)), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 128)), /** @src 9:1847:1862  \"block.timestamp\" */ timestamp())\n                        /// @src 9:1939:2062  \"if (saleParams.sale.saleDetails.saleEnd < block.timestamp) {...\"\n                        {\n                            /// @src 9:2019:2051  \"Errors.InvalidSaleEndDateError()\"\n                            let _29 := /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ mload(64)\n                            /// @src 9:2019:2051  \"Errors.InvalidSaleEndDateError()\"\n                            mstore(_29, shl(225, 0x3fcd9bd9))\n                            revert(_29, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 4)\n                        }\n                        /// @src 9:2075:2102  \"saleParams.sale.saleDetails\"\n                        let _mpos := mload(/** @src 9:2075:2090  \"saleParams.sale\" */ mload(memPtr))\n                        /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                        let _30 := mload(/** @src 9:2075:2112  \"saleParams.sale.saleDetails.saleStart\" */ add(_mpos, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 96))\n                        /// @src 9:2071:2218  \"if (saleParams.sale.saleDetails.saleStart >= saleParams.sale.saleDetails.saleEnd) {...\"\n                        if /** @src 9:2075:2151  \"saleParams.sale.saleDetails.saleStart >= saleParams.sale.saleDetails.saleEnd\" */ iszero(lt(_30, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ mload(/** @src 9:2116:2151  \"saleParams.sale.saleDetails.saleEnd\" */ add(_mpos, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 128))))\n                        /// @src 9:2071:2218  \"if (saleParams.sale.saleDetails.saleStart >= saleParams.sale.saleDetails.saleEnd) {...\"\n                        {\n                            /// @src 9:2174:2207  \"Errors.InvalidSaleDurationError()\"\n                            let _31 := /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ mload(64)\n                            /// @src 9:2174:2207  \"Errors.InvalidSaleDurationError()\"\n                            mstore(_31, shl(224, 0x1e672f3b))\n                            revert(_31, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 4)\n                        }\n                        /// @src 9:2227:2357  \"if (saleParams.sale.saleDetails.maxInvestmentAmount == 0) {...\"\n                        if /** @src 9:2231:2283  \"saleParams.sale.saleDetails.maxInvestmentAmount == 0\" */ iszero(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ mload(/** @src 9:2231:2278  \"saleParams.sale.saleDetails.maxInvestmentAmount\" */ add(/** @src 9:2231:2258  \"saleParams.sale.saleDetails\" */ mload(/** @src 9:2231:2246  \"saleParams.sale\" */ mload(memPtr)), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 192)))\n                        /// @src 9:2227:2357  \"if (saleParams.sale.saleDetails.maxInvestmentAmount == 0) {...\"\n                        {\n                            /// @src 9:2306:2346  \"Errors.InvalidMaxInvestmentAmountError()\"\n                            let _32 := /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ mload(64)\n                            /// @src 9:2306:2346  \"Errors.InvalidMaxInvestmentAmountError()\"\n                            mstore(_32, shl(224, 0xe14abd8f))\n                            revert(_32, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 4)\n                        }\n                        /// @src 9:2366:2468  \"if (saleParams.tierDetails.length == 0) {...\"\n                        if /** @src 9:2370:2404  \"saleParams.tierDetails.length == 0\" */ iszero(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ mload(/** @src 9:2370:2392  \"saleParams.tierDetails\" */ mload(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ add(memPtr, 32))))\n                        /// @src 9:2366:2468  \"if (saleParams.tierDetails.length == 0) {...\"\n                        {\n                            /// @src 9:2427:2457  \"Errors.EmptyTierDetailsError()\"\n                            let _33 := /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ mload(64)\n                            /// @src 9:2427:2457  \"Errors.EmptyTierDetailsError()\"\n                            mstore(_33, shl(226, 0x3b5367f3))\n                            revert(_33, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 4)\n                        }\n                        /// @src 9:2499:2525  \"new DappadSale(saleParams)\"\n                        let _34 := /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ mload(64)\n                        /// @src 9:2499:2525  \"new DappadSale(saleParams)\"\n                        if or(gt(add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0xffffffffffffffff), /** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ lt(add(_34, datasize(\"DappadSale_3854\")), _34))\n                        {\n                            /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        /// @src 9:2499:2525  \"new DappadSale(saleParams)\"\n                        datacopy(_34, dataoffset(\"DappadSale_3854\"), datasize(\"DappadSale_3854\"))\n                        /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                        mstore(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 32)\n                        let memberValue0 := mload(memPtr)\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 32), 64)\n                        let memberValue0_1 := mload(memberValue0)\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 96), 0x0240)\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 672), mload(memberValue0_1))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 704), mload(add(memberValue0_1, 32)))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 736), mload(add(memberValue0_1, 64)))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 768), mload(add(memberValue0_1, 96)))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 800), mload(add(memberValue0_1, 128)))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 832), mload(add(memberValue0_1, 0xa0)))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 864), mload(add(memberValue0_1, 192)))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 896), mload(add(memberValue0_1, 224)))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 928), iszero(iszero(mload(add(memberValue0_1, 256)))))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 960), iszero(iszero(mload(add(memberValue0_1, 288)))))\n                        let memberValue0_2 := mload(add(memberValue0_1, 320))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 992), 0x0160)\n                        let end := abi_encode_string(memberValue0_2, add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 1024))\n                        let memberValue0_3 := mload(add(memberValue0, 32))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 128), mload(memberValue0_3))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0xa0), mload(add(memberValue0_3, 32)))\n                        let memberValue0_4 := mload(add(memberValue0, 64))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 192), mload(memberValue0_4))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 224), iszero(iszero(mload(add(memberValue0_4, 32)))))\n                        let memberValue0_5 := mload(add(memberValue0, 96))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 256), mload(memberValue0_5))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 288), mload(add(memberValue0_5, 32)))\n                        let memberValue0_6 := mload(add(memberValue0, 128))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 320), and(mload(memberValue0_6), sub(shl(160, 1), 1)))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0x0160), and(mload(add(memberValue0_6, 32)), sub(shl(160, 1), 1)))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 384), and(mload(add(memberValue0_6, 64)), sub(shl(160, 1), 1)))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 416), and(mload(add(memberValue0_6, 96)), sub(shl(160, 1), 1)))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 448), and(mload(add(memberValue0_6, 128)), sub(shl(160, 1), 1)))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 480), and(mload(add(memberValue0_6, 0xa0)), sub(shl(160, 1), 1)))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 512), and(mload(add(memberValue0_6, 192)), sub(shl(160, 1), 1)))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 544), and(mload(add(memberValue0_6, 224)), sub(shl(160, 1), 1)))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0x0240), and(mload(add(memberValue0_6, 256)), sub(shl(160, 1), 1)))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 608), and(mload(add(memberValue0_6, 288)), sub(shl(160, 1), 1)))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 640), and(mload(add(memberValue0_6, 320)), sub(shl(160, 1), 1)))\n                        let memberValue0_7 := mload(add(memPtr, 32))\n                        mstore(add(/** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\")), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 64), add(sub(end, /** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ add(_34, datasize(\"DappadSale_3854\"))), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ not(31)))\n                        let pos_1 := end\n                        let length_1 := mload(memberValue0_7)\n                        mstore(end, length_1)\n                        pos_1 := add(end, 32)\n                        let srcPtr := add(memberValue0_7, 32)\n                        let i := 0\n                        for { } lt(i, length_1) { i := add(i, 1) }\n                        {\n                            let _35 := mload(srcPtr)\n                            mstore(pos_1, mload(_35))\n                            mstore(add(pos_1, 32), mload(add(_35, 32)))\n                            mstore(add(pos_1, 64), mload(add(_35, 64)))\n                            mstore(add(pos_1, 96), mload(add(_35, 96)))\n                            mstore(add(pos_1, 128), mload(add(_35, 128)))\n                            mstore(add(pos_1, 0xa0), mload(add(_35, 0xa0)))\n                            mstore(add(pos_1, 192), mload(add(_35, 192)))\n                            pos_1 := add(pos_1, 224)\n                            srcPtr := add(srcPtr, 32)\n                        }\n                        /// @src 9:2499:2525  \"new DappadSale(saleParams)\"\n                        let expr_address := create(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0, /** @src 9:2499:2525  \"new DappadSale(saleParams)\" */ _34, sub(pos_1, _34))\n                        if iszero(expr_address)\n                        {\n                            /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                            let pos_2 := mload(64)\n                            returndatacopy(pos_2, 0, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        let oldLen := sload(1)\n                        if iszero(lt(oldLen, 18446744073709551616))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        sstore(1, add(oldLen, 1))\n                        let slot_1, offset_5 := storage_array_index_access_address_dyn(oldLen)\n                        let _36 := sload(slot_1)\n                        let shiftBits := shl(3, offset_5)\n                        sstore(slot_1, or(and(_36, not(shl(shiftBits, sub(shl(160, 1), 1)))), shl(shiftBits, and(/** @src 9:2550:2566  \"address(newSale)\" */ expr_address, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ sub(shl(160, 1), 1)))))\n                        /// @src 9:2608:2623  \"saleParams.sale\"\n                        let _mpos_1 := mload(memPtr)\n                        /// @src 9:2608:2635  \"saleParams.sale.saleDetails\"\n                        let _mpos_2 := mload(_mpos_1)\n                        /// @src 9:2608:2644  \"saleParams.sale.saleDetails.saleName\"\n                        let _mpos_3 := mload(add(_mpos_2, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 320))\n                        let _37 := mload(/** @src 9:2658:2695  \"saleParams.sale.saleDetails.saleStart\" */ add(_mpos_2, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 96))\n                        let _38 := mload(/** @src 9:2709:2744  \"saleParams.sale.saleDetails.saleEnd\" */ add(_mpos_2, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 128))\n                        let _39 := mload(/** @src 9:2758:2805  \"saleParams.sale.saleDetails.maxInvestmentAmount\" */ add(_mpos_2, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 192))\n                        /// @src 9:2819:2848  \"saleParams.sale.saleAddresses\"\n                        let _mpos_4 := mload(add(_mpos_1, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 128))\n                        let cleaned := and(mload(/** @src 9:2819:2871  \"saleParams.sale.saleAddresses.investmentTokenAddress\" */ add(_mpos_4, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 64)), sub(shl(160, 1), 1))\n                        let cleaned_1 := and(mload(/** @src 9:2885:2931  \"saleParams.sale.saleAddresses.saleTokenAddress\" */ _mpos_4), /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ sub(shl(160, 1), 1))\n                        /// @src 9:2583:2968  \"SaleCreated(...\"\n                        let _40 := /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ mload(64)\n                        mstore(_40, 224)\n                        let tail := abi_encode_string(_mpos_3, add(_40, 224))\n                        mstore(add(_40, 32), _37)\n                        mstore(add(_40, 64), _38)\n                        mstore(add(_40, 96), _39)\n                        mstore(add(_40, 128), cleaned)\n                        mstore(add(_40, 0xa0), cleaned_1)\n                        mstore(add(_40, 192), /** @src 9:2953:2957  \"this\" */ address())\n                        /// @src 9:2583:2968  \"SaleCreated(...\"\n                        log1(_40, sub(tail, _40), 0xb3bf637c2bc0c07b1686485081a411ec7a4c3a3464671d2bf063f91f2ba1613d)\n                        /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, 1)\n                        return(memPos_9, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address_17680() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address(offset) -> value\n            {\n                value := calldataload(offset)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function storage_array_index_access_address_dyn(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 9:378:403  \"address[] public allSales\" */ 1)))\n                /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:378:403  \"address[] public allSales\" */ 1)\n                /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                slot := add(80084422859880547211683076133703299733277748156566366325829078699459944778998, index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n            function finalize_allocation_17687(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_17689(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0x0160)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_decode_bool(offset) -> value\n            {\n                value := calldataload(offset)\n                if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n            }\n            /// @ast-id 93 @src 0:3199:3302  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun_checkRole(var_role)\n            {\n                /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x00)\n                /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                let _1 := keccak256(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0x40)\n                mstore(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 4:735:745  \"msg.sender\" */ caller())\n                /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                mstore(0x20, _1)\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                if /** @src 0:3519:3542  \"!hasRole(role, account)\" */ iszero(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0x40)), 0xff))\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    let _2 := /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ mload(0x40)\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(_2, shl(224, 0xe2517d3f))\n                    /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                    mstore(/** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ add(_2, 4), /** @src 4:735:745  \"msg.sender\" */ caller())\n                    /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                    mstore(add(/** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ _2, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 36), var_role)\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(_2, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 68)\n                }\n            }\n            /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_grantRole(var_role, var_account) -> var\n            {\n                /// @src 0:2954:2960  \"_roles\"\n                let _1 := 0x00\n                /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                let _2 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0x40)\n                let _3 := and(var_account, sub(shl(160, 1), 1))\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ _3)\n                mstore(0x20, _2)\n                /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0x40)), 0xff))\n                case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:6466:6478  \"return false\"\n                    var := /** @src 0:2954:2960  \"_roles\" */ _1\n                    /// @src 0:6466:6478  \"return false\"\n                    leave\n                }\n                default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ var_role)\n                    mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                    /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                    let _4 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0x40)\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ _3)\n                    mstore(0x20, _4)\n                    let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0x40)\n                    sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                    /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 0:2954:2960  \"_roles\" */ _1, _1, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, var_role, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ _3, /** @src 4:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:6424:6435  \"return true\"\n                    var := /** @src 0:6347:6351  \"true\" */ 0x01\n                    /// @src 0:6424:6435  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 294 @src 0:6730:7047  \"function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_revokeRole(var_role, var_account) -> var\n            {\n                /// @src 0:2954:2960  \"_roles\"\n                let _1 := 0x00\n                /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                let _2 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0x40)\n                let _3 := and(var_account, sub(shl(160, 1), 1))\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ _3)\n                mstore(0x20, _2)\n                /// @src 0:6824:7041  \"if (hasRole(role, account)) {...\"\n                switch /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0x40)), 0xff)\n                case /** @src 0:6824:7041  \"if (hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:7018:7030  \"return false\"\n                    var := /** @src 0:2954:2960  \"_roles\" */ _1\n                    /// @src 0:7018:7030  \"return false\"\n                    leave\n                }\n                default /// @src 0:6824:7041  \"if (hasRole(role, account)) {...\"\n                {\n                    /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ var_role)\n                    mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                    /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n                    let _4 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0x40)\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ _3)\n                    mstore(0x20, _4)\n                    let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 0x40)\n                    sstore(dataSlot, and(sload(dataSlot), not(255)))\n                    /// @src 0:6922:6962  \"RoleRevoked(role, account, _msgSender())\"\n                    log4(/** @src 0:2954:2960  \"_roles\" */ _1, _1, /** @src 0:6922:6962  \"RoleRevoked(role, account, _msgSender())\" */ 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b, var_role, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ _3, /** @src 4:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:6976:6987  \"return true\"\n                    var := /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ 1\n                    /// @src 0:6976:6987  \"return true\"\n                    leave\n                }\n            }\n            /// @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\"\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), 0)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            /// @ast-id 4202 @src 9:3560:3694  \"function _notZeroAddress(address _address) internal pure {...\"\n            function fun_notZeroAddress(var_address)\n            {\n                /// @src 9:3627:3687  \"if (_address == address(0)) revert Errors.ZeroAddressError()\"\n                if /** @src 9:3631:3653  \"_address == address(0)\" */ iszero(/** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ and(/** @src 9:3631:3653  \"_address == address(0)\" */ var_address, /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                /// @src 9:3627:3687  \"if (_address == address(0)) revert Errors.ZeroAddressError()\"\n                {\n                    /// @src 9:3662:3687  \"Errors.ZeroAddressError()\"\n                    let _1 := /** @src 9:215:4010  \"contract DappadSaleFactory is AccessControl {...\" */ mload(64)\n                    /// @src 9:3662:3687  \"Errors.ZeroAddressError()\"\n                    mstore(_1, shl(224, 0x3efa09af))\n                    revert(_1, 4)\n                }\n            }\n        }\n        /// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 1:\"@openzeppelin/contracts/access/IAccessControl.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 6:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 7:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\", 8:\"contracts/core/DappadSale.sol\"\n        object \"DappadSale_3854\" {\n            code {\n                {\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    mstore(64, memoryguard(0x80))\n                    if callvalue() { revert(0, 0) }\n                    let programSize := datasize(\"DappadSale_3854\")\n                    let argSize := sub(codesize(), programSize)\n                    let memoryDataOffset := allocate_memory(argSize)\n                    codecopy(memoryDataOffset, programSize, argSize)\n                    if slt(sub(add(memoryDataOffset, argSize), memoryDataOffset), 32)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    let offset := mload(memoryDataOffset)\n                    if gt(offset, sub(shl(64, 1), 1))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    if slt(sub(add(memoryDataOffset, argSize), add(memoryDataOffset, offset)), 64)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    let value := allocate_memory_19929()\n                    let offset_1 := mload(add(memoryDataOffset, offset))\n                    if gt(offset_1, sub(shl(64, 1), 1))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    if slt(sub(add(memoryDataOffset, argSize), add(add(memoryDataOffset, offset), offset_1)), 0x0240)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    let memPtr := mload(64)\n                    let newFreePtr := add(memPtr, 0xa0)\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                    let offset_2 := mload(add(add(memoryDataOffset, offset), offset_1))\n                    if gt(offset_2, sub(shl(64, 1), 1))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    let _1 := add(add(add(memoryDataOffset, offset), offset_1), offset_2)\n                    if slt(sub(add(memoryDataOffset, argSize), _1), 0x0160)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    let value_1 := allocate_memory_19931()\n                    mstore(value_1, mload(_1))\n                    mstore(add(value_1, 32), mload(add(_1, 32)))\n                    mstore(add(value_1, 64), mload(add(_1, 64)))\n                    mstore(add(value_1, 96), mload(add(_1, 96)))\n                    mstore(add(value_1, 128), mload(add(_1, 128)))\n                    mstore(add(value_1, 0xa0), mload(add(_1, 0xa0)))\n                    mstore(add(value_1, 192), mload(add(_1, 192)))\n                    mstore(add(value_1, 224), mload(add(_1, 224)))\n                    mstore(add(value_1, 256), abi_decode_bool_fromMemory(add(_1, 256)))\n                    mstore(add(value_1, 288), abi_decode_bool_fromMemory(add(_1, 288)))\n                    let offset_3 := mload(add(_1, 320))\n                    if gt(offset_3, sub(shl(64, 1), 1))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    if iszero(slt(add(add(_1, offset_3), 0x1f), add(memoryDataOffset, argSize)))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    let _2 := mload(add(_1, offset_3))\n                    if gt(_2, sub(shl(64, 1), 1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x24)\n                    }\n                    let array := allocate_memory(add(and(add(_2, 0x1f), not(31)), 32))\n                    mstore(array, _2)\n                    if gt(add(add(add(_1, offset_3), _2), 32), add(memoryDataOffset, argSize))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    for { } lt(i, _2) { i := add(i, 32) }\n                    {\n                        mstore(add(add(array, i), 32), mload(add(add(add(_1, offset_3), i), 32)))\n                    }\n                    mstore(add(add(array, _2), 32), /** @src -1:-1:-1 */ 0)\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    mstore(add(value_1, 320), array)\n                    mstore(memPtr, value_1)\n                    if slt(add(sub(add(memoryDataOffset, argSize), add(add(memoryDataOffset, offset), offset_1)), not(31)), 64)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    let value_2 := allocate_memory_19929()\n                    mstore(value_2, mload(add(add(add(memoryDataOffset, offset), offset_1), 32)))\n                    mstore(add(value_2, 32), mload(add(add(add(memoryDataOffset, offset), offset_1), 64)))\n                    mstore(add(memPtr, 32), value_2)\n                    if slt(add(sub(add(memoryDataOffset, argSize), add(add(memoryDataOffset, offset), offset_1)), not(95)), 64)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    let value_3 := allocate_memory_19929()\n                    mstore(value_3, mload(add(add(add(memoryDataOffset, offset), offset_1), 96)))\n                    mstore(add(value_3, 32), abi_decode_bool_fromMemory(add(add(add(memoryDataOffset, offset), offset_1), 128)))\n                    mstore(add(memPtr, 64), value_3)\n                    if slt(add(sub(add(memoryDataOffset, argSize), add(add(memoryDataOffset, offset), offset_1)), not(159)), 64)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    let value_4 := allocate_memory_19929()\n                    mstore(value_4, mload(add(add(add(memoryDataOffset, offset), offset_1), 0xa0)))\n                    mstore(add(value_4, 32), mload(add(add(add(memoryDataOffset, offset), offset_1), 192)))\n                    mstore(add(memPtr, 96), value_4)\n                    if slt(add(sub(add(memoryDataOffset, argSize), add(add(memoryDataOffset, offset), offset_1)), not(223)), 0x0160)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    let value_5 := allocate_memory_19931()\n                    mstore(value_5, abi_decode_address_fromMemory(add(add(add(memoryDataOffset, offset), offset_1), 224)))\n                    mstore(add(value_5, 32), abi_decode_address_fromMemory(add(add(add(memoryDataOffset, offset), offset_1), 256)))\n                    mstore(add(value_5, 64), abi_decode_address_fromMemory(add(add(add(memoryDataOffset, offset), offset_1), 288)))\n                    mstore(add(value_5, 96), abi_decode_address_fromMemory(add(add(add(memoryDataOffset, offset), offset_1), 320)))\n                    mstore(add(value_5, 128), abi_decode_address_fromMemory(add(add(add(memoryDataOffset, offset), offset_1), 0x0160)))\n                    mstore(add(value_5, 0xa0), abi_decode_address_fromMemory(add(add(add(memoryDataOffset, offset), offset_1), 384)))\n                    mstore(add(value_5, 192), abi_decode_address_fromMemory(add(add(add(memoryDataOffset, offset), offset_1), 416)))\n                    mstore(add(value_5, 224), abi_decode_address_fromMemory(add(add(add(memoryDataOffset, offset), offset_1), 448)))\n                    mstore(add(value_5, 256), abi_decode_address_fromMemory(add(add(add(memoryDataOffset, offset), offset_1), 480)))\n                    mstore(add(value_5, 288), abi_decode_address_fromMemory(add(add(add(memoryDataOffset, offset), offset_1), 512)))\n                    mstore(add(value_5, 320), abi_decode_address_fromMemory(add(add(add(memoryDataOffset, offset), offset_1), 544)))\n                    mstore(add(memPtr, 128), value_5)\n                    mstore(value, memPtr)\n                    let offset_4 := mload(add(add(memoryDataOffset, offset), 32))\n                    if gt(offset_4, sub(shl(64, 1), 1))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    if iszero(slt(add(add(add(memoryDataOffset, offset), offset_4), 0x1f), add(memoryDataOffset, argSize)))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    let _3 := mload(add(add(memoryDataOffset, offset), offset_4))\n                    if gt(_3, sub(shl(64, 1), 1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x24)\n                    }\n                    let dst := allocate_memory(add(shl(5, _3), 32))\n                    let dst_1 := dst\n                    mstore(dst, _3)\n                    dst := add(dst, 32)\n                    if gt(add(add(add(add(memoryDataOffset, offset), offset_4), mul(_3, 224)), 32), add(memoryDataOffset, argSize))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    let src := add(add(add(memoryDataOffset, offset), offset_4), 32)\n                    for { }\n                    lt(src, add(add(add(add(memoryDataOffset, offset), offset_4), mul(_3, 224)), 32))\n                    { src := add(src, 224) }\n                    {\n                        if slt(sub(add(memoryDataOffset, argSize), src), 224)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let memPtr_1 := mload(64)\n                        let newFreePtr_1 := add(memPtr_1, 224)\n                        if or(gt(newFreePtr_1, sub(shl(64, 1), 1)), lt(newFreePtr_1, memPtr_1))\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x24)\n                        }\n                        mstore(64, newFreePtr_1)\n                        mstore(memPtr_1, mload(src))\n                        mstore(add(memPtr_1, 32), mload(add(src, 32)))\n                        mstore(add(memPtr_1, 64), mload(add(src, 64)))\n                        mstore(add(memPtr_1, 96), mload(add(src, 96)))\n                        mstore(add(memPtr_1, 128), mload(add(src, 128)))\n                        mstore(add(memPtr_1, 0xa0), mload(add(src, 0xa0)))\n                        mstore(add(memPtr_1, 192), mload(add(src, 192)))\n                        mstore(dst, memPtr_1)\n                        dst := add(dst, 32)\n                    }\n                    mstore(add(value, 32), dst_1)\n                    /// @src 8:4542:4550  \"_address\"\n                    fun_notZeroAddress(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(mload(/** @src 8:2654:2706  \"saleParams.sale.saleAddresses.investmentTokenAddress\" */ add(/** @src 8:2654:2683  \"saleParams.sale.saleAddresses\" */ mload(add(/** @src 8:2654:2669  \"saleParams.sale\" */ mload(value), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128)), 64)), sub(shl(160, 1), 1)))\n                    /// @src 8:4542:4550  \"_address\"\n                    fun_notZeroAddress(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(mload(/** @src 8:2732:2784  \"saleParams.sale.saleAddresses.factoryContractAddress\" */ add(/** @src 8:2732:2761  \"saleParams.sale.saleAddresses\" */ mload(add(/** @src 8:2732:2747  \"saleParams.sale\" */ mload(value), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128)), 96)), sub(shl(160, 1), 1)))\n                    /// @src 8:4542:4550  \"_address\"\n                    fun_notZeroAddress(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(mload(/** @src 8:2810:2852  \"saleParams.sale.saleAddresses.ownerAddress\" */ add(/** @src 8:2810:2839  \"saleParams.sale.saleAddresses\" */ mload(add(/** @src 8:2810:2825  \"saleParams.sale\" */ mload(value), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128)), 224)), sub(shl(160, 1), 1)))\n                    /// @src 8:4542:4550  \"_address\"\n                    fun_notZeroAddress(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(mload(/** @src 8:2878:2920  \"saleParams.sale.saleAddresses.adminAddress\" */ add(/** @src 8:2878:2907  \"saleParams.sale.saleAddresses\" */ mload(add(/** @src 8:2878:2893  \"saleParams.sale\" */ mload(value), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128)), 256)), sub(shl(160, 1), 1)))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 8:332:350  \"keccak256(\\\"OWNER\\\")\" */ 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b)\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    mstore(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32, /** @src -1:-1:-1 */ 0)\n                    /// @src 0:3901:3923  \"_roles[role].adminRole\"\n                    let _4 := add(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64), /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    let _5 := sload(_4)\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(_4, /** @src 8:332:350  \"keccak256(\\\"OWNER\\\")\" */ 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b)\n                    /// @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\"\n                    let _6 := 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff\n                    log4(/** @src -1:-1:-1 */ 0, 0, /** @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\" */ _6, /** @src 8:332:350  \"keccak256(\\\"OWNER\\\")\" */ 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b, /** @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\" */ _5, /** @src 8:332:350  \"keccak256(\\\"OWNER\\\")\" */ 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b)\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    let _7 := 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ _7)\n                    /// @src 0:3901:3923  \"_roles[role].adminRole\"\n                    let _8 := add(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64), /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    let _9 := sload(_8)\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(_8, /** @src 8:332:350  \"keccak256(\\\"OWNER\\\")\" */ 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b)\n                    /// @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\"\n                    log4(/** @src -1:-1:-1 */ 0, 0, /** @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\" */ _6, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ _7, /** @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\" */ _9, /** @src 8:332:350  \"keccak256(\\\"OWNER\\\")\" */ 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b)\n                    /// @src 8:3012:3073  \"_grantRole(OWNER, saleParams.sale.saleAddresses.ownerAddress)\"\n                    pop(fun_grantRole_19939(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(mload(/** @src 8:3030:3072  \"saleParams.sale.saleAddresses.ownerAddress\" */ add(/** @src 8:3030:3059  \"saleParams.sale.saleAddresses\" */ mload(add(/** @src 8:3030:3045  \"saleParams.sale\" */ mload(value), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128)), 224)), sub(shl(160, 1), 1))))\n                    /// @src 8:3083:3144  \"_grantRole(ADMIN, saleParams.sale.saleAddresses.adminAddress)\"\n                    pop(fun_grantRole(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(mload(/** @src 8:3101:3143  \"saleParams.sale.saleAddresses.adminAddress\" */ add(/** @src 8:3101:3130  \"saleParams.sale.saleAddresses\" */ mload(add(/** @src 8:3101:3116  \"saleParams.sale\" */ mload(value), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128)), 256)), sub(shl(160, 1), 1))))\n                    /// @src 8:3163:3257  \"if(bytes(saleParams.sale.saleDetails.saleName).length == 0) revert Errors.EmptySaleNameError()\"\n                    if /** @src 8:3166:3221  \"bytes(saleParams.sale.saleDetails.saleName).length == 0\" */ iszero(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(/** @src 8:3172:3208  \"saleParams.sale.saleDetails.saleName\" */ mload(add(/** @src 8:3172:3199  \"saleParams.sale.saleDetails\" */ mload(/** @src 8:3172:3187  \"saleParams.sale\" */ mload(value)), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 320))))\n                    /// @src 8:3163:3257  \"if(bytes(saleParams.sale.saleDetails.saleName).length == 0) revert Errors.EmptySaleNameError()\"\n                    {\n                        /// @src 8:3230:3257  \"Errors.EmptySaleNameError()\"\n                        let _10 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:3230:3257  \"Errors.EmptySaleNameError()\"\n                        mstore(_10, shl(224, 0x1cfd4015))\n                        revert(_10, 4)\n                    }\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    let _11 := mload(/** @src 8:3271:3308  \"saleParams.sale.saleDetails.saleStart\" */ add(/** @src 8:3271:3298  \"saleParams.sale.saleDetails\" */ mload(/** @src 8:3271:3286  \"saleParams.sale\" */ mload(value)), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 96))\n                    /// @src 8:3267:3369  \"if (saleParams.sale.saleDetails.saleStart < block.timestamp) revert Errors.InvalidSaleStartDateError()\"\n                    if /** @src 8:3271:3326  \"saleParams.sale.saleDetails.saleStart < block.timestamp\" */ lt(_11, /** @src 8:3311:3326  \"block.timestamp\" */ timestamp())\n                    /// @src 8:3267:3369  \"if (saleParams.sale.saleDetails.saleStart < block.timestamp) revert Errors.InvalidSaleStartDateError()\"\n                    {\n                        /// @src 8:3335:3369  \"Errors.InvalidSaleStartDateError()\"\n                        let _12 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:3335:3369  \"Errors.InvalidSaleStartDateError()\"\n                        mstore(_12, shl(226, 0x01c37351))\n                        revert(_12, 4)\n                    }\n                    /// @src 8:3379:3477  \"if (saleParams.sale.saleDetails.saleEnd < block.timestamp) revert Errors.InvalidSaleEndDateError()\"\n                    if /** @src 8:3383:3436  \"saleParams.sale.saleDetails.saleEnd < block.timestamp\" */ lt(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(/** @src 8:3383:3418  \"saleParams.sale.saleDetails.saleEnd\" */ add(/** @src 8:3383:3410  \"saleParams.sale.saleDetails\" */ mload(/** @src 8:3383:3398  \"saleParams.sale\" */ mload(value)), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128)), /** @src 8:3311:3326  \"block.timestamp\" */ timestamp())\n                    /// @src 8:3379:3477  \"if (saleParams.sale.saleDetails.saleEnd < block.timestamp) revert Errors.InvalidSaleEndDateError()\"\n                    {\n                        /// @src 8:3445:3477  \"Errors.InvalidSaleEndDateError()\"\n                        let _13 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:3445:3477  \"Errors.InvalidSaleEndDateError()\"\n                        mstore(_13, shl(225, 0x3fcd9bd9))\n                        revert(_13, 4)\n                    }\n                    /// @src 8:3491:3518  \"saleParams.sale.saleDetails\"\n                    let _mpos := mload(/** @src 8:3491:3506  \"saleParams.sale\" */ mload(value))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    let _14 := mload(/** @src 8:3491:3528  \"saleParams.sale.saleDetails.saleStart\" */ add(_mpos, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 96))\n                    /// @src 8:3487:3609  \"if (saleParams.sale.saleDetails.saleStart >= saleParams.sale.saleDetails.saleEnd) revert Errors.InvalidSaleDurationError()\"\n                    if /** @src 8:3491:3567  \"saleParams.sale.saleDetails.saleStart >= saleParams.sale.saleDetails.saleEnd\" */ iszero(lt(_14, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(/** @src 8:3532:3567  \"saleParams.sale.saleDetails.saleEnd\" */ add(_mpos, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128))))\n                    /// @src 8:3487:3609  \"if (saleParams.sale.saleDetails.saleStart >= saleParams.sale.saleDetails.saleEnd) revert Errors.InvalidSaleDurationError()\"\n                    {\n                        /// @src 8:3576:3609  \"Errors.InvalidSaleDurationError()\"\n                        let _15 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:3576:3609  \"Errors.InvalidSaleDurationError()\"\n                        mstore(_15, shl(224, 0x1e672f3b))\n                        revert(_15, 4)\n                    }\n                    /// @src 8:3619:3724  \"if (saleParams.sale.saleDetails.maxInvestmentAmount <= 0) revert Errors.InvalidMaxInvestmentAmountError()\"\n                    if /** @src 8:3623:3675  \"saleParams.sale.saleDetails.maxInvestmentAmount <= 0\" */ iszero(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(/** @src 8:3623:3670  \"saleParams.sale.saleDetails.maxInvestmentAmount\" */ add(/** @src 8:3623:3650  \"saleParams.sale.saleDetails\" */ mload(/** @src 8:3623:3638  \"saleParams.sale\" */ mload(value)), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 192)))\n                    /// @src 8:3619:3724  \"if (saleParams.sale.saleDetails.maxInvestmentAmount <= 0) revert Errors.InvalidMaxInvestmentAmountError()\"\n                    {\n                        /// @src 8:3684:3724  \"Errors.InvalidMaxInvestmentAmountError()\"\n                        let _16 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:3684:3724  \"Errors.InvalidMaxInvestmentAmountError()\"\n                        mstore(_16, shl(224, 0xe14abd8f))\n                        revert(_16, 4)\n                    }\n                    /// @src 8:3734:3811  \"if (saleParams.tierDetails.length == 0) revert Errors.EmptyTierDetailsError()\"\n                    if /** @src 8:3738:3772  \"saleParams.tierDetails.length == 0\" */ iszero(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(/** @src 8:3738:3760  \"saleParams.tierDetails\" */ mload(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ add(value, 32))))\n                    /// @src 8:3734:3811  \"if (saleParams.tierDetails.length == 0) revert Errors.EmptyTierDetailsError()\"\n                    {\n                        /// @src 8:3781:3811  \"Errors.EmptyTierDetailsError()\"\n                        let _17 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:3781:3811  \"Errors.EmptyTierDetailsError()\"\n                        mstore(_17, shl(226, 0x3b5367f3))\n                        revert(_17, 4)\n                    }\n                    /// @src 8:3829:3844  \"saleParams.sale\"\n                    let _18 := mload(value)\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    let _19 := mload(_18)\n                    sstore(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(_19))\n                    let _20 := mload(add(_19, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(2, _20)\n                    let _21 := mload(add(_19, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(3, _21)\n                    let _22 := mload(add(_19, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 96))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(4, _22)\n                    sstore(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 5, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(add(_19, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128)))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    let _23 := mload(add(_19, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xa0))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(6, _23)\n                    sstore(7, mload(add(_19, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 192)))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(8, mload(add(_19, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 224)))\n                    let _24 := iszero(iszero(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(add(_19, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 256))))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    let _25 := sload(9)\n                    sstore(9, or(or(and(_25, not(65535)), and(_24, 255)), and(shl(8, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ iszero(iszero(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(add(_19, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 288))))), /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 65280)))\n                    let _26 := mload(add(_19, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 320))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    let newLen := mload(_26)\n                    if gt(newLen, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(64, 1), 1))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    {\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 4, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x24)\n                    }\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    let _27 := sload(10)\n                    let length := /** @src -1:-1:-1 */ 0\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    length := shr(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ _27)\n                    let outOfPlaceEncoding := and(_27, /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                    if eq(outOfPlaceEncoding, lt(length, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x4e487b71))\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        mstore(4, 0x22)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x24)\n                    }\n                    if gt(length, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x1f)\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 10)\n                        let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32)\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        let deleteStart := add(data, shr(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 5, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(newLen, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x1f)))\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        if lt(newLen, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32)\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        { deleteStart := data }\n                        let start := deleteStart\n                        for { }\n                        lt(start, add(data, shr(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 5, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(length, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x1f))))\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        {\n                            start := add(start, /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n                        }\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        {\n                            sstore(start, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    let srcOffset := /** @src -1:-1:-1 */ 0\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    srcOffset := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    switch gt(newLen, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x1f)\n                    case /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 1 {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 10)\n                        let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32)\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        let i_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        for { }\n                        lt(i_1, and(newLen, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ not(31)))\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        {\n                            i_1 := add(i_1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32)\n                        }\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        {\n                            sstore(dstPtr, mload(add(_26, srcOffset)))\n                            dstPtr := add(dstPtr, /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n                            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                            srcOffset := add(srcOffset, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32)\n                        }\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        if lt(and(newLen, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ not(31)), /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ newLen)\n                        {\n                            let lastValue := mload(add(_26, srcOffset))\n                            sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                        }\n                        sstore(10, add(shl(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ newLen), /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1))\n                    }\n                    default /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    {\n                        let value_6 := /** @src -1:-1:-1 */ 0\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        if newLen\n                        {\n                            value_6 := mload(add(_26, srcOffset))\n                        }\n                        sstore(10, or(and(value_6, not(shr(shl(3, newLen), not(0)))), shl(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ newLen)))\n                    }\n                    let _28 := mload(add(_18, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(11, mload(_28))\n                    sstore(12, mload(add(_28, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32)))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    let _29 := mload(add(_18, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(13, mload(_29))\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    let _30 := iszero(iszero(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(add(_29, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32))))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    let value_7 := and(sload(14), not(255))\n                    sstore(14, or(value_7, and(_30, 255)))\n                    let _31 := mload(add(_18, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 96))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(15, mload(_31))\n                    sstore(16, mload(add(_31, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32)))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    let _32 := mload(add(_18, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128))\n                    let _33 := and(mload(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ _32), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(17, or(and(sload(17), not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), _33))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(18, or(and(sload(18), not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), and(mload(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(_32, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32)), sub(shl(160, 1), 1))))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(19, or(and(sload(19), not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), and(mload(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(_32, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64)), sub(shl(160, 1), 1))))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(20, or(and(sload(20), not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), and(mload(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(_32, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 96)), sub(shl(160, 1), 1))))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(21, or(and(sload(21), not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), and(mload(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(_32, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128)), sub(shl(160, 1), 1))))\n                    let _34 := and(mload(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(_32, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xa0)), sub(shl(160, 1), 1))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(22, or(and(sload(22), not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), _34))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(23, or(and(sload(23), not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), and(mload(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(_32, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 192)), sub(shl(160, 1), 1))))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(24, or(and(sload(24), not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), and(mload(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(_32, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 224)), sub(shl(160, 1), 1))))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(25, or(and(sload(25), not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), and(mload(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(_32, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 256)), sub(shl(160, 1), 1))))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(26, or(and(sload(26), not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), and(mload(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(_32, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 288)), sub(shl(160, 1), 1))))\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(27, or(and(sload(27), not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), and(mload(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(_32, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 320)), sub(shl(160, 1), 1))))\n                    /// @src 8:3858:3887  \"saleParams.sale.saleAddresses\"\n                    let _mpos_1 := mload(add(/** @src 8:3858:3873  \"saleParams.sale\" */ mload(value), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128))\n                    let cleaned := and(mload(/** @src 8:3858:3908  \"saleParams.sale.saleAddresses.registerTokenAddress\" */ add(_mpos_1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32)), sub(shl(160, 1), 1))\n                    /// @src 8:3855:4006  \"if(saleParams.sale.saleAddresses.registerTokenAddress != address(0)) registerToken = IERC20Extented(saleParams.sale.saleAddresses.registerTokenAddress)\"\n                    if /** @src 8:3858:3922  \"saleParams.sale.saleAddresses.registerTokenAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ cleaned))\n                    /// @src 8:3855:4006  \"if(saleParams.sale.saleAddresses.registerTokenAddress != address(0)) registerToken = IERC20Extented(saleParams.sale.saleAddresses.registerTokenAddress)\"\n                    {\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        sstore(/** @src 8:3924:4006  \"registerToken = IERC20Extented(saleParams.sale.saleAddresses.registerTokenAddress)\" */ 0x21, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ or(and(sload(/** @src 8:3924:4006  \"registerToken = IERC20Extented(saleParams.sale.saleAddresses.registerTokenAddress)\" */ 0x21), /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ cleaned))\n                    }\n                    sstore(/** @src 8:4025:4111  \"investmentToken = IERC20Extented(saleParams.sale.saleAddresses.investmentTokenAddress)\" */ 0x22, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ or(and(sload(/** @src 8:4025:4111  \"investmentToken = IERC20Extented(saleParams.sale.saleAddresses.investmentTokenAddress)\" */ 0x22), /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), and(mload(/** @src 8:4058:4110  \"saleParams.sale.saleAddresses.investmentTokenAddress\" */ add(_mpos_1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64)), sub(shl(160, 1), 1))))\n                    /// @src 8:4122:4326  \"if (saleParams.sale.saleAddresses.stakeControllerContractAddress != address(0)) {...\"\n                    if /** @src 8:4126:4200  \"saleParams.sale.saleAddresses.stakeControllerContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(mload(/** @src 8:4126:4186  \"saleParams.sale.saleAddresses.stakeControllerContractAddress\" */ add(_mpos_1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xa0)), sub(shl(160, 1), 1))))\n                    /// @src 8:4122:4326  \"if (saleParams.sale.saleAddresses.stakeControllerContractAddress != address(0)) {...\"\n                    {\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        sstore(/** @src 8:4216:4315  \"stakeControllerContract = IDappadStakeController(sale.saleAddresses.stakeControllerContractAddress)\" */ 0x23, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ or(and(sload(/** @src 8:4216:4315  \"stakeControllerContract = IDappadStakeController(sale.saleAddresses.stakeControllerContractAddress)\" */ 0x23), /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ not(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))), _34))\n                    }\n                    /// @src 8:4340:4353  \"uint256 i = 0\"\n                    let var_i := /** @src -1:-1:-1 */ 0\n                    /// @src 8:4336:4462  \"for(uint256 i = 0; i < saleParams.tierDetails.length; i++) {...\"\n                    for { }\n                    /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1\n                    /// @src 8:4340:4353  \"uint256 i = 0\"\n                    {\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        if eq(var_i, not(0))\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x4e487b71))\n                            /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                            mstore(4, 17)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x24)\n                        }\n                        /// @src 8:4390:4393  \"i++\"\n                        var_i := /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(var_i, /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n                    }\n                    /// @src 8:4390:4393  \"i++\"\n                    {\n                        /// @src 8:4359:4381  \"saleParams.tierDetails\"\n                        let _mpos_2 := mload(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ add(value, 32))\n                        /// @src 8:4355:4388  \"i < saleParams.tierDetails.length\"\n                        if iszero(lt(var_i, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(/** @src 8:4359:4388  \"saleParams.tierDetails.length\" */ _mpos_2)))\n                        /// @src 8:4355:4388  \"i < saleParams.tierDetails.length\"\n                        { break }\n                        /// @src 8:4426:4451  \"saleParams.tierDetails[i]\"\n                        let _35 := mload(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ add(add(_mpos_2, shl(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 5, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ var_i)), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32))\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ var_i)\n                        mstore(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32, /** @src 8:4409:4420  \"tierDetails\" */ 0x26)\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64)\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        sstore(dataSlot, mload(_35))\n                        sstore(add(dataSlot, /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1), /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(add(_35, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32)))\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        sstore(add(dataSlot, 2), mload(add(_35, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64)))\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        sstore(add(dataSlot, 3), mload(add(_35, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 96)))\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        sstore(add(dataSlot, 4), mload(add(_35, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 128)))\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        sstore(add(dataSlot, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 5), /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ mload(add(_35, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xa0)))\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        sstore(add(dataSlot, 6), mload(add(_35, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 192)))\n                    }\n                    let _36 := mload(64)\n                    let _37 := datasize(\"DappadSale_3854_deployed\")\n                    codecopy(_36, dataoffset(\"DappadSale_3854_deployed\"), _37)\n                    return(_36, _37)\n                }\n                function allocate_memory_19929() -> memPtr\n                {\n                    memPtr := mload(64)\n                    let newFreePtr := add(memPtr, 64)\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                function allocate_memory_19931() -> memPtr\n                {\n                    memPtr := mload(64)\n                    let newFreePtr := add(memPtr, 0x0160)\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                function allocate_memory(size) -> memPtr\n                {\n                    memPtr := mload(64)\n                    let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                function abi_decode_bool_fromMemory(offset) -> value\n                {\n                    value := mload(offset)\n                    if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n                }\n                function abi_decode_address_fromMemory(offset) -> value\n                {\n                    value := mload(offset)\n                    if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                }\n                /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n                function fun_grantRole_19939(var_account) -> var\n                {\n                    /// @src 8:332:350  \"keccak256(\\\"OWNER\\\")\"\n                    let _1 := 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b\n                    /// @src 0:2954:2960  \"_roles\"\n                    let _2 := 0x00\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:332:350  \"keccak256(\\\"OWNER\\\")\" */ _1)\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _2)\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    let _3 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x40)\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    let _4 := and(var_account, sub(shl(160, 1), 1))\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _4)\n                    mstore(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x20, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _3)\n                    /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                    switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x40)), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xff))\n                    case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                        /// @src 0:6466:6478  \"return false\"\n                        var := /** @src 0:2954:2960  \"_roles\" */ _2\n                        /// @src 0:6466:6478  \"return false\"\n                        leave\n                    }\n                    default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                    {\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:332:350  \"keccak256(\\\"OWNER\\\")\" */ _1)\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _2)\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        let _5 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x40)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _4)\n                        mstore(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x20, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _5)\n                        let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x40)\n                        sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                        /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                        log4(/** @src 0:2954:2960  \"_roles\" */ _2, _2, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 8:332:350  \"keccak256(\\\"OWNER\\\")\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _4, /** @src 4:735:745  \"msg.sender\" */ caller())\n                        /// @src 0:6424:6435  \"return true\"\n                        var := /** @src 0:6347:6351  \"true\" */ 0x01\n                        /// @src 0:6424:6435  \"return true\"\n                        leave\n                    }\n                }\n                /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n                function fun_grantRole(var_account) -> var_\n                {\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    let _1 := 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n                    /// @src 0:2954:2960  \"_roles\"\n                    let _2 := 0x00\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ _1)\n                    mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _2)\n                    /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                    let _3 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x40)\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    let _4 := and(var_account, sub(shl(160, 1), 1))\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _4)\n                    mstore(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x20, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _3)\n                    /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                    switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x40)), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xff))\n                    case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                        /// @src 0:6466:6478  \"return false\"\n                        var_ := /** @src 0:2954:2960  \"_roles\" */ _2\n                        /// @src 0:6466:6478  \"return false\"\n                        leave\n                    }\n                    default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                    {\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ _1)\n                        mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _2)\n                        /// @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\"\n                        let _5 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x40)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _4)\n                        mstore(/** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x20, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _5)\n                        let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0x40)\n                        sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                        /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                        log4(/** @src 0:2954:2960  \"_roles\" */ _2, _2, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _4, /** @src 4:735:745  \"msg.sender\" */ caller())\n                        /// @src 0:6424:6435  \"return true\"\n                        var_ := /** @src 0:6347:6351  \"true\" */ 0x01\n                        /// @src 0:6424:6435  \"return true\"\n                        leave\n                    }\n                }\n                /// @ast-id 3769 @src 8:25281:25415  \"function _notZeroAddress(address _address) internal pure {...\"\n                function fun_notZeroAddress(var_address)\n                {\n                    /// @src 8:25348:25408  \"if (_address == address(0)) revert Errors.ZeroAddressError()\"\n                    if /** @src 8:25352:25374  \"_address == address(0)\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(/** @src 8:25352:25374  \"_address == address(0)\" */ var_address, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    /// @src 8:25348:25408  \"if (_address == address(0)) revert Errors.ZeroAddressError()\"\n                    {\n                        /// @src 8:25383:25408  \"Errors.ZeroAddressError()\"\n                        let _1 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:25383:25408  \"Errors.ZeroAddressError()\"\n                        mstore(_1, shl(224, 0x3efa09af))\n                        revert(_1, 4)\n                    }\n                }\n            }\n            /// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 5:\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\", 6:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 8:\"contracts/core/DappadSale.sol\"\n            object \"DappadSale_3854_deployed\" {\n                code {\n                    {\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _1 := memoryguard(0x80)\n                        mstore(64, _1)\n                        if iszero(lt(calldatasize(), 4))\n                        {\n                            let _2 := 224\n                            switch shr(_2, calldataload(0))\n                            case 0x002703a2 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                mstore(_1, and(sload(/** @src 8:543:580  \"IERC20Extented public investmentToken\" */ 34), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                                return(_1, 32)\n                            }\n                            case 0x01ffc9a7 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value := calldataload(4)\n                                let _3 := and(value, shl(224, 0xffffffff))\n                                if iszero(eq(value, _3)) { revert(0, 0) }\n                                /// @src 0:2673:2760  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                                let expr := /** @src 0:2673:2720  \"interfaceId == type(IAccessControl).interfaceId\" */ eq(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _3, /** @src 0:2688:2720  \"type(IAccessControl).interfaceId\" */ shl(224, 0x7965db0b))\n                                /// @src 0:2673:2760  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                                if iszero(expr)\n                                {\n                                    expr := /** @src 6:861:901  \"interfaceId == type(IERC165).interfaceId\" */ eq(_3, /** @src 6:876:901  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                                }\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let memPos := mload(64)\n                                mstore(memPos, iszero(iszero(expr)))\n                                return(memPos, 32)\n                            }\n                            case 0x054c9579 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let memPtr := mload(64)\n                                finalize_allocation_60549(memPtr)\n                                mstore(memPtr, calldataload(4))\n                                let _4 := add(memPtr, 32)\n                                mstore(_4, calldataload(36))\n                                /// @src 8:4738:4746  \"_address\"\n                                fun_onlyOwnerOrAdmin(/** @src 8:20635:20645  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _5 := mload(memPtr)\n                                sstore(/** @src 8:20672:20688  \"sale.fcfsDetails\" */ 11, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _5)\n                                sstore(12, mload(_4))\n                                /// @src 8:20721:20759  \"SaleFcfsDetailsUpdated(newFcfsDetails)\"\n                                let _6 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                mstore(_6, _5)\n                                mstore(add(_6, 32), mload(_4))\n                                /// @src 8:20721:20759  \"SaleFcfsDetailsUpdated(newFcfsDetails)\"\n                                log1(_6, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64, /** @src 8:20721:20759  \"SaleFcfsDetailsUpdated(newFcfsDetails)\" */ 0xec476120f20dc531dd7815bcb42de192695c3b96b5a351d5673d7173d81fc98b)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let memPos_1 := mload(64)\n                                mstore(memPos_1, 1)\n                                return(memPos_1, 32)\n                            }\n                            case 0x06c8e316 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let _7 := sload(/** @src 8:24196:24227  \"sale.saleDetails.saleTokenPrice\" */ 6)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let memPos_2 := mload(64)\n                                mstore(memPos_2, _7)\n                                return(memPos_2, 32)\n                            }\n                            case 0x0bbda0de {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 8:23405:23426  \"uint256 tierCount = 0\"\n                                let var_tierCount := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                /// @src 8:23437:23544  \"if (sale.saleAddresses.stakeControllerContractAddress == address(0)) {...\"\n                                if /** @src 8:23441:23504  \"sale.saleAddresses.stakeControllerContractAddress == address(0)\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:23441:23490  \"sale.saleAddresses.stakeControllerContractAddress\" */ 22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                                /// @src 8:23437:23544  \"if (sale.saleAddresses.stakeControllerContractAddress == address(0)) {...\"\n                                {\n                                    /// @src 8:23520:23533  \"tierCount = 1\"\n                                    var_tierCount := /** @src 8:23441:23445  \"sale\" */ 0x01\n                                }\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _8 := array_allocation_size_array_bytes32_dyn(var_tierCount)\n                                let memPtr_1 := mload(64)\n                                finalize_allocation(memPtr_1, _8)\n                                mstore(memPtr_1, var_tierCount)\n                                let dataSize := array_allocation_size_array_bytes32_dyn(var_tierCount)\n                                let _9 := 32\n                                let _10 := add(dataSize, not(31))\n                                let i := 0\n                                for { } lt(i, _10) { i := add(i, _9) }\n                                {\n                                    mstore(add(add(memPtr_1, i), _9), allocate_and_zero_memory_struct_struct_SaleTierDetails())\n                                }\n                                /// @src 8:23665:23678  \"uint256 i = 0\"\n                                let var_i := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                /// @src 8:23661:23757  \"for(uint256 i = 0; i < tierCount; i++) {...\"\n                                for { }\n                                /** @src 8:23680:23693  \"i < tierCount\" */ lt(var_i, var_tierCount)\n                                /// @src 8:23665:23678  \"uint256 i = 0\"\n                                {\n                                    /// @src 8:23695:23698  \"i++\"\n                                    var_i := increment_uint256(var_i)\n                                }\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(0, var_i)\n                                    mstore(_9, /** @src 8:23732:23743  \"tierDetails\" */ 0x26)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let dataSlot := keccak256(0, 64)\n                                    let memPtr_2 := mload(64)\n                                    finalize_allocation_60550(memPtr_2)\n                                    mstore(memPtr_2, sload(dataSlot))\n                                    mstore(add(memPtr_2, _9), sload(add(dataSlot, 1)))\n                                    mstore(add(memPtr_2, 64), sload(add(dataSlot, 2)))\n                                    mstore(add(memPtr_2, 96), sload(add(dataSlot, 3)))\n                                    mstore(add(memPtr_2, 128), sload(add(dataSlot, 4)))\n                                    mstore(add(memPtr_2, 160), sload(add(dataSlot, /** @src 8:23441:23490  \"sale.saleAddresses.stakeControllerContractAddress\" */ 5)))\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(add(memPtr_2, 192), sload(add(dataSlot, 6)))\n                                    /// @src 8:23714:23746  \"_tierDetails[i] = tierDetails[i]\"\n                                    mstore(memory_array_index_access_bytes32_dyn(memPtr_1, var_i), memPtr_2)\n                                    pop(memory_array_index_access_bytes32_dyn(memPtr_1, var_i))\n                                }\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let memPos_3 := mload(64)\n                                let tail := add(memPos_3, _9)\n                                mstore(memPos_3, _9)\n                                let pos := tail\n                                let length := mload(memPtr_1)\n                                mstore(tail, length)\n                                pos := add(memPos_3, 64)\n                                let srcPtr := add(memPtr_1, _9)\n                                let i_1 := 0\n                                for { } lt(i_1, length) { i_1 := add(i_1, 1) }\n                                {\n                                    abi_encode_struct_SaleTierDetails(mload(srcPtr), pos)\n                                    pos := add(pos, _2)\n                                    srcPtr := add(srcPtr, _9)\n                                }\n                                return(memPos_3, sub(pos, memPos_3))\n                            }\n                            case 0x117803e3 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPos_4 := mload(64)\n                                mstore(memPos_4, /** @src 8:332:350  \"keccak256(\\\"OWNER\\\")\" */ 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                return(memPos_4, 32)\n                            }\n                            case 0x248a9ca3 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, calldataload(4))\n                                mstore(32, 0)\n                                let _11 := sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), 1))\n                                let memPos_5 := mload(64)\n                                mstore(memPos_5, _11)\n                                return(memPos_5, 32)\n                            }\n                            case 0x2a0acc6a {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPos_6 := mload(64)\n                                mstore(memPos_6, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                return(memPos_6, 32)\n                            }\n                            case 0x2dee1fe8 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let cleaned := and(sload(/** @src 8:24610:24628  \"sale.saleAddresses\" */ 17), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))\n                                let memPos_7 := mload(64)\n                                mstore(memPos_7, cleaned)\n                                return(memPos_7, 32)\n                            }\n                            case 0x2ecad13f {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let _12 := sload(/** @src 8:24493:24517  \"sale.saleDetails.saleEnd\" */ 5)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let memPos_8 := mload(64)\n                                mstore(memPos_8, _12)\n                                return(memPos_8, 32)\n                            }\n                            case 0x2f2ff15d {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value_1 := calldataload(4)\n                                let value1 := abi_decode_address()\n                                mstore(0, value_1)\n                                mstore(32, 0)\n                                /// @src 0:2475:2479  \"role\"\n                                fun_checkRole(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), 1)))\n                                /// @src 0:4330:4355  \"_grantRole(role, account)\"\n                                pop(fun_grantRole(value_1, value1))\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                return(0, 0)\n                            }\n                            case 0x3411a8cb {\n                                if callvalue() { revert(0, 0) }\n                                let _13 := not(3)\n                                if slt(add(calldatasize(), _13), 32) { revert(0, 0) }\n                                let offset := calldataload(4)\n                                if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                                if slt(add(sub(calldatasize(), offset), _13), 0x0160) { revert(0, 0) }\n                                let memPtr_3 := mload(64)\n                                finalize_allocation_60552(memPtr_3)\n                                mstore(memPtr_3, calldataload(add(4, offset)))\n                                mstore(add(memPtr_3, 32), calldataload(add(offset, 36)))\n                                mstore(add(memPtr_3, 64), calldataload(add(offset, 68)))\n                                mstore(add(memPtr_3, 96), calldataload(add(offset, 100)))\n                                mstore(add(memPtr_3, 128), calldataload(add(offset, 132)))\n                                mstore(add(memPtr_3, 160), calldataload(add(offset, 164)))\n                                mstore(add(memPtr_3, 192), calldataload(add(offset, 196)))\n                                mstore(add(memPtr_3, _2), calldataload(add(offset, 228)))\n                                let _14 := abi_decode_bool(add(offset, 260))\n                                mstore(add(memPtr_3, 256), _14)\n                                let _15 := abi_decode_bool(add(offset, 292))\n                                mstore(add(memPtr_3, 288), _15)\n                                let offset_1 := calldataload(add(offset, 324))\n                                if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n                                if iszero(slt(add(add(offset, offset_1), 35), calldatasize())) { revert(0, 0) }\n                                if gt(calldataload(add(add(offset, offset_1), 4)), 0xffffffffffffffff)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 36)\n                                }\n                                let memPtr_4 := mload(64)\n                                finalize_allocation(memPtr_4, add(and(add(calldataload(add(add(offset, offset_1), 4)), 0x1f), not(31)), 32))\n                                mstore(memPtr_4, calldataload(add(add(offset, offset_1), 4)))\n                                if gt(add(add(add(offset, offset_1), calldataload(add(add(offset, offset_1), 4))), 36), calldatasize()) { revert(0, 0) }\n                                calldatacopy(add(memPtr_4, 32), add(add(offset, offset_1), 36), calldataload(add(add(offset, offset_1), 4)))\n                                mstore(add(add(memPtr_4, calldataload(add(add(offset, offset_1), 4))), 32), 0)\n                                mstore(add(memPtr_3, 320), memPtr_4)\n                                /// @src 8:4738:4746  \"_address\"\n                                fun_onlyOwnerOrAdmin(/** @src 8:20375:20385  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _16 := mload(memPtr_3)\n                                sstore(1, _16)\n                                sstore(2, mload(add(memPtr_3, 32)))\n                                sstore(3, mload(add(memPtr_3, 64)))\n                                sstore(4, mload(add(memPtr_3, 96)))\n                                sstore(5, mload(add(memPtr_3, 128)))\n                                sstore(6, mload(add(memPtr_3, 160)))\n                                sstore(7, mload(add(memPtr_3, 192)))\n                                sstore(8, mload(add(memPtr_3, _2)))\n                                let _17 := iszero(iszero(mload(add(memPtr_3, 256))))\n                                let value_2 := and(sload(9), not(255))\n                                sstore(9, or(value_2, and(_17, 255)))\n                                update_storage_value_offsett_bool_to_bool_60554(iszero(iszero(mload(add(memPtr_3, 288)))))\n                                let _18 := mload(add(memPtr_3, 320))\n                                let newLen := mload(_18)\n                                if gt(newLen, 0xffffffffffffffff)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 36)\n                                }\n                                let _19 := extract_byte_array_length(sload(10))\n                                if gt(_19, 0x1f)\n                                {\n                                    mstore(0, 10)\n                                    let _20 := 89717814153306320011181716697424560163256864414616650038987186496166826726056\n                                    let deleteStart := add(_20, shr(5, add(newLen, 0x1f)))\n                                    if lt(newLen, 32) { deleteStart := _20 }\n                                    let _21 := add(_20, shr(5, add(_19, 0x1f)))\n                                    let start := deleteStart\n                                    for { } lt(start, _21) { start := add(start, 1) }\n                                    { sstore(start, 0) }\n                                }\n                                let srcOffset := 0\n                                srcOffset := 32\n                                switch gt(newLen, 0x1f)\n                                case 1 {\n                                    let loopEnd := and(newLen, not(31))\n                                    mstore(0, 10)\n                                    let dstPtr := 89717814153306320011181716697424560163256864414616650038987186496166826726056\n                                    let i_2 := 0\n                                    for { } lt(i_2, loopEnd) { i_2 := add(i_2, 32) }\n                                    {\n                                        sstore(dstPtr, mload(add(_18, srcOffset)))\n                                        dstPtr := add(dstPtr, 1)\n                                        srcOffset := add(srcOffset, 32)\n                                    }\n                                    if lt(loopEnd, newLen)\n                                    {\n                                        let lastValue := mload(add(_18, srcOffset))\n                                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                                    }\n                                    sstore(10, add(shl(1, newLen), 1))\n                                }\n                                default {\n                                    let value_3 := 0\n                                    if newLen\n                                    {\n                                        value_3 := mload(add(_18, srcOffset))\n                                    }\n                                    sstore(10, or(and(value_3, not(shr(shl(3, newLen), not(0)))), shl(1, newLen)))\n                                }\n                                /// @src 8:20461:20495  \"SaleDetailsUpdated(newSaleDetails)\"\n                                let _22 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                mstore(_22, 32)\n                                /// @src 8:20461:20495  \"SaleDetailsUpdated(newSaleDetails)\"\n                                log1(_22, sub(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ abi_encode_struct_SaleDetails(memPtr_3, add(_22, 32)), /** @src 8:20461:20495  \"SaleDetailsUpdated(newSaleDetails)\" */ _22), 0xfa348fff774a07441f8c4502298c55e3957c7d499ed08a3efffea9a2e849d60d)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let memPos_9 := mload(64)\n                                mstore(memPos_9, 1)\n                                return(memPos_9, 32)\n                            }\n                            case 0x36568abe {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value1_1 := abi_decode_address()\n                                /// @src 0:5417:5519  \"if (callerConfirmation != _msgSender()) {...\"\n                                if /** @src 0:5421:5455  \"callerConfirmation != _msgSender()\" */ iszero(eq(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(/** @src 0:5421:5455  \"callerConfirmation != _msgSender()\" */ value1_1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 4:735:745  \"msg.sender\" */ caller()))\n                                /// @src 0:5417:5519  \"if (callerConfirmation != _msgSender()) {...\"\n                                {\n                                    /// @src 0:5478:5508  \"AccessControlBadConfirmation()\"\n                                    let _23 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 0:5478:5508  \"AccessControlBadConfirmation()\"\n                                    mstore(_23, shl(225, 0x334bd919))\n                                    revert(_23, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                /// @src 0:5529:5566  \"_revokeRole(role, callerConfirmation)\"\n                                pop(fun_revokeRole(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ calldataload(4), /** @src 0:5529:5566  \"_revokeRole(role, callerConfirmation)\" */ value1_1))\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                return(0, 0)\n                            }\n                            case 0x377d5d17 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 352) { revert(0, 0) }\n                                let memPtr_5 := mload(64)\n                                finalize_allocation_60552(memPtr_5)\n                                mstore(memPtr_5, abi_decode_address_60557())\n                                let _24 := abi_decode_address()\n                                mstore(add(memPtr_5, 32), _24)\n                                let value_4 := calldataload(68)\n                                if iszero(eq(value_4, and(value_4, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                mstore(add(memPtr_5, 64), value_4)\n                                let value_5 := calldataload(100)\n                                if iszero(eq(value_5, and(value_5, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                mstore(add(memPtr_5, 96), value_5)\n                                let value_6 := calldataload(132)\n                                if iszero(eq(value_6, and(value_6, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                mstore(add(memPtr_5, 128), value_6)\n                                let value_7 := calldataload(164)\n                                if iszero(eq(value_7, and(value_7, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                mstore(add(memPtr_5, 160), value_7)\n                                let value_8 := calldataload(196)\n                                if iszero(eq(value_8, and(value_8, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                mstore(add(memPtr_5, 192), value_8)\n                                let value_9 := calldataload(228)\n                                if iszero(eq(value_9, and(value_9, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                mstore(add(memPtr_5, _2), value_9)\n                                let value_10 := calldataload(260)\n                                if iszero(eq(value_10, and(value_10, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                mstore(add(memPtr_5, 256), value_10)\n                                let value_11 := calldataload(292)\n                                if iszero(eq(value_11, and(value_11, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                mstore(add(memPtr_5, 288), value_11)\n                                let value_12 := calldataload(324)\n                                if iszero(eq(value_12, and(value_12, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                mstore(add(memPtr_5, 320), value_12)\n                                /// @src 8:4738:4746  \"_address\"\n                                fun_onlyOwnerOrAdmin(/** @src 8:19413:19423  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _25 := and(mload(memPtr_5), sub(shl(160, 1), 1))\n                                sstore(/** @src 8:19450:19468  \"sale.saleAddresses\" */ 17, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ or(and(sload(/** @src 8:19450:19468  \"sale.saleAddresses\" */ 17), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(160, 0xffffffffffffffffffffffff)), _25))\n                                let cleaned_1 := and(mload(add(memPtr_5, 32)), sub(shl(160, 1), 1))\n                                sstore(18, or(and(sload(18), shl(160, 0xffffffffffffffffffffffff)), cleaned_1))\n                                let cleaned_2 := and(mload(add(memPtr_5, 64)), sub(shl(160, 1), 1))\n                                sstore(19, or(and(sload(19), shl(160, 0xffffffffffffffffffffffff)), cleaned_2))\n                                sstore(20, or(and(sload(20), shl(160, 0xffffffffffffffffffffffff)), and(mload(add(memPtr_5, 96)), sub(shl(160, 1), 1))))\n                                sstore(21, or(and(sload(21), shl(160, 0xffffffffffffffffffffffff)), and(mload(add(memPtr_5, 128)), sub(shl(160, 1), 1))))\n                                let cleaned_3 := and(mload(add(memPtr_5, 160)), sub(shl(160, 1), 1))\n                                update_storage_value_offsett_address_to_address_60573(cleaned_3)\n                                let cleaned_4 := and(mload(add(memPtr_5, 192)), sub(shl(160, 1), 1))\n                                update_storage_value_offsett_address_to_address(cleaned_4)\n                                sstore(24, or(and(sload(24), shl(160, 0xffffffffffffffffffffffff)), and(mload(add(memPtr_5, _2)), sub(shl(160, 1), 1))))\n                                sstore(25, or(and(sload(25), shl(160, 0xffffffffffffffffffffffff)), and(mload(add(memPtr_5, 256)), sub(shl(160, 1), 1))))\n                                sstore(26, or(and(sload(26), shl(160, 0xffffffffffffffffffffffff)), and(mload(add(memPtr_5, 288)), sub(shl(160, 1), 1))))\n                                sstore(27, or(and(sload(27), shl(160, 0xffffffffffffffffffffffff)), and(mload(add(memPtr_5, 320)), sub(shl(160, 1), 1))))\n                                /// @src 8:19498:19649  \"if (newSaleAddresses.registerTokenAddress != address(0)) {...\"\n                                if /** @src 8:19502:19553  \"newSaleAddresses.registerTokenAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ cleaned_1))\n                                /// @src 8:19498:19649  \"if (newSaleAddresses.registerTokenAddress != address(0)) {...\"\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    sstore(/** @src 8:19569:19638  \"registerToken = IERC20Extented(newSaleAddresses.registerTokenAddress)\" */ 0x21, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ or(and(sload(/** @src 8:19569:19638  \"registerToken = IERC20Extented(newSaleAddresses.registerTokenAddress)\" */ 0x21), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(160, 0xffffffffffffffffffffffff)), cleaned_1))\n                                }\n                                /// @src 8:19659:19816  \"if (newSaleAddresses.investmentTokenAddress != address(0)) {...\"\n                                if /** @src 8:19663:19716  \"newSaleAddresses.investmentTokenAddress != address(0)\" */ iszero(iszero(cleaned_2))\n                                /// @src 8:19659:19816  \"if (newSaleAddresses.investmentTokenAddress != address(0)) {...\"\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    sstore(/** @src 8:19732:19805  \"investmentToken = IERC20Extented(newSaleAddresses.investmentTokenAddress)\" */ 0x22, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ or(and(sload(/** @src 8:19732:19805  \"investmentToken = IERC20Extented(newSaleAddresses.investmentTokenAddress)\" */ 0x22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(160, 0xffffffffffffffffffffffff)), cleaned_2))\n                                }\n                                /// @src 8:19826:20015  \"if (newSaleAddresses.stakeControllerContractAddress != address(0)) {...\"\n                                if /** @src 8:19830:19891  \"newSaleAddresses.stakeControllerContractAddress != address(0)\" */ iszero(iszero(cleaned_3))\n                                /// @src 8:19826:20015  \"if (newSaleAddresses.stakeControllerContractAddress != address(0)) {...\"\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    sstore(/** @src 8:19907:20004  \"stakeControllerContract = IDappadStakeController(newSaleAddresses.stakeControllerContractAddress)\" */ 0x23, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ or(and(sload(/** @src 8:19907:20004  \"stakeControllerContract = IDappadStakeController(newSaleAddresses.stakeControllerContractAddress)\" */ 0x23), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(160, 0xffffffffffffffffffffffff)), cleaned_3))\n                                }\n                                /// @src 8:20033:20190  \"if (newSaleAddresses.vestingContractAddress != address(0)) {...\"\n                                if /** @src 8:20037:20090  \"newSaleAddresses.vestingContractAddress != address(0)\" */ iszero(iszero(cleaned_4))\n                                /// @src 8:20033:20190  \"if (newSaleAddresses.vestingContractAddress != address(0)) {...\"\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    sstore(36, or(and(sload(36), shl(160, 0xffffffffffffffffffffffff)), cleaned_4))\n                                }\n                                /// @src 8:20205:20243  \"SaleAddressesUpdated(newSaleAddresses)\"\n                                let _26 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                abi_encode_struct_SaleAddresses(memPtr_5, _26)\n                                /// @src 8:20205:20243  \"SaleAddressesUpdated(newSaleAddresses)\"\n                                log1(_26, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 352, /** @src 8:20205:20243  \"SaleAddressesUpdated(newSaleAddresses)\" */ 0xfb6b86a5ca0c935b98085b986b3fc02d706eaf315fd997ba94fd4e6937b3ae53)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let memPos_10 := mload(64)\n                                mstore(memPos_10, 1)\n                                return(memPos_10, 32)\n                            }\n                            case 0x3a5bbce7 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let memPtr_6 := mload(64)\n                                finalize_allocation_60549(memPtr_6)\n                                mstore(memPtr_6, calldataload(4))\n                                let value_13 := calldataload(36)\n                                if iszero(eq(value_13, iszero(iszero(value_13)))) { revert(0, 0) }\n                                let _27 := add(memPtr_6, 32)\n                                mstore(_27, value_13)\n                                /// @src 8:4738:4746  \"_address\"\n                                fun_onlyOwnerOrAdmin(/** @src 8:20901:20911  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                sstore(/** @src 8:20938:20956  \"sale.refundDetails\" */ 13, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(memPtr_6))\n                                let _28 := iszero(iszero(mload(_27)))\n                                let value_14 := and(sload(14), not(255))\n                                sstore(14, or(value_14, and(_28, 255)))\n                                /// @src 8:20991:21033  \"SaleRefundDetailsUpdated(newRefundDetails)\"\n                                let _29 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                abi_encode_struct_SaleRefundDetails(memPtr_6, _29)\n                                /// @src 8:20991:21033  \"SaleRefundDetailsUpdated(newRefundDetails)\"\n                                log1(_29, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64, /** @src 8:20991:21033  \"SaleRefundDetailsUpdated(newRefundDetails)\" */ 0x9dbcb1a73caf828a891c03055263e46b3201ed541142e594dec12b74a18ba277)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let memPos_11 := mload(64)\n                                mstore(memPos_11, 1)\n                                return(memPos_11, 32)\n                            }\n                            case 0x41c232c8 {\n                                if callvalue() { revert(0, 0) }\n                                let _30 := 256\n                                if slt(add(calldatasize(), not(3)), _30) { revert(0, 0) }\n                                let value_15 := calldataload(4)\n                                if slt(add(calldatasize(), not(35)), _2) { revert(0, 0) }\n                                let memPtr_7 := mload(64)\n                                finalize_allocation_60550(memPtr_7)\n                                mstore(memPtr_7, calldataload(36))\n                                let _31 := add(memPtr_7, 32)\n                                mstore(_31, calldataload(68))\n                                let _32 := add(memPtr_7, 64)\n                                mstore(_32, calldataload(100))\n                                let _33 := add(memPtr_7, 96)\n                                mstore(_33, calldataload(132))\n                                let _34 := add(memPtr_7, 128)\n                                mstore(_34, calldataload(164))\n                                let _35 := add(memPtr_7, 160)\n                                mstore(_35, calldataload(196))\n                                let _36 := add(memPtr_7, 192)\n                                mstore(_36, calldataload(228))\n                                /// @src 8:4738:4746  \"_address\"\n                                fun_onlyOwnerOrAdmin(/** @src 8:21462:21472  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(0, value_15)\n                                mstore(32, /** @src 8:21499:21510  \"tierDetails\" */ 0x26)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let dataSlot_1 := keccak256(0, 64)\n                                sstore(dataSlot_1, mload(memPtr_7))\n                                sstore(add(dataSlot_1, 1), mload(_31))\n                                sstore(add(dataSlot_1, 2), mload(_32))\n                                sstore(add(dataSlot_1, 3), mload(_33))\n                                sstore(add(dataSlot_1, 4), mload(_34))\n                                sstore(add(dataSlot_1, 5), mload(_35))\n                                sstore(add(dataSlot_1, 6), mload(_36))\n                                /// @src 8:21554:21603  \"SaleTierDetailsUpdated(tierIndex, newTierDetails)\"\n                                let _37 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                mstore(_37, value_15)\n                                abi_encode_struct_SaleTierDetails(memPtr_7, add(_37, 32))\n                                /// @src 8:21554:21603  \"SaleTierDetailsUpdated(tierIndex, newTierDetails)\"\n                                log1(_37, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _30, /** @src 8:21554:21603  \"SaleTierDetailsUpdated(tierIndex, newTierDetails)\" */ 0x6e66877fc4a645141938cfc2385e96980ee2dca47115fcff57563be8abd8dda1)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let memPos_12 := mload(64)\n                                mstore(memPos_12, 1)\n                                return(memPos_12, 32)\n                            }\n                            case 0x4d461ed1 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 8:4542:4550  \"_address\"\n                                fun_notZeroAddress(/** @src 8:15736:15746  \"msg.sender\" */ caller())\n                                /// @src 8:4738:4746  \"_address\"\n                                fun_onlyOwnerOrAdmin(/** @src 8:15736:15746  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _38 := sload(/** @src 8:15825:15849  \"sale.saleDetails.saleEnd\" */ 5)\n                                /// @src 8:15802:15884  \"if (block.timestamp <= sale.saleDetails.saleEnd) revert Errors.SaleNotEndedError()\"\n                                if /** @src 8:15806:15849  \"block.timestamp <= sale.saleDetails.saleEnd\" */ iszero(gt(/** @src 8:15806:15821  \"block.timestamp\" */ timestamp(), /** @src 8:15806:15849  \"block.timestamp <= sale.saleDetails.saleEnd\" */ _38))\n                                /// @src 8:15802:15884  \"if (block.timestamp <= sale.saleDetails.saleEnd) revert Errors.SaleNotEndedError()\"\n                                {\n                                    /// @src 8:15858:15884  \"Errors.SaleNotEndedError()\"\n                                    let _39 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:15858:15884  \"Errors.SaleNotEndedError()\"\n                                    mstore(_39, shl(224, 0x68a5e0cb))\n                                    revert(_39, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                let _40 := sub(shl(160, 1), 1)\n                                let cleaned_5 := and(sload(/** @src 8:15898:15913  \"investmentToken\" */ 0x22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _40)\n                                /// @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\"\n                                let _41 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                let _42 := shl(224, 0x70a08231)\n                                /// @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\"\n                                mstore(_41, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _42)\n                                mstore(/** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ add(_41, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:15932:15936  \"this\" */ address())\n                                /// @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\"\n                                let _43 := 32\n                                let _44 := staticcall(gas(), cleaned_5, _41, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36, /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _41, _43)\n                                if iszero(_44)\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let pos_1 := mload(64)\n                                    returndatacopy(pos_1, 0, returndatasize())\n                                    revert(pos_1, returndatasize())\n                                }\n                                /// @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\"\n                                let expr_1 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                /// @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\"\n                                if _44\n                                {\n                                    let _45 := _43\n                                    if gt(_43, returndatasize()) { _45 := returndatasize() }\n                                    finalize_allocation(_41, _45)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    if slt(sub(/** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ add(_41, _45), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _41), /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    { revert(0, 0) }\n                                    /// @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\"\n                                    expr_1 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_41)\n                                }\n                                /// @src 8:15894:15985  \"if (investmentToken.balanceOf(address(this)) == 0) revert Errors.InsufficientBalanceError()\"\n                                if /** @src 8:15898:15943  \"investmentToken.balanceOf(address(this)) == 0\" */ iszero(expr_1)\n                                /// @src 8:15894:15985  \"if (investmentToken.balanceOf(address(this)) == 0) revert Errors.InsufficientBalanceError()\"\n                                {\n                                    /// @src 8:15952:15985  \"Errors.InsufficientBalanceError()\"\n                                    let _46 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:15952:15985  \"Errors.InsufficientBalanceError()\"\n                                    mstore(_46, shl(224, 0x384d3c59))\n                                    revert(_46, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:15999:16114  \"sale.refundDetails.refundEnabled && block.timestamp <= sale.saleDetails.saleEnd + sale.refundDetails.refundDuration\"\n                                let expr_2 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:15999:16031  \"sale.refundDetails.refundEnabled\" */ 14), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xff)\n                                /// @src 8:15999:16114  \"sale.refundDetails.refundEnabled && block.timestamp <= sale.saleDetails.saleEnd + sale.refundDetails.refundDuration\"\n                                if expr_2\n                                {\n                                    expr_2 := /** @src 8:16035:16114  \"block.timestamp <= sale.saleDetails.saleEnd + sale.refundDetails.refundDuration\" */ iszero(gt(/** @src 8:15806:15821  \"block.timestamp\" */ timestamp(), /** @src 8:16054:16114  \"sale.saleDetails.saleEnd + sale.refundDetails.refundDuration\" */ checked_add_uint256(_38, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:15999:16017  \"sale.refundDetails\" */ 13))))\n                                }\n                                /// @src 8:15995:16153  \"if (sale.refundDetails.refundEnabled && block.timestamp <= sale.saleDetails.saleEnd + sale.refundDetails.refundDuration) revert Errors.RefundPeriodOverError()\"\n                                if expr_2\n                                {\n                                    /// @src 8:16123:16153  \"Errors.RefundPeriodOverError()\"\n                                    let _47 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:16123:16153  \"Errors.RefundPeriodOverError()\"\n                                    mstore(_47, shl(224, 0xe7985113))\n                                    revert(_47, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:16182:16222  \"investmentToken.balanceOf(address(this))\"\n                                let _48 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:16182:16222  \"investmentToken.balanceOf(address(this))\"\n                                mstore(_48, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _42)\n                                mstore(/** @src 8:16182:16222  \"investmentToken.balanceOf(address(this))\" */ add(_48, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:15932:15936  \"this\" */ address())\n                                /// @src 8:16182:16222  \"investmentToken.balanceOf(address(this))\"\n                                let _49 := staticcall(gas(), cleaned_5, _48, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36, /** @src 8:16182:16222  \"investmentToken.balanceOf(address(this))\" */ _48, /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43)\n                                /// @src 8:16182:16222  \"investmentToken.balanceOf(address(this))\"\n                                if iszero(_49)\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let pos_2 := mload(64)\n                                    returndatacopy(pos_2, 0, returndatasize())\n                                    revert(pos_2, returndatasize())\n                                }\n                                /// @src 8:16182:16222  \"investmentToken.balanceOf(address(this))\"\n                                let expr_3 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                /// @src 8:16182:16222  \"investmentToken.balanceOf(address(this))\"\n                                if _49\n                                {\n                                    let _50 := /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43\n                                    /// @src 8:16182:16222  \"investmentToken.balanceOf(address(this))\"\n                                    if gt(/** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43, /** @src 8:16182:16222  \"investmentToken.balanceOf(address(this))\" */ returndatasize()) { _50 := returndatasize() }\n                                    finalize_allocation(_48, _50)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    if slt(sub(/** @src 8:16182:16222  \"investmentToken.balanceOf(address(this))\" */ add(_48, _50), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _48), /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    { revert(0, 0) }\n                                    /// @src 8:16182:16222  \"investmentToken.balanceOf(address(this))\"\n                                    expr_3 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_48)\n                                }\n                                let r := div(/** @src 8:16265:16317  \"balance * sale.saleDetails.projectOwnerFeePercentage\" */ checked_mul_uint256(expr_3, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:16275:16317  \"sale.saleDetails.projectOwnerFeePercentage\" */ 8)), /** @src 8:16321:16326  \"10000\" */ 0x2710)\n                                /// @src 8:16365:16396  \"balance - projectOwnerFeeAmount\"\n                                let expr_4 := checked_sub_uint256(expr_3, r)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let cleaned_6 := and(sload(/** @src 8:16462:16503  \"sale.saleAddresses.projectOwnerFeeAddress\" */ 27), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _40)\n                                /// @src 8:16437:16527  \"investmentToken.transfer(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount)\"\n                                let _51 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                let _52 := shl(224, 0xa9059cbb)\n                                /// @src 8:16437:16527  \"investmentToken.transfer(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount)\"\n                                mstore(_51, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _52)\n                                /// @src 8:16437:16527  \"investmentToken.transfer(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount)\"\n                                let _53 := call(gas(), cleaned_5, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0, /** @src 8:16437:16527  \"investmentToken.transfer(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount)\" */ _51, sub(abi_encode_address_uint256(add(_51, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:16437:16527  \"investmentToken.transfer(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount)\" */ cleaned_6, r), _51), _51, /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43)\n                                /// @src 8:16437:16527  \"investmentToken.transfer(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount)\"\n                                if iszero(_53)\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let pos_3 := mload(64)\n                                    returndatacopy(pos_3, 0, returndatasize())\n                                    revert(pos_3, returndatasize())\n                                }\n                                /// @src 8:16437:16527  \"investmentToken.transfer(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount)\"\n                                let expr_5 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                /// @src 8:16437:16527  \"investmentToken.transfer(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount)\"\n                                if _53\n                                {\n                                    let _54 := /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43\n                                    /// @src 8:16437:16527  \"investmentToken.transfer(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount)\"\n                                    if gt(/** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43, /** @src 8:16437:16527  \"investmentToken.transfer(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount)\" */ returndatasize()) { _54 := returndatasize() }\n                                    finalize_allocation(_51, _54)\n                                    expr_5 := abi_decode_bool_fromMemory(_51, add(_51, _54))\n                                }\n                                /// @src 8:16537:16606  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                                if /** @src 8:16541:16564  \"!successfullyTransfered\" */ iszero(expr_5)\n                                /// @src 8:16537:16606  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                                {\n                                    /// @src 8:16573:16606  \"Errors.TokenTransferFailedError()\"\n                                    let _55 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:16573:16606  \"Errors.TokenTransferFailedError()\"\n                                    mstore(_55, shl(224, 0xf83e23f5))\n                                    revert(_55, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                let cleaned_7 := and(sload(/** @src 8:15898:15913  \"investmentToken\" */ 0x22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _40)\n                                let cleaned_8 := and(sload(/** @src 8:16678:16716  \"sale.saleAddresses.launchpadFeeAddress\" */ 26), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _40)\n                                /// @src 8:16653:16737  \"investmentToken.transfer(sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount)\"\n                                let _56 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:16653:16737  \"investmentToken.transfer(sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount)\"\n                                mstore(_56, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _52)\n                                /// @src 8:16653:16737  \"investmentToken.transfer(sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount)\"\n                                let _57 := call(gas(), cleaned_7, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0, /** @src 8:16653:16737  \"investmentToken.transfer(sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount)\" */ _56, sub(abi_encode_address_uint256(add(_56, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:16653:16737  \"investmentToken.transfer(sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount)\" */ cleaned_8, expr_4), _56), _56, /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43)\n                                /// @src 8:16653:16737  \"investmentToken.transfer(sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount)\"\n                                if iszero(_57)\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let pos_4 := mload(64)\n                                    returndatacopy(pos_4, 0, returndatasize())\n                                    revert(pos_4, returndatasize())\n                                }\n                                /// @src 8:16653:16737  \"investmentToken.transfer(sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount)\"\n                                let expr_6 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                /// @src 8:16653:16737  \"investmentToken.transfer(sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount)\"\n                                if _57\n                                {\n                                    let _58 := /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43\n                                    /// @src 8:16653:16737  \"investmentToken.transfer(sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount)\"\n                                    if gt(/** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43, /** @src 8:16653:16737  \"investmentToken.transfer(sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount)\" */ returndatasize()) { _58 := returndatasize() }\n                                    finalize_allocation(_56, _58)\n                                    expr_6 := abi_decode_bool_fromMemory(_56, add(_56, _58))\n                                }\n                                /// @src 8:16747:16822  \"if (!successfullyTransferedSecond) revert Errors.TokenTransferFailedError()\"\n                                if /** @src 8:16751:16780  \"!successfullyTransferedSecond\" */ iszero(expr_6)\n                                /// @src 8:16747:16822  \"if (!successfullyTransferedSecond) revert Errors.TokenTransferFailedError()\"\n                                {\n                                    /// @src 8:16789:16822  \"Errors.TokenTransferFailedError()\"\n                                    let _59 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:16789:16822  \"Errors.TokenTransferFailedError()\"\n                                    mstore(_59, /** @src 8:16573:16606  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                                    /// @src 8:16789:16822  \"Errors.TokenTransferFailedError()\"\n                                    revert(_59, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:16837:16936  \"sale.saleAddresses.registerTokenAddress != address(0) && registerToken.balanceOf(address(this)) > 0\"\n                                let expr_7 := /** @src 8:16837:16890  \"sale.saleAddresses.registerTokenAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:16837:16876  \"sale.saleAddresses.registerTokenAddress\" */ 18), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _40)))\n                                /// @src 8:16837:16936  \"sale.saleAddresses.registerTokenAddress != address(0) && registerToken.balanceOf(address(this)) > 0\"\n                                if expr_7\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let cleaned_9 := and(sload(/** @src 8:16894:16907  \"registerToken\" */ 0x21), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _40)\n                                    /// @src 8:16894:16932  \"registerToken.balanceOf(address(this))\"\n                                    let _60 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:16894:16932  \"registerToken.balanceOf(address(this))\"\n                                    mstore(_60, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _42)\n                                    mstore(/** @src 8:16894:16932  \"registerToken.balanceOf(address(this))\" */ add(_60, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:15932:15936  \"this\" */ address())\n                                    /// @src 8:16894:16932  \"registerToken.balanceOf(address(this))\"\n                                    let _61 := staticcall(gas(), cleaned_9, _60, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36, /** @src 8:16894:16932  \"registerToken.balanceOf(address(this))\" */ _60, /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43)\n                                    /// @src 8:16894:16932  \"registerToken.balanceOf(address(this))\"\n                                    if iszero(_61)\n                                    {\n                                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                        let pos_5 := mload(64)\n                                        returndatacopy(pos_5, 0, returndatasize())\n                                        revert(pos_5, returndatasize())\n                                    }\n                                    /// @src 8:16894:16932  \"registerToken.balanceOf(address(this))\"\n                                    let expr_8 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                    /// @src 8:16894:16932  \"registerToken.balanceOf(address(this))\"\n                                    if _61\n                                    {\n                                        let _62 := /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43\n                                        /// @src 8:16894:16932  \"registerToken.balanceOf(address(this))\"\n                                        if gt(/** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43, /** @src 8:16894:16932  \"registerToken.balanceOf(address(this))\" */ returndatasize()) { _62 := returndatasize() }\n                                        finalize_allocation(_60, _62)\n                                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                        if slt(sub(/** @src 8:16894:16932  \"registerToken.balanceOf(address(this))\" */ add(_60, _62), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _60), /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43)\n                                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                        { revert(0, 0) }\n                                        /// @src 8:16894:16932  \"registerToken.balanceOf(address(this))\"\n                                        expr_8 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_60)\n                                    }\n                                    /// @src 8:16837:16936  \"sale.saleAddresses.registerTokenAddress != address(0) && registerToken.balanceOf(address(this)) > 0\"\n                                    expr_7 := /** @src 8:16894:16936  \"registerToken.balanceOf(address(this)) > 0\" */ iszero(iszero(expr_8))\n                                }\n                                /// @src 8:16833:17188  \"if (sale.saleAddresses.registerTokenAddress != address(0) && registerToken.balanceOf(address(this)) > 0) {...\"\n                                if expr_7\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let cleaned_10 := and(sload(/** @src 8:16987:17000  \"registerToken\" */ 0x21), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _40)\n                                    let cleaned_11 := and(sload(/** @src 8:16678:16716  \"sale.saleAddresses.launchpadFeeAddress\" */ 26), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _40)\n                                    /// @src 8:17050:17088  \"registerToken.balanceOf(address(this))\"\n                                    let _63 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:17050:17088  \"registerToken.balanceOf(address(this))\"\n                                    mstore(_63, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _42)\n                                    mstore(/** @src 8:17050:17088  \"registerToken.balanceOf(address(this))\" */ add(_63, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:15932:15936  \"this\" */ address())\n                                    /// @src 8:17050:17088  \"registerToken.balanceOf(address(this))\"\n                                    let _64 := staticcall(gas(), cleaned_10, _63, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36, /** @src 8:17050:17088  \"registerToken.balanceOf(address(this))\" */ _63, /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43)\n                                    /// @src 8:17050:17088  \"registerToken.balanceOf(address(this))\"\n                                    if iszero(_64)\n                                    {\n                                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                        let pos_6 := mload(64)\n                                        returndatacopy(pos_6, 0, returndatasize())\n                                        revert(pos_6, returndatasize())\n                                    }\n                                    /// @src 8:17050:17088  \"registerToken.balanceOf(address(this))\"\n                                    let expr_9 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                    /// @src 8:17050:17088  \"registerToken.balanceOf(address(this))\"\n                                    if _64\n                                    {\n                                        let _65 := /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43\n                                        /// @src 8:17050:17088  \"registerToken.balanceOf(address(this))\"\n                                        if gt(/** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43, /** @src 8:17050:17088  \"registerToken.balanceOf(address(this))\" */ returndatasize()) { _65 := returndatasize() }\n                                        finalize_allocation(_63, _65)\n                                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                        if slt(sub(/** @src 8:17050:17088  \"registerToken.balanceOf(address(this))\" */ add(_63, _65), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _63), /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43)\n                                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                        { revert(0, 0) }\n                                        /// @src 8:17050:17088  \"registerToken.balanceOf(address(this))\"\n                                        expr_9 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_63)\n                                    }\n                                    /// @src 8:16987:17089  \"registerToken.transfer(sale.saleAddresses.launchpadFeeAddress, registerToken.balanceOf(address(this)))\"\n                                    let _66 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:16987:17089  \"registerToken.transfer(sale.saleAddresses.launchpadFeeAddress, registerToken.balanceOf(address(this)))\"\n                                    mstore(_66, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _52)\n                                    /// @src 8:16987:17089  \"registerToken.transfer(sale.saleAddresses.launchpadFeeAddress, registerToken.balanceOf(address(this)))\"\n                                    let _67 := call(gas(), cleaned_10, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0, /** @src 8:16987:17089  \"registerToken.transfer(sale.saleAddresses.launchpadFeeAddress, registerToken.balanceOf(address(this)))\" */ _66, sub(abi_encode_address_uint256(add(_66, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:16987:17089  \"registerToken.transfer(sale.saleAddresses.launchpadFeeAddress, registerToken.balanceOf(address(this)))\" */ cleaned_11, expr_9), _66), _66, /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43)\n                                    /// @src 8:16987:17089  \"registerToken.transfer(sale.saleAddresses.launchpadFeeAddress, registerToken.balanceOf(address(this)))\"\n                                    if iszero(_67)\n                                    {\n                                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                        let pos_7 := mload(64)\n                                        returndatacopy(pos_7, 0, returndatasize())\n                                        revert(pos_7, returndatasize())\n                                    }\n                                    /// @src 8:16987:17089  \"registerToken.transfer(sale.saleAddresses.launchpadFeeAddress, registerToken.balanceOf(address(this)))\"\n                                    let expr_10 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                    /// @src 8:16987:17089  \"registerToken.transfer(sale.saleAddresses.launchpadFeeAddress, registerToken.balanceOf(address(this)))\"\n                                    if _67\n                                    {\n                                        let _68 := /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43\n                                        /// @src 8:16987:17089  \"registerToken.transfer(sale.saleAddresses.launchpadFeeAddress, registerToken.balanceOf(address(this)))\"\n                                        if gt(/** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43, /** @src 8:16987:17089  \"registerToken.transfer(sale.saleAddresses.launchpadFeeAddress, registerToken.balanceOf(address(this)))\" */ returndatasize()) { _68 := returndatasize() }\n                                        finalize_allocation(_66, _68)\n                                        expr_10 := abi_decode_bool_fromMemory(_66, add(_66, _68))\n                                    }\n                                    /// @src 8:17103:17177  \"if (!successfullyTransferedThird) revert Errors.TokenTransferFailedError()\"\n                                    if /** @src 8:17107:17135  \"!successfullyTransferedThird\" */ iszero(expr_10)\n                                    /// @src 8:17103:17177  \"if (!successfullyTransferedThird) revert Errors.TokenTransferFailedError()\"\n                                    {\n                                        /// @src 8:17144:17177  \"Errors.TokenTransferFailedError()\"\n                                        let _69 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                        /// @src 8:17144:17177  \"Errors.TokenTransferFailedError()\"\n                                        mstore(_69, /** @src 8:16573:16606  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                                        /// @src 8:17144:17177  \"Errors.TokenTransferFailedError()\"\n                                        revert(_69, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                    }\n                                }\n                                let cleaned_12 := and(sload(/** @src 8:16462:16503  \"sale.saleAddresses.projectOwnerFeeAddress\" */ 27), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _40)\n                                let cleaned_13 := and(sload(/** @src 8:16678:16716  \"sale.saleAddresses.launchpadFeeAddress\" */ 26), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _40)\n                                /// @src 8:17203:17359  \"SaleCompleted(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount, sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount, block.timestamp)\"\n                                let _70 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                mstore(_70, cleaned_12)\n                                mstore(add(_70, /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ r)\n                                mstore(add(_70, 64), cleaned_13)\n                                mstore(add(_70, 96), expr_4)\n                                mstore(add(_70, 128), /** @src 8:15806:15821  \"block.timestamp\" */ timestamp())\n                                /// @src 8:17203:17359  \"SaleCompleted(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount, sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount, block.timestamp)\"\n                                log1(_70, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 160, /** @src 8:17203:17359  \"SaleCompleted(sale.saleAddresses.projectOwnerFeeAddress, projectOwnerFeeAmount, sale.saleAddresses.launchpadFeeAddress, launchpadFeeAmount, block.timestamp)\" */ 0x3165c1ba6101043d0a0f1e26962850bd292ded36bda350ca2044afb9fbfe2fc8)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let memPos_13 := mload(64)\n                                mstore(memPos_13, /** @src 8:15825:15829  \"sale\" */ 0x01)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                return(memPos_13, /** @src 8:15898:15938  \"investmentToken.balanceOf(address(this))\" */ _43)\n                            }\n                            case /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x4d4fc99e {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let value_16 := and(sload(/** @src 8:586:639  \"IDappadStakeController public stakeControllerContract\" */ 35), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))\n                                let memPos_14 := mload(64)\n                                mstore(memPos_14, value_16)\n                                return(memPos_14, 32)\n                            }\n                            case 0x590e1ae3 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 8:4542:4550  \"_address\"\n                                fun_notZeroAddress(/** @src 8:14031:14041  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(0, /** @src 8:14031:14041  \"msg.sender\" */ caller())\n                                /// @src 8:14072:14089  \"investmentAmounts\"\n                                let _71 := 0x28\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _72 := 0x20\n                                mstore(_72, /** @src 8:14072:14089  \"investmentAmounts\" */ _71)\n                                /// @src 8:14068:14142  \"if (investmentAmounts[msg.sender] == 0) revert Errors.NotJoinedSaleError()\"\n                                if /** @src 8:14072:14106  \"investmentAmounts[msg.sender] == 0\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(keccak256(0, 64)))\n                                /// @src 8:14068:14142  \"if (investmentAmounts[msg.sender] == 0) revert Errors.NotJoinedSaleError()\"\n                                {\n                                    /// @src 8:14115:14142  \"Errors.NotJoinedSaleError()\"\n                                    let _73 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:14115:14142  \"Errors.NotJoinedSaleError()\"\n                                    mstore(_73, shl(224, 0x2f0e159d))\n                                    revert(_73, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                let _74 := sub(shl(160, 1), 1)\n                                let cleaned_14 := and(sload(/** @src 8:14156:14171  \"vestingContract\" */ 0x24), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _74)\n                                /// @src 8:14156:14204  \"vestingContract.getAnyVestingClaimed(msg.sender)\"\n                                let _75 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:14156:14204  \"vestingContract.getAnyVestingClaimed(msg.sender)\"\n                                mstore(_75, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(225, 0x3c35a22b))\n                                mstore(/** @src 8:14156:14204  \"vestingContract.getAnyVestingClaimed(msg.sender)\" */ add(_75, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:14031:14041  \"msg.sender\" */ caller())\n                                /// @src 8:14156:14204  \"vestingContract.getAnyVestingClaimed(msg.sender)\"\n                                let _76 := staticcall(gas(), cleaned_14, _75, /** @src 8:14156:14171  \"vestingContract\" */ 0x24, /** @src 8:14156:14204  \"vestingContract.getAnyVestingClaimed(msg.sender)\" */ _75, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _72)\n                                /// @src 8:14156:14204  \"vestingContract.getAnyVestingClaimed(msg.sender)\"\n                                if iszero(_76)\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let pos_8 := mload(64)\n                                    returndatacopy(pos_8, 0, returndatasize())\n                                    revert(pos_8, returndatasize())\n                                }\n                                /// @src 8:14156:14204  \"vestingContract.getAnyVestingClaimed(msg.sender)\"\n                                let expr_11 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                /// @src 8:14156:14204  \"vestingContract.getAnyVestingClaimed(msg.sender)\"\n                                if _76\n                                {\n                                    let _77 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _72\n                                    /// @src 8:14156:14204  \"vestingContract.getAnyVestingClaimed(msg.sender)\"\n                                    if gt(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _72, /** @src 8:14156:14204  \"vestingContract.getAnyVestingClaimed(msg.sender)\" */ returndatasize()) { _77 := returndatasize() }\n                                    finalize_allocation(_75, _77)\n                                    expr_11 := abi_decode_bool_fromMemory(_75, add(_75, _77))\n                                }\n                                /// @src 8:14152:14253  \"if (vestingContract.getAnyVestingClaimed(msg.sender)) revert Errors.FirstVestingAlreadyClaimedError()\"\n                                if expr_11\n                                {\n                                    /// @src 8:14213:14253  \"Errors.FirstVestingAlreadyClaimedError()\"\n                                    let _78 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:14213:14253  \"Errors.FirstVestingAlreadyClaimedError()\"\n                                    mstore(_78, shl(224, 0x766bbb51))\n                                    revert(_78, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                let _79 := sload(/** @src 8:14286:14310  \"sale.saleDetails.saleEnd\" */ 5)\n                                /// @src 8:14267:14310  \"block.timestamp <= sale.saleDetails.saleEnd\"\n                                let _80 := gt(/** @src 8:14267:14282  \"block.timestamp\" */ timestamp(), /** @src 8:14267:14310  \"block.timestamp <= sale.saleDetails.saleEnd\" */ _79)\n                                /// @src 8:14263:14345  \"if (block.timestamp <= sale.saleDetails.saleEnd) revert Errors.SaleNotEndedError()\"\n                                if /** @src 8:14267:14310  \"block.timestamp <= sale.saleDetails.saleEnd\" */ iszero(_80)\n                                /// @src 8:14263:14345  \"if (block.timestamp <= sale.saleDetails.saleEnd) revert Errors.SaleNotEndedError()\"\n                                {\n                                    /// @src 8:14319:14345  \"Errors.SaleNotEndedError()\"\n                                    let _81 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:14319:14345  \"Errors.SaleNotEndedError()\"\n                                    mstore(_81, /** @src 8:15858:15884  \"Errors.SaleNotEndedError()\" */ shl(224, 0x68a5e0cb))\n                                    /// @src 8:14319:14345  \"Errors.SaleNotEndedError()\"\n                                    revert(_81, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:14355:14431  \"if (!sale.refundDetails.refundEnabled) revert Errors.RefundNotEnabledError()\"\n                                if /** @src 8:14359:14392  \"!sale.refundDetails.refundEnabled\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:14360:14392  \"sale.refundDetails.refundEnabled\" */ 14), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xff))\n                                /// @src 8:14355:14431  \"if (!sale.refundDetails.refundEnabled) revert Errors.RefundNotEnabledError()\"\n                                {\n                                    /// @src 8:14401:14431  \"Errors.RefundNotEnabledError()\"\n                                    let _82 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:14401:14431  \"Errors.RefundNotEnabledError()\"\n                                    mstore(_82, shl(225, 0x46c7e783))\n                                    revert(_82, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:14447:14572  \"block.timestamp > sale.saleDetails.saleEnd && block.timestamp <= sale.saleDetails.saleEnd + sale.refundDetails.refundDuration\"\n                                let expr_12 := _80\n                                if _80\n                                {\n                                    expr_12 := /** @src 8:14493:14572  \"block.timestamp <= sale.saleDetails.saleEnd + sale.refundDetails.refundDuration\" */ iszero(gt(/** @src 8:14267:14282  \"block.timestamp\" */ timestamp(), /** @src 8:14512:14572  \"sale.saleDetails.saleEnd + sale.refundDetails.refundDuration\" */ checked_add_uint256(_79, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:14360:14378  \"sale.refundDetails\" */ 13))))\n                                }\n                                /// @src 8:14441:14612  \"if (!(block.timestamp > sale.saleDetails.saleEnd && block.timestamp <= sale.saleDetails.saleEnd + sale.refundDetails.refundDuration)) revert Errors.RefundPeriodOverError()\"\n                                if /** @src 8:14445:14573  \"!(block.timestamp > sale.saleDetails.saleEnd && block.timestamp <= sale.saleDetails.saleEnd + sale.refundDetails.refundDuration)\" */ iszero(expr_12)\n                                /// @src 8:14441:14612  \"if (!(block.timestamp > sale.saleDetails.saleEnd && block.timestamp <= sale.saleDetails.saleEnd + sale.refundDetails.refundDuration)) revert Errors.RefundPeriodOverError()\"\n                                {\n                                    /// @src 8:14582:14612  \"Errors.RefundPeriodOverError()\"\n                                    let _83 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:14582:14612  \"Errors.RefundPeriodOverError()\"\n                                    mstore(_83, /** @src 8:16123:16153  \"Errors.RefundPeriodOverError()\" */ shl(224, 0xe7985113))\n                                    /// @src 8:14582:14612  \"Errors.RefundPeriodOverError()\"\n                                    revert(_83, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                mstore(0, /** @src 8:14031:14041  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(_72, /** @src 8:14626:14634  \"refunded\" */ 0x27)\n                                /// @src 8:14622:14684  \"if (refunded[msg.sender]) revert Errors.AlreadyRefundedError()\"\n                                if /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(keccak256(0, 64)), 0xff)\n                                /// @src 8:14622:14684  \"if (refunded[msg.sender]) revert Errors.AlreadyRefundedError()\"\n                                {\n                                    /// @src 8:14655:14684  \"Errors.AlreadyRefundedError()\"\n                                    let _84 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:14655:14684  \"Errors.AlreadyRefundedError()\"\n                                    mstore(_84, shl(226, 0x2321792f))\n                                    revert(_84, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:14695:14851  \"if (sale.saleAddresses.nftContractAddress != address(0)) {...\"\n                                if /** @src 8:14699:14750  \"sale.saleAddresses.nftContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:14699:14736  \"sale.saleAddresses.nftContractAddress\" */ 21), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _74)))\n                                /// @src 8:14695:14851  \"if (sale.saleAddresses.nftContractAddress != address(0)) {...\"\n                                {\n                                    /// @src 8:4542:4550  \"_address\"\n                                    fun_notZeroAddress(/** @src 8:14031:14041  \"msg.sender\" */ caller())\n                                    /// @src 8:14766:14840  \"if (_getUserNftBalance(msg.sender) == 0) revert Errors.UserHasNoNFTError()\"\n                                    if /** @src 8:14770:14805  \"_getUserNftBalance(msg.sender) == 0\" */ iszero(/** @src 8:24954:25275  \"function _getUserNftBalance(address userAddress) internal view notZeroAddress(userAddress) returns (uint256) {...\" */ fun_getUserNftBalance_inner())\n                                    /// @src 8:14766:14840  \"if (_getUserNftBalance(msg.sender) == 0) revert Errors.UserHasNoNFTError()\"\n                                    {\n                                        /// @src 8:14814:14840  \"Errors.UserHasNoNFTError()\"\n                                        let _85 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                        /// @src 8:14814:14840  \"Errors.UserHasNoNFTError()\"\n                                        mstore(_85, shl(225, 0x049a4b73))\n                                        revert(_85, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                    }\n                                }\n                                mstore(0, /** @src 8:14031:14041  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(_72, /** @src 8:14885:14900  \"registerDetails\" */ 0x25)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _86 := sload(/** @src 8:14885:14922  \"registerDetails[msg.sender].tierIndex\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), /** @src 8:14286:14290  \"sale\" */ 0x01))\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(_72, /** @src 8:14072:14089  \"investmentAmounts\" */ _71)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                sstore(/** @src 8:14933:14947  \"saleStatistics\" */ 0x1c, /** @src 8:14933:15002  \"saleStatistics.totalInvestmentAmount -= investmentAmounts[msg.sender]\" */ checked_sub_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:14933:14947  \"saleStatistics\" */ 0x1c), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(keccak256(0, 64))))\n                                mstore(0, /** @src 8:14031:14041  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(_72, /** @src 8:14072:14089  \"investmentAmounts\" */ _71)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                sstore(keccak256(0, 64), 0)\n                                mstore(_72, /** @src 8:14626:14634  \"refunded\" */ 0x27)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let dataSlot_2 := keccak256(0, 64)\n                                sstore(dataSlot_2, or(and(sload(dataSlot_2), not(255)), /** @src 8:14286:14290  \"sale\" */ 0x01))\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let cleaned_15 := and(sload(/** @src 8:15191:15206  \"investmentToken\" */ 0x22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _74)\n                                /// @src 8:15191:15231  \"investmentToken.balanceOf(address(this))\"\n                                let _87 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:15191:15231  \"investmentToken.balanceOf(address(this))\"\n                                mstore(_87, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x70a08231))\n                                mstore(/** @src 8:15191:15231  \"investmentToken.balanceOf(address(this))\" */ add(_87, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:15225:15229  \"this\" */ address())\n                                /// @src 8:15191:15231  \"investmentToken.balanceOf(address(this))\"\n                                let _88 := staticcall(gas(), cleaned_15, _87, /** @src 8:14156:14171  \"vestingContract\" */ 0x24, /** @src 8:15191:15231  \"investmentToken.balanceOf(address(this))\" */ _87, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _72)\n                                /// @src 8:15191:15231  \"investmentToken.balanceOf(address(this))\"\n                                if iszero(_88)\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let pos_9 := mload(64)\n                                    returndatacopy(pos_9, 0, returndatasize())\n                                    revert(pos_9, returndatasize())\n                                }\n                                /// @src 8:15191:15231  \"investmentToken.balanceOf(address(this))\"\n                                let expr_13 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                /// @src 8:15191:15231  \"investmentToken.balanceOf(address(this))\"\n                                if _88\n                                {\n                                    let _89 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _72\n                                    /// @src 8:15191:15231  \"investmentToken.balanceOf(address(this))\"\n                                    if gt(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _72, /** @src 8:15191:15231  \"investmentToken.balanceOf(address(this))\" */ returndatasize()) { _89 := returndatasize() }\n                                    finalize_allocation(_87, _89)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    if slt(sub(/** @src 8:15191:15231  \"investmentToken.balanceOf(address(this))\" */ add(_87, _89), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _87), _72) { revert(0, 0) }\n                                    /// @src 8:15191:15231  \"investmentToken.balanceOf(address(this))\"\n                                    expr_13 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_87)\n                                }\n                                mstore(0, /** @src 8:14031:14041  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(_72, /** @src 8:14072:14089  \"investmentAmounts\" */ _71)\n                                /// @src 8:15187:15313  \"if (investmentToken.balanceOf(address(this)) < investmentAmounts[msg.sender]) revert Errors.InsufficientContractBalanceError()\"\n                                if /** @src 8:15191:15263  \"investmentToken.balanceOf(address(this)) < investmentAmounts[msg.sender]\" */ lt(expr_13, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(keccak256(0, 64)))\n                                /// @src 8:15187:15313  \"if (investmentToken.balanceOf(address(this)) < investmentAmounts[msg.sender]) revert Errors.InsufficientContractBalanceError()\"\n                                {\n                                    /// @src 8:15272:15313  \"Errors.InsufficientContractBalanceError()\"\n                                    let _90 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:15272:15313  \"Errors.InsufficientContractBalanceError()\"\n                                    mstore(_90, shl(224, 0xe23f04e1))\n                                    revert(_90, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                mstore(0, /** @src 8:14031:14041  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(_72, /** @src 8:14072:14089  \"investmentAmounts\" */ _71)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _91 := sload(keccak256(0, 64))\n                                let _92 := sload(/** @src 8:14933:14947  \"saleStatistics\" */ 0x1c)\n                                /// @src 8:15329:15458  \"UserRefundedSale(msg.sender, userTierIndex, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, block.timestamp)\"\n                                let _93 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:15329:15458  \"UserRefundedSale(msg.sender, userTierIndex, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, block.timestamp)\"\n                                log1(_93, sub(abi_encode_address_uint256_uint256_uint256_uint256(_93, /** @src 8:14031:14041  \"msg.sender\" */ caller(), /** @src 8:15329:15458  \"UserRefundedSale(msg.sender, userTierIndex, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, block.timestamp)\" */ _86, _91, _92, /** @src 8:14267:14282  \"block.timestamp\" */ timestamp()), /** @src 8:15329:15458  \"UserRefundedSale(msg.sender, userTierIndex, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, block.timestamp)\" */ _93), 0x2d164e733e691270e0cd64a05caed5b1b4971337b7354d65c89d33d9f53c09a7)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(0, /** @src 8:14031:14041  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(_72, /** @src 8:14072:14089  \"investmentAmounts\" */ _71)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _94 := sload(keccak256(0, 64))\n                                /// @src 8:15499:15566  \"investmentToken.transfer(msg.sender, investmentAmounts[msg.sender])\"\n                                let _95 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:15499:15566  \"investmentToken.transfer(msg.sender, investmentAmounts[msg.sender])\"\n                                mstore(_95, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0xa9059cbb))\n                                /// @src 8:15499:15566  \"investmentToken.transfer(msg.sender, investmentAmounts[msg.sender])\"\n                                let _96 := call(gas(), cleaned_15, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0, /** @src 8:15499:15566  \"investmentToken.transfer(msg.sender, investmentAmounts[msg.sender])\" */ _95, sub(abi_encode_address_uint256(add(_95, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:14031:14041  \"msg.sender\" */ caller(), /** @src 8:15499:15566  \"investmentToken.transfer(msg.sender, investmentAmounts[msg.sender])\" */ _94), _95), _95, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _72)\n                                /// @src 8:15499:15566  \"investmentToken.transfer(msg.sender, investmentAmounts[msg.sender])\"\n                                if iszero(_96)\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let pos_10 := mload(64)\n                                    returndatacopy(pos_10, 0, returndatasize())\n                                    revert(pos_10, returndatasize())\n                                }\n                                /// @src 8:15499:15566  \"investmentToken.transfer(msg.sender, investmentAmounts[msg.sender])\"\n                                let expr_14 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                /// @src 8:15499:15566  \"investmentToken.transfer(msg.sender, investmentAmounts[msg.sender])\"\n                                if _96\n                                {\n                                    let _97 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _72\n                                    /// @src 8:15499:15566  \"investmentToken.transfer(msg.sender, investmentAmounts[msg.sender])\"\n                                    if gt(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _72, /** @src 8:15499:15566  \"investmentToken.transfer(msg.sender, investmentAmounts[msg.sender])\" */ returndatasize()) { _97 := returndatasize() }\n                                    finalize_allocation(_95, _97)\n                                    expr_14 := abi_decode_bool_fromMemory(_95, add(_95, _97))\n                                }\n                                /// @src 8:15576:15645  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                                if /** @src 8:15580:15603  \"!successfullyTransfered\" */ iszero(expr_14)\n                                /// @src 8:15576:15645  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                                {\n                                    /// @src 8:15612:15645  \"Errors.TokenTransferFailedError()\"\n                                    let _98 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:15612:15645  \"Errors.TokenTransferFailedError()\"\n                                    mstore(_98, /** @src 8:16573:16606  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                                    /// @src 8:15612:15645  \"Errors.TokenTransferFailedError()\"\n                                    revert(_98, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                let memPos_15 := mload(64)\n                                mstore(memPos_15, /** @src 8:14286:14290  \"sale\" */ 0x01)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                return(memPos_15, _72)\n                            }\n                            case 0x5e6f6045 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let value_17 := and(sload(/** @src 8:645:682  \"IDappadVesting public vestingContract\" */ 36), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))\n                                let memPos_16 := mload(64)\n                                mstore(memPos_16, value_17)\n                                return(memPos_16, 32)\n                            }\n                            case 0x5e87e5a6 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value0 := abi_decode_address_60557()\n                                /// @src 8:4542:4550  \"_address\"\n                                fun_notZeroAddress(value0)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(0, and(value0, sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 8:22828:22845  \"investmentAmounts\" */ 0x28)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _99 := sload(keccak256(0, 64))\n                                let memPos_17 := mload(64)\n                                mstore(memPos_17, _99)\n                                return(memPos_17, 32)\n                            }\n                            case 0x63b8476b {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let cleaned_16 := and(sload(/** @src 8:24744:24785  \"sale.saleAddresses.factoryContractAddress\" */ 20), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))\n                                let memPos_18 := mload(64)\n                                mstore(memPos_18, cleaned_16)\n                                return(memPos_18, 32)\n                            }\n                            case 0x67184e28 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let ret := fun_getTierCount()\n                                let memPos_19 := mload(64)\n                                mstore(memPos_19, ret)\n                                return(memPos_19, 32)\n                            }\n                            case 0x6ad1fe02 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPtr_8 := mload(64)\n                                finalize_allocation_60552(memPtr_8)\n                                /// @src 8:413:441  \"IDappadSale.Sale public sale\"\n                                let _100 := 1\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(memPtr_8, sload(/** @src 8:413:441  \"IDappadSale.Sale public sale\" */ _100))\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _101 := sload(2)\n                                let _102 := 32\n                                mstore(add(memPtr_8, _102), _101)\n                                mstore(add(memPtr_8, 64), sload(3))\n                                mstore(add(memPtr_8, 96), sload(4))\n                                mstore(add(memPtr_8, 128), sload(5))\n                                mstore(add(memPtr_8, 160), sload(6))\n                                mstore(add(memPtr_8, 192), sload(7))\n                                mstore(add(memPtr_8, _2), sload(8))\n                                let _103 := sload(9)\n                                let _104 := 256\n                                mstore(add(memPtr_8, _104), iszero(iszero(and(_103, 0xff))))\n                                let _105 := 288\n                                mstore(add(memPtr_8, _105), iszero(iszero(and(shr(8, _103), 0xff))))\n                                let memPtr_9 := mload(64)\n                                let ret_1 := 0\n                                let slotValue := sload(10)\n                                let length_1 := extract_byte_array_length(slotValue)\n                                mstore(memPtr_9, length_1)\n                                switch and(slotValue, /** @src 8:413:441  \"IDappadSale.Sale public sale\" */ _100)\n                                case /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0 {\n                                    mstore(add(memPtr_9, _102), and(slotValue, not(255)))\n                                    ret_1 := add(add(memPtr_9, shl(5, iszero(iszero(length_1)))), _102)\n                                }\n                                case 1 {\n                                    mstore(0, 10)\n                                    let dataPos := 89717814153306320011181716697424560163256864414616650038987186496166826726056\n                                    let i_3 := 0\n                                    for { } lt(i_3, length_1) { i_3 := add(i_3, _102) }\n                                    {\n                                        mstore(add(add(memPtr_9, i_3), _102), sload(dataPos))\n                                        dataPos := add(dataPos, /** @src 8:413:441  \"IDappadSale.Sale public sale\" */ _100)\n                                    }\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    ret_1 := add(add(memPtr_9, i_3), _102)\n                                }\n                                finalize_allocation(memPtr_9, sub(ret_1, memPtr_9))\n                                let _106 := 320\n                                mstore(add(memPtr_8, _106), memPtr_9)\n                                let memPtr_10 := mload(64)\n                                finalize_allocation_60549(memPtr_10)\n                                mstore(memPtr_10, sload(/** @src 8:413:441  \"IDappadSale.Sale public sale\" */ 11))\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _107 := sload(12)\n                                let _108 := add(memPtr_10, _102)\n                                mstore(_108, _107)\n                                let memPtr_11 := mload(64)\n                                finalize_allocation_60549(memPtr_11)\n                                mstore(memPtr_11, sload(/** @src 8:413:441  \"IDappadSale.Sale public sale\" */ 13))\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(add(memPtr_11, _102), iszero(iszero(and(sload(14), 0xff))))\n                                let memPtr_12 := mload(64)\n                                finalize_allocation_60549(memPtr_12)\n                                mstore(memPtr_12, sload(/** @src 8:413:441  \"IDappadSale.Sale public sale\" */ 15))\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _109 := sload(16)\n                                let _110 := add(memPtr_12, _102)\n                                mstore(_110, _109)\n                                let memPtr_13 := mload(64)\n                                finalize_allocation_60552(memPtr_13)\n                                let _111 := sub(shl(160, 1), 1)\n                                mstore(memPtr_13, and(sload(/** @src 8:413:441  \"IDappadSale.Sale public sale\" */ 17), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _111))\n                                mstore(add(memPtr_13, _102), and(sload(18), _111))\n                                mstore(add(memPtr_13, 64), and(sload(19), _111))\n                                mstore(add(memPtr_13, 96), and(sload(20), _111))\n                                mstore(add(memPtr_13, 128), and(sload(21), _111))\n                                mstore(add(memPtr_13, 160), and(sload(22), _111))\n                                mstore(add(memPtr_13, 192), and(sload(23), _111))\n                                mstore(add(memPtr_13, _2), and(sload(24), _111))\n                                mstore(add(memPtr_13, _104), and(sload(25), _111))\n                                mstore(add(memPtr_13, _105), and(sload(26), _111))\n                                mstore(add(memPtr_13, _106), and(sload(27), _111))\n                                let memPos_20 := mload(64)\n                                let _112 := 576\n                                mstore(memPos_20, _112)\n                                let tail_1 := abi_encode_struct_SaleDetails(memPtr_8, add(memPos_20, _112))\n                                mstore(add(memPos_20, _102), mload(memPtr_10))\n                                mstore(add(memPos_20, 64), mload(_108))\n                                abi_encode_struct_SaleRefundDetails(memPtr_11, add(memPos_20, 96))\n                                mstore(add(memPos_20, 160), mload(memPtr_12))\n                                mstore(add(memPos_20, 192), mload(_110))\n                                abi_encode_struct_SaleAddresses(memPtr_13, add(memPos_20, _2))\n                                return(memPos_20, sub(tail_1, memPos_20))\n                            }\n                            case 0x6ad4f603 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                                let value_18 := calldataload(4)\n                                let offset_2 := calldataload(36)\n                                let _113 := 0xffffffffffffffff\n                                if gt(offset_2, _113) { revert(0, 0) }\n                                let value1_2, value2 := abi_decode_array_bytes32_dyn_calldata(add(4, offset_2), calldatasize())\n                                let offset_3 := calldataload(68)\n                                if gt(offset_3, _113) { revert(0, 0) }\n                                let value3, value4 := abi_decode_array_bytes32_dyn_calldata(add(4, offset_3), calldatasize())\n                                /// @src 8:4771:4852  \"modifier whenSaleIsNotPaused() {...\"\n                                fun_whenSaleIsNotPaused()\n                                /// @src 8:4542:4550  \"_address\"\n                                fun_notZeroAddress(/** @src 8:7085:7095  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _114 := sub(shl(160, 1), 1)\n                                let cleaned_17 := and(sload(/** @src 8:7116:7131  \"investmentToken\" */ 0x22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _114)\n                                /// @src 8:4995:5001  \"amount\"\n                                fun_hasEnoughAllowance(cleaned_17, /** @src 8:7085:7095  \"msg.sender\" */ caller(), /** @src 8:4995:5001  \"amount\" */ value_18)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(0, /** @src 8:7085:7095  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _115 := 32\n                                mstore(_115, /** @src 8:7182:7197  \"registerDetails\" */ 0x25)\n                                /// @src 8:7178:7260  \"if(!registerDetails[msg.sender].registered) revert Errors.UserNotRegisteredError()\"\n                                if /** @src 8:7181:7220  \"!registerDetails[msg.sender].registered\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:7182:7220  \"registerDetails[msg.sender].registered\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), /** @src 8:7182:7220  \"registerDetails[msg.sender].registered\" */ 2)), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xff))\n                                /// @src 8:7178:7260  \"if(!registerDetails[msg.sender].registered) revert Errors.UserNotRegisteredError()\"\n                                {\n                                    /// @src 8:7229:7260  \"Errors.UserNotRegisteredError()\"\n                                    let _116 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:7229:7260  \"Errors.UserNotRegisteredError()\"\n                                    mstore(_116, shl(226, 0x141d51c1))\n                                    revert(_116, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:7270:7355  \"if (block.timestamp < sale.saleDetails.saleStart) revert Errors.SaleNotStartedError()\"\n                                if /** @src 8:7274:7318  \"block.timestamp < sale.saleDetails.saleStart\" */ lt(/** @src 8:7274:7289  \"block.timestamp\" */ timestamp(), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(4))\n                                /// @src 8:7270:7355  \"if (block.timestamp < sale.saleDetails.saleStart) revert Errors.SaleNotStartedError()\"\n                                {\n                                    /// @src 8:7327:7355  \"Errors.SaleNotStartedError()\"\n                                    let _117 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:7327:7355  \"Errors.SaleNotStartedError()\"\n                                    mstore(_117, shl(224, 0x6f36ba6f))\n                                    revert(_117, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                let _118 := sload(/** @src 8:7378:7394  \"sale.fcfsDetails\" */ 11)\n                                /// @src 8:7374:7689  \"if (sale.fcfsDetails.fcfsSaleDuration > 0) {...\"\n                                switch /** @src 8:7378:7415  \"sale.fcfsDetails.fcfsSaleDuration > 0\" */ iszero(iszero(_118))\n                                case /** @src 8:7374:7689  \"if (sale.fcfsDetails.fcfsSaleDuration > 0) {...\" */ 0 {\n                                    /// @src 8:7592:7678  \"if (block.timestamp >= sale.saleDetails.saleEnd) revert Errors.SaleAlreadyEndedError()\"\n                                    if /** @src 8:7596:7639  \"block.timestamp >= sale.saleDetails.saleEnd\" */ iszero(lt(/** @src 8:7274:7289  \"block.timestamp\" */ timestamp(), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:7615:7639  \"sale.saleDetails.saleEnd\" */ 5)))\n                                    /// @src 8:7592:7678  \"if (block.timestamp >= sale.saleDetails.saleEnd) revert Errors.SaleAlreadyEndedError()\"\n                                    {\n                                        /// @src 8:7648:7678  \"Errors.SaleAlreadyEndedError()\"\n                                        let _119 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                        /// @src 8:7648:7678  \"Errors.SaleAlreadyEndedError()\"\n                                        mstore(_119, shl(224, 0x6b62c0a5))\n                                        revert(_119, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                    }\n                                }\n                                default /// @src 8:7374:7689  \"if (sale.fcfsDetails.fcfsSaleDuration > 0) {...\"\n                                {\n                                    /// @src 8:7431:7561  \"if (block.timestamp >= (sale.saleDetails.saleEnd - sale.fcfsDetails.fcfsSaleDuration)) revert Errors.FCFSSaleAlreadyStartedError()\"\n                                    if /** @src 8:7435:7516  \"block.timestamp >= (sale.saleDetails.saleEnd - sale.fcfsDetails.fcfsSaleDuration)\" */ iszero(lt(/** @src 8:7274:7289  \"block.timestamp\" */ timestamp(), /** @src 8:7455:7515  \"sale.saleDetails.saleEnd - sale.fcfsDetails.fcfsSaleDuration\" */ checked_sub_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:7455:7479  \"sale.saleDetails.saleEnd\" */ 5), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _118)))\n                                    /// @src 8:7431:7561  \"if (block.timestamp >= (sale.saleDetails.saleEnd - sale.fcfsDetails.fcfsSaleDuration)) revert Errors.FCFSSaleAlreadyStartedError()\"\n                                    {\n                                        /// @src 8:7525:7561  \"Errors.FCFSSaleAlreadyStartedError()\"\n                                        let _120 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                        /// @src 8:7525:7561  \"Errors.FCFSSaleAlreadyStartedError()\"\n                                        mstore(_120, shl(224, 0x61a63aad))\n                                        revert(_120, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                    }\n                                }\n                                /// @src 8:7707:7758  \"if (amount == 0) revert Errors.InvalidAmountError()\"\n                                if /** @src 8:7711:7722  \"amount == 0\" */ iszero(value_18)\n                                /// @src 8:7707:7758  \"if (amount == 0) revert Errors.InvalidAmountError()\"\n                                {\n                                    /// @src 8:7731:7758  \"Errors.InvalidAmountError()\"\n                                    let _121 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:7731:7758  \"Errors.InvalidAmountError()\"\n                                    mstore(_121, shl(227, 0x0f51ac85))\n                                    revert(_121, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:7769:7925  \"if (sale.saleAddresses.nftContractAddress != address(0)) {...\"\n                                if /** @src 8:7773:7824  \"sale.saleAddresses.nftContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:7773:7810  \"sale.saleAddresses.nftContractAddress\" */ 21), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _114)))\n                                /// @src 8:7769:7925  \"if (sale.saleAddresses.nftContractAddress != address(0)) {...\"\n                                {\n                                    /// @src 8:4542:4550  \"_address\"\n                                    fun_notZeroAddress(/** @src 8:7085:7095  \"msg.sender\" */ caller())\n                                    /// @src 8:7840:7914  \"if (_getUserNftBalance(msg.sender) == 0) revert Errors.UserHasNoNFTError()\"\n                                    if /** @src 8:7844:7879  \"_getUserNftBalance(msg.sender) == 0\" */ iszero(/** @src 8:24954:25275  \"function _getUserNftBalance(address userAddress) internal view notZeroAddress(userAddress) returns (uint256) {...\" */ fun_getUserNftBalance_inner())\n                                    /// @src 8:7840:7914  \"if (_getUserNftBalance(msg.sender) == 0) revert Errors.UserHasNoNFTError()\"\n                                    {\n                                        /// @src 8:7888:7914  \"Errors.UserHasNoNFTError()\"\n                                        let _122 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                        /// @src 8:7888:7914  \"Errors.UserHasNoNFTError()\"\n                                        mstore(_122, /** @src 8:14814:14840  \"Errors.UserHasNoNFTError()\" */ shl(225, 0x049a4b73))\n                                        /// @src 8:7888:7914  \"Errors.UserHasNoNFTError()\"\n                                        revert(_122, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                    }\n                                }\n                                mstore(0, /** @src 8:7085:7095  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(_115, /** @src 8:7182:7197  \"registerDetails\" */ 0x25)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _123 := sload(/** @src 8:7959:7996  \"registerDetails[msg.sender].tierIndex\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), 1))\n                                /// @src 8:8015:8351  \"if(userTierIndex == 0) {...\"\n                                if /** @src 8:8018:8036  \"userTierIndex == 0\" */ iszero(_123)\n                                /// @src 8:8015:8351  \"if(userTierIndex == 0) {...\"\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(0, 0)\n                                    mstore(_115, /** @src 8:8056:8067  \"tierDetails\" */ 0x26)\n                                    /// @src 8:8052:8341  \"if (tierDetails[0].whitelistMerkleRoot != bytes32(0)) {...\"\n                                    switch /** @src 8:8056:8104  \"tierDetails[0].whitelistMerkleRoot != bytes32(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:8056:8090  \"tierDetails[0].whitelistMerkleRoot\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), 4))))\n                                    case /** @src 8:8052:8341  \"if (tierDetails[0].whitelistMerkleRoot != bytes32(0)) {...\" */ 0 {\n                                        /// @src 8:8284:8326  \"Errors.TierOneCannotJoinStakerRoundError()\"\n                                        let _124 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                        /// @src 8:8284:8326  \"Errors.TierOneCannotJoinStakerRoundError()\"\n                                        mstore(_124, shl(224, 0x6f6fd835))\n                                        revert(_124, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                    }\n                                    default /// @src 8:8052:8341  \"if (tierDetails[0].whitelistMerkleRoot != bytes32(0)) {...\"\n                                    {\n                                        /// @src 8:8124:8238  \"if (!checkWhitelistEligibility(msg.sender, userTierIndex, whitelistProof)) revert Errors.UserNotWhitelistedError()\"\n                                        if /** @src 8:8128:8197  \"!checkWhitelistEligibility(msg.sender, userTierIndex, whitelistProof)\" */ iszero(/** @src 8:22182:22186  \"bool\" */ modifier_notZeroAddress(/** @src 8:7085:7095  \"msg.sender\" */ caller(), /** @src 8:8129:8197  \"checkWhitelistEligibility(msg.sender, userTierIndex, whitelistProof)\" */ _123, value1_2, value2))\n                                        /// @src 8:8124:8238  \"if (!checkWhitelistEligibility(msg.sender, userTierIndex, whitelistProof)) revert Errors.UserNotWhitelistedError()\"\n                                        {\n                                            /// @src 8:8206:8238  \"Errors.UserNotWhitelistedError()\"\n                                            let _125 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                            /// @src 8:8206:8238  \"Errors.UserNotWhitelistedError()\"\n                                            mstore(_125, shl(226, 0x05880f01))\n                                            revert(_125, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                        }\n                                    }\n                                }\n                                /// @src 8:8365:8402  \"investmentToken.balanceOf(msg.sender)\"\n                                let _126 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:8365:8402  \"investmentToken.balanceOf(msg.sender)\"\n                                mstore(_126, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x70a08231))\n                                mstore(/** @src 8:8365:8402  \"investmentToken.balanceOf(msg.sender)\" */ add(_126, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:7085:7095  \"msg.sender\" */ caller())\n                                /// @src 8:8365:8402  \"investmentToken.balanceOf(msg.sender)\"\n                                let _127 := staticcall(gas(), cleaned_17, _126, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36, /** @src 8:8365:8402  \"investmentToken.balanceOf(msg.sender)\" */ _126, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _115)\n                                /// @src 8:8365:8402  \"investmentToken.balanceOf(msg.sender)\"\n                                if iszero(_127)\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let pos_11 := mload(64)\n                                    returndatacopy(pos_11, 0, returndatasize())\n                                    revert(pos_11, returndatasize())\n                                }\n                                /// @src 8:8365:8402  \"investmentToken.balanceOf(msg.sender)\"\n                                let expr_15 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                /// @src 8:8365:8402  \"investmentToken.balanceOf(msg.sender)\"\n                                if _127\n                                {\n                                    let _128 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _115\n                                    /// @src 8:8365:8402  \"investmentToken.balanceOf(msg.sender)\"\n                                    if gt(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _115, /** @src 8:8365:8402  \"investmentToken.balanceOf(msg.sender)\" */ returndatasize()) { _128 := returndatasize() }\n                                    finalize_allocation(_126, _128)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    if slt(sub(/** @src 8:8365:8402  \"investmentToken.balanceOf(msg.sender)\" */ add(_126, _128), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _126), _115) { revert(0, 0) }\n                                    /// @src 8:8365:8402  \"investmentToken.balanceOf(msg.sender)\"\n                                    expr_15 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_126)\n                                }\n                                /// @src 8:8361:8453  \"if (investmentToken.balanceOf(msg.sender) < amount) revert Errors.InsufficientBalanceError()\"\n                                if /** @src 8:8365:8411  \"investmentToken.balanceOf(msg.sender) < amount\" */ lt(expr_15, value_18)\n                                /// @src 8:8361:8453  \"if (investmentToken.balanceOf(msg.sender) < amount) revert Errors.InsufficientBalanceError()\"\n                                {\n                                    /// @src 8:8420:8453  \"Errors.InsufficientBalanceError()\"\n                                    let _129 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:8420:8453  \"Errors.InsufficientBalanceError()\"\n                                    mstore(_129, /** @src 8:15952:15985  \"Errors.InsufficientBalanceError()\" */ shl(224, 0x384d3c59))\n                                    /// @src 8:8420:8453  \"Errors.InsufficientBalanceError()\"\n                                    revert(_129, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                mstore(0, _123)\n                                /// @src 8:8476:8487  \"tierDetails\"\n                                let _130 := 0x26\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(_115, /** @src 8:8476:8487  \"tierDetails\" */ _130)\n                                /// @src 8:8463:8572  \"if (amount < tierDetails[userTierIndex].minInvestmentAmount) revert Errors.MinimumInvestmentNotReachedError()\"\n                                if /** @src 8:8467:8522  \"amount < tierDetails[userTierIndex].minInvestmentAmount\" */ lt(value_18, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(keccak256(0, 64)))\n                                /// @src 8:8463:8572  \"if (amount < tierDetails[userTierIndex].minInvestmentAmount) revert Errors.MinimumInvestmentNotReachedError()\"\n                                {\n                                    /// @src 8:8531:8572  \"Errors.MinimumInvestmentNotReachedError()\"\n                                    let _131 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:8531:8572  \"Errors.MinimumInvestmentNotReachedError()\"\n                                    mstore(_131, shl(224, 0xba4c4493))\n                                    revert(_131, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:8587:8687  \"sale.ticketDetails.ticketMerkleRoot != bytes32(0) && checkTicketEligibility(msg.sender, ticketProof)\"\n                                let expr_16 := /** @src 8:8587:8636  \"sale.ticketDetails.ticketMerkleRoot != bytes32(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:8587:8622  \"sale.ticketDetails.ticketMerkleRoot\" */ 16)))\n                                /// @src 8:8587:8687  \"sale.ticketDetails.ticketMerkleRoot != bytes32(0) && checkTicketEligibility(msg.sender, ticketProof)\"\n                                if expr_16\n                                {\n                                    expr_16 := /** @src 8:22509:22513  \"bool\" */ modifier_notZeroAddress_60592(/** @src 8:7085:7095  \"msg.sender\" */ caller(), /** @src 8:8640:8687  \"checkTicketEligibility(msg.sender, ticketProof)\" */ value3, value4)\n                                }\n                                /// @src 8:8583:9100  \"if (sale.ticketDetails.ticketMerkleRoot != bytes32(0) && checkTicketEligibility(msg.sender, ticketProof)) {...\"\n                                switch expr_16\n                                case 0 {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(0, /** @src 8:7085:7095  \"msg.sender\" */ caller())\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(_115, /** @src 8:8955:8972  \"investmentAmounts\" */ 0x28)\n                                    /// @src 8:8955:8993  \"investmentAmounts[msg.sender] + amount\"\n                                    let expr_17 := checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(keccak256(0, 64)), /** @src 8:8955:8993  \"investmentAmounts[msg.sender] + amount\" */ value_18)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(0, _123)\n                                    mstore(_115, /** @src 8:8476:8487  \"tierDetails\" */ _130)\n                                    /// @src 8:8951:9089  \"if (investmentAmounts[msg.sender] + amount > tierDetails[userTierIndex].maxInvestmentAmount) revert Errors.MaximumInvestmentReachedError()\"\n                                    if /** @src 8:8955:9042  \"investmentAmounts[msg.sender] + amount > tierDetails[userTierIndex].maxInvestmentAmount\" */ gt(expr_17, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:8996:9042  \"tierDetails[userTierIndex].maxInvestmentAmount\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), 1)))\n                                    /// @src 8:8951:9089  \"if (investmentAmounts[msg.sender] + amount > tierDetails[userTierIndex].maxInvestmentAmount) revert Errors.MaximumInvestmentReachedError()\"\n                                    {\n                                        /// @src 8:9051:9089  \"Errors.MaximumInvestmentReachedError()\"\n                                        let _132 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                        /// @src 8:9051:9089  \"Errors.MaximumInvestmentReachedError()\"\n                                        mstore(_132, shl(225, 0x765aa7df))\n                                        revert(_132, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                    }\n                                }\n                                default /// @src 8:8583:9100  \"if (sale.ticketDetails.ticketMerkleRoot != bytes32(0) && checkTicketEligibility(msg.sender, ticketProof)) {...\"\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(0, /** @src 8:7085:7095  \"msg.sender\" */ caller())\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(_115, /** @src 8:8707:8724  \"investmentAmounts\" */ 0x28)\n                                    /// @src 8:8707:8745  \"investmentAmounts[msg.sender] + amount\"\n                                    let expr_18 := checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(keccak256(0, 64)), /** @src 8:8707:8745  \"investmentAmounts[msg.sender] + amount\" */ value_18)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(0, _123)\n                                    mstore(_115, /** @src 8:8476:8487  \"tierDetails\" */ _130)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let dataSlot_3 := keccak256(0, 64)\n                                    let _133 := sload(/** @src 8:8749:8795  \"tierDetails[userTierIndex].maxInvestmentAmount\" */ add(/** @src 8:8749:8775  \"tierDetails[userTierIndex]\" */ dataSlot_3, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 1))\n                                    let _134 := sload(/** @src 8:8587:8605  \"sale.ticketDetails\" */ 15)\n                                    /// @src 8:8703:8920  \"if (investmentAmounts[msg.sender] + amount > (tierDetails[userTierIndex].maxInvestmentAmount + (sale.ticketDetails.ticketPrice * tierDetails[userTierIndex].ticketAmount))) revert Errors.MaximumInvestmentReachedError()\"\n                                    if /** @src 8:8707:8873  \"investmentAmounts[msg.sender] + amount > (tierDetails[userTierIndex].maxInvestmentAmount + (sale.ticketDetails.ticketPrice * tierDetails[userTierIndex].ticketAmount))\" */ gt(expr_18, /** @src 8:8749:8872  \"tierDetails[userTierIndex].maxInvestmentAmount + (sale.ticketDetails.ticketPrice * tierDetails[userTierIndex].ticketAmount)\" */ checked_add_uint256(_133, /** @src 8:8799:8871  \"sale.ticketDetails.ticketPrice * tierDetails[userTierIndex].ticketAmount\" */ checked_mul_uint256(_134, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:8832:8871  \"tierDetails[userTierIndex].ticketAmount\" */ add(/** @src 8:8832:8858  \"tierDetails[userTierIndex]\" */ dataSlot_3, /** @src 8:7292:7318  \"sale.saleDetails.saleStart\" */ 3)))))\n                                    /// @src 8:8703:8920  \"if (investmentAmounts[msg.sender] + amount > (tierDetails[userTierIndex].maxInvestmentAmount + (sale.ticketDetails.ticketPrice * tierDetails[userTierIndex].ticketAmount))) revert Errors.MaximumInvestmentReachedError()\"\n                                    {\n                                        /// @src 8:8882:8920  \"Errors.MaximumInvestmentReachedError()\"\n                                        let _135 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                        /// @src 8:8882:8920  \"Errors.MaximumInvestmentReachedError()\"\n                                        mstore(_135, /** @src 8:9051:9089  \"Errors.MaximumInvestmentReachedError()\" */ shl(225, 0x765aa7df))\n                                        /// @src 8:8882:8920  \"Errors.MaximumInvestmentReachedError()\"\n                                        revert(_135, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                    }\n                                }\n                                mstore(0, _123)\n                                mstore(_115, /** @src 8:8476:8487  \"tierDetails\" */ _130)\n                                /// @src 8:9114:9171  \"tierDetails[userTierIndex].totalInvestmentAmount + amount\"\n                                let expr_19 := checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:9114:9162  \"tierDetails[userTierIndex].totalInvestmentAmount\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), /** @src 8:9114:9162  \"tierDetails[userTierIndex].totalInvestmentAmount\" */ 5)), /** @src 8:9114:9171  \"tierDetails[userTierIndex].totalInvestmentAmount + amount\" */ value_18)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(0, _123)\n                                mstore(_115, /** @src 8:8476:8487  \"tierDetails\" */ _130)\n                                /// @src 8:9110:9271  \"if (tierDetails[userTierIndex].totalInvestmentAmount + amount > tierDetails[userTierIndex].tierMaxInvestmentAmount) revert Errors.MaxTierInvestmentReachedError()\"\n                                if /** @src 8:9114:9224  \"tierDetails[userTierIndex].totalInvestmentAmount + amount > tierDetails[userTierIndex].tierMaxInvestmentAmount\" */ gt(expr_19, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:9174:9224  \"tierDetails[userTierIndex].tierMaxInvestmentAmount\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), /** @src 8:7182:7220  \"registerDetails[msg.sender].registered\" */ 2)))\n                                /// @src 8:9110:9271  \"if (tierDetails[userTierIndex].totalInvestmentAmount + amount > tierDetails[userTierIndex].tierMaxInvestmentAmount) revert Errors.MaxTierInvestmentReachedError()\"\n                                {\n                                    /// @src 8:9233:9271  \"Errors.MaxTierInvestmentReachedError()\"\n                                    let _136 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:9233:9271  \"Errors.MaxTierInvestmentReachedError()\"\n                                    mstore(_136, shl(227, 0x15054d3f))\n                                    revert(_136, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                let _137 := sload(/** @src 8:9285:9299  \"saleStatistics\" */ 0x1c)\n                                /// @src 8:9285:9330  \"saleStatistics.totalInvestmentAmount + amount\"\n                                let expr_20 := checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _137, /** @src 8:9285:9330  \"saleStatistics.totalInvestmentAmount + amount\" */ value_18)\n                                /// @src 8:9281:9417  \"if (saleStatistics.totalInvestmentAmount + amount > sale.saleDetails.maxInvestmentAmount) revert Errors.MaxTotalInvestmentReachedError()\"\n                                if /** @src 8:9285:9369  \"saleStatistics.totalInvestmentAmount + amount > sale.saleDetails.maxInvestmentAmount\" */ gt(expr_20, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:9333:9369  \"sale.saleDetails.maxInvestmentAmount\" */ 7))\n                                /// @src 8:9281:9417  \"if (saleStatistics.totalInvestmentAmount + amount > sale.saleDetails.maxInvestmentAmount) revert Errors.MaxTotalInvestmentReachedError()\"\n                                {\n                                    /// @src 8:9378:9417  \"Errors.MaxTotalInvestmentReachedError()\"\n                                    let _138 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:9378:9417  \"Errors.MaxTotalInvestmentReachedError()\"\n                                    mstore(_138, shl(224, 0xf39595f9))\n                                    revert(_138, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                sstore(/** @src 8:9285:9299  \"saleStatistics\" */ 0x1c, /** @src 8:9436:9482  \"saleStatistics.totalInvestmentAmount += amount\" */ checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _137, /** @src 8:9436:9482  \"saleStatistics.totalInvestmentAmount += amount\" */ value_18))\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(0, /** @src 8:7085:7095  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(_115, /** @src 8:9496:9513  \"investmentAmounts\" */ 0x28)\n                                /// @src 8:9493:9651  \"if(investmentAmounts[msg.sender] == 0) {...\"\n                                if /** @src 8:9496:9530  \"investmentAmounts[msg.sender] == 0\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(keccak256(0, 64)))\n                                /// @src 8:9493:9651  \"if(investmentAmounts[msg.sender] == 0) {...\"\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    sstore(/** @src 8:9546:9578  \"saleStatistics.totalParticipants\" */ 30, /** @src 8:9546:9580  \"saleStatistics.totalParticipants++\" */ increment_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:9546:9578  \"saleStatistics.totalParticipants\" */ 30)))\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(0, _123)\n                                    mstore(_115, /** @src 8:8476:8487  \"tierDetails\" */ _130)\n                                    /// @src 8:9594:9638  \"tierDetails[userTierIndex].totalParticipants\"\n                                    let _139 := add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), /** @src 8:9333:9369  \"sale.saleDetails.maxInvestmentAmount\" */ 6)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    sstore(_139, /** @src 8:9594:9640  \"tierDetails[userTierIndex].totalParticipants++\" */ increment_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:9594:9640  \"tierDetails[userTierIndex].totalParticipants++\" */ _139)))\n                                }\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(0, /** @src 8:7085:7095  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(_115, /** @src 8:9496:9513  \"investmentAmounts\" */ 0x28)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let dataSlot_4 := keccak256(0, 64)\n                                sstore(dataSlot_4, /** @src 8:9661:9700  \"investmentAmounts[msg.sender] += amount\" */ checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:9661:9700  \"investmentAmounts[msg.sender] += amount\" */ dataSlot_4), value_18))\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(0, _123)\n                                mstore(_115, /** @src 8:8476:8487  \"tierDetails\" */ _130)\n                                /// @src 8:9710:9758  \"tierDetails[userTierIndex].totalInvestmentAmount\"\n                                let _140 := add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), /** @src 8:9114:9162  \"tierDetails[userTierIndex].totalInvestmentAmount\" */ 5)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                sstore(_140, /** @src 8:9710:9768  \"tierDetails[userTierIndex].totalInvestmentAmount += amount\" */ checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:9710:9768  \"tierDetails[userTierIndex].totalInvestmentAmount += amount\" */ _140), value_18))\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(0, /** @src 8:7085:7095  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(_115, /** @src 8:9496:9513  \"investmentAmounts\" */ 0x28)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _141 := sload(keccak256(0, 64))\n                                let _142 := sload(/** @src 8:9285:9299  \"saleStatistics\" */ 0x1c)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _143 := sload(/** @src 8:9903:9935  \"saleStatistics.totalParticipants\" */ 30)\n                                /// @src 8:4542:4550  \"_address\"\n                                fun_notZeroAddress(/** @src 8:7085:7095  \"msg.sender\" */ caller())\n                                /// @src 8:4561:4562  \"_\"\n                                let _144 := /** @src 8:24954:25275  \"function _getUserNftBalance(address userAddress) internal view notZeroAddress(userAddress) returns (uint256) {...\" */ fun_getUserNftBalance_inner()\n                                /// @src 8:9784:9985  \"UserJoinedSale(msg.sender, userTierIndex, amount, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, saleStatistics.totalParticipants, block.timestamp, _getUserNftBalance(msg.sender))\"\n                                let _145 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:9784:9985  \"UserJoinedSale(msg.sender, userTierIndex, amount, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, saleStatistics.totalParticipants, block.timestamp, _getUserNftBalance(msg.sender))\"\n                                log1(_145, sub(abi_encode_address_uint256_uint256_uint256_uint256_uint256_uint256_uint256(_145, /** @src 8:7085:7095  \"msg.sender\" */ caller(), /** @src 8:9784:9985  \"UserJoinedSale(msg.sender, userTierIndex, amount, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, saleStatistics.totalParticipants, block.timestamp, _getUserNftBalance(msg.sender))\" */ _123, value_18, _141, _142, _143, /** @src 8:7274:7289  \"block.timestamp\" */ timestamp(), /** @src 8:9784:9985  \"UserJoinedSale(msg.sender, userTierIndex, amount, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, saleStatistics.totalParticipants, block.timestamp, _getUserNftBalance(msg.sender))\" */ _144), _145), 0x3077514c17881ba96cff640eeeb00482d42c4d374fb0d3a7fb42c9f06c4591d5)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let cleaned_18 := and(sload(/** @src 8:7116:7131  \"investmentToken\" */ 0x22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _114)\n                                /// @src 8:10026:10089  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                                let _146 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:10026:10089  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                                mstore(_146, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x23b872dd))\n                                /// @src 8:10026:10089  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                                let _147 := call(gas(), cleaned_18, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0, /** @src 8:10026:10089  \"investmentToken.transferFrom(msg.sender, address(this), amount)\" */ _146, sub(abi_encode_address_address_uint256(add(_146, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:7085:7095  \"msg.sender\" */ caller(), /** @src 8:10075:10079  \"this\" */ address(), /** @src 8:10026:10089  \"investmentToken.transferFrom(msg.sender, address(this), amount)\" */ value_18), _146), _146, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _115)\n                                /// @src 8:10026:10089  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                                if iszero(_147)\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let pos_12 := mload(64)\n                                    returndatacopy(pos_12, 0, returndatasize())\n                                    revert(pos_12, returndatasize())\n                                }\n                                /// @src 8:10026:10089  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                                let expr_21 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                /// @src 8:10026:10089  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                                if _147\n                                {\n                                    let _148 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _115\n                                    /// @src 8:10026:10089  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                                    if gt(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _115, /** @src 8:10026:10089  \"investmentToken.transferFrom(msg.sender, address(this), amount)\" */ returndatasize()) { _148 := returndatasize() }\n                                    finalize_allocation(_146, _148)\n                                    expr_21 := abi_decode_bool_fromMemory(_146, add(_146, _148))\n                                }\n                                /// @src 8:10099:10168  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                                if /** @src 8:10103:10126  \"!successfullyTransfered\" */ iszero(expr_21)\n                                /// @src 8:10099:10168  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                                {\n                                    /// @src 8:10135:10168  \"Errors.TokenTransferFailedError()\"\n                                    let _149 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:10135:10168  \"Errors.TokenTransferFailedError()\"\n                                    mstore(_149, /** @src 8:16573:16606  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                                    /// @src 8:10135:10168  \"Errors.TokenTransferFailedError()\"\n                                    revert(_149, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:10183:10277  \"sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0)\"\n                                let expr_22 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:10183:10220  \"sale.saleDetails.registerTokenEnabled\" */ 9), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xff)\n                                /// @src 8:10183:10277  \"sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0)\"\n                                if expr_22\n                                {\n                                    expr_22 := /** @src 8:10224:10277  \"sale.saleAddresses.registerTokenAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:10224:10263  \"sale.saleAddresses.registerTokenAddress\" */ 18), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _114)))\n                                }\n                                /// @src 8:10183:10332  \"sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0) && registerDetails[msg.sender].registerTokenAmount > 0\"\n                                let expr_23 := expr_22\n                                if expr_22\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(0, /** @src 8:7085:7095  \"msg.sender\" */ caller())\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(_115, /** @src 8:7182:7197  \"registerDetails\" */ 0x25)\n                                    /// @src 8:10183:10332  \"sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0) && registerDetails[msg.sender].registerTokenAmount > 0\"\n                                    expr_23 := /** @src 8:10281:10332  \"registerDetails[msg.sender].registerTokenAmount > 0\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(keccak256(0, 64))))\n                                }\n                                /// @src 8:10179:10797  \"if (sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0) && registerDetails[msg.sender].registerTokenAmount > 0) {...\"\n                                if expr_23\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(0, /** @src 8:7085:7095  \"msg.sender\" */ caller())\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(_115, /** @src 8:7182:7197  \"registerDetails\" */ 0x25)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let _150 := sload(keccak256(0, 64))\n                                    sstore(_115, /** @src 8:10440:10534  \"saleStatistics.totalRegisterTokenAmountLeft -= registerDetails[msg.sender].registerTokenAmount\" */ checked_sub_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(_115), /** @src 8:10487:10534  \"registerDetails[msg.sender].registerTokenAmount\" */ _150))\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(0, /** @src 8:7085:7095  \"msg.sender\" */ caller())\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(_115, /** @src 8:7182:7197  \"registerDetails\" */ 0x25)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    sstore(keccak256(0, 64), 0)\n                                    let cleaned_19 := and(sload(/** @src 8:10646:10659  \"registerToken\" */ 0x21), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _114)\n                                    /// @src 8:10646:10701  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                                    let _151 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:10646:10701  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                                    mstore(_151, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0xa9059cbb))\n                                    /// @src 8:10646:10701  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                                    let _152 := call(gas(), cleaned_19, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0, /** @src 8:10646:10701  \"registerToken.transfer(msg.sender, registerTokenAmount)\" */ _151, sub(abi_encode_address_uint256(add(_151, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:7085:7095  \"msg.sender\" */ caller(), /** @src 8:10646:10701  \"registerToken.transfer(msg.sender, registerTokenAmount)\" */ _150), _151), _151, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _115)\n                                    /// @src 8:10646:10701  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                                    if iszero(_152)\n                                    {\n                                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                        let pos_13 := mload(64)\n                                        returndatacopy(pos_13, 0, returndatasize())\n                                        revert(pos_13, returndatasize())\n                                    }\n                                    /// @src 8:10646:10701  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                                    let expr_24 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                    /// @src 8:10646:10701  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                                    if _152\n                                    {\n                                        let _153 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _115\n                                        /// @src 8:10646:10701  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                                        if gt(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _115, /** @src 8:10646:10701  \"registerToken.transfer(msg.sender, registerTokenAmount)\" */ returndatasize()) { _153 := returndatasize() }\n                                        finalize_allocation(_151, _153)\n                                        expr_24 := abi_decode_bool_fromMemory(_151, add(_151, _153))\n                                    }\n                                    /// @src 8:10715:10786  \"if (!successfullyTransferedRA) revert Errors.TokenTransferFailedError()\"\n                                    if /** @src 8:10719:10744  \"!successfullyTransferedRA\" */ iszero(expr_24)\n                                    /// @src 8:10715:10786  \"if (!successfullyTransferedRA) revert Errors.TokenTransferFailedError()\"\n                                    {\n                                        /// @src 8:10753:10786  \"Errors.TokenTransferFailedError()\"\n                                        let _154 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                        /// @src 8:10753:10786  \"Errors.TokenTransferFailedError()\"\n                                        mstore(_154, /** @src 8:16573:16606  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                                        /// @src 8:10753:10786  \"Errors.TokenTransferFailedError()\"\n                                        revert(_154, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                    }\n                                }\n                                let memPos_21 := mload(64)\n                                mstore(memPos_21, 1)\n                                return(memPos_21, _115)\n                            }\n                            case 0x74991569 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value0_1 := abi_decode_address_60557()\n                                /// @src 8:4738:4746  \"_address\"\n                                fun_onlyOwnerOrAdmin(/** @src 8:18478:18488  \"msg.sender\" */ caller())\n                                /// @src 8:18515:18581  \"sale.saleAddresses.vestingContractAddress = vestingContractAddress\"\n                                update_storage_value_offsett_address_to_address(value0_1)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _155 := and(/** @src 8:18596:18632  \"vestingContractAddress != address(0)\" */ value0_1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))\n                                /// @src 8:18592:18715  \"if (vestingContractAddress != address(0)) {...\"\n                                if /** @src 8:18596:18632  \"vestingContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _155))\n                                /// @src 8:18592:18715  \"if (vestingContractAddress != address(0)) {...\"\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    sstore(/** @src 8:18648:18704  \"vestingContract = IDappadVesting(vestingContractAddress)\" */ 0x24, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ or(and(sload(/** @src 8:18648:18704  \"vestingContract = IDappadVesting(vestingContractAddress)\" */ 0x24), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(160, 0xffffffffffffffffffffffff)), _155))\n                                }\n                                /// @src 8:18730:18776  \"VestingContractUpdated(vestingContractAddress)\"\n                                let _156 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                mstore(_156, _155)\n                                /// @src 8:18730:18776  \"VestingContractUpdated(vestingContractAddress)\"\n                                log1(_156, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32, /** @src 8:18730:18776  \"VestingContractUpdated(vestingContractAddress)\" */ 0x14e2fa1723f00282251323682126d9621e96707e56748f1f0c101fca472b37e9)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let memPos_22 := mload(64)\n                                mstore(memPos_22, /** @src 8:18515:18519  \"sale\" */ 0x01)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                return(memPos_22, 32)\n                            }\n                            case 0x85c06faa {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let value_19 := and(sload(/** @src 8:22945:22977  \"sale.refundDetails.refundEnabled\" */ 14), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xff)\n                                let memPos_23 := mload(64)\n                                mstore(memPos_23, iszero(iszero(value_19)))\n                                return(memPos_23, 32)\n                            }\n                            case 0x8d92becd {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value_20 := calldataload(4)\n                                let _157 := iszero(iszero(value_20))\n                                if iszero(eq(value_20, _157)) { revert(0, 0) }\n                                /// @src 8:4738:4746  \"_address\"\n                                fun_onlyOwnerOrAdmin(/** @src 8:18235:18245  \"msg.sender\" */ caller())\n                                /// @src 8:18272:18312  \"sale.saleDetails.salePaused = salePaused\"\n                                update_storage_value_offsett_bool_to_bool_60554(value_20)\n                                /// @src 8:18328:18357  \"SalePausedUpdated(salePaused)\"\n                                let _158 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                mstore(_158, _157)\n                                /// @src 8:18328:18357  \"SalePausedUpdated(salePaused)\"\n                                log1(_158, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32, /** @src 8:18328:18357  \"SalePausedUpdated(salePaused)\" */ 0xee255461932c47fb16cadcbfbbabc370146f9cea6f622aea8131cde4cdeff5e9)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let memPos_24 := mload(64)\n                                mstore(memPos_24, /** @src 8:18272:18276  \"sale\" */ 0x01)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                return(memPos_24, 32)\n                            }\n                            case 0x91d14854 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value1_3 := abi_decode_address()\n                                mstore(0, calldataload(4))\n                                mstore(32, 0)\n                                let _159 := keccak256(0, 64)\n                                mstore(0, and(value1_3, sub(shl(160, 1), 1)))\n                                mstore(32, _159)\n                                let value_21 := and(sload(keccak256(0, 64)), 0xff)\n                                let memPos_25 := mload(64)\n                                mstore(memPos_25, iszero(iszero(value_21)))\n                                return(memPos_25, 32)\n                            }\n                            case 0x95db35de {\n                                if callvalue() { revert(0, 0) }\n                                let _160 := 32\n                                if slt(add(calldatasize(), not(3)), _160) { revert(0, 0) }\n                                let offset_4 := calldataload(4)\n                                let _161 := 0xffffffffffffffff\n                                if gt(offset_4, _161) { revert(0, 0) }\n                                if iszero(slt(add(offset_4, 35), calldatasize())) { revert(0, 0) }\n                                let length_2 := calldataload(add(4, offset_4))\n                                if gt(length_2, _161) { revert(0, 0) }\n                                let _162 := 36\n                                if gt(add(add(offset_4, mul(length_2, _2)), _162), calldatasize()) { revert(0, 0) }\n                                /// @src 8:4738:4746  \"_address\"\n                                fun_onlyOwnerOrAdmin(/** @src 8:21748:21758  \"msg.sender\" */ caller())\n                                /// @src 8:21841:21854  \"uint256 i = 0\"\n                                let var_i_1 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                /// @src 8:21837:21935  \"for(uint256 i = 0; i < tierCount; i++) {...\"\n                                for { }\n                                /** @src 8:21856:21869  \"i < tierCount\" */ lt(var_i_1, length_2)\n                                /// @src 8:21841:21854  \"uint256 i = 0\"\n                                {\n                                    /// @src 8:21871:21874  \"i++\"\n                                    var_i_1 := increment_uint256(var_i_1)\n                                }\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let _163 := add(offset_4, mul(var_i_1, _2))\n                                    mstore(0, var_i_1)\n                                    mstore(_160, /** @src 8:21890:21901  \"tierDetails\" */ 0x26)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let dataSlot_5 := keccak256(0, 64)\n                                    sstore(dataSlot_5, calldataload(add(_163, _162)))\n                                    sstore(add(dataSlot_5, 1), calldataload(add(_163, 68)))\n                                    sstore(add(dataSlot_5, 2), calldataload(add(_163, 100)))\n                                    sstore(add(dataSlot_5, 3), calldataload(add(_163, 132)))\n                                    sstore(add(dataSlot_5, 4), calldataload(add(_163, 164)))\n                                    sstore(add(dataSlot_5, 5), calldataload(add(_163, 196)))\n                                    sstore(add(dataSlot_5, 6), calldataload(add(_163, 228)))\n                                }\n                                /// @src 8:21950:21993  \"SaleTierDetailsBatchUpdated(newTierDetails)\"\n                                let _164 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                let tail_2 := add(_164, _160)\n                                mstore(_164, _160)\n                                let pos_14 := tail_2\n                                mstore(tail_2, length_2)\n                                pos_14 := add(_164, 64)\n                                let srcPtr_1 := add(offset_4, _162)\n                                let i_4 := 0\n                                for { } lt(i_4, length_2) { i_4 := add(i_4, 1) }\n                                {\n                                    mstore(pos_14, calldataload(srcPtr_1))\n                                    mstore(add(pos_14, _160), calldataload(add(srcPtr_1, _160)))\n                                    mstore(add(pos_14, 64), calldataload(add(srcPtr_1, 64)))\n                                    let _165 := 96\n                                    mstore(add(pos_14, _165), calldataload(add(srcPtr_1, _165)))\n                                    let _166 := 128\n                                    mstore(add(pos_14, _166), calldataload(add(srcPtr_1, _166)))\n                                    let _167 := 160\n                                    mstore(add(pos_14, _167), calldataload(add(srcPtr_1, _167)))\n                                    let _168 := 192\n                                    mstore(add(pos_14, _168), calldataload(add(srcPtr_1, _168)))\n                                    pos_14 := add(pos_14, _2)\n                                    srcPtr_1 := add(srcPtr_1, _2)\n                                }\n                                /// @src 8:21950:21993  \"SaleTierDetailsBatchUpdated(newTierDetails)\"\n                                log1(_164, sub(pos_14, _164), 0xc646e9ebff3183f592a7b159713c5fce975d40a6cd6a7824e45b318c7156a725)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let memPos_26 := mload(64)\n                                mstore(memPos_26, 1)\n                                return(memPos_26, _160)\n                            }\n                            case 0x9a68404d {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 8:4542:4550  \"_address\"\n                                fun_notZeroAddress(/** @src 8:17877:17887  \"msg.sender\" */ caller())\n                                /// @src 8:4738:4746  \"_address\"\n                                fun_onlyOwnerOrAdmin(/** @src 8:17877:17887  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let cleaned_20 := and(sload(/** @src 8:17975:17990  \"investmentToken\" */ 0x22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))\n                                /// @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\"\n                                let _169 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\"\n                                mstore(_169, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x70a08231))\n                                mstore(/** @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\" */ add(_169, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:18046:18050  \"this\" */ address())\n                                /// @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\"\n                                let _170 := 32\n                                let _171 := staticcall(gas(), cleaned_20, _169, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36, /** @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\" */ _169, _170)\n                                if iszero(_171)\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let pos_15 := mload(64)\n                                    returndatacopy(pos_15, 0, returndatasize())\n                                    revert(pos_15, returndatasize())\n                                }\n                                /// @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\"\n                                let expr_25 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                /// @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\"\n                                if _171\n                                {\n                                    let _172 := _170\n                                    if gt(_170, returndatasize()) { _172 := returndatasize() }\n                                    finalize_allocation(_169, _172)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    if slt(sub(/** @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\" */ add(_169, _172), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _169), /** @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\" */ _170)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    { revert(0, 0) }\n                                    /// @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\"\n                                    expr_25 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_169)\n                                }\n                                /// @src 8:17975:18053  \"investmentToken.transfer(msg.sender, investmentToken.balanceOf(address(this)))\"\n                                let _173 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:17975:18053  \"investmentToken.transfer(msg.sender, investmentToken.balanceOf(address(this)))\"\n                                mstore(_173, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0xa9059cbb))\n                                /// @src 8:17975:18053  \"investmentToken.transfer(msg.sender, investmentToken.balanceOf(address(this)))\"\n                                let _174 := call(gas(), cleaned_20, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0, /** @src 8:17975:18053  \"investmentToken.transfer(msg.sender, investmentToken.balanceOf(address(this)))\" */ _173, sub(abi_encode_address_uint256(add(_173, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:17877:17887  \"msg.sender\" */ caller(), /** @src 8:17975:18053  \"investmentToken.transfer(msg.sender, investmentToken.balanceOf(address(this)))\" */ expr_25), _173), _173, /** @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\" */ _170)\n                                /// @src 8:17975:18053  \"investmentToken.transfer(msg.sender, investmentToken.balanceOf(address(this)))\"\n                                if iszero(_174)\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let pos_16 := mload(64)\n                                    returndatacopy(pos_16, 0, returndatasize())\n                                    revert(pos_16, returndatasize())\n                                }\n                                /// @src 8:17975:18053  \"investmentToken.transfer(msg.sender, investmentToken.balanceOf(address(this)))\"\n                                let expr_26 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                /// @src 8:17975:18053  \"investmentToken.transfer(msg.sender, investmentToken.balanceOf(address(this)))\"\n                                if _174\n                                {\n                                    let _175 := /** @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\" */ _170\n                                    /// @src 8:17975:18053  \"investmentToken.transfer(msg.sender, investmentToken.balanceOf(address(this)))\"\n                                    if gt(/** @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\" */ _170, /** @src 8:17975:18053  \"investmentToken.transfer(msg.sender, investmentToken.balanceOf(address(this)))\" */ returndatasize()) { _175 := returndatasize() }\n                                    finalize_allocation(_173, _175)\n                                    expr_26 := abi_decode_bool_fromMemory(_173, add(_173, _175))\n                                }\n                                /// @src 8:18063:18134  \"if (!successfullyTransferedIT) revert Errors.TokenTransferFailedError()\"\n                                if /** @src 8:18067:18092  \"!successfullyTransferedIT\" */ iszero(expr_26)\n                                /// @src 8:18063:18134  \"if (!successfullyTransferedIT) revert Errors.TokenTransferFailedError()\"\n                                {\n                                    /// @src 8:18101:18134  \"Errors.TokenTransferFailedError()\"\n                                    let _176 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:18101:18134  \"Errors.TokenTransferFailedError()\"\n                                    mstore(_176, /** @src 8:16573:16606  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                                    /// @src 8:18101:18134  \"Errors.TokenTransferFailedError()\"\n                                    revert(_176, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                let memPos_27 := mload(64)\n                                mstore(memPos_27, /** @src 8:18152:18156  \"true\" */ 0x01)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                return(memPos_27, /** @src 8:18012:18052  \"investmentToken.balanceOf(address(this))\" */ _170)\n                            }\n                            case /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x9d0c65f9 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                                let value0_2 := abi_decode_address_60557()\n                                let offset_5 := calldataload(68)\n                                if gt(offset_5, 0xffffffffffffffff) { revert(0, 0) }\n                                let value2_1, value3_1 := abi_decode_array_bytes32_dyn_calldata(add(4, offset_5), calldatasize())\n                                let ret_2 := /** @src 8:22182:22186  \"bool\" */ modifier_notZeroAddress(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ value0_2, calldataload(36), value2_1, value3_1)\n                                let memPos_28 := mload(64)\n                                mstore(memPos_28, iszero(iszero(ret_2)))\n                                return(memPos_28, 32)\n                            }\n                            case 0x9d1652e0 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                pop(allocate_and_zero_memory_struct_struct_SaleTierDetails())\n                                mstore(0, calldataload(4))\n                                mstore(32, /** @src 8:23270:23281  \"tierDetails\" */ 0x26)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let dataSlot_6 := keccak256(0, 64)\n                                let memPtr_14 := mload(64)\n                                finalize_allocation_60550(memPtr_14)\n                                mstore(memPtr_14, sload(dataSlot_6))\n                                mstore(add(memPtr_14, 32), sload(add(dataSlot_6, 1)))\n                                mstore(add(memPtr_14, 64), sload(add(dataSlot_6, 2)))\n                                mstore(add(memPtr_14, 96), sload(add(dataSlot_6, 3)))\n                                mstore(add(memPtr_14, 128), sload(add(dataSlot_6, 4)))\n                                mstore(add(memPtr_14, 160), sload(add(dataSlot_6, 5)))\n                                mstore(add(memPtr_14, 192), sload(add(dataSlot_6, 6)))\n                                let memPos_29 := mload(64)\n                                abi_encode_struct_SaleTierDetails(memPtr_14, memPos_29)\n                                return(memPos_29, _2)\n                            }\n                            case 0xa217fddf {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPos_30 := mload(64)\n                                mstore(memPos_30, 0)\n                                return(memPos_30, 32)\n                            }\n                            case 0xa798149f {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value0_3 := abi_decode_address_60557()\n                                /// @src 8:4738:4746  \"_address\"\n                                fun_onlyOwnerOrAdmin(/** @src 8:18913:18923  \"msg.sender\" */ caller())\n                                /// @src 8:18950:19032  \"sale.saleAddresses.stakeControllerContractAddress = stakeControllerContractAddress\"\n                                update_storage_value_offsett_address_to_address_60573(value0_3)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _177 := and(/** @src 8:19047:19091  \"stakeControllerContractAddress != address(0)\" */ value0_3, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))\n                                /// @src 8:19043:19198  \"if (stakeControllerContractAddress != address(0)) {...\"\n                                if /** @src 8:19047:19091  \"stakeControllerContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _177))\n                                /// @src 8:19043:19198  \"if (stakeControllerContractAddress != address(0)) {...\"\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    sstore(/** @src 8:19107:19187  \"stakeControllerContract = IDappadStakeController(stakeControllerContractAddress)\" */ 0x23, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ or(and(sload(/** @src 8:19107:19187  \"stakeControllerContract = IDappadStakeController(stakeControllerContractAddress)\" */ 0x23), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(160, 0xffffffffffffffffffffffff)), _177))\n                                }\n                                /// @src 8:19213:19275  \"StakeControllerContractUpdated(stakeControllerContractAddress)\"\n                                let _178 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                mstore(_178, _177)\n                                /// @src 8:19213:19275  \"StakeControllerContractUpdated(stakeControllerContractAddress)\"\n                                log1(_178, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32, /** @src 8:19213:19275  \"StakeControllerContractUpdated(stakeControllerContractAddress)\" */ 0xc7e8d640cba1ef6286349798e8879e216a16e2a9b04ec71677a4aab6e6f95fb2)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let memPos_31 := mload(64)\n                                mstore(memPos_31, /** @src 8:18950:18954  \"sale\" */ 0x01)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                return(memPos_31, 32)\n                            }\n                            case 0xad4222c7 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, and(abi_decode_address_60557(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 8:887:939  \"mapping(address => uint256) public investmentAmounts\" */ 40)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _179 := sload(keccak256(0, 64))\n                                let memPos_32 := mload(64)\n                                mstore(memPos_32, _179)\n                                return(memPos_32, 32)\n                            }\n                            case 0xade65212 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let cleaned_21 := and(sload(/** @src 8:24892:24941  \"sale.saleAddresses.stakeControllerContractAddress\" */ 22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))\n                                let memPos_33 := mload(64)\n                                mstore(memPos_33, cleaned_21)\n                                return(memPos_33, 32)\n                            }\n                            case 0xb26efbbc {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let memPtr_15 := mload(64)\n                                finalize_allocation_60549(memPtr_15)\n                                mstore(memPtr_15, calldataload(4))\n                                let _180 := add(memPtr_15, 32)\n                                mstore(_180, calldataload(36))\n                                /// @src 8:4738:4746  \"_address\"\n                                fun_onlyOwnerOrAdmin(/** @src 8:21175:21185  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _181 := mload(memPtr_15)\n                                sstore(/** @src 8:21212:21230  \"sale.ticketDetails\" */ 15, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _181)\n                                sstore(16, mload(_180))\n                                /// @src 8:21265:21307  \"SaleTicketDetailsUpdated(newTicketDetails)\"\n                                let _182 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                mstore(_182, _181)\n                                mstore(add(_182, 32), mload(_180))\n                                /// @src 8:21265:21307  \"SaleTicketDetailsUpdated(newTicketDetails)\"\n                                log1(_182, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64, /** @src 8:21265:21307  \"SaleTicketDetailsUpdated(newTicketDetails)\" */ 0x8e211f8d34487ff0db8d0799459246b2b6e106767b7281309df4d88ac9312cca)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let memPos_34 := mload(64)\n                                mstore(memPos_34, 1)\n                                return(memPos_34, 32)\n                            }\n                            case 0xbf03314a {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let value_22 := and(sload(/** @src 8:502:537  \"IERC20Extented public registerToken\" */ 33), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))\n                                let memPos_35 := mload(64)\n                                mstore(memPos_35, value_22)\n                                return(memPos_35, 32)\n                            }\n                            case 0xc033a490 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, and(abi_decode_address_60557(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 8:841:881  \"mapping(address => bool) public refunded\" */ 39)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let value_23 := and(sload(keccak256(0, 64)), 0xff)\n                                let memPos_36 := mload(64)\n                                mstore(memPos_36, iszero(iszero(value_23)))\n                                return(memPos_36, 32)\n                            }\n                            case 0xc077da9e {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 8:24313:24405  \"block.timestamp >= sale.saleDetails.saleStart && block.timestamp <= sale.saleDetails.saleEnd\"\n                                let expr_27 := /** @src 8:24313:24358  \"block.timestamp >= sale.saleDetails.saleStart\" */ iszero(lt(/** @src 8:24313:24328  \"block.timestamp\" */ timestamp(), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(4)))\n                                /// @src 8:24313:24405  \"block.timestamp >= sale.saleDetails.saleStart && block.timestamp <= sale.saleDetails.saleEnd\"\n                                if expr_27\n                                {\n                                    expr_27 := /** @src 8:24362:24405  \"block.timestamp <= sale.saleDetails.saleEnd\" */ iszero(gt(/** @src 8:24313:24328  \"block.timestamp\" */ timestamp(), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:24381:24405  \"sale.saleDetails.saleEnd\" */ 5)))\n                                }\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let memPos_37 := mload(64)\n                                mstore(memPos_37, iszero(iszero(expr_27)))\n                                return(memPos_37, 32)\n                            }\n                            case 0xc36c0871 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let _183 := sload(/** @src 8:447:495  \"IDappadSale.SaleStatistics public saleStatistics\" */ 28)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _184 := sload(/** @src 8:447:495  \"IDappadSale.SaleStatistics public saleStatistics\" */ 29)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _185 := sload(/** @src 8:447:495  \"IDappadSale.SaleStatistics public saleStatistics\" */ 30)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _186 := sload(/** @src 8:447:495  \"IDappadSale.SaleStatistics public saleStatistics\" */ 31)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _187 := sload(/** @src 8:447:495  \"IDappadSale.SaleStatistics public saleStatistics\" */ 32)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let memPos_38 := mload(64)\n                                mstore(memPos_38, _183)\n                                mstore(add(memPos_38, /** @src 8:447:495  \"IDappadSale.SaleStatistics public saleStatistics\" */ 32), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _184)\n                                mstore(add(memPos_38, 64), _185)\n                                mstore(add(memPos_38, 96), _186)\n                                mstore(add(memPos_38, 128), _187)\n                                return(memPos_38, 160)\n                            }\n                            case 0xcb00baf5 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value_24 := calldataload(4)\n                                let offset_6 := calldataload(36)\n                                if gt(offset_6, 0xffffffffffffffff) { revert(0, 0) }\n                                let value1_4, value2_2 := abi_decode_array_bytes32_dyn_calldata(add(4, offset_6), calldatasize())\n                                /// @src 8:4771:4852  \"modifier whenSaleIsNotPaused() {...\"\n                                fun_whenSaleIsNotPaused()\n                                /// @src 8:4542:4550  \"_address\"\n                                fun_notZeroAddress(/** @src 8:10948:10958  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _188 := sub(shl(160, 1), 1)\n                                let cleaned_22 := and(sload(/** @src 8:10979:10994  \"investmentToken\" */ 0x22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _188)\n                                /// @src 8:4995:5001  \"amount\"\n                                fun_hasEnoughAllowance(cleaned_22, /** @src 8:10948:10958  \"msg.sender\" */ caller(), /** @src 8:4995:5001  \"amount\" */ value_24)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _189 := sload(/** @src 8:11045:11061  \"sale.fcfsDetails\" */ 11)\n                                /// @src 8:11041:11124  \"if (sale.fcfsDetails.fcfsSaleDuration <= 0) revert Errors.FCFSSaleNotEnabledError()\"\n                                if /** @src 8:11045:11083  \"sale.fcfsDetails.fcfsSaleDuration <= 0\" */ iszero(_189)\n                                /// @src 8:11041:11124  \"if (sale.fcfsDetails.fcfsSaleDuration <= 0) revert Errors.FCFSSaleNotEnabledError()\"\n                                {\n                                    /// @src 8:11092:11124  \"Errors.FCFSSaleNotEnabledError()\"\n                                    let _190 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:11092:11124  \"Errors.FCFSSaleNotEnabledError()\"\n                                    mstore(_190, shl(226, 0x2466b38d))\n                                    revert(_190, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                let _191 := sload(/** @src 8:11157:11181  \"sale.saleDetails.saleEnd\" */ 5)\n                                /// @src 8:11134:11259  \"if (block.timestamp < (sale.saleDetails.saleEnd - sale.fcfsDetails.fcfsSaleDuration)) revert Errors.FCFSSaleNotStartedError()\"\n                                if /** @src 8:11138:11218  \"block.timestamp < (sale.saleDetails.saleEnd - sale.fcfsDetails.fcfsSaleDuration)\" */ lt(/** @src 8:11138:11153  \"block.timestamp\" */ timestamp(), /** @src 8:11157:11217  \"sale.saleDetails.saleEnd - sale.fcfsDetails.fcfsSaleDuration\" */ checked_sub_uint256(_191, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _189))\n                                /// @src 8:11134:11259  \"if (block.timestamp < (sale.saleDetails.saleEnd - sale.fcfsDetails.fcfsSaleDuration)) revert Errors.FCFSSaleNotStartedError()\"\n                                {\n                                    /// @src 8:11227:11259  \"Errors.FCFSSaleNotStartedError()\"\n                                    let _192 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:11227:11259  \"Errors.FCFSSaleNotStartedError()\"\n                                    mstore(_192, shl(225, 0x2709ab93))\n                                    revert(_192, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:11269:11355  \"if (block.timestamp >= sale.saleDetails.saleEnd) revert Errors.SaleAlreadyEndedError()\"\n                                if /** @src 8:11273:11316  \"block.timestamp >= sale.saleDetails.saleEnd\" */ iszero(lt(/** @src 8:11138:11153  \"block.timestamp\" */ timestamp(), /** @src 8:11273:11316  \"block.timestamp >= sale.saleDetails.saleEnd\" */ _191))\n                                /// @src 8:11269:11355  \"if (block.timestamp >= sale.saleDetails.saleEnd) revert Errors.SaleAlreadyEndedError()\"\n                                {\n                                    /// @src 8:11325:11355  \"Errors.SaleAlreadyEndedError()\"\n                                    let _193 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:11325:11355  \"Errors.SaleAlreadyEndedError()\"\n                                    mstore(_193, /** @src 8:7648:7678  \"Errors.SaleAlreadyEndedError()\" */ shl(224, 0x6b62c0a5))\n                                    /// @src 8:11325:11355  \"Errors.SaleAlreadyEndedError()\"\n                                    revert(_193, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:11366:11417  \"if (amount == 0) revert Errors.InvalidAmountError()\"\n                                if /** @src 8:11370:11381  \"amount == 0\" */ iszero(value_24)\n                                /// @src 8:11366:11417  \"if (amount == 0) revert Errors.InvalidAmountError()\"\n                                {\n                                    /// @src 8:11390:11417  \"Errors.InvalidAmountError()\"\n                                    let _194 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:11390:11417  \"Errors.InvalidAmountError()\"\n                                    mstore(_194, /** @src 8:7731:7758  \"Errors.InvalidAmountError()\" */ shl(227, 0x0f51ac85))\n                                    /// @src 8:11390:11417  \"Errors.InvalidAmountError()\"\n                                    revert(_194, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:11428:11584  \"if (sale.saleAddresses.nftContractAddress != address(0)) {...\"\n                                if /** @src 8:11432:11483  \"sale.saleAddresses.nftContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:11432:11469  \"sale.saleAddresses.nftContractAddress\" */ 21), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _188)))\n                                /// @src 8:11428:11584  \"if (sale.saleAddresses.nftContractAddress != address(0)) {...\"\n                                {\n                                    /// @src 8:4542:4550  \"_address\"\n                                    fun_notZeroAddress(/** @src 8:10948:10958  \"msg.sender\" */ caller())\n                                    /// @src 8:11499:11573  \"if (_getUserNftBalance(msg.sender) == 0) revert Errors.UserHasNoNFTError()\"\n                                    if /** @src 8:11503:11538  \"_getUserNftBalance(msg.sender) == 0\" */ iszero(/** @src 8:24954:25275  \"function _getUserNftBalance(address userAddress) internal view notZeroAddress(userAddress) returns (uint256) {...\" */ fun_getUserNftBalance_inner())\n                                    /// @src 8:11499:11573  \"if (_getUserNftBalance(msg.sender) == 0) revert Errors.UserHasNoNFTError()\"\n                                    {\n                                        /// @src 8:11547:11573  \"Errors.UserHasNoNFTError()\"\n                                        let _195 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                        /// @src 8:11547:11573  \"Errors.UserHasNoNFTError()\"\n                                        mstore(_195, /** @src 8:14814:14840  \"Errors.UserHasNoNFTError()\" */ shl(225, 0x049a4b73))\n                                        /// @src 8:11547:11573  \"Errors.UserHasNoNFTError()\"\n                                        revert(_195, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                    }\n                                }\n                                /// @src 8:11594:11619  \"uint256 userTierIndex = 0\"\n                                let var_userTierIndex := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                /// @src 8:11630:11791  \"if (sale.saleAddresses.stakeControllerContractAddress != address(0)) {...\"\n                                if /** @src 8:11634:11697  \"sale.saleAddresses.stakeControllerContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:11634:11683  \"sale.saleAddresses.stakeControllerContractAddress\" */ 22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _188)))\n                                /// @src 8:11630:11791  \"if (sale.saleAddresses.stakeControllerContractAddress != address(0)) {...\"\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let cleaned_23 := and(sload(/** @src 8:11728:11751  \"stakeControllerContract\" */ 0x23), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _188)\n                                    /// @src 8:11728:11780  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                                    let _196 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:11728:11780  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                                    mstore(_196, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0xbb9d537b))\n                                    mstore(/** @src 8:11728:11780  \"stakeControllerContract.getUserTierIndex(msg.sender)\" */ add(_196, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:10948:10958  \"msg.sender\" */ caller())\n                                    /// @src 8:11728:11780  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                                    let _197 := staticcall(gas(), cleaned_23, _196, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36, /** @src 8:11728:11780  \"stakeControllerContract.getUserTierIndex(msg.sender)\" */ _196, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32)\n                                    /// @src 8:11728:11780  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                                    if iszero(_197)\n                                    {\n                                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                        let pos_17 := mload(64)\n                                        returndatacopy(pos_17, 0, returndatasize())\n                                        revert(pos_17, returndatasize())\n                                    }\n                                    /// @src 8:11728:11780  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                                    let expr_28 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                    /// @src 8:11728:11780  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                                    if _197\n                                    {\n                                        let _198 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 32\n                                        /// @src 8:11728:11780  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                                        if gt(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _198, /** @src 8:11728:11780  \"stakeControllerContract.getUserTierIndex(msg.sender)\" */ returndatasize()) { _198 := returndatasize() }\n                                        finalize_allocation(_196, _198)\n                                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                        if slt(sub(/** @src 8:11728:11780  \"stakeControllerContract.getUserTierIndex(msg.sender)\" */ add(_196, _198), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _196), 32) { revert(0, 0) }\n                                        /// @src 8:11728:11780  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                                        expr_28 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_196)\n                                    }\n                                    /// @src 8:11712:11780  \"userTierIndex = stakeControllerContract.getUserTierIndex(msg.sender)\"\n                                    var_userTierIndex := expr_28\n                                }\n                                /// @src 8:11805:11875  \"userTierIndex == 0 && tierDetails[0].whitelistMerkleRoot != bytes32(0)\"\n                                let expr_29 := /** @src 8:11805:11823  \"userTierIndex == 0\" */ iszero(var_userTierIndex)\n                                /// @src 8:11805:11875  \"userTierIndex == 0 && tierDetails[0].whitelistMerkleRoot != bytes32(0)\"\n                                if expr_29\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(0, 0)\n                                    mstore(32, /** @src 8:11827:11838  \"tierDetails\" */ 0x26)\n                                    /// @src 8:11805:11875  \"userTierIndex == 0 && tierDetails[0].whitelistMerkleRoot != bytes32(0)\"\n                                    expr_29 := /** @src 8:11827:11875  \"tierDetails[0].whitelistMerkleRoot != bytes32(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:11827:11861  \"tierDetails[0].whitelistMerkleRoot\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), 4))))\n                                }\n                                /// @src 8:11801:12016  \"if (userTierIndex == 0 && tierDetails[0].whitelistMerkleRoot != bytes32(0)) {...\"\n                                if expr_29\n                                {\n                                    /// @src 8:11891:12005  \"if (!checkWhitelistEligibility(msg.sender, userTierIndex, whitelistProof)) revert Errors.UserNotWhitelistedError()\"\n                                    if /** @src 8:11895:11964  \"!checkWhitelistEligibility(msg.sender, userTierIndex, whitelistProof)\" */ iszero(/** @src 8:22182:22186  \"bool\" */ modifier_notZeroAddress(/** @src 8:10948:10958  \"msg.sender\" */ caller(), /** @src 8:11896:11964  \"checkWhitelistEligibility(msg.sender, userTierIndex, whitelistProof)\" */ var_userTierIndex, value1_4, value2_2))\n                                    /// @src 8:11891:12005  \"if (!checkWhitelistEligibility(msg.sender, userTierIndex, whitelistProof)) revert Errors.UserNotWhitelistedError()\"\n                                    {\n                                        /// @src 8:11973:12005  \"Errors.UserNotWhitelistedError()\"\n                                        let _199 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                        /// @src 8:11973:12005  \"Errors.UserNotWhitelistedError()\"\n                                        mstore(_199, /** @src 8:8206:8238  \"Errors.UserNotWhitelistedError()\" */ shl(226, 0x05880f01))\n                                        /// @src 8:11973:12005  \"Errors.UserNotWhitelistedError()\"\n                                        revert(_199, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                    }\n                                }\n                                /// @src 8:12030:12067  \"investmentToken.balanceOf(msg.sender)\"\n                                let _200 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:12030:12067  \"investmentToken.balanceOf(msg.sender)\"\n                                mstore(_200, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x70a08231))\n                                mstore(/** @src 8:12030:12067  \"investmentToken.balanceOf(msg.sender)\" */ add(_200, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:10948:10958  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _201 := 32\n                                /// @src 8:12030:12067  \"investmentToken.balanceOf(msg.sender)\"\n                                let _202 := staticcall(gas(), cleaned_22, _200, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36, /** @src 8:12030:12067  \"investmentToken.balanceOf(msg.sender)\" */ _200, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _201)\n                                /// @src 8:12030:12067  \"investmentToken.balanceOf(msg.sender)\"\n                                if iszero(_202)\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let pos_18 := mload(64)\n                                    returndatacopy(pos_18, 0, returndatasize())\n                                    revert(pos_18, returndatasize())\n                                }\n                                /// @src 8:12030:12067  \"investmentToken.balanceOf(msg.sender)\"\n                                let expr_30 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                /// @src 8:12030:12067  \"investmentToken.balanceOf(msg.sender)\"\n                                if _202\n                                {\n                                    let _203 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _201\n                                    /// @src 8:12030:12067  \"investmentToken.balanceOf(msg.sender)\"\n                                    if gt(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _201, /** @src 8:12030:12067  \"investmentToken.balanceOf(msg.sender)\" */ returndatasize()) { _203 := returndatasize() }\n                                    finalize_allocation(_200, _203)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    if slt(sub(/** @src 8:12030:12067  \"investmentToken.balanceOf(msg.sender)\" */ add(_200, _203), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _200), _201) { revert(0, 0) }\n                                    /// @src 8:12030:12067  \"investmentToken.balanceOf(msg.sender)\"\n                                    expr_30 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_200)\n                                }\n                                /// @src 8:12026:12118  \"if (investmentToken.balanceOf(msg.sender) < amount) revert Errors.InsufficientBalanceError()\"\n                                if /** @src 8:12030:12076  \"investmentToken.balanceOf(msg.sender) < amount\" */ lt(expr_30, value_24)\n                                /// @src 8:12026:12118  \"if (investmentToken.balanceOf(msg.sender) < amount) revert Errors.InsufficientBalanceError()\"\n                                {\n                                    /// @src 8:12085:12118  \"Errors.InsufficientBalanceError()\"\n                                    let _204 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:12085:12118  \"Errors.InsufficientBalanceError()\"\n                                    mstore(_204, /** @src 8:15952:15985  \"Errors.InsufficientBalanceError()\" */ shl(224, 0x384d3c59))\n                                    /// @src 8:12085:12118  \"Errors.InsufficientBalanceError()\"\n                                    revert(_204, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                mstore(0, var_userTierIndex)\n                                mstore(_201, /** @src 8:12141:12152  \"tierDetails\" */ 0x26)\n                                /// @src 8:12128:12237  \"if (amount < tierDetails[userTierIndex].minInvestmentAmount) revert Errors.MinimumInvestmentNotReachedError()\"\n                                if /** @src 8:12132:12187  \"amount < tierDetails[userTierIndex].minInvestmentAmount\" */ lt(value_24, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(keccak256(0, 64)))\n                                /// @src 8:12128:12237  \"if (amount < tierDetails[userTierIndex].minInvestmentAmount) revert Errors.MinimumInvestmentNotReachedError()\"\n                                {\n                                    /// @src 8:12196:12237  \"Errors.MinimumInvestmentNotReachedError()\"\n                                    let _205 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:12196:12237  \"Errors.MinimumInvestmentNotReachedError()\"\n                                    mstore(_205, /** @src 8:8531:8572  \"Errors.MinimumInvestmentNotReachedError()\" */ shl(224, 0xba4c4493))\n                                    /// @src 8:12196:12237  \"Errors.MinimumInvestmentNotReachedError()\"\n                                    revert(_205, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                mstore(0, /** @src 8:10948:10958  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(_201, /** @src 8:12251:12268  \"investmentAmounts\" */ 0x28)\n                                /// @src 8:12251:12289  \"investmentAmounts[msg.sender] + amount\"\n                                let expr_31 := checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(keccak256(0, 64)), /** @src 8:12251:12289  \"investmentAmounts[msg.sender] + amount\" */ value_24)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(0, var_userTierIndex)\n                                mstore(_201, /** @src 8:12141:12152  \"tierDetails\" */ 0x26)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _206 := sload(/** @src 8:12293:12339  \"tierDetails[userTierIndex].maxInvestmentAmount\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), 1))\n                                /// @src 8:12247:12432  \"if (investmentAmounts[msg.sender] + amount > (tierDetails[userTierIndex].maxInvestmentAmount * sale.fcfsDetails.fcfsSaleMultiplier / 1000)) revert Errors.MaximumInvestmentReachedError()\"\n                                if /** @src 8:12251:12385  \"investmentAmounts[msg.sender] + amount > (tierDetails[userTierIndex].maxInvestmentAmount * sale.fcfsDetails.fcfsSaleMultiplier / 1000)\" */ gt(expr_31, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ div(/** @src 8:12293:12377  \"tierDetails[userTierIndex].maxInvestmentAmount * sale.fcfsDetails.fcfsSaleMultiplier\" */ checked_mul_uint256(_206, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:12342:12377  \"sale.fcfsDetails.fcfsSaleMultiplier\" */ 12)), /** @src 8:12380:12384  \"1000\" */ 0x03e8))\n                                /// @src 8:12247:12432  \"if (investmentAmounts[msg.sender] + amount > (tierDetails[userTierIndex].maxInvestmentAmount * sale.fcfsDetails.fcfsSaleMultiplier / 1000)) revert Errors.MaximumInvestmentReachedError()\"\n                                {\n                                    /// @src 8:12394:12432  \"Errors.MaximumInvestmentReachedError()\"\n                                    let _207 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:12394:12432  \"Errors.MaximumInvestmentReachedError()\"\n                                    mstore(_207, /** @src 8:9051:9089  \"Errors.MaximumInvestmentReachedError()\" */ shl(225, 0x765aa7df))\n                                    /// @src 8:12394:12432  \"Errors.MaximumInvestmentReachedError()\"\n                                    revert(_207, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                let _208 := sload(/** @src 8:12447:12461  \"saleStatistics\" */ 0x1c)\n                                /// @src 8:12447:12492  \"saleStatistics.totalInvestmentAmount + amount\"\n                                let expr_32 := checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _208, /** @src 8:12447:12492  \"saleStatistics.totalInvestmentAmount + amount\" */ value_24)\n                                /// @src 8:12443:12579  \"if (saleStatistics.totalInvestmentAmount + amount > sale.saleDetails.maxInvestmentAmount) revert Errors.MaxTotalInvestmentReachedError()\"\n                                if /** @src 8:12447:12531  \"saleStatistics.totalInvestmentAmount + amount > sale.saleDetails.maxInvestmentAmount\" */ gt(expr_32, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:12495:12531  \"sale.saleDetails.maxInvestmentAmount\" */ 7))\n                                /// @src 8:12443:12579  \"if (saleStatistics.totalInvestmentAmount + amount > sale.saleDetails.maxInvestmentAmount) revert Errors.MaxTotalInvestmentReachedError()\"\n                                {\n                                    /// @src 8:12540:12579  \"Errors.MaxTotalInvestmentReachedError()\"\n                                    let _209 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:12540:12579  \"Errors.MaxTotalInvestmentReachedError()\"\n                                    mstore(_209, /** @src 8:9378:9417  \"Errors.MaxTotalInvestmentReachedError()\" */ shl(224, 0xf39595f9))\n                                    /// @src 8:12540:12579  \"Errors.MaxTotalInvestmentReachedError()\"\n                                    revert(_209, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                sstore(/** @src 8:12447:12461  \"saleStatistics\" */ 0x1c, /** @src 8:12590:12636  \"saleStatistics.totalInvestmentAmount += amount\" */ checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _208, /** @src 8:12590:12636  \"saleStatistics.totalInvestmentAmount += amount\" */ value_24))\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(0, /** @src 8:10948:10958  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(_201, /** @src 8:12251:12268  \"investmentAmounts\" */ 0x28)\n                                /// @src 8:12647:12805  \"if(investmentAmounts[msg.sender] == 0) {...\"\n                                if /** @src 8:12650:12684  \"investmentAmounts[msg.sender] == 0\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(keccak256(0, 64)))\n                                /// @src 8:12647:12805  \"if(investmentAmounts[msg.sender] == 0) {...\"\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    sstore(/** @src 8:12700:12732  \"saleStatistics.totalParticipants\" */ 30, /** @src 8:12700:12734  \"saleStatistics.totalParticipants++\" */ increment_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:12700:12732  \"saleStatistics.totalParticipants\" */ 30)))\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(0, var_userTierIndex)\n                                    mstore(_201, /** @src 8:12141:12152  \"tierDetails\" */ 0x26)\n                                    /// @src 8:12748:12792  \"tierDetails[userTierIndex].totalParticipants\"\n                                    let _210 := add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), /** @src 8:12495:12531  \"sale.saleDetails.maxInvestmentAmount\" */ 6)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    sstore(_210, /** @src 8:12748:12794  \"tierDetails[userTierIndex].totalParticipants++\" */ increment_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:12748:12794  \"tierDetails[userTierIndex].totalParticipants++\" */ _210)))\n                                }\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(0, /** @src 8:10948:10958  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(_201, /** @src 8:12251:12268  \"investmentAmounts\" */ 0x28)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let dataSlot_7 := keccak256(0, 64)\n                                sstore(dataSlot_7, /** @src 8:12815:12854  \"investmentAmounts[msg.sender] += amount\" */ checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:12815:12854  \"investmentAmounts[msg.sender] += amount\" */ dataSlot_7), value_24))\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(0, var_userTierIndex)\n                                mstore(_201, /** @src 8:12141:12152  \"tierDetails\" */ 0x26)\n                                /// @src 8:12864:12912  \"tierDetails[userTierIndex].totalInvestmentAmount\"\n                                let _211 := add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), /** @src 8:11157:11181  \"sale.saleDetails.saleEnd\" */ 5)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                sstore(_211, /** @src 8:12864:12922  \"tierDetails[userTierIndex].totalInvestmentAmount += amount\" */ checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:12864:12922  \"tierDetails[userTierIndex].totalInvestmentAmount += amount\" */ _211), value_24))\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(0, /** @src 8:10948:10958  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(_201, /** @src 8:12251:12268  \"investmentAmounts\" */ 0x28)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _212 := sload(keccak256(0, 64))\n                                let _213 := sload(/** @src 8:12447:12461  \"saleStatistics\" */ 0x1c)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _214 := sload(/** @src 8:13061:13093  \"saleStatistics.totalParticipants\" */ 30)\n                                /// @src 8:4542:4550  \"_address\"\n                                fun_notZeroAddress(/** @src 8:10948:10958  \"msg.sender\" */ caller())\n                                /// @src 8:4561:4562  \"_\"\n                                let _215 := /** @src 8:24954:25275  \"function _getUserNftBalance(address userAddress) internal view notZeroAddress(userAddress) returns (uint256) {...\" */ fun_getUserNftBalance_inner()\n                                /// @src 8:12938:13143  \"UserJoinedFcfsSale(msg.sender, userTierIndex, amount, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, saleStatistics.totalParticipants, block.timestamp, _getUserNftBalance(msg.sender))\"\n                                let _216 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:12938:13143  \"UserJoinedFcfsSale(msg.sender, userTierIndex, amount, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, saleStatistics.totalParticipants, block.timestamp, _getUserNftBalance(msg.sender))\"\n                                log1(_216, sub(abi_encode_address_uint256_uint256_uint256_uint256_uint256_uint256_uint256(_216, /** @src 8:10948:10958  \"msg.sender\" */ caller(), /** @src 8:12938:13143  \"UserJoinedFcfsSale(msg.sender, userTierIndex, amount, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, saleStatistics.totalParticipants, block.timestamp, _getUserNftBalance(msg.sender))\" */ var_userTierIndex, value_24, _212, _213, _214, /** @src 8:11138:11153  \"block.timestamp\" */ timestamp(), /** @src 8:12938:13143  \"UserJoinedFcfsSale(msg.sender, userTierIndex, amount, investmentAmounts[msg.sender], saleStatistics.totalInvestmentAmount, saleStatistics.totalParticipants, block.timestamp, _getUserNftBalance(msg.sender))\" */ _215), _216), 0x5c0e83039564cf1c09a1233d5865e63cb005ae1aae497e1edb14cae9fdb70454)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let cleaned_24 := and(sload(/** @src 8:10979:10994  \"investmentToken\" */ 0x22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _188)\n                                /// @src 8:13184:13247  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                                let _217 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:13184:13247  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                                mstore(_217, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x23b872dd))\n                                /// @src 8:13184:13247  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                                let _218 := call(gas(), cleaned_24, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0, /** @src 8:13184:13247  \"investmentToken.transferFrom(msg.sender, address(this), amount)\" */ _217, sub(abi_encode_address_address_uint256(add(_217, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:10948:10958  \"msg.sender\" */ caller(), /** @src 8:13233:13237  \"this\" */ address(), /** @src 8:13184:13247  \"investmentToken.transferFrom(msg.sender, address(this), amount)\" */ value_24), _217), _217, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _201)\n                                /// @src 8:13184:13247  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                                if iszero(_218)\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let pos_19 := mload(64)\n                                    returndatacopy(pos_19, 0, returndatasize())\n                                    revert(pos_19, returndatasize())\n                                }\n                                /// @src 8:13184:13247  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                                let expr_33 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                /// @src 8:13184:13247  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                                if _218\n                                {\n                                    let _219 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _201\n                                    /// @src 8:13184:13247  \"investmentToken.transferFrom(msg.sender, address(this), amount)\"\n                                    if gt(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _201, /** @src 8:13184:13247  \"investmentToken.transferFrom(msg.sender, address(this), amount)\" */ returndatasize()) { _219 := returndatasize() }\n                                    finalize_allocation(_217, _219)\n                                    expr_33 := abi_decode_bool_fromMemory(_217, add(_217, _219))\n                                }\n                                /// @src 8:13257:13326  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                                if /** @src 8:13261:13284  \"!successfullyTransfered\" */ iszero(expr_33)\n                                /// @src 8:13257:13326  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                                {\n                                    /// @src 8:13293:13326  \"Errors.TokenTransferFailedError()\"\n                                    let _220 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:13293:13326  \"Errors.TokenTransferFailedError()\"\n                                    mstore(_220, /** @src 8:16573:16606  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                                    /// @src 8:13293:13326  \"Errors.TokenTransferFailedError()\"\n                                    revert(_220, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:13341:13435  \"sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0)\"\n                                let expr_34 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:13341:13378  \"sale.saleDetails.registerTokenEnabled\" */ 9), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xff)\n                                /// @src 8:13341:13435  \"sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0)\"\n                                if expr_34\n                                {\n                                    expr_34 := /** @src 8:13382:13435  \"sale.saleAddresses.registerTokenAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:13382:13421  \"sale.saleAddresses.registerTokenAddress\" */ 18), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _188)))\n                                }\n                                /// @src 8:13341:13490  \"sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0) && registerDetails[msg.sender].registerTokenAmount > 0\"\n                                let expr_35 := expr_34\n                                if expr_34\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(0, /** @src 8:10948:10958  \"msg.sender\" */ caller())\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(_201, /** @src 8:13439:13454  \"registerDetails\" */ 0x25)\n                                    /// @src 8:13341:13490  \"sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0) && registerDetails[msg.sender].registerTokenAmount > 0\"\n                                    expr_35 := /** @src 8:13439:13490  \"registerDetails[msg.sender].registerTokenAmount > 0\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(keccak256(0, 64))))\n                                }\n                                /// @src 8:13337:13955  \"if (sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0) && registerDetails[msg.sender].registerTokenAmount > 0) {...\"\n                                if expr_35\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(0, /** @src 8:10948:10958  \"msg.sender\" */ caller())\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(_201, /** @src 8:13536:13551  \"registerDetails\" */ 0x25)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let _221 := sload(keccak256(0, 64))\n                                    sstore(_201, /** @src 8:13598:13692  \"saleStatistics.totalRegisterTokenAmountLeft -= registerDetails[msg.sender].registerTokenAmount\" */ checked_sub_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(_201), /** @src 8:13645:13692  \"registerDetails[msg.sender].registerTokenAmount\" */ _221))\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(0, /** @src 8:10948:10958  \"msg.sender\" */ caller())\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(_201, /** @src 8:13536:13551  \"registerDetails\" */ 0x25)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    sstore(keccak256(0, 64), 0)\n                                    let cleaned_25 := and(sload(/** @src 8:13804:13817  \"registerToken\" */ 0x21), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _188)\n                                    /// @src 8:13804:13859  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                                    let _222 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:13804:13859  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                                    mstore(_222, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0xa9059cbb))\n                                    /// @src 8:13804:13859  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                                    let _223 := call(gas(), cleaned_25, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0, /** @src 8:13804:13859  \"registerToken.transfer(msg.sender, registerTokenAmount)\" */ _222, sub(abi_encode_address_uint256(add(_222, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:10948:10958  \"msg.sender\" */ caller(), /** @src 8:13804:13859  \"registerToken.transfer(msg.sender, registerTokenAmount)\" */ _221), _222), _222, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _201)\n                                    /// @src 8:13804:13859  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                                    if iszero(_223)\n                                    {\n                                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                        let pos_20 := mload(64)\n                                        returndatacopy(pos_20, 0, returndatasize())\n                                        revert(pos_20, returndatasize())\n                                    }\n                                    /// @src 8:13804:13859  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                                    let expr_36 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                    /// @src 8:13804:13859  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                                    if _223\n                                    {\n                                        let _224 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _201\n                                        /// @src 8:13804:13859  \"registerToken.transfer(msg.sender, registerTokenAmount)\"\n                                        if gt(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _201, /** @src 8:13804:13859  \"registerToken.transfer(msg.sender, registerTokenAmount)\" */ returndatasize()) { _224 := returndatasize() }\n                                        finalize_allocation(_222, _224)\n                                        expr_36 := abi_decode_bool_fromMemory(_222, add(_222, _224))\n                                    }\n                                    /// @src 8:13873:13944  \"if (!successfullyTransferedRA) revert Errors.TokenTransferFailedError()\"\n                                    if /** @src 8:13877:13902  \"!successfullyTransferedRA\" */ iszero(expr_36)\n                                    /// @src 8:13873:13944  \"if (!successfullyTransferedRA) revert Errors.TokenTransferFailedError()\"\n                                    {\n                                        /// @src 8:13911:13944  \"Errors.TokenTransferFailedError()\"\n                                        let _225 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                        /// @src 8:13911:13944  \"Errors.TokenTransferFailedError()\"\n                                        mstore(_225, /** @src 8:16573:16606  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                                        /// @src 8:13911:13944  \"Errors.TokenTransferFailedError()\"\n                                        revert(_225, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                    }\n                                }\n                                let memPos_39 := mload(64)\n                                mstore(memPos_39, 1)\n                                return(memPos_39, _201)\n                            }\n                            case 0xcf72d3db {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value0_4 := abi_decode_address_60557()\n                                /// @src 8:4542:4550  \"_address\"\n                                fun_notZeroAddress(value0_4)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                mstore(0, and(value0_4, sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 8:23110:23118  \"refunded\" */ 0x27)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let value_25 := and(sload(keccak256(0, 64)), 0xff)\n                                let memPos_40 := mload(64)\n                                mstore(memPos_40, iszero(iszero(value_25)))\n                                return(memPos_40, 32)\n                            }\n                            case 0xd547741f {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value_26 := calldataload(4)\n                                let value1_5 := abi_decode_address()\n                                mstore(0, value_26)\n                                mstore(32, 0)\n                                /// @src 0:2475:2479  \"role\"\n                                fun_checkRole(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), 1)))\n                                /// @src 0:4747:4773  \"_revokeRole(role, account)\"\n                                pop(fun_revokeRole(value_26, value1_5))\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                return(0, 0)\n                            }\n                            case 0xd9f9549e {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_5 := abi_decode_address_60557()\n                                let offset_7 := calldataload(36)\n                                if gt(offset_7, 0xffffffffffffffff) { revert(0, 0) }\n                                let value1_6, value2_3 := abi_decode_array_bytes32_dyn_calldata(add(4, offset_7), calldatasize())\n                                let ret_3 := /** @src 8:22509:22513  \"bool\" */ modifier_notZeroAddress_60592(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ value0_5, value1_6, value2_3)\n                                let memPos_41 := mload(64)\n                                mstore(memPos_41, iszero(iszero(ret_3)))\n                                return(memPos_41, 32)\n                            }\n                            case 0xe6f1dbc0 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, and(abi_decode_address_60557(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 8:689:763  \"mapping(address => IDappadSale.SaleRegisterDetails) public registerDetails\" */ 37)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let dataSlot_8 := keccak256(0, 64)\n                                let _226 := sload(/** @src 8:689:763  \"mapping(address => IDappadSale.SaleRegisterDetails) public registerDetails\" */ dataSlot_8)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _227 := sload(/** @src 8:689:763  \"mapping(address => IDappadSale.SaleRegisterDetails) public registerDetails\" */ add(dataSlot_8, 1))\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let value_27 := and(sload(/** @src 8:689:763  \"mapping(address => IDappadSale.SaleRegisterDetails) public registerDetails\" */ add(dataSlot_8, 2)), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xff)\n                                let memPos_42 := mload(64)\n                                mstore(memPos_42, _226)\n                                mstore(add(memPos_42, 32), _227)\n                                mstore(add(memPos_42, 64), iszero(iszero(value_27)))\n                                return(memPos_42, 96)\n                            }\n                            case 0xf27c0945 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 8:4542:4550  \"_address\"\n                                fun_notZeroAddress(/** @src 8:17451:17461  \"msg.sender\" */ caller())\n                                /// @src 8:4738:4746  \"_address\"\n                                fun_onlyOwnerOrAdmin(/** @src 8:17451:17461  \"msg.sender\" */ caller())\n                                /// @src 8:17517:17599  \"if (block.timestamp <= sale.saleDetails.saleEnd) revert Errors.SaleNotEndedError()\"\n                                if /** @src 8:17521:17564  \"block.timestamp <= sale.saleDetails.saleEnd\" */ iszero(gt(/** @src 8:17521:17536  \"block.timestamp\" */ timestamp(), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:17540:17564  \"sale.saleDetails.saleEnd\" */ 5)))\n                                /// @src 8:17517:17599  \"if (block.timestamp <= sale.saleDetails.saleEnd) revert Errors.SaleNotEndedError()\"\n                                {\n                                    /// @src 8:17573:17599  \"Errors.SaleNotEndedError()\"\n                                    let _228 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:17573:17599  \"Errors.SaleNotEndedError()\"\n                                    mstore(_228, /** @src 8:15858:15884  \"Errors.SaleNotEndedError()\" */ shl(224, 0x68a5e0cb))\n                                    /// @src 8:17573:17599  \"Errors.SaleNotEndedError()\"\n                                    revert(_228, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                let cleaned_26 := and(sload(/** @src 8:17640:17653  \"registerToken\" */ 0x21), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))\n                                /// @src 8:17675:17713  \"registerToken.balanceOf(address(this))\"\n                                let _229 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:17675:17713  \"registerToken.balanceOf(address(this))\"\n                                mstore(_229, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x70a08231))\n                                mstore(/** @src 8:17675:17713  \"registerToken.balanceOf(address(this))\" */ add(_229, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:17707:17711  \"this\" */ address())\n                                /// @src 8:17675:17713  \"registerToken.balanceOf(address(this))\"\n                                let _230 := 32\n                                let _231 := staticcall(gas(), cleaned_26, _229, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36, /** @src 8:17675:17713  \"registerToken.balanceOf(address(this))\" */ _229, _230)\n                                if iszero(_231)\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let pos_21 := mload(64)\n                                    returndatacopy(pos_21, 0, returndatasize())\n                                    revert(pos_21, returndatasize())\n                                }\n                                /// @src 8:17675:17713  \"registerToken.balanceOf(address(this))\"\n                                let expr_37 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                /// @src 8:17675:17713  \"registerToken.balanceOf(address(this))\"\n                                if _231\n                                {\n                                    let _232 := _230\n                                    if gt(_230, returndatasize()) { _232 := returndatasize() }\n                                    finalize_allocation(_229, _232)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    if slt(sub(/** @src 8:17675:17713  \"registerToken.balanceOf(address(this))\" */ add(_229, _232), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _229), /** @src 8:17675:17713  \"registerToken.balanceOf(address(this))\" */ _230)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    { revert(0, 0) }\n                                    /// @src 8:17675:17713  \"registerToken.balanceOf(address(this))\"\n                                    expr_37 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_229)\n                                }\n                                /// @src 8:17640:17714  \"registerToken.transfer(msg.sender, registerToken.balanceOf(address(this)))\"\n                                let _233 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:17640:17714  \"registerToken.transfer(msg.sender, registerToken.balanceOf(address(this)))\"\n                                mstore(_233, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0xa9059cbb))\n                                /// @src 8:17640:17714  \"registerToken.transfer(msg.sender, registerToken.balanceOf(address(this)))\"\n                                let _234 := call(gas(), cleaned_26, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0, /** @src 8:17640:17714  \"registerToken.transfer(msg.sender, registerToken.balanceOf(address(this)))\" */ _233, sub(abi_encode_address_uint256(add(_233, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:17451:17461  \"msg.sender\" */ caller(), /** @src 8:17640:17714  \"registerToken.transfer(msg.sender, registerToken.balanceOf(address(this)))\" */ expr_37), _233), _233, /** @src 8:17675:17713  \"registerToken.balanceOf(address(this))\" */ _230)\n                                /// @src 8:17640:17714  \"registerToken.transfer(msg.sender, registerToken.balanceOf(address(this)))\"\n                                if iszero(_234)\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let pos_22 := mload(64)\n                                    returndatacopy(pos_22, 0, returndatasize())\n                                    revert(pos_22, returndatasize())\n                                }\n                                /// @src 8:17640:17714  \"registerToken.transfer(msg.sender, registerToken.balanceOf(address(this)))\"\n                                let expr_38 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                /// @src 8:17640:17714  \"registerToken.transfer(msg.sender, registerToken.balanceOf(address(this)))\"\n                                if _234\n                                {\n                                    let _235 := /** @src 8:17675:17713  \"registerToken.balanceOf(address(this))\" */ _230\n                                    /// @src 8:17640:17714  \"registerToken.transfer(msg.sender, registerToken.balanceOf(address(this)))\"\n                                    if gt(/** @src 8:17675:17713  \"registerToken.balanceOf(address(this))\" */ _230, /** @src 8:17640:17714  \"registerToken.transfer(msg.sender, registerToken.balanceOf(address(this)))\" */ returndatasize()) { _235 := returndatasize() }\n                                    finalize_allocation(_233, _235)\n                                    expr_38 := abi_decode_bool_fromMemory(_233, add(_233, _235))\n                                }\n                                /// @src 8:17724:17793  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                                if /** @src 8:17728:17751  \"!successfullyTransfered\" */ iszero(expr_38)\n                                /// @src 8:17724:17793  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                                {\n                                    /// @src 8:17760:17793  \"Errors.TokenTransferFailedError()\"\n                                    let _236 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:17760:17793  \"Errors.TokenTransferFailedError()\"\n                                    mstore(_236, /** @src 8:16573:16606  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                                    /// @src 8:17760:17793  \"Errors.TokenTransferFailedError()\"\n                                    revert(_236, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                let memPos_43 := mload(64)\n                                mstore(memPos_43, /** @src 8:17540:17544  \"sale\" */ 0x01)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                return(memPos_43, /** @src 8:17675:17713  \"registerToken.balanceOf(address(this))\" */ _230)\n                            }\n                            case /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xf75c1b98 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, calldataload(4))\n                                mstore(32, /** @src 8:769:835  \"mapping(uint256 => IDappadSale.SaleTierDetails) public tierDetails\" */ 38)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let dataSlot_9 := keccak256(0, 64)\n                                let _237 := sload(/** @src 8:769:835  \"mapping(uint256 => IDappadSale.SaleTierDetails) public tierDetails\" */ dataSlot_9)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _238 := sload(/** @src 8:769:835  \"mapping(uint256 => IDappadSale.SaleTierDetails) public tierDetails\" */ add(dataSlot_9, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 1))\n                                let _239 := sload(/** @src 8:769:835  \"mapping(uint256 => IDappadSale.SaleTierDetails) public tierDetails\" */ add(dataSlot_9, 2))\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _240 := sload(/** @src 8:769:835  \"mapping(uint256 => IDappadSale.SaleTierDetails) public tierDetails\" */ add(dataSlot_9, 3))\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _241 := sload(/** @src 8:769:835  \"mapping(uint256 => IDappadSale.SaleTierDetails) public tierDetails\" */ add(dataSlot_9, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4))\n                                let _242 := sload(/** @src 8:769:835  \"mapping(uint256 => IDappadSale.SaleTierDetails) public tierDetails\" */ add(dataSlot_9, 5))\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _243 := sload(/** @src 8:769:835  \"mapping(uint256 => IDappadSale.SaleTierDetails) public tierDetails\" */ add(dataSlot_9, 6))\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let memPos_44 := mload(64)\n                                mstore(memPos_44, _237)\n                                mstore(add(memPos_44, 32), _238)\n                                mstore(add(memPos_44, 64), _239)\n                                mstore(add(memPos_44, 96), _240)\n                                mstore(add(memPos_44, 128), _241)\n                                mstore(add(memPos_44, 160), _242)\n                                mstore(add(memPos_44, 192), _243)\n                                return(memPos_44, _2)\n                            }\n                            case 0xfeaae845 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 8:4771:4852  \"modifier whenSaleIsNotPaused() {...\"\n                                fun_whenSaleIsNotPaused()\n                                /// @src 8:4542:4550  \"_address\"\n                                fun_notZeroAddress(/** @src 8:5094:5104  \"msg.sender\" */ caller())\n                                /// @src 8:5153:5157  \"sale\"\n                                let _244 := 0x01\n                                /// @src 8:5131:5224  \"if (block.timestamp < sale.saleDetails.registerStart) revert Errors.RegisterNotStartedError()\"\n                                if /** @src 8:5135:5183  \"block.timestamp < sale.saleDetails.registerStart\" */ lt(/** @src 8:5135:5150  \"block.timestamp\" */ timestamp(), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:5153:5157  \"sale\" */ _244))\n                                /// @src 8:5131:5224  \"if (block.timestamp < sale.saleDetails.registerStart) revert Errors.RegisterNotStartedError()\"\n                                {\n                                    /// @src 8:5192:5224  \"Errors.RegisterNotStartedError()\"\n                                    let _245 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:5192:5224  \"Errors.RegisterNotStartedError()\"\n                                    mstore(_245, shl(224, 0xbab3af0b))\n                                    revert(_245, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:5234:5328  \"if (block.timestamp >= sale.saleDetails.registerEnd) revert Errors.RegisterAlreadyEndedError()\"\n                                if /** @src 8:5238:5285  \"block.timestamp >= sale.saleDetails.registerEnd\" */ iszero(lt(/** @src 8:5135:5150  \"block.timestamp\" */ timestamp(), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:5257:5285  \"sale.saleDetails.registerEnd\" */ 2)))\n                                /// @src 8:5234:5328  \"if (block.timestamp >= sale.saleDetails.registerEnd) revert Errors.RegisterAlreadyEndedError()\"\n                                {\n                                    /// @src 8:5294:5328  \"Errors.RegisterAlreadyEndedError()\"\n                                    let _246 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:5294:5328  \"Errors.RegisterAlreadyEndedError()\"\n                                    mstore(_246, shl(225, 0x26727e13))\n                                    revert(_246, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                mstore(0, /** @src 8:5094:5104  \"msg.sender\" */ caller())\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let _247 := 0x20\n                                mstore(_247, /** @src 8:5342:5357  \"registerDetails\" */ 0x25)\n                                /// @src 8:5338:5424  \"if (registerDetails[msg.sender].registered) revert Errors.UserAlreadyRegisteredError()\"\n                                if /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:5342:5380  \"registerDetails[msg.sender].registered\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(0, 64), /** @src 8:5257:5285  \"sale.saleDetails.registerEnd\" */ 2)), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xff)\n                                /// @src 8:5338:5424  \"if (registerDetails[msg.sender].registered) revert Errors.UserAlreadyRegisteredError()\"\n                                {\n                                    /// @src 8:5389:5424  \"Errors.UserAlreadyRegisteredError()\"\n                                    let _248 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:5389:5424  \"Errors.UserAlreadyRegisteredError()\"\n                                    mstore(_248, shl(224, 0xd3c27975))\n                                    revert(_248, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:5435:5460  \"uint256 userTierIndex = 0\"\n                                let var_userTierIndex_1 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                let _249 := sub(shl(160, 1), 1)\n                                /// @src 8:5471:5627  \"if (sale.saleAddresses.nftContractAddress != address(0)) {...\"\n                                if /** @src 8:5475:5526  \"sale.saleAddresses.nftContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:5475:5512  \"sale.saleAddresses.nftContractAddress\" */ 21), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _249)))\n                                /// @src 8:5471:5627  \"if (sale.saleAddresses.nftContractAddress != address(0)) {...\"\n                                {\n                                    /// @src 8:4542:4550  \"_address\"\n                                    fun_notZeroAddress(/** @src 8:5094:5104  \"msg.sender\" */ caller())\n                                    /// @src 8:5542:5616  \"if (_getUserNftBalance(msg.sender) == 0) revert Errors.UserHasNoNFTError()\"\n                                    if /** @src 8:5546:5581  \"_getUserNftBalance(msg.sender) == 0\" */ iszero(/** @src 8:24954:25275  \"function _getUserNftBalance(address userAddress) internal view notZeroAddress(userAddress) returns (uint256) {...\" */ fun_getUserNftBalance_inner())\n                                    /// @src 8:5542:5616  \"if (_getUserNftBalance(msg.sender) == 0) revert Errors.UserHasNoNFTError()\"\n                                    {\n                                        /// @src 8:5590:5616  \"Errors.UserHasNoNFTError()\"\n                                        let _250 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                        /// @src 8:5590:5616  \"Errors.UserHasNoNFTError()\"\n                                        mstore(_250, /** @src 8:14814:14840  \"Errors.UserHasNoNFTError()\" */ shl(225, 0x049a4b73))\n                                        /// @src 8:5590:5616  \"Errors.UserHasNoNFTError()\"\n                                        revert(_250, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                    }\n                                }\n                                /// @src 8:5637:5799  \"if (sale.saleAddresses.stakeControllerContractAddress != address(0)) {...\"\n                                if /** @src 8:5641:5704  \"sale.saleAddresses.stakeControllerContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:5641:5690  \"sale.saleAddresses.stakeControllerContractAddress\" */ 22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _249)))\n                                /// @src 8:5637:5799  \"if (sale.saleAddresses.stakeControllerContractAddress != address(0)) {...\"\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let cleaned_27 := and(sload(/** @src 8:5736:5759  \"stakeControllerContract\" */ 0x23), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _249)\n                                    /// @src 8:5736:5788  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                                    let _251 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:5736:5788  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                                    mstore(_251, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0xbb9d537b))\n                                    mstore(/** @src 8:5736:5788  \"stakeControllerContract.getUserTierIndex(msg.sender)\" */ add(_251, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:5094:5104  \"msg.sender\" */ caller())\n                                    /// @src 8:5736:5788  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                                    let _252 := staticcall(gas(), cleaned_27, _251, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36, /** @src 8:5736:5788  \"stakeControllerContract.getUserTierIndex(msg.sender)\" */ _251, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _247)\n                                    /// @src 8:5736:5788  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                                    if iszero(_252)\n                                    {\n                                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                        let pos_23 := mload(64)\n                                        returndatacopy(pos_23, 0, returndatasize())\n                                        revert(pos_23, returndatasize())\n                                    }\n                                    /// @src 8:5736:5788  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                                    let expr_39 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                    /// @src 8:5736:5788  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                                    if _252\n                                    {\n                                        let _253 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _247\n                                        /// @src 8:5736:5788  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                                        if gt(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _247, /** @src 8:5736:5788  \"stakeControllerContract.getUserTierIndex(msg.sender)\" */ returndatasize()) { _253 := returndatasize() }\n                                        finalize_allocation(_251, _253)\n                                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                        if slt(sub(/** @src 8:5736:5788  \"stakeControllerContract.getUserTierIndex(msg.sender)\" */ add(_251, _253), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _251), _247) { revert(0, 0) }\n                                        /// @src 8:5736:5788  \"stakeControllerContract.getUserTierIndex(msg.sender)\"\n                                        expr_39 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_251)\n                                    }\n                                    /// @src 8:5720:5788  \"userTierIndex = stakeControllerContract.getUserTierIndex(msg.sender)\"\n                                    var_userTierIndex_1 := expr_39\n                                }\n                                /// @src 8:5820:5914  \"sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0)\"\n                                let expr_40 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:5820:5857  \"sale.saleDetails.registerTokenEnabled\" */ 9), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xff)\n                                /// @src 8:5820:5914  \"sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0)\"\n                                if expr_40\n                                {\n                                    expr_40 := /** @src 8:5861:5914  \"sale.saleAddresses.registerTokenAddress != address(0)\" */ iszero(iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:5861:5900  \"sale.saleAddresses.registerTokenAddress\" */ 18), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _249)))\n                                }\n                                /// @src 8:5816:6710  \"if (sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0)) {...\"\n                                switch expr_40\n                                case 0 {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let memPtr_16 := mload(64)\n                                    finalize_allocation_60616(memPtr_16)\n                                    mstore(memPtr_16, 0)\n                                    /// @src 8:6536:6699  \"IDappadSale.SaleRegisterDetails({...\"\n                                    let _254 := add(memPtr_16, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _247)\n                                    mstore(_254, var_userTierIndex_1)\n                                    /// @src 8:6536:6699  \"IDappadSale.SaleRegisterDetails({...\"\n                                    let _255 := add(memPtr_16, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64)\n                                    mstore(_255, /** @src 8:5153:5157  \"sale\" */ _244)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(0, /** @src 8:5094:5104  \"msg.sender\" */ caller())\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(_247, /** @src 8:5342:5357  \"registerDetails\" */ 0x25)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let dataSlot_10 := keccak256(0, 64)\n                                    sstore(dataSlot_10, mload(memPtr_16))\n                                    sstore(add(dataSlot_10, /** @src 8:5153:5157  \"sale\" */ _244), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_254))\n                                    update_storage_value_offsett_bool_to_bool(add(dataSlot_10, /** @src 8:5257:5285  \"sale.saleDetails.registerEnd\" */ 2), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ iszero(iszero(mload(_255))))\n                                }\n                                default /// @src 8:5816:6710  \"if (sale.saleDetails.registerTokenEnabled && sale.saleAddresses.registerTokenAddress != address(0)) {...\"\n                                {\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let _256 := sload(/** @src 8:5977:6013  \"sale.saleDetails.registerTokenAmount\" */ 3)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    sstore(_247, /** @src 8:5930:6013  \"saleStatistics.totalRegisterTokenAmountLeft += sale.saleDetails.registerTokenAmount\" */ checked_add_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(_247), _256))\n                                    let memPtr_17 := mload(64)\n                                    finalize_allocation_60616(memPtr_17)\n                                    mstore(memPtr_17, _256)\n                                    /// @src 8:6058:6256  \"IDappadSale.SaleRegisterDetails({...\"\n                                    let _257 := add(memPtr_17, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _247)\n                                    mstore(_257, var_userTierIndex_1)\n                                    /// @src 8:6058:6256  \"IDappadSale.SaleRegisterDetails({...\"\n                                    let _258 := add(memPtr_17, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64)\n                                    mstore(_258, /** @src 8:5153:5157  \"sale\" */ _244)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(0, /** @src 8:5094:5104  \"msg.sender\" */ caller())\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    mstore(_247, /** @src 8:5342:5357  \"registerDetails\" */ 0x25)\n                                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                    let dataSlot_11 := keccak256(0, 64)\n                                    sstore(dataSlot_11, mload(memPtr_17))\n                                    sstore(add(dataSlot_11, /** @src 8:5153:5157  \"sale\" */ _244), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_257))\n                                    update_storage_value_offsett_bool_to_bool(add(dataSlot_11, /** @src 8:5257:5285  \"sale.saleDetails.registerEnd\" */ 2), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ iszero(iszero(mload(_258))))\n                                    let cleaned_28 := and(sload(/** @src 8:6301:6314  \"registerToken\" */ 0x21), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _249)\n                                    let _259 := sload(/** @src 8:5977:6013  \"sale.saleDetails.registerTokenAmount\" */ 3)\n                                    /// @src 8:6301:6392  \"registerToken.transferFrom(msg.sender, address(this), sale.saleDetails.registerTokenAmount)\"\n                                    let _260 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                    /// @src 8:6301:6392  \"registerToken.transferFrom(msg.sender, address(this), sale.saleDetails.registerTokenAmount)\"\n                                    mstore(_260, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x23b872dd))\n                                    /// @src 8:6301:6392  \"registerToken.transferFrom(msg.sender, address(this), sale.saleDetails.registerTokenAmount)\"\n                                    let _261 := call(gas(), cleaned_28, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0, /** @src 8:6301:6392  \"registerToken.transferFrom(msg.sender, address(this), sale.saleDetails.registerTokenAmount)\" */ _260, sub(abi_encode_address_address_uint256(add(_260, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4), /** @src 8:5094:5104  \"msg.sender\" */ caller(), /** @src 8:6348:6352  \"this\" */ address(), /** @src 8:6301:6392  \"registerToken.transferFrom(msg.sender, address(this), sale.saleDetails.registerTokenAmount)\" */ _259), _260), _260, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _247)\n                                    /// @src 8:6301:6392  \"registerToken.transferFrom(msg.sender, address(this), sale.saleDetails.registerTokenAmount)\"\n                                    if iszero(_261)\n                                    {\n                                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                        let pos_24 := mload(64)\n                                        returndatacopy(pos_24, 0, returndatasize())\n                                        revert(pos_24, returndatasize())\n                                    }\n                                    /// @src 8:6301:6392  \"registerToken.transferFrom(msg.sender, address(this), sale.saleDetails.registerTokenAmount)\"\n                                    let expr_41 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                                    /// @src 8:6301:6392  \"registerToken.transferFrom(msg.sender, address(this), sale.saleDetails.registerTokenAmount)\"\n                                    if _261\n                                    {\n                                        let _262 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _247\n                                        /// @src 8:6301:6392  \"registerToken.transferFrom(msg.sender, address(this), sale.saleDetails.registerTokenAmount)\"\n                                        if gt(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _247, /** @src 8:6301:6392  \"registerToken.transferFrom(msg.sender, address(this), sale.saleDetails.registerTokenAmount)\" */ returndatasize()) { _262 := returndatasize() }\n                                        finalize_allocation(_260, _262)\n                                        expr_41 := abi_decode_bool_fromMemory(_260, add(_260, _262))\n                                    }\n                                    /// @src 8:6406:6475  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                                    if /** @src 8:6410:6433  \"!successfullyTransfered\" */ iszero(expr_41)\n                                    /// @src 8:6406:6475  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                                    {\n                                        /// @src 8:6442:6475  \"Errors.TokenTransferFailedError()\"\n                                        let _263 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                        /// @src 8:6442:6475  \"Errors.TokenTransferFailedError()\"\n                                        mstore(_263, /** @src 8:16573:16606  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                                        /// @src 8:6442:6475  \"Errors.TokenTransferFailedError()\"\n                                        revert(_263, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 4)\n                                    }\n                                }\n                                /// @src 8:6720:6751  \"saleStatistics.totalRegisters++\"\n                                let _264 := increment_uint256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:6720:6749  \"saleStatistics.totalRegisters\" */ 31))\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                sstore(/** @src 8:6720:6749  \"saleStatistics.totalRegisters\" */ 31, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _264)\n                                let _265 := sload(_247)\n                                /// @src 8:6767:6905  \"UserRegisteredSale(msg.sender, userTierIndex, block.timestamp, saleStatistics.totalRegisters, saleStatistics.totalRegisterTokenAmountLeft)\"\n                                let _266 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                                /// @src 8:6767:6905  \"UserRegisteredSale(msg.sender, userTierIndex, block.timestamp, saleStatistics.totalRegisters, saleStatistics.totalRegisterTokenAmountLeft)\"\n                                log1(_266, sub(abi_encode_address_uint256_uint256_uint256_uint256(_266, /** @src 8:5094:5104  \"msg.sender\" */ caller(), /** @src 8:6767:6905  \"UserRegisteredSale(msg.sender, userTierIndex, block.timestamp, saleStatistics.totalRegisters, saleStatistics.totalRegisterTokenAmountLeft)\" */ var_userTierIndex_1, /** @src 8:5135:5150  \"block.timestamp\" */ timestamp(), /** @src 8:6767:6905  \"UserRegisteredSale(msg.sender, userTierIndex, block.timestamp, saleStatistics.totalRegisters, saleStatistics.totalRegisterTokenAmountLeft)\" */ _264, _265), _266), 0xc8446c7f7a4908f4630e7fa05c8de17f788b84b0ed604aba7c531ba9589674c6)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let memPos_45 := mload(64)\n                                mstore(memPos_45, /** @src 8:5153:5157  \"sale\" */ _244)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                return(memPos_45, _247)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function finalize_allocation_60549(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, 64)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation_60550(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, 224)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation_60552(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, 0x0160)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation_60616(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, 96)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function abi_encode_struct_SaleTierDetails(value, pos)\n                    {\n                        mstore(pos, mload(value))\n                        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n                        mstore(add(pos, 0x40), mload(add(value, 0x40)))\n                        mstore(add(pos, 0x60), mload(add(value, 0x60)))\n                        mstore(add(pos, 0x80), mload(add(value, 0x80)))\n                        mstore(add(pos, 0xa0), mload(add(value, 0xa0)))\n                        mstore(add(pos, 0xc0), mload(add(value, 0xc0)))\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(36)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_address_60557() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_bool(offset) -> value\n                    {\n                        value := calldataload(offset)\n                        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n                    }\n                    function extract_byte_array_length(data) -> length\n                    {\n                        length := shr(1, data)\n                        let outOfPlaceEncoding := and(data, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                    }\n                    function abi_encode_struct_SaleDetails(value, pos) -> end\n                    {\n                        let _1 := 0x0160\n                        mstore(pos, mload(value))\n                        let _2 := 0x20\n                        mstore(add(pos, _2), mload(add(value, _2)))\n                        mstore(add(pos, 0x40), mload(add(value, 0x40)))\n                        mstore(add(pos, 0x60), mload(add(value, 0x60)))\n                        mstore(add(pos, 0x80), mload(add(value, 0x80)))\n                        mstore(add(pos, 0xa0), mload(add(value, 0xa0)))\n                        mstore(add(pos, 0xc0), mload(add(value, 0xc0)))\n                        mstore(add(pos, 0xe0), mload(add(value, 0xe0)))\n                        let _3 := 0x0100\n                        mstore(add(pos, _3), iszero(iszero(mload(add(value, _3)))))\n                        let _4 := 0x0120\n                        mstore(add(pos, _4), iszero(iszero(mload(add(value, _4)))))\n                        let _5 := 0x0140\n                        let memberValue0 := mload(add(value, _5))\n                        mstore(add(pos, _5), _1)\n                        let length := mload(memberValue0)\n                        mstore(add(pos, _1), length)\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, _2) }\n                        {\n                            mstore(add(add(pos, i), 384), mload(add(add(memberValue0, i), _2)))\n                        }\n                        let _6 := 384\n                        mstore(add(add(pos, length), _6), 0)\n                        end := add(add(pos, and(add(length, 31), not(31))), _6)\n                    }\n                    function abi_encode_struct_SaleRefundDetails(value, pos)\n                    {\n                        mstore(pos, mload(value))\n                        mstore(add(pos, 0x20), iszero(iszero(mload(add(value, 0x20)))))\n                    }\n                    function abi_encode_struct_SaleAddresses(value, pos)\n                    {\n                        let _1 := sub(shl(160, 1), 1)\n                        mstore(pos, and(mload(value), _1))\n                        mstore(add(pos, 0x20), and(mload(add(value, 0x20)), _1))\n                        mstore(add(pos, 0x40), and(mload(add(value, 0x40)), _1))\n                        mstore(add(pos, 0x60), and(mload(add(value, 0x60)), _1))\n                        mstore(add(pos, 0x80), and(mload(add(value, 0x80)), _1))\n                        mstore(add(pos, 0xa0), and(mload(add(value, 0xa0)), _1))\n                        mstore(add(pos, 0xc0), and(mload(add(value, 0xc0)), _1))\n                        mstore(add(pos, 0xe0), and(mload(add(value, 0xe0)), _1))\n                        let _2 := 0x0100\n                        mstore(add(pos, _2), and(mload(add(value, _2)), _1))\n                        let _3 := 0x0120\n                        mstore(add(pos, _3), and(mload(add(value, _3)), _1))\n                        let _4 := 0x0140\n                        mstore(add(pos, _4), and(mload(add(value, _4)), _1))\n                    }\n                    function abi_decode_array_bytes32_dyn_calldata(offset, end) -> arrayPos, length\n                    {\n                        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                        length := calldataload(offset)\n                        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                        arrayPos := add(offset, 0x20)\n                        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n                    }\n                    /// @ast-id 93 @src 0:3199:3302  \"function _checkRole(bytes32 role) internal view virtual {...\"\n                    function fun_checkRole(var_role)\n                    {\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ var_role)\n                        mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x00)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _1 := keccak256(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)\n                        mstore(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 4:735:745  \"msg.sender\" */ caller())\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(0x20, _1)\n                        /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                        if /** @src 0:3519:3542  \"!hasRole(role, account)\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)), 0xff))\n                        /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                        {\n                            /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                            let _2 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(0x40)\n                            /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                            mstore(_2, shl(224, 0xe2517d3f))\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(/** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ add(_2, 4), /** @src 4:735:745  \"msg.sender\" */ caller())\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(add(/** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ _2, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36), var_role)\n                            /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                            revert(_2, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 68)\n                        }\n                    }\n                    function update_storage_value_offsett_bool_to_bool(slot, value)\n                    {\n                        let value_1 := and(sload(slot), not(255))\n                        sstore(slot, or(value_1, and(iszero(iszero(value)), 255)))\n                    }\n                    /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n                    function fun_grantRole(var_role, var_account) -> var\n                    {\n                        /// @src 0:2954:2960  \"_roles\"\n                        let _1 := 0x00\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ var_role)\n                        mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _2 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)\n                        let _3 := and(var_account, sub(shl(160, 1), 1))\n                        mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _3)\n                        mstore(0x20, _2)\n                        /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                        switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)), 0xff))\n                        case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                            /// @src 0:6466:6478  \"return false\"\n                            var := /** @src 0:2954:2960  \"_roles\" */ _1\n                            /// @src 0:6466:6478  \"return false\"\n                            leave\n                        }\n                        default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ var_role)\n                            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let _4 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)\n                            mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _3)\n                            mstore(0x20, _4)\n                            let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)\n                            sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                            /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                            log4(/** @src 0:2954:2960  \"_roles\" */ _1, _1, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, var_role, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _3, /** @src 4:735:745  \"msg.sender\" */ caller())\n                            /// @src 0:6424:6435  \"return true\"\n                            var := /** @src 0:6347:6351  \"true\" */ 0x01\n                            /// @src 0:6424:6435  \"return true\"\n                            leave\n                        }\n                    }\n                    /// @ast-id 294 @src 0:6730:7047  \"function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n                    function fun_revokeRole(var_role, var_account) -> var\n                    {\n                        /// @src 0:2954:2960  \"_roles\"\n                        let _1 := 0x00\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ var_role)\n                        mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _2 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)\n                        let _3 := and(var_account, sub(shl(160, 1), 1))\n                        mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _3)\n                        mstore(0x20, _2)\n                        /// @src 0:6824:7041  \"if (hasRole(role, account)) {...\"\n                        switch /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)), 0xff)\n                        case /** @src 0:6824:7041  \"if (hasRole(role, account)) {...\" */ 0 {\n                            /// @src 0:7018:7030  \"return false\"\n                            var := /** @src 0:2954:2960  \"_roles\" */ _1\n                            /// @src 0:7018:7030  \"return false\"\n                            leave\n                        }\n                        default /// @src 0:6824:7041  \"if (hasRole(role, account)) {...\"\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ var_role)\n                            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let _4 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)\n                            mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _3)\n                            mstore(0x20, _4)\n                            let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)\n                            sstore(dataSlot, and(sload(dataSlot), not(255)))\n                            /// @src 0:6922:6962  \"RoleRevoked(role, account, _msgSender())\"\n                            log4(/** @src 0:2954:2960  \"_roles\" */ _1, _1, /** @src 0:6922:6962  \"RoleRevoked(role, account, _msgSender())\" */ 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b, var_role, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _3, /** @src 4:735:745  \"msg.sender\" */ caller())\n                            /// @src 0:6976:6987  \"return true\"\n                            var := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 1\n                            /// @src 0:6976:6987  \"return true\"\n                            leave\n                        }\n                    }\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    function checked_add_uint256(x, y) -> sum\n                    {\n                        sum := add(x, y)\n                        if gt(x, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n                    {\n                        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                        let value := mload(headStart)\n                        if iszero(eq(value, iszero(iszero(value))))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        value0 := value\n                    }\n                    function abi_encode_address_address_uint256(headStart, value0, value1, value2) -> tail\n                    {\n                        tail := add(headStart, 96)\n                        let _1 := sub(shl(160, 1), 1)\n                        mstore(headStart, and(value0, _1))\n                        mstore(add(headStart, 32), and(value1, _1))\n                        mstore(add(headStart, 64), value2)\n                    }\n                    function increment_uint256(value) -> ret\n                    {\n                        if eq(value, not(0))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        ret := add(value, 1)\n                    }\n                    function abi_encode_address_uint256_uint256_uint256_uint256(headStart, value0, value1, value2, value3, value4) -> tail\n                    {\n                        tail := add(headStart, 160)\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                        mstore(add(headStart, 32), value1)\n                        mstore(add(headStart, 64), value2)\n                        mstore(add(headStart, 96), value3)\n                        mstore(add(headStart, 128), value4)\n                    }\n                    function checked_sub_uint256(x, y) -> diff\n                    {\n                        diff := sub(x, y)\n                        if gt(diff, x)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    function checked_mul_uint256(x, y) -> product\n                    {\n                        product := mul(x, y)\n                        if iszero(or(iszero(x), eq(y, div(product, x))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    function abi_encode_address_uint256_uint256_uint256_uint256_uint256_uint256_uint256(headStart, value0, value1, value2, value3, value4, value5, value6, value7) -> tail\n                    {\n                        tail := add(headStart, 256)\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                        mstore(add(headStart, 32), value1)\n                        mstore(add(headStart, 64), value2)\n                        mstore(add(headStart, 96), value3)\n                        mstore(add(headStart, 128), value4)\n                        mstore(add(headStart, 160), value5)\n                        mstore(add(headStart, 192), value6)\n                        mstore(add(headStart, 224), value7)\n                    }\n                    function abi_encode_address_uint256(headStart, value0, value1) -> tail\n                    {\n                        tail := add(headStart, 64)\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                        mstore(add(headStart, 32), value1)\n                    }\n                    function update_storage_value_offsett_bool_to_bool_60554(value)\n                    {\n                        let _1 := sload(9)\n                        sstore(9, or(and(_1, not(65280)), and(shl(8, iszero(iszero(value))), 65280)))\n                    }\n                    function update_storage_value_offsett_address_to_address_60573(value)\n                    {\n                        sstore(22, or(and(sload(22), shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n                    }\n                    function update_storage_value_offsett_address_to_address(value)\n                    {\n                        sstore(23, or(and(sload(23), shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n                    }\n                    /// @ast-id 1574 @src 8:4474:4569  \"modifier notZeroAddress(address _address) {...\"\n                    function modifier_notZeroAddress(var_userAddress, var_userTierIndex, var_proof_offset, var_proof_length) -> _1\n                    {\n                        /// @src 8:4542:4550  \"_address\"\n                        fun_notZeroAddress(var_userAddress)\n                        /// @src 8:22246:22269  \"abi.encode(userAddress)\"\n                        let expr_mpos := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:22246:22269  \"abi.encode(userAddress)\"\n                        let _2 := add(expr_mpos, 0x20)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(_2, and(var_userAddress, sub(shl(160, 1), 1)))\n                        /// @src 8:22246:22269  \"abi.encode(userAddress)\"\n                        mstore(expr_mpos, 0x20)\n                        finalize_allocation_60549(expr_mpos)\n                        /// @src 8:22236:22270  \"keccak256(abi.encode(userAddress))\"\n                        let _3 := keccak256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _2, mload(/** @src 8:22236:22270  \"keccak256(abi.encode(userAddress))\" */ expr_mpos))\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let outPtr := mload(64)\n                        let _4 := add(outPtr, /** @src 8:22246:22269  \"abi.encode(userAddress)\" */ 0x20)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(_4, _3)\n                        mstore(outPtr, /** @src 8:22246:22269  \"abi.encode(userAddress)\" */ 0x20)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        finalize_allocation_60549(outPtr)\n                        /// @src 8:22213:22272  \"keccak256(bytes.concat(keccak256(abi.encode(userAddress))))\"\n                        let _5 := keccak256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _4, mload(/** @src 8:22213:22272  \"keccak256(bytes.concat(keccak256(abi.encode(userAddress))))\" */ outPtr))\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ var_userTierIndex)\n                        mstore(/** @src 8:22246:22269  \"abi.encode(userAddress)\" */ 0x20, /** @src 8:22315:22326  \"tierDetails\" */ 0x26)\n                        /// @src 8:4561:4562  \"_\"\n                        _1 := /** @src 8:22289:22368  \"MerkleProof.verify(proof, tierDetails[userTierIndex].whitelistMerkleRoot, leaf)\" */ fun_verify(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ abi_decode_available_length_array_bytes32_dyn(/** @src 8:22289:22368  \"MerkleProof.verify(proof, tierDetails[userTierIndex].whitelistMerkleRoot, leaf)\" */ var_proof_offset, var_proof_length, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ calldatasize()), sload(/** @src 8:22315:22361  \"tierDetails[userTierIndex].whitelistMerkleRoot\" */ add(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 64), /** @src 8:22315:22361  \"tierDetails[userTierIndex].whitelistMerkleRoot\" */ 4)), /** @src 8:22213:22272  \"keccak256(bytes.concat(keccak256(abi.encode(userAddress))))\" */ _5)\n                    }\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    function array_allocation_size_array_bytes32_dyn(length) -> size\n                    {\n                        if gt(length, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        size := add(shl(5, length), 0x20)\n                    }\n                    function abi_decode_available_length_array_bytes32_dyn(offset, length, end) -> array\n                    {\n                        let _1 := array_allocation_size_array_bytes32_dyn(length)\n                        let memPtr := mload(64)\n                        finalize_allocation(memPtr, _1)\n                        array := memPtr\n                        let dst := memPtr\n                        mstore(memPtr, length)\n                        let _2 := 0x20\n                        dst := add(memPtr, _2)\n                        let srcEnd := add(offset, shl(5, length))\n                        if gt(srcEnd, end)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let src := offset\n                        for { } lt(src, srcEnd) { src := add(src, _2) }\n                        {\n                            mstore(dst, calldataload(src))\n                            dst := add(dst, _2)\n                        }\n                    }\n                    /// @ast-id 630 @src 5:1265:1419  \"function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {...\"\n                    function fun_verify(var_proof_mpos, var_root, var_leaf) -> var\n                    {\n                        /// @src 5:2069:2096  \"bytes32 computedHash = leaf\"\n                        let var_computedHash := var_leaf\n                        /// @src 5:2111:2124  \"uint256 i = 0\"\n                        let var_i := /** @src -1:-1:-1 */ 0\n                        /// @src 5:2106:2222  \"for (uint256 i = 0; i < proof.length; i++) {...\"\n                        for { }\n                        /** @src 5:2111:2124  \"uint256 i = 0\" */ 1\n                        {\n                            /// @src 5:2144:2147  \"i++\"\n                            var_i := increment_uint256(var_i)\n                        }\n                        {\n                            /// @src 5:2126:2142  \"i < proof.length\"\n                            if iszero(lt(var_i, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(/** @src 5:2130:2142  \"proof.length\" */ var_proof_mpos)))\n                            /// @src 5:2126:2142  \"i < proof.length\"\n                            { break }\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let _1 := mload(/** @src 5:2202:2210  \"proof[i]\" */ memory_array_index_access_bytes32_dyn(var_proof_mpos, var_i))\n                            /// @src 5:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                            let expr := /** @src -1:-1:-1 */ 0\n                            /// @src 5:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                            switch /** @src 5:9318:9323  \"a < b\" */ lt(var_computedHash, _1)\n                            case /** @src 5:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\" */ 0 {\n                                /// @src 5:9632:9751  \"assembly {...\"\n                                mstore(/** @src -1:-1:-1 */ expr, /** @src 5:9632:9751  \"assembly {...\" */ _1)\n                                mstore(0x20, var_computedHash)\n                                /// @src 5:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                                expr := /** @src 5:9632:9751  \"assembly {...\" */ keccak256(/** @src -1:-1:-1 */ expr, /** @src 5:9632:9751  \"assembly {...\" */ 0x40)\n                            }\n                            default /// @src 5:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                            {\n                                /// @src 5:9632:9751  \"assembly {...\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:9632:9751  \"assembly {...\" */ var_computedHash)\n                                mstore(0x20, _1)\n                                /// @src 5:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                                expr := /** @src 5:9632:9751  \"assembly {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:9632:9751  \"assembly {...\" */ 0x40)\n                            }\n                            /// @src 5:2163:2211  \"computedHash = _hashPair(computedHash, proof[i])\"\n                            var_computedHash := expr\n                        }\n                        /// @src 5:1372:1412  \"return processProof(proof, leaf) == root\"\n                        var := /** @src 5:1379:1412  \"processProof(proof, leaf) == root\" */ eq(var_computedHash, var_root)\n                    }\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    function memory_array_index_access_bytes32_dyn(baseRef, index) -> addr\n                    {\n                        if iszero(lt(index, mload(baseRef)))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(0, 0x24)\n                        }\n                        addr := add(add(baseRef, shl(5, index)), 32)\n                    }\n                    /// @ast-id 1574 @src 8:4474:4569  \"modifier notZeroAddress(address _address) {...\"\n                    function modifier_notZeroAddress_60592(var_userAddress, var_proof_offset, var_proof_length) -> _1\n                    {\n                        /// @src 8:4542:4550  \"_address\"\n                        fun_notZeroAddress(var_userAddress)\n                        /// @src 8:22573:22596  \"abi.encode(userAddress)\"\n                        let expr_mpos := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:22573:22596  \"abi.encode(userAddress)\"\n                        let _2 := add(expr_mpos, 0x20)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(_2, and(var_userAddress, sub(shl(160, 1), 1)))\n                        /// @src 8:22573:22596  \"abi.encode(userAddress)\"\n                        mstore(expr_mpos, 0x20)\n                        finalize_allocation_60549(expr_mpos)\n                        /// @src 8:22563:22597  \"keccak256(abi.encode(userAddress))\"\n                        let _3 := keccak256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _2, mload(/** @src 8:22563:22597  \"keccak256(abi.encode(userAddress))\" */ expr_mpos))\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let outPtr := mload(64)\n                        let _4 := add(outPtr, /** @src 8:22573:22596  \"abi.encode(userAddress)\" */ 0x20)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(_4, _3)\n                        mstore(outPtr, /** @src 8:22573:22596  \"abi.encode(userAddress)\" */ 0x20)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        finalize_allocation_60549(outPtr)\n                        /// @src 8:4561:4562  \"_\"\n                        _1 := /** @src 8:22616:22684  \"MerkleProof.verify(proof, sale.ticketDetails.ticketMerkleRoot, leaf)\" */ fun_verify(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ abi_decode_available_length_array_bytes32_dyn(/** @src 8:22616:22684  \"MerkleProof.verify(proof, sale.ticketDetails.ticketMerkleRoot, leaf)\" */ var_proof_offset, var_proof_length, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ calldatasize()), sload(/** @src 8:22642:22677  \"sale.ticketDetails.ticketMerkleRoot\" */ 16), /** @src 8:22540:22599  \"keccak256(bytes.concat(keccak256(abi.encode(userAddress))))\" */ keccak256(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _4, mload(/** @src 8:22540:22599  \"keccak256(bytes.concat(keccak256(abi.encode(userAddress))))\" */ outPtr)))\n                    }\n                    /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                    function allocate_and_zero_memory_struct_struct_SaleTierDetails() -> memPtr\n                    {\n                        let memPtr_1 := mload(64)\n                        finalize_allocation_60550(memPtr_1)\n                        memPtr := memPtr_1\n                        /// @src -1:-1:-1\n                        let _1 := 0\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(memPtr_1, /** @src -1:-1:-1 */ _1)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(add(memPtr_1, 32), /** @src -1:-1:-1 */ _1)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(add(memPtr_1, 64), /** @src -1:-1:-1 */ _1)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(add(memPtr_1, 96), /** @src -1:-1:-1 */ _1)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(add(memPtr_1, 128), /** @src -1:-1:-1 */ _1)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(add(memPtr_1, 160), /** @src -1:-1:-1 */ _1)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(add(memPtr_1, 192), /** @src -1:-1:-1 */ _1)\n                    }\n                    /// @ast-id 3647 @src 8:23799:24112  \"function getTierCount() public view returns (uint256) {...\"\n                    function fun_getTierCount() -> var\n                    {\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        /// @src 8:23863:23940  \"if (sale.saleAddresses.stakeControllerContractAddress == address(0)) return 0\"\n                        if /** @src 8:23867:23930  \"sale.saleAddresses.stakeControllerContractAddress == address(0)\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(/** @src 8:23867:23916  \"sale.saleAddresses.stakeControllerContractAddress\" */ 22), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _1))\n                        /// @src 8:23863:23940  \"if (sale.saleAddresses.stakeControllerContractAddress == address(0)) return 0\"\n                        {\n                            /// @src 8:23932:23940  \"return 0\"\n                            var := /** @src -1:-1:-1 */ 0\n                            /// @src 8:23932:23940  \"return 0\"\n                            leave\n                        }\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let cleaned := and(sload(/** @src 8:23971:23994  \"stakeControllerContract\" */ 0x23), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _1)\n                        /// @src 8:23971:24009  \"stakeControllerContract.getTierCount()\"\n                        let _2 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:23971:24009  \"stakeControllerContract.getTierCount()\"\n                        mstore(_2, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(227, 0x0ce309c5))\n                        /// @src 8:23971:24009  \"stakeControllerContract.getTierCount()\"\n                        let _3 := staticcall(gas(), cleaned, _2, 4, _2, 32)\n                        if iszero(_3)\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 8:23971:24009  \"stakeControllerContract.getTierCount()\"\n                        let expr := /** @src -1:-1:-1 */ 0\n                        /// @src 8:23971:24009  \"stakeControllerContract.getTierCount()\"\n                        if _3\n                        {\n                            let _4 := 32\n                            if gt(_4, returndatasize()) { _4 := returndatasize() }\n                            finalize_allocation(_2, _4)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            if slt(sub(/** @src 8:23971:24009  \"stakeControllerContract.getTierCount()\" */ add(_2, _4), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _2), /** @src 8:23971:24009  \"stakeControllerContract.getTierCount()\" */ 32)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            {\n                                revert(/** @src -1:-1:-1 */ expr, expr)\n                            }\n                            /// @src 8:23971:24009  \"stakeControllerContract.getTierCount()\"\n                            expr := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_2)\n                        }\n                        /// @src 8:24019:24078  \"if (tierCount == 0) revert Errors.NoTierDetailsFoundError()\"\n                        if /** @src 8:24023:24037  \"tierCount == 0\" */ iszero(expr)\n                        /// @src 8:24019:24078  \"if (tierCount == 0) revert Errors.NoTierDetailsFoundError()\"\n                        {\n                            /// @src 8:24046:24078  \"Errors.NoTierDetailsFoundError()\"\n                            let _5 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:24046:24078  \"Errors.NoTierDetailsFoundError()\"\n                            mstore(_5, shl(227, 0x031f2f73))\n                            revert(_5, /** @src 8:23971:24009  \"stakeControllerContract.getTierCount()\" */ 4)\n                        }\n                        /// @src 8:24089:24105  \"return tierCount\"\n                        var := expr\n                    }\n                    /// @src 8:24954:25275  \"function _getUserNftBalance(address userAddress) internal view notZeroAddress(userAddress) returns (uint256) {...\"\n                    function fun_getUserNftBalance_inner() -> var\n                    {\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let cleaned := and(sload(/** @src 8:25077:25114  \"sale.saleAddresses.nftContractAddress\" */ 21), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1))\n                        /// @src 8:25073:25269  \"if (sale.saleAddresses.nftContractAddress == address(0)) {...\"\n                        switch /** @src 8:25077:25128  \"sale.saleAddresses.nftContractAddress == address(0)\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ cleaned)\n                        case /** @src 8:25073:25269  \"if (sale.saleAddresses.nftContractAddress == address(0)) {...\" */ 0 {\n                            /// @src 8:25190:25258  \"IERC721(sale.saleAddresses.nftContractAddress).balanceOf(msg.sender)\"\n                            let _1 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:25190:25258  \"IERC721(sale.saleAddresses.nftContractAddress).balanceOf(msg.sender)\"\n                            mstore(_1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(224, 0x70a08231))\n                            mstore(/** @src 8:25190:25258  \"IERC721(sale.saleAddresses.nftContractAddress).balanceOf(msg.sender)\" */ add(_1, /** @src 8:25077:25114  \"sale.saleAddresses.nftContractAddress\" */ 4), /** @src 8:25247:25257  \"msg.sender\" */ caller())\n                            /// @src 8:25190:25258  \"IERC721(sale.saleAddresses.nftContractAddress).balanceOf(msg.sender)\"\n                            let _2 := staticcall(gas(), cleaned, _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36, /** @src 8:25190:25258  \"IERC721(sale.saleAddresses.nftContractAddress).balanceOf(msg.sender)\" */ _1, 32)\n                            if iszero(_2)\n                            {\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                let pos := mload(64)\n                                returndatacopy(pos, 0, returndatasize())\n                                revert(pos, returndatasize())\n                            }\n                            /// @src 8:25190:25258  \"IERC721(sale.saleAddresses.nftContractAddress).balanceOf(msg.sender)\"\n                            let expr := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                            /// @src 8:25190:25258  \"IERC721(sale.saleAddresses.nftContractAddress).balanceOf(msg.sender)\"\n                            if _2\n                            {\n                                let _3 := 32\n                                if gt(_3, returndatasize()) { _3 := returndatasize() }\n                                finalize_allocation(_1, _3)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                if slt(sub(/** @src 8:25190:25258  \"IERC721(sale.saleAddresses.nftContractAddress).balanceOf(msg.sender)\" */ add(_1, _3), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _1), /** @src 8:25190:25258  \"IERC721(sale.saleAddresses.nftContractAddress).balanceOf(msg.sender)\" */ 32)\n                                /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                                { revert(expr, expr) }\n                                /// @src 8:25190:25258  \"IERC721(sale.saleAddresses.nftContractAddress).balanceOf(msg.sender)\"\n                                expr := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_1)\n                            }\n                            /// @src 8:25183:25258  \"return IERC721(sale.saleAddresses.nftContractAddress).balanceOf(msg.sender)\"\n                            var := expr\n                            leave\n                        }\n                        default /// @src 8:25073:25269  \"if (sale.saleAddresses.nftContractAddress == address(0)) {...\"\n                        {\n                            /// @src 8:25144:25152  \"return 0\"\n                            var := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0\n                            /// @src 8:25144:25152  \"return 0\"\n                            leave\n                        }\n                    }\n                    /// @ast-id 3769 @src 8:25281:25415  \"function _notZeroAddress(address _address) internal pure {...\"\n                    function fun_notZeroAddress(var_address)\n                    {\n                        /// @src 8:25348:25408  \"if (_address == address(0)) revert Errors.ZeroAddressError()\"\n                        if /** @src 8:25352:25374  \"_address == address(0)\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(/** @src 8:25352:25374  \"_address == address(0)\" */ var_address, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 8:25348:25408  \"if (_address == address(0)) revert Errors.ZeroAddressError()\"\n                        {\n                            /// @src 8:25383:25408  \"Errors.ZeroAddressError()\"\n                            let _1 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:25383:25408  \"Errors.ZeroAddressError()\"\n                            mstore(_1, shl(224, 0x3efa09af))\n                            revert(_1, 4)\n                        }\n                    }\n                    /// @ast-id 3809 @src 8:25560:25729  \"function _onlyOwnerOrAdmin(address _address) internal view {...\"\n                    function fun_onlyOwnerOrAdmin(var__address)\n                    {\n                        /// @src 0:2954:2960  \"_roles\"\n                        let _1 := 0x00\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:332:350  \"keccak256(\\\"OWNER\\\")\" */ 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _2 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)\n                        let _3 := and(var__address, sub(shl(160, 1), 1))\n                        mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _3)\n                        mstore(0x20, _2)\n                        /// @src 8:25633:25687  \"!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)\"\n                        let expr := /** @src 8:25633:25658  \"!hasRole(OWNER, _address)\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)), 0xff))\n                        /// @src 8:25633:25687  \"!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)\"\n                        if expr\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:388:406  \"keccak256(\\\"ADMIN\\\")\" */ 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let _4 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)\n                            mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _3)\n                            mstore(0x20, _4)\n                            /// @src 8:25633:25687  \"!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)\"\n                            expr := /** @src 8:25662:25687  \"!hasRole(ADMIN, _address)\" */ iszero(/** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0x40)), 0xff))\n                        }\n                        /// @src 8:25629:25722  \"if (!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)) revert Errors.UnauthorizedError()\"\n                        if expr\n                        {\n                            /// @src 8:25696:25722  \"Errors.UnauthorizedError()\"\n                            let _5 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(0x40)\n                            /// @src 8:25696:25722  \"Errors.UnauthorizedError()\"\n                            mstore(_5, shl(224, 0x8b5701f7))\n                            revert(_5, 4)\n                        }\n                    }\n                    /// @ast-id 3822 @src 8:25735:25863  \"function _whenSaleIsNotPaused() internal view {...\"\n                    function fun_whenSaleIsNotPaused()\n                    {\n                        /// @src 8:25791:25856  \"if(sale.saleDetails.salePaused) revert Errors.SaleIsPausedError()\"\n                        if /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(shr(/** @src 8:25794:25821  \"sale.saleDetails.salePaused\" */ 8, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ sload(/** @src 8:25794:25821  \"sale.saleDetails.salePaused\" */ 9)), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 0xff)\n                        /// @src 8:25791:25856  \"if(sale.saleDetails.salePaused) revert Errors.SaleIsPausedError()\"\n                        {\n                            /// @src 8:25830:25856  \"Errors.SaleIsPausedError()\"\n                            let _1 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:25830:25856  \"Errors.SaleIsPausedError()\"\n                            mstore(_1, shl(224, 0x778ba6f7))\n                            revert(_1, 4)\n                        }\n                    }\n                    /// @ast-id 3853 @src 8:25869:26134  \"function _hasEnoughAllowance(IERC20Extented token, address userAddress, uint256 amount) internal view {...\"\n                    function fun_hasEnoughAllowance(var_token_address, var_userAddress, var_amount)\n                    {\n                        /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        /// @src 8:26005:26048  \"token.allowance(userAddress, address(this))\"\n                        let _2 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                        /// @src 8:26005:26048  \"token.allowance(userAddress, address(this))\"\n                        mstore(_2, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ shl(225, 0x6eb1769f))\n                        mstore(/** @src 8:26005:26048  \"token.allowance(userAddress, address(this))\" */ add(_2, 4), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(var_userAddress, _1))\n                        mstore(add(/** @src 8:26005:26048  \"token.allowance(userAddress, address(this))\" */ _2, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 36), /** @src 8:26042:26046  \"this\" */ address())\n                        /// @src 8:26005:26048  \"token.allowance(userAddress, address(this))\"\n                        let _3 := staticcall(gas(), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ and(/** @src 8:26005:26020  \"token.allowance\" */ var_token_address, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _1), /** @src 8:26005:26048  \"token.allowance(userAddress, address(this))\" */ _2, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ 68, /** @src 8:26005:26048  \"token.allowance(userAddress, address(this))\" */ _2, 32)\n                        if iszero(_3)\n                        {\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 8:26005:26048  \"token.allowance(userAddress, address(this))\"\n                        let expr := /** @src -1:-1:-1 */ 0\n                        /// @src 8:26005:26048  \"token.allowance(userAddress, address(this))\"\n                        if _3\n                        {\n                            let _4 := 32\n                            if gt(_4, returndatasize()) { _4 := returndatasize() }\n                            finalize_allocation(_2, _4)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            if slt(sub(/** @src 8:26005:26048  \"token.allowance(userAddress, address(this))\" */ add(_2, _4), /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ _2), /** @src 8:26005:26048  \"token.allowance(userAddress, address(this))\" */ 32)\n                            /// @src 8:257:26136  \"contract DappadSale is AccessControl {...\"\n                            {\n                                revert(/** @src -1:-1:-1 */ expr, expr)\n                            }\n                            /// @src 8:26005:26048  \"token.allowance(userAddress, address(this))\"\n                            expr := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(_2)\n                        }\n                        /// @src 8:26058:26127  \"if(amount > userAllowance) revert Errors.InsufficientAllowanceError()\"\n                        if /** @src 8:26061:26083  \"amount > userAllowance\" */ gt(var_amount, expr)\n                        /// @src 8:26058:26127  \"if(amount > userAllowance) revert Errors.InsufficientAllowanceError()\"\n                        {\n                            /// @src 8:26092:26127  \"Errors.InsufficientAllowanceError()\"\n                            let _5 := /** @src 8:257:26136  \"contract DappadSale is AccessControl {...\" */ mload(64)\n                            /// @src 8:26092:26127  \"Errors.InsufficientAllowanceError()\"\n                            mstore(_5, shl(227, 0x0e74e94f))\n                            revert(_5, /** @src 8:26005:26048  \"token.allowance(userAddress, address(this))\" */ 4)\n                        }\n                    }\n                }\n                data \".metadata\" hex\"a2646970667358221220f28ef4812c9109f1ed4bdf7f2a208b7ebecc5537826062fd1286f309ca99b68964736f6c63430008140033\"\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220f505977e7f310665e52d4896692db638e7776459f7c89181ae3ef393980346a064736f6c63430008140033\"\n    }\n}\n","hash":"0100020f2c7137d412b1fb3e2d11c4f0dc01ce5e6d98b66bb1d948aaaefccc39","factoryDependencies":{"01000a5f68803d1a45dd51b555583e101afe8282614ddbf3c7fb7afc10604e40":"contracts/core/DappadSale.sol:DappadSale"}}},"contracts/errors/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"AlreadyClaimedError","type":"error"},{"inputs":[],"name":"AlreadyJoinedSaleError","type":"error"},{"inputs":[],"name":"AlreadyRefundedError","type":"error"},{"inputs":[],"name":"ArraysLengthMismatchError","type":"error"},{"inputs":[],"name":"EmergencyOverAmountError","type":"error"},{"inputs":[],"name":"EmergencyOverRewardError","type":"error"},{"inputs":[],"name":"EmptySaleNameError","type":"error"},{"inputs":[],"name":"EmptyTierDetailsError","type":"error"},{"inputs":[],"name":"EmptyVestingPercentageError","type":"error"},{"inputs":[],"name":"FCFSSaleAlreadyStartedError","type":"error"},{"inputs":[],"name":"FCFSSaleNotEnabledError","type":"error"},{"inputs":[],"name":"FCFSSaleNotStartedError","type":"error"},{"inputs":[],"name":"FailedToAddToken","type":"error"},{"inputs":[],"name":"FirstVestingAlreadyClaimedError","type":"error"},{"inputs":[],"name":"InsufficientAllowanceError","type":"error"},{"inputs":[],"name":"InsufficientBalanceError","type":"error"},{"inputs":[],"name":"InsufficientContractBalanceError","type":"error"},{"inputs":[],"name":"InvalidAmountError","type":"error"},{"inputs":[],"name":"InvalidInterestRateError","type":"error"},{"inputs":[],"name":"InvalidLockDurationError","type":"error"},{"inputs":[],"name":"InvalidMaxInvestmentAmountError","type":"error"},{"inputs":[],"name":"InvalidPaymasterInputLengthError","type":"error"},{"inputs":[],"name":"InvalidSaleDurationError","type":"error"},{"inputs":[],"name":"InvalidSaleEndDateError","type":"error"},{"inputs":[],"name":"InvalidSaleIndexError","type":"error"},{"inputs":[],"name":"InvalidSaleStartDateError","type":"error"},{"inputs":[],"name":"InvalidStakeContractAddressError","type":"error"},{"inputs":[],"name":"InvalidStakeIndexError","type":"error"},{"inputs":[],"name":"InvalidTierIndexError","type":"error"},{"inputs":[],"name":"InvalidTokenError","type":"error"},{"inputs":[],"name":"InvalidVestingDurationError","type":"error"},{"inputs":[],"name":"InvalidVestingIndexError","type":"error"},{"inputs":[],"name":"MaxNodeCountPerUserReachedError","type":"error"},{"inputs":[],"name":"MaxNodeCountReachedError","type":"error"},{"inputs":[],"name":"MaxTierInvestmentReachedError","type":"error"},{"inputs":[],"name":"MaxTotalInvestmentReachedError","type":"error"},{"inputs":[],"name":"MaximumInvestmentReachedError","type":"error"},{"inputs":[],"name":"MaximumNodeTierReachedError","type":"error"},{"inputs":[],"name":"MinimumInvestmentNotReachedError","type":"error"},{"inputs":[],"name":"MinimumNodeTierNotReachedError","type":"error"},{"inputs":[],"name":"MinimumStakePointsNotReachedError","type":"error"},{"inputs":[],"name":"MinimumUserTierNotReachedError","type":"error"},{"inputs":[],"name":"NoRewardToHarvestError","type":"error"},{"inputs":[],"name":"NoRewardToReInvestError","type":"error"},{"inputs":[],"name":"NoTierDetailsFoundError","type":"error"},{"inputs":[],"name":"NotEnabledError","type":"error"},{"inputs":[],"name":"NotJoinedSaleError","type":"error"},{"inputs":[],"name":"OnlyBootloaderError","type":"error"},{"inputs":[],"name":"RefundNotEnabledError","type":"error"},{"inputs":[],"name":"RefundPeriodOverError","type":"error"},{"inputs":[],"name":"RegisterAlreadyEndedError","type":"error"},{"inputs":[],"name":"RegisterNotStartedError","type":"error"},{"inputs":[],"name":"SaleAlreadyEndedError","type":"error"},{"inputs":[],"name":"SaleIsPausedError","type":"error"},{"inputs":[],"name":"SaleNotEndedError","type":"error"},{"inputs":[],"name":"SaleNotStartedError","type":"error"},{"inputs":[],"name":"StakeIsPausedError","type":"error"},{"inputs":[],"name":"StakePeriodNotOverError","type":"error"},{"inputs":[],"name":"TierOneCannotJoinStakerRoundError","type":"error"},{"inputs":[],"name":"TokenTransferFailedError","type":"error"},{"inputs":[],"name":"TotalVestingPercentageError","type":"error"},{"inputs":[],"name":"TxTransferFailedError","type":"error"},{"inputs":[],"name":"UnauthorizedError","type":"error"},{"inputs":[],"name":"UnsupportedPaymasterFlowError","type":"error"},{"inputs":[],"name":"UserAlreadyRegisteredError","type":"error"},{"inputs":[],"name":"UserHasNoNFTError","type":"error"},{"inputs":[],"name":"UserHasNoNFTsError","type":"error"},{"inputs":[],"name":"UserHasNoStakedAmountError","type":"error"},{"inputs":[],"name":"UserNotRegisteredError","type":"error"},{"inputs":[],"name":"UserNotWhitelistedError","type":"error"},{"inputs":[],"name":"VestingNotClaimableError","type":"error"},{"inputs":[],"name":"VestingsNotClaimableError","type":"error"},{"inputs":[],"name":"ZeroAddressError","type":"error"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyClaimedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyJoinedSaleError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyRefundedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArraysLengthMismatchError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmergencyOverAmountError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmergencyOverRewardError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptySaleNameError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyTierDetailsError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyVestingPercentageError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FCFSSaleAlreadyStartedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FCFSSaleNotEnabledError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FCFSSaleNotStartedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedToAddToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FirstVestingAlreadyClaimedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAllowanceError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalanceError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientContractBalanceError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmountError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInterestRateError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLockDurationError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaxInvestmentAmountError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPaymasterInputLengthError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSaleDurationError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSaleEndDateError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSaleIndexError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSaleStartDateError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidStakeContractAddressError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidStakeIndexError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTierIndexError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVestingDurationError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVestingIndexError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxNodeCountPerUserReachedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxNodeCountReachedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxTierInvestmentReachedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxTotalInvestmentReachedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaximumInvestmentReachedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaximumNodeTierReachedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinimumInvestmentNotReachedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinimumNodeTierNotReachedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinimumStakePointsNotReachedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinimumUserTierNotReachedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoRewardToHarvestError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoRewardToReInvestError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoTierDetailsFoundError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnabledError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotJoinedSaleError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyBootloaderError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RefundNotEnabledError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RefundPeriodOverError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RegisterAlreadyEndedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RegisterNotStartedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SaleAlreadyEndedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SaleIsPausedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SaleNotEndedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SaleNotStartedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StakeIsPausedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StakePeriodNotOverError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TierOneCannotJoinStakerRoundError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenTransferFailedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TotalVestingPercentageError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TxTransferFailedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedPaymasterFlowError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserAlreadyRegisteredError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserHasNoNFTError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserHasNoNFTsError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserHasNoStakedAmountError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserNotRegisteredError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserNotWhitelistedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VestingNotClaimableError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VestingsNotClaimableError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressError\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/errors/Errors.sol\":\"Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/errors/Errors.sol\":{\"keccak256\":\"0x1e7bd8e98aaf625e63f63fa8d2bf4f8b4beb93313e33dfb6affdcdd9a7524f70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0613414bf0ad19a7ebc66e8eba189869aacf94f9e734536488a75216942650\",\"dweb:/ipfs/QmRGKqDpx3ef5D3MXMyoR7U23HWqDZmj9Kt2QJgcgD37YR\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"contracts/interfaces/Interfaces.sol":{"IDappadSale":{"abi":[{"inputs":[],"name":"addSaleToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getIsSaleActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRefundEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSaleEndDate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSaleTokenPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserInvestmentAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserRefunded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"addSaleToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIsSaleActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRefundEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSaleEndDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSaleTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserInvestmentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserRefunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/Interfaces.sol\":\"IDappadSale\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xcee038fff82ea087fcca9ccabcc0e8e8d98fe8e907c3d781e16b653badd7bd42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8437b64a0e7587e2d0ab0f37767f9be8bce72b41ecb3c340940a301f35422f48\",\"dweb:/ipfs/QmYy6hA9PY78CDsq71zPsYxBKJxGgSSpSmhXSW4kSLke4a\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"addSaleToken()":"f15ce722","getIsSaleActive()":"c077da9e","getRefundEnabled()":"85c06faa","getSaleEndDate()":"2ecad13f","getSaleTokenPrice()":"06c8e316","getUserInvestmentAmount(address)":"5e87e5a6","getUserRefunded(address)":"cf72d3db"}},"irOptimized":""},"IDappadSaleFactory":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/Interfaces.sol\":\"IDappadSaleFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xcee038fff82ea087fcca9ccabcc0e8e8d98fe8e907c3d781e16b653badd7bd42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8437b64a0e7587e2d0ab0f37767f9be8bce72b41ecb3c340940a301f35422f48\",\"dweb:/ipfs/QmYy6hA9PY78CDsq71zPsYxBKJxGgSSpSmhXSW4kSLke4a\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""},"IDappadStake":{"abi":[{"inputs":[],"name":"getStakeStatistics","outputs":[{"components":[{"internalType":"uint256","name":"rewardBalance","type":"uint256"},{"internalType":"uint256","name":"totalStakedAmount","type":"uint256"},{"internalType":"uint256","name":"totalHarvestedRewardAmount","type":"uint256"},{"internalType":"uint256","name":"totalParticipants","type":"uint256"}],"internalType":"struct IDappadStake.StakeStatistics","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserStake","outputs":[{"components":[{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"totalStakedAmount","type":"uint256"},{"internalType":"uint256","name":"totalStakePoints","type":"uint256"},{"internalType":"uint256","name":"stakeCount","type":"uint256"},{"components":[{"internalType":"uint256","name":"interestRate","type":"uint256"},{"internalType":"uint256","name":"stakeTime","type":"uint256"},{"internalType":"uint256","name":"stakedAmount","type":"uint256"}],"internalType":"struct IDappadStake.StakeFeatures[]","name":"stakeFeatures","type":"tuple[]"}],"internalType":"struct IDappadStake.Stake","name":"","type":"tuple"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getStakeStatistics\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rewardBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalHarvestedRewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalParticipants\",\"type\":\"uint256\"}],\"internalType\":\"struct IDappadStake.StakeStatistics\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserStake\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakePoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeCount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct IDappadStake.StakeFeatures[]\",\"name\":\"stakeFeatures\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IDappadStake.Stake\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/Interfaces.sol\":\"IDappadStake\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xcee038fff82ea087fcca9ccabcc0e8e8d98fe8e907c3d781e16b653badd7bd42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8437b64a0e7587e2d0ab0f37767f9be8bce72b41ecb3c340940a301f35422f48\",\"dweb:/ipfs/QmYy6hA9PY78CDsq71zPsYxBKJxGgSSpSmhXSW4kSLke4a\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"getStakeStatistics()":"5a129248","getUserStake(address)":"bbadc93a"}},"irOptimized":""},"IDappadStakeController":{"abi":[{"inputs":[],"name":"getTierCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserTierIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getTierCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserTierIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/Interfaces.sol\":\"IDappadStakeController\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xcee038fff82ea087fcca9ccabcc0e8e8d98fe8e907c3d781e16b653badd7bd42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8437b64a0e7587e2d0ab0f37767f9be8bce72b41ecb3c340940a301f35422f48\",\"dweb:/ipfs/QmYy6hA9PY78CDsq71zPsYxBKJxGgSSpSmhXSW4kSLke4a\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"getTierCount()":"67184e28","getUserTierIndex(address)":"bb9d537b"}},"irOptimized":""},"IDappadStakeControllerFactory":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/Interfaces.sol\":\"IDappadStakeControllerFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xcee038fff82ea087fcca9ccabcc0e8e8d98fe8e907c3d781e16b653badd7bd42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8437b64a0e7587e2d0ab0f37767f9be8bce72b41ecb3c340940a301f35422f48\",\"dweb:/ipfs/QmYy6hA9PY78CDsq71zPsYxBKJxGgSSpSmhXSW4kSLke4a\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""},"IDappadStakeFactory":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/Interfaces.sol\":\"IDappadStakeFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xcee038fff82ea087fcca9ccabcc0e8e8d98fe8e907c3d781e16b653badd7bd42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8437b64a0e7587e2d0ab0f37767f9be8bce72b41ecb3c340940a301f35422f48\",\"dweb:/ipfs/QmYy6hA9PY78CDsq71zPsYxBKJxGgSSpSmhXSW4kSLke4a\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""},"IDappadVesting":{"abi":[{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getAnyVestingClaimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalVestingAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserTotalVestingAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserUnclaimedTokenAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"uint256","name":"vestingIndex","type":"uint256"}],"name":"getVestingClaimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"setTotalVestingAmount","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getAnyVestingClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalVestingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserTotalVestingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserUnclaimedTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"vestingIndex\",\"type\":\"uint256\"}],\"name\":\"getVestingClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setTotalVestingAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/Interfaces.sol\":\"IDappadVesting\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xcee038fff82ea087fcca9ccabcc0e8e8d98fe8e907c3d781e16b653badd7bd42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8437b64a0e7587e2d0ab0f37767f9be8bce72b41ecb3c340940a301f35422f48\",\"dweb:/ipfs/QmYy6hA9PY78CDsq71zPsYxBKJxGgSSpSmhXSW4kSLke4a\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"getAnyVestingClaimed(address)":"786b4456","getTotalVestingAmount()":"17a76955","getUserTotalVestingAmount(address)":"bf5a0c59","getUserUnclaimedTokenAmount(address)":"cd861e16","getVestingClaimed(address,uint256)":"7eb16ac2","setTotalVestingAmount(uint256)":"75420c99"}},"irOptimized":""},"IDappadVestingFactory":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/Interfaces.sol\":\"IDappadVestingFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xcee038fff82ea087fcca9ccabcc0e8e8d98fe8e907c3d781e16b653badd7bd42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8437b64a0e7587e2d0ab0f37767f9be8bce72b41ecb3c340940a301f35422f48\",\"dweb:/ipfs/QmYy6hA9PY78CDsq71zPsYxBKJxGgSSpSmhXSW4kSLke4a\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""},"IERC20Extented":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/Interfaces.sol\":\"IERC20Extented\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xcee038fff82ea087fcca9ccabcc0e8e8d98fe8e907c3d781e16b653badd7bd42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8437b64a0e7587e2d0ab0f37767f9be8bce72b41ecb3c340940a301f35422f48\",\"dweb:/ipfs/QmYy6hA9PY78CDsq71zPsYxBKJxGgSSpSmhXSW4kSLke4a\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""},"IERC721Extented":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"tokensOfOwner","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/Interfaces.sol\":\"IERC721Extented\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xcee038fff82ea087fcca9ccabcc0e8e8d98fe8e907c3d781e16b653badd7bd42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8437b64a0e7587e2d0ab0f37767f9be8bce72b41ecb3c340940a301f35422f48\",\"dweb:/ipfs/QmYy6hA9PY78CDsq71zPsYxBKJxGgSSpSmhXSW4kSLke4a\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokensOfOwner(address)":"8462151c","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}}}}}