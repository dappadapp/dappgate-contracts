{"id":"ef9777a62a9dcc2c0048a7328c59d5ce","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the Merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates Merkle trees that are safe\n * against this attack out of the box.\n */\nlibrary MerkleProof {\n    /**\n     *@dev The multiproof provided is not valid.\n     */\n    error MerkleProofInvalidMultiproof();\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Calldata version of {verify}\n     */\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Calldata version of {processProof}\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Calldata version of {multiProofVerify}\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proofLen != totalHashes + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            if (proofPos != proofLen) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Calldata version of {processMultiProof}.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proofLen != totalHashes + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            if (proofPos != proofLen) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Sorts the pair (a, b) and hashes the result.\n     */\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\n    }\n\n    /**\n     * @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory.\n     */\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/core/DappadVesting.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\nimport \"../interfaces/Interfaces.sol\";\nimport \"../errors/Errors.sol\";\n\ncontract DappadVesting is AccessControl {\n    bytes32 public constant OWNER = keccak256(\"OWNER\");\n    bytes32 public constant ADMIN = keccak256(\"ADMIN\");\n\n    IDappadVesting.Vesting public defaultVesting;\n    IDappadVesting.VestingSettings public vestingSettings;\n    IDappadVesting.VestingAddresses public vestingAddresses;\n    IDappadVesting.VestingStatistics public vestingStatistics;\n\n    mapping(address => IDappadVesting.Vesting) public customVestings;\n    mapping(address => mapping(uint256 => bool)) public vestingClaimed;\n    mapping(address => uint256) public investmentAmounts;\n\n    IERC20Extented public saleToken;\n    IDappadSale public saleContract;\n\n    event UserClaimedVesting(address userAddress, uint256 vestingIndex, uint256 amount, uint256 saleTokenAmount, uint256 totalVestingAmount, uint256 claimedTime);\n    event UserClaimedAllUnlockedVestings(address userAddress, uint256 amount, uint256 saleTokenAmount, uint256 totalVestingAmount, uint256 claimedTime);\n    event SaleTokenAdded(address user, uint256 saleAmount, uint256 totalSaleTokenAmount);\n    event CustomVestingUpdated(address userAddress, IDappadVesting.Vesting vesting, uint256[] vestingPercentages);\n    event TotalVestingAmountUpdated(uint256 totalVestingAmount);\n    event DefaultVestingUpdated(IDappadVesting.Vesting vesting, uint256[] vestingPercentages);\n    event TotalSaleTokenAmountUpdated(uint256 totalSaleTokenAmount);\n    event VestingAddressesUpdated(IDappadVesting.VestingAddresses vestingAddresses);\n    event UserInvestmentAmountUpdated(address userAddress, uint256 amount);\n    event UserInvestmentAmountsUpdated(address[] userAddresses, uint256[] amounts);\n\n    constructor(IDappadVesting.VestingParams memory vestingParams) \n        notZeroAddress(vestingParams.vestingAddresses.saleTokenAddress) \n        notZeroAddress(vestingParams.vestingAddresses.factoryContractAddress) \n        notZeroAddress(vestingParams.vestingAddresses.ownerAddress) \n        notZeroAddress(vestingParams.vestingAddresses.adminAddress) \n    {\n        _setRoleAdmin(OWNER, OWNER);\n        _setRoleAdmin(ADMIN, OWNER);\n\n        _grantRole(OWNER, vestingParams.vestingAddresses.ownerAddress);\n        _grantRole(ADMIN, vestingParams.vestingAddresses.adminAddress);\n        \n        if (vestingParams.defaultVesting.vestingPercentages.length == 0) revert Errors.EmptyVestingPercentageError();\n        if (vestingParams.defaultVesting.vestingDuration <= 0) revert Errors.InvalidVestingDurationError();\n\n        defaultVesting = vestingParams.defaultVesting;\n\n        saleToken = IERC20Extented(vestingParams.vestingAddresses.saleTokenAddress);\n\n        if (vestingParams.vestingAddresses.saleContractAddress != address(0)) {\n            saleContract = IDappadSale(vestingParams.vestingAddresses.saleContractAddress);\n        }\n\n        vestingSettings = vestingParams.vestingSettings;\n        \n        vestingAddresses = vestingParams.vestingAddresses;\n\n        uint256 totalVestingPercentage = 0;\n\n        defaultVesting.vestingPercentages = new uint256[](vestingParams.defaultVesting.vestingPercentages.length);\n        \n        for(uint256 i = 0; i < vestingParams.defaultVesting.vestingPercentages.length; i++) {\n            defaultVesting.vestingPercentages[i] = vestingParams.defaultVesting.vestingPercentages[i];\n            totalVestingPercentage += vestingParams.defaultVesting.vestingPercentages[i];\n        }\n\n        if (totalVestingPercentage != 10000) revert Errors.TotalVestingPercentageError();\n    }\n\n    modifier notZeroAddress(address _address) {\n        _notZeroAddress(_address);\n        _;\n    }\n\n    modifier onlyOwner(address _address) {\n        _onlyOwner(_address);\n        _;\n    }\n\n    modifier onlyOwnerOrAdmin(address _address) {\n        _onlyOwnerOrAdmin(_address);\n        _;\n    }\n\n    modifier hasEnoughAllowance(IERC20Extented token, address userAddress, uint256 amount) {\n        _hasEnoughAllowance(token, userAddress, amount);\n        _;\n    }\n\n    function claimVesting(uint256 vestingIndex) external notZeroAddress(msg.sender) returns (bool) {\n        if(vestingAddresses.saleContractAddress != address(0)) {\n            if (saleContract.getUserInvestmentAmount(msg.sender) == 0) revert Errors.NotJoinedSaleError();\n\n            if (saleContract.getRefundEnabled()) {\n                if (saleContract.getUserRefunded(msg.sender)) revert Errors.AlreadyRefundedError();\n            }\n        } else {\n            if (investmentAmounts[msg.sender] == 0) revert Errors.NotJoinedSaleError();\n        }\n\n        if (vestingClaimed[msg.sender][vestingIndex]) revert Errors.AlreadyClaimedError();\n\n        IDappadVesting.Vesting memory currentVesting = defaultVesting;\n\n        if (customVestings[msg.sender].vestingCount > 0) {\n            currentVesting = customVestings[msg.sender];\n        }\n\n        if (block.timestamp <= vestingSettings.startDate) revert Errors.VestingsNotClaimableError();\n        \n        bool claimable = getVestingClaimable(msg.sender, vestingIndex);\n        if (!claimable) revert Errors.VestingNotClaimableError();\n\n        vestingClaimed[msg.sender][vestingIndex] = true;\n\n        uint256 saleTokenAmount = getUserTotalVestingAmount(msg.sender);\n        uint256 claimAmount = (saleTokenAmount * currentVesting.vestingPercentages[vestingIndex]) / 10000;\n\n        if(claimAmount == 0) revert Errors.VestingNotClaimableError();\n\n        if (saleToken.balanceOf(address(this)) < claimAmount) revert Errors.InsufficientContractBalanceError();\n\n        vestingStatistics.totalVestingAmount -= claimAmount;\n\n        emit UserClaimedVesting(msg.sender, vestingIndex, claimAmount, saleTokenAmount, vestingStatistics.totalVestingAmount, block.timestamp);\n\n        bool successfullyTransfered = saleToken.transfer(msg.sender, claimAmount);\n        if (!successfullyTransfered) revert Errors.TokenTransferFailedError();\n\n        return true;\n    }\n\n    function claimAllUnlockedVestings() external notZeroAddress(msg.sender) returns (bool) {\n        if(vestingAddresses.saleContractAddress != address(0)) {\n            if (saleContract.getUserInvestmentAmount(msg.sender) == 0) revert Errors.NotJoinedSaleError();\n\n            if (saleContract.getRefundEnabled()) {\n                if (saleContract.getUserRefunded(msg.sender)) revert Errors.AlreadyRefundedError();\n            }\n        } else {\n            if (investmentAmounts[msg.sender] == 0) revert Errors.NotJoinedSaleError();\n        }\n\n        uint256 saleTokenAmount = getUserTotalVestingAmount(msg.sender);\n        uint256 claimAmount = 0;\n\n        IDappadVesting.Vesting memory currentVesting = defaultVesting;\n\n        if (customVestings[msg.sender].vestingCount > 0) {\n            currentVesting = customVestings[msg.sender];\n        }\n\n        if (block.timestamp <= vestingSettings.startDate) revert Errors.VestingsNotClaimableError();\n\n        for (uint256 i = 0; i < currentVesting.vestingCount; i++) {\n            bool claimable = getVestingClaimable(msg.sender, i);\n            if (claimable) {\n                claimAmount += (saleTokenAmount * currentVesting.vestingPercentages[i]) / 10000;\n                vestingClaimed[msg.sender][i] = true;\n            }\n        }\n\n        if(claimAmount == 0) revert Errors.VestingsNotClaimableError();\n\n        if (saleToken.balanceOf(address(this)) < claimAmount) revert Errors.InsufficientContractBalanceError();\n\n        vestingStatistics.totalVestingAmount -= claimAmount;\n\n        emit UserClaimedAllUnlockedVestings(msg.sender, claimAmount, saleTokenAmount, vestingStatistics.totalVestingAmount, block.timestamp);\n\n        bool successfullyTransfered = saleToken.transfer(msg.sender, claimAmount);\n        if (!successfullyTransfered) revert Errors.TokenTransferFailedError();\n\n        return true;\n    }\n\n    function emergencyOnly() external notZeroAddress(msg.sender) onlyOwnerOrAdmin(msg.sender) returns (bool) {\n        if(saleToken.balanceOf(address(this)) > 0) {\n            bool successfullyTransfered = saleToken.transfer(msg.sender, saleToken.balanceOf(address(this)));\n            if (!successfullyTransfered) revert Errors.TokenTransferFailedError();\n        } \n\n        return true;\n    }\n\n    function addSaleToken(uint256 amount) external onlyOwnerOrAdmin(msg.sender) hasEnoughAllowance(saleToken, msg.sender, amount) returns (bool) {\n        if (saleToken.balanceOf(msg.sender) < amount) revert Errors.InsufficientBalanceError();\n\n        vestingStatistics.totalSaleTokenAmount += amount;\n\n        emit SaleTokenAdded(msg.sender, amount, vestingStatistics.totalSaleTokenAmount);\n\n        bool successfullyTransfered = saleToken.transferFrom(msg.sender, address(this), amount);\n        if (!successfullyTransfered) revert Errors.TokenTransferFailedError();\n\n        return true;\n    }\n\n    function setUserInvestmentAmount(address userAddress, uint256 amount) external onlyOwnerOrAdmin(msg.sender) returns (bool) {\n        if (amount == 0) revert Errors.InvalidAmountError();\n\n        investmentAmounts[userAddress] = amount;\n\n        emit UserInvestmentAmountUpdated(userAddress, amount);\n\n        return true;\n    }\n\n    function setUserInvestmentAmounts(address[] calldata userAddresses, uint256[] calldata amounts) external onlyOwnerOrAdmin(msg.sender) returns (bool) {\n        if (userAddresses.length != amounts.length) revert Errors.ArraysLengthMismatchError();\n\n        for (uint256 i = 0; i < userAddresses.length; i++) {\n            if (amounts[i] == 0) revert Errors.InvalidAmountError();\n            if (userAddresses[i] == address(0)) revert Errors.ZeroAddressError();\n\n            investmentAmounts[userAddresses[i]] = amounts[i];\n        }\n\n        emit UserInvestmentAmountsUpdated(userAddresses, amounts);\n\n        return true;\n    }\n\n    function setDefaultVesting(IDappadVesting.Vesting memory vesting) external onlyOwnerOrAdmin(msg.sender) returns (bool) {\n        defaultVesting = vesting;\n\n        uint256 totalVestingPercentage = 0;\n\n        defaultVesting.vestingPercentages = new uint256[](vesting.vestingPercentages.length);\n        for (uint256 i = 0; i < vesting.vestingCount; i++) {\n            defaultVesting.vestingPercentages[i] = vesting.vestingPercentages[i];\n            totalVestingPercentage += vesting.vestingPercentages[i];\n        }\n\n        if (totalVestingPercentage != 10000) revert Errors.TotalVestingPercentageError();\n\n        emit DefaultVestingUpdated(vesting, vesting.vestingPercentages);\n\n        return true;\n    }\n\n    function setCustomVesting(address userAddress, IDappadVesting.Vesting memory vesting) external onlyOwnerOrAdmin(msg.sender) returns (bool) {\n        customVestings[userAddress] = vesting;\n\n        uint256 totalVestingPercentage = 0;\n\n        customVestings[userAddress].vestingPercentages = new uint256[](vesting.vestingPercentages.length);\n        for (uint256 i = 0; i < vesting.vestingCount; i++) {\n            customVestings[userAddress].vestingPercentages[i] = vesting.vestingPercentages[i];\n            totalVestingPercentage += vesting.vestingPercentages[i];\n        }\n\n        if (totalVestingPercentage != 10000) revert Errors.TotalVestingPercentageError();\n\n        emit CustomVestingUpdated(userAddress, vesting, vesting.vestingPercentages);\n\n        return true;\n    }\n\n    function setCustomVestings(address[] calldata userAddresses, IDappadVesting.Vesting[] calldata vestings) external onlyOwnerOrAdmin(msg.sender) returns (bool) {\n        if (userAddresses.length != vestings.length) revert Errors.ArraysLengthMismatchError();\n\n        for (uint256 i = 0; i < userAddresses.length; i++) {\n            if (userAddresses[i] == address(0)) revert Errors.ZeroAddressError();\n\n            customVestings[userAddresses[i]] = vestings[i];\n\n            uint256 totalVestingPercentage = 0;\n\n            customVestings[userAddresses[i]].vestingPercentages = new uint256[](vestings[i].vestingPercentages.length);\n            for (uint256 j = 0; j < vestings[i].vestingCount; j++) {\n                customVestings[userAddresses[i]].vestingPercentages[j] = vestings[i].vestingPercentages[j];\n                totalVestingPercentage += vestings[i].vestingPercentages[j];\n            }\n\n            if (totalVestingPercentage != 10000) revert Errors.TotalVestingPercentageError();\n\n            emit CustomVestingUpdated(userAddresses[i], vestings[i], vestings[i].vestingPercentages);\n        }    \n\n        return true;\n    }\n\n    function setTotalSaleTokenAmount(uint256 amount) external onlyOwnerOrAdmin(msg.sender) returns (bool) {\n        vestingStatistics.totalSaleTokenAmount = amount;\n\n        emit TotalSaleTokenAmountUpdated(amount);\n\n        return true;\n    }\n\n    function setTotalVestingAmount(uint256 amount) external onlyOwnerOrAdmin(msg.sender) returns (bool) {\n        vestingStatistics.totalVestingAmount = amount;\n\n        emit TotalVestingAmountUpdated(amount);\n\n        return true;\n    }\n\n    function setVestingAddresses(IDappadVesting.VestingAddresses memory newVestingAddresses) external onlyOwnerOrAdmin(msg.sender) returns (bool) {\n        vestingAddresses = newVestingAddresses;\n\n        if (newVestingAddresses.saleTokenAddress != address(0)) {\n            saleToken = IERC20Extented(newVestingAddresses.saleTokenAddress);\n        }\n\n        if (newVestingAddresses.saleContractAddress != address(0)) {\n            saleContract = IDappadSale(newVestingAddresses.saleContractAddress);\n        }\n\n        emit VestingAddressesUpdated(newVestingAddresses);\n\n        return true;\n    }\n\n    function getUserTotalVestingAmount(address userAddress) public view notZeroAddress(userAddress) returns (uint256) {\n        IDappadVesting.Vesting memory currentVesting = defaultVesting;\n\n        if (customVestings[userAddress].vestingCount > 0) {\n            currentVesting = customVestings[userAddress];\n        }\n\n        uint256 userTotalVestingAmount = 0;\n\n        if (vestingAddresses.saleContractAddress != address(0)) {\n            if (vestingSettings.saleTokenPrice > 0) {\n                userTotalVestingAmount = calculateSaleTokenAmount(vestingSettings.saleTokenPrice, saleContract.getUserInvestmentAmount(userAddress));\n            } else {\n                userTotalVestingAmount = calculateSaleTokenAmount(saleContract.getSaleTokenPrice(), saleContract.getUserInvestmentAmount(userAddress));\n            }\n        } else {\n            userTotalVestingAmount = calculateSaleTokenAmount(vestingSettings.saleTokenPrice, investmentAmounts[userAddress]);\n        }\n\n        return userTotalVestingAmount;\n    }\n\n    function calculateSaleTokenAmount(uint256 saleTokenPrice, uint256 investmentAmount) public view returns (uint256) {\n        return ((investmentAmount / saleTokenPrice) * (10 ** saleToken.decimals()));\n    }\n\n    function getVestingClaimable(address userAddress, uint256 vestingIndex) public view returns (bool) {\n        IDappadVesting.Vesting memory currentVesting = defaultVesting;\n\n        if (customVestings[userAddress].vestingCount > 0) {\n            currentVesting = customVestings[userAddress];\n        }\n\n        if (vestingIndex >= currentVesting.vestingCount) revert Errors.InvalidVestingIndexError();\n\n        if(vestingClaimed[userAddress][vestingIndex]) {\n            return false;\n        } else {\n            uint256 startDate = vestingSettings.startDate;\n\n            if(vestingIndex == 0) {\n                if(currentVesting.onTGE) {\n                    return true;\n                } else {\n                    if(currentVesting.vestingCliffDuration > 0) {\n                        return block.timestamp >= (startDate + currentVesting.vestingCliffDuration);\n                    } else {\n                        return block.timestamp >= (startDate + (currentVesting.vestingDuration * (vestingIndex + 1)));\n                    }\n                }\n            } else {\n                if(currentVesting.vestingCliffDuration > 0) {\n                    return block.timestamp >= (startDate + currentVesting.vestingCliffDuration + (currentVesting.vestingDuration * vestingIndex));\n                } else {\n                    return block.timestamp >= (startDate + (currentVesting.vestingDuration * (vestingIndex + 1)));\n                }\n            }\n        }\n    }\n\n    function getAnyVestingClaimed(address userAddress) external view notZeroAddress(userAddress) returns (bool) {\n        IDappadVesting.Vesting memory currentVesting = defaultVesting;\n\n        if (customVestings[userAddress].vestingCount > 0) {\n            currentVesting = customVestings[userAddress];\n        }\n\n        for (uint256 i = 0; i < currentVesting.vestingCount; i++) {\n            if (vestingClaimed[userAddress][i]) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    function getVestingClaimed(address userAddress, uint256 vestingIndex) external view notZeroAddress(userAddress) returns (bool) {\n        return vestingClaimed[userAddress][vestingIndex];\n    }\n\n    function getUserUnclaimedTokenAmount(address userAddress) external view notZeroAddress(userAddress) returns (uint256) {\n        IDappadVesting.Vesting memory currentVesting = defaultVesting;\n\n        if (customVestings[userAddress].vestingCount > 0) {\n            currentVesting = customVestings[userAddress];\n        }\n        \n        uint256 unclaimedTokenAmount = 0;\n        uint256 userTotalVestingAmount = getUserTotalVestingAmount(userAddress);\n\n        for (uint256 i = 0; i < currentVesting.vestingCount; i++) {\n            if (!vestingClaimed[userAddress][i]) {\n                unclaimedTokenAmount += (userTotalVestingAmount * currentVesting.vestingPercentages[i]) / 10000;\n            }\n        }\n        \n        return unclaimedTokenAmount;\n    }\n\n    function getUserLockedTokenAmount(address userAddress) external view notZeroAddress(userAddress) returns (uint256) {\n        IDappadVesting.Vesting memory currentVesting = defaultVesting;\n\n        if (customVestings[userAddress].vestingCount > 0) {\n            currentVesting = customVestings[userAddress];\n        }\n        \n        uint256 lockedTokenAmount = 0;\n        uint256 userTotalVestingAmount = getUserTotalVestingAmount(userAddress);\n\n        for (uint256 i = 0; i < currentVesting.vestingCount; i++) {\n            if (!vestingClaimed[userAddress][i] && !getVestingClaimable(userAddress, i)) {\n                lockedTokenAmount += (userTotalVestingAmount * currentVesting.vestingPercentages[i]) / 10000;\n            }\n        }\n\n        return lockedTokenAmount;\n    }\n\n    function getUserUnlockedTokenAmount(address userAddress) external view notZeroAddress(userAddress) returns (uint256) {\n        IDappadVesting.Vesting memory currentVesting = defaultVesting;\n\n        if (customVestings[userAddress].vestingCount > 0) {\n            currentVesting = customVestings[userAddress];\n        }\n        \n        uint256 unlockedTokenAmount = 0;\n        uint256 userTotalVestingAmount = getUserTotalVestingAmount(userAddress);\n\n        for (uint256 i = 0; i < currentVesting.vestingCount; i++) {\n            if (!vestingClaimed[userAddress][i] && getVestingClaimable(userAddress, i)) {\n                unlockedTokenAmount += (userTotalVestingAmount * currentVesting.vestingPercentages[i]) / 10000;\n            }\n        }\n\n        return unlockedTokenAmount;\n    }\n\n    function getNextUnlockDate(address userAddress) external view notZeroAddress(userAddress) returns (uint256) {\n        IDappadVesting.Vesting memory currentVesting = defaultVesting;\n\n        if (customVestings[userAddress].vestingCount > 0) {\n            currentVesting = customVestings[userAddress];\n        }\n\n        uint256 vestingIndex = getUserNextVestingIndex(userAddress);\n\n        if (currentVesting.onTGE) {\n            if(currentVesting.vestingCliffDuration > 0) {\n                return vestingSettings.startDate + currentVesting.vestingCliffDuration + (currentVesting.vestingDuration * (vestingIndex - 1));\n            } else {\n                return vestingSettings.startDate + (currentVesting.vestingDuration * vestingIndex);\n            }\n        } else {\n            if(currentVesting.vestingCliffDuration > 0) {\n                return vestingSettings.startDate + currentVesting.vestingCliffDuration + (currentVesting.vestingDuration * (vestingIndex - 1));\n            } else {\n                return vestingSettings.startDate + (currentVesting.vestingDuration * vestingIndex);\n            }\n        }\n    }\n\n    function getUserNextVestingIndex(address userAddress) public view notZeroAddress(userAddress) returns (uint256) {\n        IDappadVesting.Vesting memory currentVesting = defaultVesting;\n\n        if (customVestings[userAddress].vestingCount > 0) {\n            currentVesting = customVestings[userAddress];\n        }\n\n        uint256 vestingIndex = 0;\n\n        for (uint256 i = 0; i < currentVesting.vestingCount; i++) {\n            if (vestingClaimed[userAddress][i]) {\n                vestingIndex = i;\n            }\n        }\n\n        return vestingIndex + 1;\n    }\n\n    function getDefaultVestingPercentages() external view returns (uint256[] memory) {\n        return defaultVesting.vestingPercentages;\n    }\n\n    function getCustomVestingPercentages(address userAddress) external view returns (uint256[] memory) {\n        return customVestings[userAddress].vestingPercentages;\n    }\n\n    function getTotalVestingAmount() external view returns (uint256) {\n        return vestingStatistics.totalVestingAmount;\n    }\n\n    function getSaleTokenAddress() external view returns (address) {\n        return vestingAddresses.saleTokenAddress;\n    }\n\n    function getFactoryContractAddress() external view returns (address) {\n        return vestingAddresses.factoryContractAddress;\n    }\n\n    function _notZeroAddress(address _address) internal pure {\n        if (_address == address(0)) revert Errors.ZeroAddressError();\n    }\n\n    function _onlyOwner(address _address) internal view {\n        if (!hasRole(OWNER, _address)) revert Errors.UnauthorizedError();\n    }\n\n    function _onlyOwnerOrAdmin(address _address) internal view {\n        if (!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)) revert Errors.UnauthorizedError();\n    }\n\n    function _hasEnoughAllowance(IERC20Extented token, address userAddress, uint256 amount) internal view {\n        uint256 userAllowance = token.allowance(userAddress, address(this));\n        if(amount > userAllowance) revert Errors.InsufficientAllowanceError();\n    }\n}"},"contracts/core/DappadVestingFactory.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"./DappadVesting.sol\";\nimport \"../interfaces/Interfaces.sol\";\nimport \"../errors/Errors.sol\";\n\ncontract DappadVestingFactory is AccessControl {\n    bytes32 public constant OWNER = keccak256(\"OWNER\");\n    bytes32 public constant ADMIN = keccak256(\"ADMIN\");\n\n    address[] public allVestings;\n\n    event VestingCreated(\n        uint256 vestingCount,\n        uint256 vestingDuration,\n        uint256 vestingCliffDuration,\n        uint256[] vestingPercentages,\n        bool onTGE,\n        address saleTokenAddress,\n        address saleContractAddress,\n        address factoryContractAddress\n    );\n    event StakeContractAddressUpdated(address _stakeContractAddress);\n\n    constructor(IDappadVestingFactory.VestingFactoryParams memory vestingFactoryParams) {\n        _setRoleAdmin(OWNER, OWNER);\n        _setRoleAdmin(ADMIN, OWNER);\n\n        _grantRole(OWNER, msg.sender);\n        _grantRole(ADMIN, vestingFactoryParams.adminAddress);\n    }\n\n    modifier notZeroAddress(address _address) {\n        _notZeroAddress(_address);\n        _;\n    }\n\n    modifier onlyOwner(address _address) {\n        _onlyOwner(_address);\n        _;\n    }\n\n    modifier onlyOwnerOrAdmin(address _address) {\n        _onlyOwnerOrAdmin(_address);\n        _;\n    }\n\n    function createVesting(IDappadVesting.VestingParams memory _vestingParams)\n        public\n        onlyOwnerOrAdmin(msg.sender)\n        notZeroAddress(_vestingParams.vestingAddresses.saleTokenAddress)\n        returns (bool)\n    {\n        IDappadVesting.VestingParams memory vestingParams = _vestingParams;\n\n        if (vestingParams.defaultVesting.vestingPercentages.length == 0) {\n            revert Errors.EmptyVestingPercentageError();\n        }\n        if (vestingParams.defaultVesting.vestingDuration == 0) {\n            revert Errors.InvalidVestingDurationError();\n        }\n\n        DappadVesting newVesting = new DappadVesting(vestingParams);\n\n        allVestings.push(address(newVesting));\n\n        emit VestingCreated(\n            vestingParams.defaultVesting.vestingCount,\n            vestingParams.defaultVesting.vestingDuration,\n            vestingParams.defaultVesting.vestingCliffDuration,\n            vestingParams.defaultVesting.vestingPercentages,\n            vestingParams.defaultVesting.onTGE,\n            vestingParams.vestingAddresses.saleTokenAddress,\n            vestingParams.vestingAddresses.saleContractAddress,\n            address(this)\n        );\n\n        return true;\n    }\n\n    function getVestingCount() external view returns (uint256) {\n        return allVestings.length;\n    }\n\n    function getVesting(uint256 index) external view returns (address) {\n        if (index >= allVestings.length) {\n            revert Errors.InvalidVestingIndexError();\n        }\n        return allVestings[index];\n    }\n\n    function _notZeroAddress(address _address) internal pure {\n        if (_address == address(0)) revert Errors.ZeroAddressError();\n    }\n\n    function _onlyOwner(address _address) internal view {\n        if (!hasRole(OWNER, _address)) revert Errors.UnauthorizedError();\n    }\n\n    function _onlyOwnerOrAdmin(address _address) internal view {\n        if (!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)) revert Errors.UnauthorizedError();\n    }\n}"},"contracts/errors/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\nabstract contract Errors {\n    error ZeroAddressError();\n    error UnauthorizedError();\n    error TokenTransferFailedError();\n    error ArraysLengthMismatchError();\n    error NotEnabledError();\n\n    error InsufficientBalanceError();\n    error InsufficientContractBalanceError();\n    error InsufficientAllowanceError();\n    error UserHasNoNFTError();\n    error UserNotRegisteredError();\n    error UserAlreadyRegisteredError();\n    error RegisterNotStartedError();\n    error MaxTierInvestmentReachedError();\n    error RegisterAlreadyEndedError();\n    error TierOneCannotJoinStakerRoundError();\n\n    error InvalidAmountError();\n    error InvalidTierIndexError();\n    error InvalidSaleStartDateError();\n    error InvalidSaleEndDateError();\n    error InvalidSaleDurationError();\n    error InvalidMaxInvestmentAmountError();\n    error InvalidVestingDurationError();\n    error InvalidSaleIndexError();\n    error InvalidVestingIndexError();\n    error InvalidStakeContractAddressError();\n\n    error InvalidInterestRateError();\n    error InvalidLockDurationError();\n\n    error InvalidPaymasterInputLengthError();\n    error InvalidTokenError();\n\n    error EmptySaleNameError();\n    error EmptyTierDetailsError();\n    error EmptyVestingPercentageError();\n    error TotalVestingPercentageError();\n\n    error FailedToAddToken();\n    error SaleNotStartedError();\n    error SaleNotEndedError();\n    error SaleAlreadyEndedError();\n    error NotJoinedSaleError();\n    error AlreadyJoinedSaleError();\n    error SaleIsPausedError();\n    error UserHasNoNFTsError();\n\n    error FCFSSaleNotEnabledError();\n    error FCFSSaleNotStartedError();\n    error FCFSSaleAlreadyStartedError();\n    error FirstVestingAlreadyClaimedError();\n    error VestingsNotClaimableError();\n\n    error UserNotWhitelistedError();\n\n    error MinimumInvestmentNotReachedError();\n    error MaximumInvestmentReachedError();\n    error MaxTotalInvestmentReachedError();\n    error MaxNodeCountReachedError();\n    error MaxNodeCountPerUserReachedError();\n    error MinimumNodeTierNotReachedError();\n    error MaximumNodeTierReachedError();\n    error MinimumUserTierNotReachedError();\n\n    error RefundNotEnabledError();\n    error RefundPeriodOverError();\n    error AlreadyRefundedError();\n\n    error AlreadyClaimedError();\n    error VestingNotClaimableError();\n    error NoTierDetailsFoundError();\n\n    error UserHasNoStakedAmountError();\n    error StakePeriodNotOverError();\n    error StakeIsPausedError();\n    error InvalidStakeIndexError();\n    error NoRewardToHarvestError();\n    error NoRewardToReInvestError();\n    error MinimumStakePointsNotReachedError();\n\n    error OnlyBootloaderError();\n    error TxTransferFailedError();\n    error UnsupportedPaymasterFlowError();\n\n    error EmergencyOverRewardError();\n    error EmergencyOverAmountError();\n}"},"contracts/interfaces/Interfaces.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\nabstract contract IERC20Extented is IERC20 {\n    function decimals() public virtual view returns (uint8); \n}\n\nabstract contract IERC721Extented is IERC721 {\n    function tokensOfOwner(address owner) external virtual view returns (uint256[] memory);\n}\n\ninterface IDappadSaleFactory {\n    struct SaleFactoryParams {\n        address adminAddress;\n    }\n}\n\ninterface IDappadVestingFactory {\n    struct VestingFactoryParams {\n        address adminAddress;\n    }\n}\n\ninterface IDappadStakeFactory {\n    struct StakeFactoryParams {\n        address adminAddress;\n    }\n}\n\ninterface IDappadStakeControllerFactory {\n    struct StakeControllerFactoryParams {\n        address adminAddress;\n    }\n}\n\ninterface IDappadStakeController {\n    struct StakeControllerParams {\n        StakeControllerDetails stakeControllerDetails;\n        StakeControllerAddresses stakeControllerAddresses;\n        StakeControllerTier[] stakeControllerTiers;\n    }\n\n    struct StakeControllerDetails {\n        uint256 requiredTokensForNftBonus;\n        uint256 bonusEnd;\n        bool addBonusPerNft;\n        uint256[] bonusesPerNft;\n        uint256[] stakeContractPointMultipliers;\n    }\n\n    struct StakeControllerAddresses {\n        address tokenAddress;\n        address ownerAddress;\n        address adminAddress;\n        address[] nftContractAddresses;\n        address[] stakeContractAddresses;\n        address[] bonusVestingContractAddresses;\n    }\n    \n    struct StakeControllerTier {\n        uint256 requiredStakePoints;\n    }\n\n    function getTierCount() external view returns (uint256);\n    function getUserTierIndex(address userAddress) external view returns (uint256);\n}\n\ninterface IDappadStake {\n    struct StakeParams {\n        StakeDetails stakeDetails; \n        StakeAddresses stakeAddresses;\n    }\n\n    struct StakeDetails {\n        uint256 interestRate;\n        uint256 lockDuration;\n        uint256 lockDurationRewardMultiplier;\n        uint256 lockDurationPointMultiplier;\n        bool stakePaused;\n    }\n\n    struct StakeAddresses {\n        address tokenAddress;\n        address ownerAddress;\n        address adminAddress;\n    }\n\n    struct StakeStatistics {\n        uint256 rewardBalance;\n        uint256 totalStakedAmount;\n        uint256 totalHarvestedRewardAmount;\n        uint256 totalParticipants;\n    }\n\n    struct Stake {\n        uint256 endTime;\n        uint256 totalStakedAmount;\n        uint256 totalStakePoints;\n        uint256 stakeCount;\n        StakeFeatures[] stakeFeatures;\n    }\n\n    struct StakeFeatures {\n        uint256 interestRate;\n        uint256 stakeTime;\n        uint256 stakedAmount;\n    }\n\n    function getStakeStatistics() external view returns (IDappadStake.StakeStatistics memory);\n    function getUserStake(address userAddress) external view returns (IDappadStake.Stake memory);\n}\n\ninterface IDappadSale {\n    struct SaleParams {\n        Sale sale;\n        SaleTierDetails[] tierDetails;\n    }\n    \n    struct Sale {\n        SaleDetails saleDetails;\n        SaleFcfsDetails fcfsDetails;\n        SaleRefundDetails refundDetails;\n        SaleTicketDetails ticketDetails;\n        SaleAddresses saleAddresses;\n    }\n    \n    struct SaleDetails {\n        uint256 registerStart;\n        uint256 registerEnd;\n        uint256 registerTokenAmount;\n        uint256 saleStart;\n        uint256 saleEnd;\n        uint256 saleTokenPrice;\n        uint256 maxInvestmentAmount;\n        uint256 projectOwnerFeePercentage;\n        bool registerTokenEnabled;\n        bool salePaused;\n        string saleName;\n    }\n\n    struct SaleFcfsDetails {\n        uint256 fcfsSaleDuration;\n        uint256 fcfsSaleMultiplier;\n    }\n\n    struct SaleRefundDetails {\n        uint256 refundDuration;\n        bool refundEnabled;\n    }\n\n    struct SaleTicketDetails {\n        uint256 ticketPrice;\n        bytes32 ticketMerkleRoot;\n    }\n\n    struct SaleRegisterDetails {\n        uint256 registerTokenAmount;\n        uint256 tierIndex;\n        bool registered;\n    }\n\n    struct SaleAddresses {\n        address saleTokenAddress;\n        address registerTokenAddress;\n        address investmentTokenAddress;\n        address factoryContractAddress;\n        address nftContractAddress;\n        address stakeControllerContractAddress;\n        address vestingContractAddress;\n        address ownerAddress;\n        address adminAddress;\n        address launchpadFeeAddress;\n        address projectOwnerFeeAddress;\n    }\n\n    struct SaleStatistics {\n        uint256 totalInvestmentAmount;\n        uint256 totalSaleTokenAmount;\n        uint256 totalParticipants;\n        uint256 totalRegisters;\n        uint256 totalRegisterTokenAmountLeft;\n    }\n\n    struct SaleTierDetails {\n        uint256 minInvestmentAmount;\n        uint256 maxInvestmentAmount;\n        uint256 tierMaxInvestmentAmount;\n        uint256 ticketAmount;\n        bytes32 whitelistMerkleRoot;\n        uint256 totalInvestmentAmount;\n        uint256 totalParticipants;\n    }\n\n    function addSaleToken() external returns (bool);\n    function getIsSaleActive() external view returns (bool);\n    function getUserInvestmentAmount(address userAddress) external view returns (uint256);\n    function getSaleEndDate() external view returns (uint256);\n    function getRefundEnabled() external view returns (bool);\n    function getUserRefunded(address userAddress) external view returns (bool);\n    function getSaleTokenPrice() external view returns (uint256);\n}\n\ninterface IDappadVesting {\n    struct VestingParams {\n        Vesting defaultVesting;\n        VestingAddresses vestingAddresses;\n        VestingSettings vestingSettings;\n    }\n\n    struct VestingSettings {\n        uint256 startDate;\n        uint256 saleTokenPrice;\n    }\n\n    struct Vesting {\n        uint256 vestingCount;\n        uint256 vestingDuration;\n        uint256 vestingCliffDuration;\n        uint256[] vestingPercentages;\n        bool onTGE;\n    }\n\n    struct VestingAddresses {\n        address saleTokenAddress;\n        address factoryContractAddress;\n        address saleContractAddress;\n        address ownerAddress;\n        address adminAddress;\n    }\n\n    struct VestingStatistics {\n        uint256 totalVestingAmount;\n        uint256 totalSaleTokenAmount;\n    }\n\n    function setTotalVestingAmount(uint256 amount) external returns (bool);\n    function getVestingClaimed(address userAddress, uint256 vestingIndex) external view returns (bool);\n    function getTotalVestingAmount() external view returns (uint256);\n    function getAnyVestingClaimed(address userAddress) external view returns (bool);\n    function getUserTotalVestingAmount(address userAddress) external view returns (uint256);\n    function getUserUnclaimedTokenAmount(address userAddress) external view returns (uint256);\n}"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}},"libraries":{}}},"output":{"errors":[{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/core/DappadVesting.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"8","start":5981,"end":6024},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/core/DappadVesting.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"8","start":7856,"end":7899},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> contracts/core/DappadVesting.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using '<address payable>.send/transfer(<X>)' without providing    │\n│ the gas amount. Such calls will fail depending on the pubdata costs.                             │\n│ This might be a false positive if you are using an interface (like IERC20) instead of the        │\n│ native Solidity `send/transfer`.                                                                 │\n│ Please use 'payable(<address>).call{value: <X>}(\"\")' instead, but be careful with the reentrancy │\n│ attack. `send` and `transfer` send limited amount of gas that prevents reentrancy, whereas       │\n│ `<address>.call{value: <X>}` sends all gas to the callee. Learn more on                          │\n│ https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy                  │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"8","start":8215,"end":8281},"type":"Warning"}],"version":"0.8.20","long_version":"0.8.20+commit.a1b79de6.Darwin.appleclang","zk_version":"1.3.23","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[295],"Context":[603],"ERC165":[1164],"IAccessControl":[378]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":379,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":604,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":1165,"src":"233:57:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"241:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["1988:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":603,"src":"1988:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1988:7:0"},{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["1997:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"1997:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1997:14:0"},{"baseName":{"id":13,"name":"ERC165","nameLocations":["2013:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":1164,"src":"2013:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2013:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"292:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295,1164,1176,378,603],"name":"AccessControl","nameLocation":"1971:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":21,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2052:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":17,"keyName":"account","keyNameLocation":"2068:7:0","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2102:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:0","nodeType":"StructDefinition","scope":295,"src":"2026:100:0","visibility":"public"},{"constant":false,"id":26,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:0","nodeType":"VariableDeclaration","scope":295,"src":"2132:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":25,"keyName":"role","keyNameLocation":"2148:4:0","keyType":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"RoleData","nameLocations":["2156:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2156:8:0"},"referencedDeclaration":21,"src":"2156:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":29,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:0","nodeType":"VariableDeclaration","scope":295,"src":"2187:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":39,"nodeType":"Block","src":"2454:44:0","statements":[{"expression":{"arguments":[{"id":35,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":34,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":93,"src":"2464:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2464:16:0"},{"id":38,"nodeType":"PlaceholderStatement","src":"2490:1:0"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"2243:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":40,"name":"onlyRole","nameLocation":"2431:8:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"role","nameLocation":"2448:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2440:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:0"},"src":"2422:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[1163],"body":{"id":61,"nodeType":"Block","src":"2656:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2673:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":51,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2693:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}],"id":50,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2688:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$378","typeString":"type(contract IAccessControl)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":57,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2748:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":55,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2724:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$295_$","typeString":"type(contract super AccessControl)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1163,"src":"2724:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48,"id":60,"nodeType":"Return","src":"2666:94:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"2504:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:0","nodeType":"FunctionDefinition","overrides":{"id":45,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:0"},"parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:0","nodeType":"VariableDeclaration","scope":62,"src":"2592:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":42,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"2650:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:0"},"scope":295,"src":"2565:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":79,"nodeType":"Block","src":"2937:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":72,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2954:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":74,"indexExpression":{"id":73,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2961:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"2954:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":77,"indexExpression":{"id":76,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":71,"id":78,"nodeType":"Return","src":"2947:36:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2773:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":80,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"role","nameLocation":"2879:4:0","nodeType":"VariableDeclaration","scope":80,"src":"2871:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"account","nameLocation":"2893:7:0","nodeType":"VariableDeclaration","scope":80,"src":"2885:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"2931:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:0"},"scope":295,"src":"2854:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":92,"nodeType":"Block","src":"3255:47:0","statements":[{"expression":{"arguments":[{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3276:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"3282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":114,"src":"3265:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3265:30:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2996:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"role","nameLocation":"3227:4:0","nodeType":"VariableDeclaration","scope":93,"src":"3219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3255:0:0"},"scope":295,"src":"3199:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"3505:124:0","statements":[{"condition":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:0","subExpression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3534:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3520:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"3515:108:0","trueBody":{"id":111,"nodeType":"Block","src":"3544:79:0","statements":[{"errorCall":{"arguments":[{"id":107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3607:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":106,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3565:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"RevertStatement","src":"3558:54:0"}]}}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3308:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3460:4:0","nodeType":"VariableDeclaration","scope":114,"src":"3452:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3474:7:0","nodeType":"VariableDeclaration","scope":114,"src":"3466:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"3505:0:0"},"scope":295,"src":"3432:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[353],"body":{"id":127,"nodeType":"Block","src":"3884:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":122,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3901:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":124,"indexExpression":{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3908:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":121,"id":126,"nodeType":"Return","src":"3894:29:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3635:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":128,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3840:4:0","nodeType":"VariableDeclaration","scope":128,"src":"3832:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"3875:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:0"},"scope":295,"src":"3810:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[361],"body":{"id":146,"nodeType":"Block","src":"4320:42:0","statements":[{"expression":{"arguments":[{"id":142,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4341:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"4347:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":141,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4330:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"ExpressionStatement","src":"4330:25:0"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3936:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":147,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":137,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4313:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":139,"kind":"modifierInvocation","modifierName":{"id":135,"name":"onlyRole","nameLocations":["4291:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4291:8:0"},"nodeType":"ModifierInvocation","src":"4291:28:0"}],"name":"grantRole","nameLocation":"4235:9:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"4253:4:0","nodeType":"VariableDeclaration","scope":147,"src":"4245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"4267:7:0","nodeType":"VariableDeclaration","scope":147,"src":"4259:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"4320:0:0"},"scope":295,"src":"4226:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[369],"body":{"id":165,"nodeType":"Block","src":"4737:43:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4759:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4765:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4747:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"ExpressionStatement","src":"4747:26:0"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"4368:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4717:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4708:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4708:8:0"},"nodeType":"ModifierInvocation","src":"4708:28:0"}],"name":"revokeRole","nameLocation":"4651:10:0","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"role","nameLocation":"4670:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4662:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"4684:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4676:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4737:0:0"},"scope":295,"src":"4642:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[377],"body":{"id":188,"nodeType":"Block","src":"5407:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5421:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"5443:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"5417:102:0","trueBody":{"id":181,"nodeType":"Block","src":"5457:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5478:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":180,"nodeType":"RevertStatement","src":"5471:37:0"}]}},{"expression":{"arguments":[{"id":184,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5541:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":185,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5547:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":183,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5529:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"5529:37:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4786:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5358:4:0","nodeType":"VariableDeclaration","scope":189,"src":"5350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:0","nodeType":"VariableDeclaration","scope":189,"src":"5364:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"5407:0:0"},"scope":295,"src":"5328:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"5771:174:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:0","nodeType":"VariableDeclaration","scope":216,"src":"5781:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":202,"initialValue":{"arguments":[{"id":200,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5822:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"5809:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:0"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":203,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5837:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":205,"indexExpression":{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5844:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5837:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"ExpressionStatement","src":"5837:34:0"},{"eventCall":{"arguments":[{"id":211,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5903:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":212,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5909:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5886:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"5881:57:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5579:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:0","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"role","nameLocation":"5729:4:0","nodeType":"VariableDeclaration","scope":217,"src":"5721:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:0","nodeType":"VariableDeclaration","scope":217,"src":"5735:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5771:0:0"},"scope":295,"src":"5698:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"6262:233:0","statements":[{"condition":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:0","subExpression":{"arguments":[{"id":228,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6285:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6291:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6277:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":253,"nodeType":"Block","src":"6452:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":226,"id":252,"nodeType":"Return","src":"6466:12:0"}]},"id":254,"nodeType":"IfStatement","src":"6272:217:0","trueBody":{"id":250,"nodeType":"Block","src":"6301:145:0","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":232,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6315:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":234,"indexExpression":{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6322:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6315:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"6315:36:0"},{"eventCall":{"arguments":[{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6382:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"6397:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6370:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"6365:45:0"},{"expression":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":226,"id":249,"nodeType":"Return","src":"6424:11:0"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"5951:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"role","nameLocation":"6207:4:0","nodeType":"VariableDeclaration","scope":256,"src":"6199:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"6221:7:0","nodeType":"VariableDeclaration","scope":256,"src":"6213:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"6256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:0"},"scope":295,"src":"6179:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"6814:233:0","statements":[{"condition":{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6836:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6842:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6828:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6828:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":291,"nodeType":"Block","src":"7004:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7025:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":265,"id":290,"nodeType":"Return","src":"7018:12:0"}]},"id":292,"nodeType":"IfStatement","src":"6824:217:0","trueBody":{"id":288,"nodeType":"Block","src":"6852:146:0","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":270,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6866:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":272,"indexExpression":{"id":271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6873:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6866:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6879:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6866:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":275,"indexExpression":{"id":274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6887:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6866:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6898:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6866:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"6866:37:0"},{"eventCall":{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6934:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6940:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"6949:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6949:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"6922:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6922:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"EmitStatement","src":"6917:45:0"},{"expression":{"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6983:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":265,"id":287,"nodeType":"Return","src":"6976:11:0"}]}}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"6501:224:0","text":" @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6739:11:0","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"role","nameLocation":"6759:4:0","nodeType":"VariableDeclaration","scope":294,"src":"6751:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6751:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"account","nameLocation":"6773:7:0","nodeType":"VariableDeclaration","scope":294,"src":"6765:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6750:31:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"6808:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"6808:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6807:6:0"},"scope":295,"src":"6730:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":296,"src":"1953:5096:0","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"108:6942:0"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"135:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":378,"linearizedBaseContracts":[378],"name":"IAccessControl","nameLocation":"235:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"256:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":305,"name":"AccessControlUnauthorizedAccount","nameLocation":"323:32:1","nodeType":"ErrorDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"account","nameLocation":"364:7:1","nodeType":"VariableDeclaration","scope":305,"src":"356:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"356:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"neededRole","nameLocation":"381:10:1","nodeType":"VariableDeclaration","scope":305,"src":"373:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"373:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"355:37:1"},"src":"317:76:1"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"399:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":308,"name":"AccessControlBadConfirmation","nameLocation":"558:28:1","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"586:2:1"},"src":"552:37:1"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"595:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":317,"name":"RoleAdminChanged","nameLocation":"860:16:1","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"893:4:1","nodeType":"VariableDeclaration","scope":317,"src":"877:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"915:17:1","nodeType":"VariableDeclaration","scope":317,"src":"899:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"899:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"950:12:1","nodeType":"VariableDeclaration","scope":317,"src":"934:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"934:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"876:87:1"},"src":"854:110:1"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"970:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":326,"name":"RoleGranted","nameLocation":"1193:11:1","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1221:4:1","nodeType":"VariableDeclaration","scope":326,"src":"1205:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1205:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1243:7:1","nodeType":"VariableDeclaration","scope":326,"src":"1227:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1268:6:1","nodeType":"VariableDeclaration","scope":326,"src":"1252:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1252:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1204:71:1"},"src":"1187:89:1"},{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1282:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":335,"name":"RoleRevoked","nameLocation":"1568:11:1","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1596:4:1","nodeType":"VariableDeclaration","scope":335,"src":"1580:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1580:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1618:7:1","nodeType":"VariableDeclaration","scope":335,"src":"1602:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1602:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1643:6:1","nodeType":"VariableDeclaration","scope":335,"src":"1627:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1627:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1579:71:1"},"src":"1562:89:1"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1657:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1747:7:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"role","nameLocation":"1763:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1755:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1755:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"account","nameLocation":"1777:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1769:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1769:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1754:31:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1809:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1809:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1808:6:1"},"scope":378,"src":"1738:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1821:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2019:12:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"2040:4:1","nodeType":"VariableDeclaration","scope":353,"src":"2032:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2032:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2031:14:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2069:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2069:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2068:9:1"},"scope":378,"src":"2010:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2084:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2337:9:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"2355:4:1","nodeType":"VariableDeclaration","scope":361,"src":"2347:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2347:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"2369:7:1","nodeType":"VariableDeclaration","scope":361,"src":"2361:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2361:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2346:31:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2386:0:1"},"scope":378,"src":"2328:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2393:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2630:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"2649:4:1","nodeType":"VariableDeclaration","scope":369,"src":"2641:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2641:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"2663:7:1","nodeType":"VariableDeclaration","scope":369,"src":"2655:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2655:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2640:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2680:0:1"},"scope":378,"src":"2621:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2687:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3192:12:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"3213:4:1","nodeType":"VariableDeclaration","scope":377,"src":"3205:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3205:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3227:18:1","nodeType":"VariableDeclaration","scope":377,"src":"3219:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3219:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3204:42:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"3255:0:1"},"scope":378,"src":"3183:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":379,"src":"225:3033:1","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"109:3150:1"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[456]},"id":457,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":381,"nodeType":"StructuredDocumentation","src":"132:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":456,"linearizedBaseContracts":[456],"name":"IERC20","nameLocation":"213:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"226:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":390,"name":"Transfer","nameLocation":"395:8:2","nodeType":"EventDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:2","nodeType":"VariableDeclaration","scope":390,"src":"404:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:2","nodeType":"VariableDeclaration","scope":390,"src":"426:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":388,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:2","nodeType":"VariableDeclaration","scope":390,"src":"446:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:2"},"src":"389:72:2"},{"anonymous":false,"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"467:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":399,"name":"Approval","nameLocation":"626:8:2","nodeType":"EventDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:2","nodeType":"VariableDeclaration","scope":399,"src":"635:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":395,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:2","nodeType":"VariableDeclaration","scope":399,"src":"658:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":397,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:2","nodeType":"VariableDeclaration","scope":399,"src":"683:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":396,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:2"},"src":"620:78:2"},{"documentation":{"id":400,"nodeType":"StructuredDocumentation","src":"704:65:2","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":405,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:2","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[],"src":"794:2:2"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":405,"src":"820:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:2"},"scope":456,"src":"774:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":406,"nodeType":"StructuredDocumentation","src":"835:71:2","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":413,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:2","nodeType":"FunctionDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"account","nameLocation":"938:7:2","nodeType":"VariableDeclaration","scope":413,"src":"930:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":407,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:2"},"returnParameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":413,"src":"970:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":410,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:2"},"scope":456,"src":"911:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"985:213:2","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":423,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:2","nodeType":"FunctionDefinition","parameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"to","nameLocation":"1229:2:2","nodeType":"VariableDeclaration","scope":423,"src":"1221:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":415,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":418,"mutability":"mutable","name":"value","nameLocation":"1241:5:2","nodeType":"VariableDeclaration","scope":423,"src":"1233:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":417,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:2"},"returnParameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":423,"src":"1266:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":420,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:2"},"scope":456,"src":"1203:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":424,"nodeType":"StructuredDocumentation","src":"1278:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":433,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:2","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"mutability":"mutable","name":"owner","nameLocation":"1574:5:2","nodeType":"VariableDeclaration","scope":433,"src":"1566:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":425,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":428,"mutability":"mutable","name":"spender","nameLocation":"1589:7:2","nodeType":"VariableDeclaration","scope":433,"src":"1581:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":427,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:2"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":433,"src":"1621:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:2"},"scope":456,"src":"1547:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":434,"nodeType":"StructuredDocumentation","src":"1636:667:2","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":443,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:2","nodeType":"FunctionDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"spender","nameLocation":"2333:7:2","nodeType":"VariableDeclaration","scope":443,"src":"2325:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":435,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":438,"mutability":"mutable","name":"value","nameLocation":"2350:5:2","nodeType":"VariableDeclaration","scope":443,"src":"2342:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":437,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:2"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":443,"src":"2375:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":440,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:2"},"scope":456,"src":"2308:73:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"2387:297:2","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":455,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:2","nodeType":"FunctionDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"from","nameLocation":"2719:4:2","nodeType":"VariableDeclaration","scope":455,"src":"2711:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":445,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"to","nameLocation":"2733:2:2","nodeType":"VariableDeclaration","scope":455,"src":"2725:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"value","nameLocation":"2745:5:2","nodeType":"VariableDeclaration","scope":455,"src":"2737:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":449,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:2"},"returnParameters":{"id":454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":455,"src":"2770:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":452,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:2"},"scope":456,"src":"2689:87:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":457,"src":"203:2575:2","usedErrors":[],"usedEvents":[390,399]}],"src":"106:2673:2"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"id":3,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[1176],"IERC721":[573]},"id":574,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":458,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":460,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":574,"sourceUnit":1177,"src":"134:62:3","symbolAliases":[{"foreign":{"id":459,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"142:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":462,"name":"IERC165","nameLocations":["287:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1176,"src":"287:7:3"},"id":463,"nodeType":"InheritanceSpecifier","src":"287:7:3"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"198:67:3","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":573,"linearizedBaseContracts":[573,1176],"name":"IERC721","nameLocation":"276:7:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"301:88:3","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":472,"name":"Transfer","nameLocation":"400:8:3","nodeType":"EventDefinition","parameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"425:4:3","nodeType":"VariableDeclaration","scope":472,"src":"409:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":465,"name":"address","nodeType":"ElementaryTypeName","src":"409:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":468,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"447:2:3","nodeType":"VariableDeclaration","scope":472,"src":"431:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"431:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":470,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"467:7:3","nodeType":"VariableDeclaration","scope":472,"src":"451:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":469,"name":"uint256","nodeType":"ElementaryTypeName","src":"451:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"408:67:3"},"src":"394:82:3"},{"anonymous":false,"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"482:94:3","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":481,"name":"Approval","nameLocation":"587:8:3","nodeType":"EventDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"612:5:3","nodeType":"VariableDeclaration","scope":481,"src":"596:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":474,"name":"address","nodeType":"ElementaryTypeName","src":"596:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":477,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"635:8:3","nodeType":"VariableDeclaration","scope":481,"src":"619:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":476,"name":"address","nodeType":"ElementaryTypeName","src":"619:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":479,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"661:7:3","nodeType":"VariableDeclaration","scope":481,"src":"645:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":478,"name":"uint256","nodeType":"ElementaryTypeName","src":"645:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"595:74:3"},"src":"581:89:3"},{"anonymous":false,"documentation":{"id":482,"nodeType":"StructuredDocumentation","src":"676:117:3","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":490,"name":"ApprovalForAll","nameLocation":"804:14:3","nodeType":"EventDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"835:5:3","nodeType":"VariableDeclaration","scope":490,"src":"819:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":483,"name":"address","nodeType":"ElementaryTypeName","src":"819:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":486,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"858:8:3","nodeType":"VariableDeclaration","scope":490,"src":"842:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":485,"name":"address","nodeType":"ElementaryTypeName","src":"842:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":488,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"873:8:3","nodeType":"VariableDeclaration","scope":490,"src":"868:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":487,"name":"bool","nodeType":"ElementaryTypeName","src":"868:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"818:64:3"},"src":"798:85:3"},{"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"889:76:3","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":498,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"979:9:3","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"owner","nameLocation":"997:5:3","nodeType":"VariableDeclaration","scope":498,"src":"989:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"989:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"988:15:3"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"balance","nameLocation":"1035:7:3","nodeType":"VariableDeclaration","scope":498,"src":"1027:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":495,"name":"uint256","nodeType":"ElementaryTypeName","src":"1027:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1026:17:3"},"scope":573,"src":"970:74:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"1050:131:3","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":506,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1195:7:3","nodeType":"FunctionDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":501,"mutability":"mutable","name":"tokenId","nameLocation":"1211:7:3","nodeType":"VariableDeclaration","scope":506,"src":"1203:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":500,"name":"uint256","nodeType":"ElementaryTypeName","src":"1203:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1202:17:3"},"returnParameters":{"id":505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":504,"mutability":"mutable","name":"owner","nameLocation":"1251:5:3","nodeType":"VariableDeclaration","scope":506,"src":"1243:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":503,"name":"address","nodeType":"ElementaryTypeName","src":"1243:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1242:15:3"},"scope":573,"src":"1186:72:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":507,"nodeType":"StructuredDocumentation","src":"1264:565:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":518,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1843:16:3","nodeType":"FunctionDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"from","nameLocation":"1868:4:3","nodeType":"VariableDeclaration","scope":518,"src":"1860:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"1860:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":511,"mutability":"mutable","name":"to","nameLocation":"1882:2:3","nodeType":"VariableDeclaration","scope":518,"src":"1874:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"1874:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":513,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:3","nodeType":"VariableDeclaration","scope":518,"src":"1886:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":512,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"data","nameLocation":"1918:4:3","nodeType":"VariableDeclaration","scope":518,"src":"1903:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":514,"name":"bytes","nodeType":"ElementaryTypeName","src":"1903:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1859:64:3"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[],"src":"1932:0:3"},"scope":573,"src":"1834:99:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":519,"nodeType":"StructuredDocumentation","src":"1939:705:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":528,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2658:16:3","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":521,"mutability":"mutable","name":"from","nameLocation":"2683:4:3","nodeType":"VariableDeclaration","scope":528,"src":"2675:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":520,"name":"address","nodeType":"ElementaryTypeName","src":"2675:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":523,"mutability":"mutable","name":"to","nameLocation":"2697:2:3","nodeType":"VariableDeclaration","scope":528,"src":"2689:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"2689:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"tokenId","nameLocation":"2709:7:3","nodeType":"VariableDeclaration","scope":528,"src":"2701:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":524,"name":"uint256","nodeType":"ElementaryTypeName","src":"2701:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2674:43:3"},"returnParameters":{"id":527,"nodeType":"ParameterList","parameters":[],"src":"2726:0:3"},"scope":573,"src":"2649:78:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"2733:732:3","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":538,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3479:12:3","nodeType":"FunctionDefinition","parameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"from","nameLocation":"3500:4:3","nodeType":"VariableDeclaration","scope":538,"src":"3492:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":530,"name":"address","nodeType":"ElementaryTypeName","src":"3492:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":533,"mutability":"mutable","name":"to","nameLocation":"3514:2:3","nodeType":"VariableDeclaration","scope":538,"src":"3506:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"3506:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":535,"mutability":"mutable","name":"tokenId","nameLocation":"3526:7:3","nodeType":"VariableDeclaration","scope":538,"src":"3518:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"3518:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:43:3"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[],"src":"3543:0:3"},"scope":573,"src":"3470:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"3550:452:3","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":546,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4016:7:3","nodeType":"FunctionDefinition","parameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"to","nameLocation":"4032:2:3","nodeType":"VariableDeclaration","scope":546,"src":"4024:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"4024:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"tokenId","nameLocation":"4044:7:3","nodeType":"VariableDeclaration","scope":546,"src":"4036:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":542,"name":"uint256","nodeType":"ElementaryTypeName","src":"4036:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4023:29:3"},"returnParameters":{"id":545,"nodeType":"ParameterList","parameters":[],"src":"4061:0:3"},"scope":573,"src":"4007:55:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":547,"nodeType":"StructuredDocumentation","src":"4068:315:3","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":554,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4397:17:3","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"mutability":"mutable","name":"operator","nameLocation":"4423:8:3","nodeType":"VariableDeclaration","scope":554,"src":"4415:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":548,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"approved","nameLocation":"4438:8:3","nodeType":"VariableDeclaration","scope":554,"src":"4433:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":550,"name":"bool","nodeType":"ElementaryTypeName","src":"4433:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4414:33:3"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"4456:0:3"},"scope":573,"src":"4388:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"4463:139:3","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":562,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4616:11:3","nodeType":"FunctionDefinition","parameters":{"id":558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"tokenId","nameLocation":"4636:7:3","nodeType":"VariableDeclaration","scope":562,"src":"4628:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":556,"name":"uint256","nodeType":"ElementaryTypeName","src":"4628:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4627:17:3"},"returnParameters":{"id":561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":560,"mutability":"mutable","name":"operator","nameLocation":"4676:8:3","nodeType":"VariableDeclaration","scope":562,"src":"4668:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"4668:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4667:18:3"},"scope":573,"src":"4607:79:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"4692:138:3","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":572,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4844:16:3","nodeType":"FunctionDefinition","parameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"owner","nameLocation":"4869:5:3","nodeType":"VariableDeclaration","scope":572,"src":"4861:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":564,"name":"address","nodeType":"ElementaryTypeName","src":"4861:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":567,"mutability":"mutable","name":"operator","nameLocation":"4884:8:3","nodeType":"VariableDeclaration","scope":572,"src":"4876:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"4876:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4860:33:3"},"returnParameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":572,"src":"4917:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":569,"name":"bool","nodeType":"ElementaryTypeName","src":"4917:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4916:6:3"},"scope":573,"src":"4835:88:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":574,"src":"266:4659:3","usedErrors":[],"usedEvents":[472,481,490]}],"src":"108:4818:3"}},"@openzeppelin/contracts/utils/Context.sol":{"id":4,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[603]},"id":604,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":575,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":576,"nodeType":"StructuredDocumentation","src":"127:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":603,"linearizedBaseContracts":[603],"name":"Context","nameLocation":"642:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":584,"nodeType":"Block","src":"718:34:4","statements":[{"expression":{"expression":{"id":581,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:4","memberName":"sender","nodeType":"MemberAccess","src":"735:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":580,"id":583,"nodeType":"Return","src":"728:17:4"}]},"id":585,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:4","nodeType":"FunctionDefinition","parameters":{"id":577,"nodeType":"ParameterList","parameters":[],"src":"675:2:4"},"returnParameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":585,"src":"709:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":578,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:4"},"scope":603,"src":"656:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":593,"nodeType":"Block","src":"825:32:4","statements":[{"expression":{"expression":{"id":590,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:4","memberName":"data","nodeType":"MemberAccess","src":"842:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":589,"id":592,"nodeType":"Return","src":"835:15:4"}]},"id":594,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:4","nodeType":"FunctionDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[],"src":"775:2:4"},"returnParameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":594,"src":"809:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":587,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:4"},"scope":603,"src":"758:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":601,"nodeType":"Block","src":"935:25:4","statements":[{"expression":{"hexValue":"30","id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":598,"id":600,"nodeType":"Return","src":"945:8:4"}]},"id":602,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:4","nodeType":"FunctionDefinition","parameters":{"id":595,"nodeType":"ParameterList","parameters":[],"src":"892:2:4"},"returnParameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":602,"src":"926:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":596,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:4"},"scope":603,"src":"863:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":604,"src":"624:338:4","usedErrors":[],"usedEvents":[]}],"src":"101:862:4"}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"id":5,"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"MerkleProof":[1140]},"id":1141,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":605,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":606,"nodeType":"StructuredDocumentation","src":"144:658:5","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the Merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates Merkle trees that are safe\n against this attack out of the box."},"fullyImplemented":true,"id":1140,"linearizedBaseContracts":[1140],"name":"MerkleProof","nameLocation":"811:11:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"829:60:5","text":"@dev The multiproof provided is not valid."},"errorSelector":"35140492","id":609,"name":"MerkleProofInvalidMultiproof","nameLocation":"900:28:5","nodeType":"ErrorDefinition","parameters":{"id":608,"nodeType":"ParameterList","parameters":[],"src":"928:2:5"},"src":"894:37:5"},{"body":{"id":629,"nodeType":"Block","src":"1362:57:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":623,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"1392:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":624,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"1399:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":622,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"1379:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1379:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":626,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"1408:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1379:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":621,"id":628,"nodeType":"Return","src":"1372:40:5"}]},"documentation":{"id":610,"nodeType":"StructuredDocumentation","src":"937:323:5","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."},"id":630,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1274:6:5","nodeType":"FunctionDefinition","parameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":613,"mutability":"mutable","name":"proof","nameLocation":"1298:5:5","nodeType":"VariableDeclaration","scope":630,"src":"1281:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1281:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":612,"nodeType":"ArrayTypeName","src":"1281:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":615,"mutability":"mutable","name":"root","nameLocation":"1313:4:5","nodeType":"VariableDeclaration","scope":630,"src":"1305:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1305:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":617,"mutability":"mutable","name":"leaf","nameLocation":"1327:4:5","nodeType":"VariableDeclaration","scope":630,"src":"1319:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1319:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1280:52:5"},"returnParameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":630,"src":"1356:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":619,"name":"bool","nodeType":"ElementaryTypeName","src":"1356:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1355:6:5"},"scope":1140,"src":"1265:154:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":650,"nodeType":"Block","src":"1589:65:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":644,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"1627:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":645,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"1634:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":643,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"1606:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1606:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":647,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"1643:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1606:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":642,"id":649,"nodeType":"Return","src":"1599:48:5"}]},"documentation":{"id":631,"nodeType":"StructuredDocumentation","src":"1425:52:5","text":" @dev Calldata version of {verify}"},"id":651,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"1491:14:5","nodeType":"FunctionDefinition","parameters":{"id":639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"proof","nameLocation":"1525:5:5","nodeType":"VariableDeclaration","scope":651,"src":"1506:24:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1506:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":633,"nodeType":"ArrayTypeName","src":"1506:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"root","nameLocation":"1540:4:5","nodeType":"VariableDeclaration","scope":651,"src":"1532:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":635,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1532:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":638,"mutability":"mutable","name":"leaf","nameLocation":"1554:4:5","nodeType":"VariableDeclaration","scope":651,"src":"1546:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":637,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1546:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1505:54:5"},"returnParameters":{"id":642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":651,"src":"1583:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":640,"name":"bool","nodeType":"ElementaryTypeName","src":"1583:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1582:6:5"},"scope":1140,"src":"1482:172:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":690,"nodeType":"Block","src":"2059:198:5","statements":[{"assignments":[663],"declarations":[{"constant":false,"id":663,"mutability":"mutable","name":"computedHash","nameLocation":"2077:12:5","nodeType":"VariableDeclaration","scope":690,"src":"2069:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":662,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2069:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":665,"initialValue":{"id":664,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"2092:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2069:27:5"},{"body":{"id":686,"nodeType":"Block","src":"2149:73:5","statements":[{"expression":{"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":677,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"2163:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":679,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"2188:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":680,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"2202:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":682,"indexExpression":{"id":681,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"2208:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2202:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":678,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"2178:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2163:48:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":685,"nodeType":"ExpressionStatement","src":"2163:48:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":670,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"2126:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":671,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"2130:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2136:6:5","memberName":"length","nodeType":"MemberAccess","src":"2130:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2126:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":687,"initializationExpression":{"assignments":[667],"declarations":[{"constant":false,"id":667,"mutability":"mutable","name":"i","nameLocation":"2119:1:5","nodeType":"VariableDeclaration","scope":687,"src":"2111:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":666,"name":"uint256","nodeType":"ElementaryTypeName","src":"2111:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":669,"initialValue":{"hexValue":"30","id":668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2123:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2111:13:5"},"loopExpression":{"expression":{"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2144:3:5","subExpression":{"id":674,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"2144:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":676,"nodeType":"ExpressionStatement","src":"2144:3:5"},"nodeType":"ForStatement","src":"2106:116:5"},{"expression":{"id":688,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"2238:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":661,"id":689,"nodeType":"Return","src":"2231:19:5"}]},"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"1660:302:5","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted."},"id":691,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"1976:12:5","nodeType":"FunctionDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":655,"mutability":"mutable","name":"proof","nameLocation":"2006:5:5","nodeType":"VariableDeclaration","scope":691,"src":"1989:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1989:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":654,"nodeType":"ArrayTypeName","src":"1989:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":657,"mutability":"mutable","name":"leaf","nameLocation":"2021:4:5","nodeType":"VariableDeclaration","scope":691,"src":"2013:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":656,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2013:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1988:38:5"},"returnParameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":691,"src":"2050:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":659,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2050:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2049:9:5"},"scope":1140,"src":"1967:290:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":730,"nodeType":"Block","src":"2428:198:5","statements":[{"assignments":[703],"declarations":[{"constant":false,"id":703,"mutability":"mutable","name":"computedHash","nameLocation":"2446:12:5","nodeType":"VariableDeclaration","scope":730,"src":"2438:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":702,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2438:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":705,"initialValue":{"id":704,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"2461:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2438:27:5"},{"body":{"id":726,"nodeType":"Block","src":"2518:73:5","statements":[{"expression":{"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":717,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"2532:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":719,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"2557:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":720,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"2571:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":722,"indexExpression":{"id":721,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"2577:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2571:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":718,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"2547:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2547:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2532:48:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":725,"nodeType":"ExpressionStatement","src":"2532:48:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":710,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"2495:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":711,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"2499:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2505:6:5","memberName":"length","nodeType":"MemberAccess","src":"2499:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2495:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":727,"initializationExpression":{"assignments":[707],"declarations":[{"constant":false,"id":707,"mutability":"mutable","name":"i","nameLocation":"2488:1:5","nodeType":"VariableDeclaration","scope":727,"src":"2480:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"2480:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":709,"initialValue":{"hexValue":"30","id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2492:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2480:13:5"},"loopExpression":{"expression":{"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2513:3:5","subExpression":{"id":714,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"2513:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":716,"nodeType":"ExpressionStatement","src":"2513:3:5"},"nodeType":"ForStatement","src":"2475:116:5"},{"expression":{"id":728,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"2607:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":701,"id":729,"nodeType":"Return","src":"2600:19:5"}]},"documentation":{"id":692,"nodeType":"StructuredDocumentation","src":"2263:58:5","text":" @dev Calldata version of {processProof}"},"id":731,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"2335:20:5","nodeType":"FunctionDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"proof","nameLocation":"2375:5:5","nodeType":"VariableDeclaration","scope":731,"src":"2356:24:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2356:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":694,"nodeType":"ArrayTypeName","src":"2356:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"leaf","nameLocation":"2390:4:5","nodeType":"VariableDeclaration","scope":731,"src":"2382:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":696,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2382:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2355:40:5"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":731,"src":"2419:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":699,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2419:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2418:9:5"},"scope":1140,"src":"2326:300:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":756,"nodeType":"Block","src":"3131:76:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":749,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"3166:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":750,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"3173:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":751,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"3185:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":748,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"3148:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3148:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":753,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"3196:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3148:52:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":747,"id":755,"nodeType":"Return","src":"3141:59:5"}]},"documentation":{"id":732,"nodeType":"StructuredDocumentation","src":"2632:312:5","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details."},"id":757,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"2958:16:5","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"proof","nameLocation":"3001:5:5","nodeType":"VariableDeclaration","scope":757,"src":"2984:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2984:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":734,"nodeType":"ArrayTypeName","src":"2984:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":738,"mutability":"mutable","name":"proofFlags","nameLocation":"3030:10:5","nodeType":"VariableDeclaration","scope":757,"src":"3016:24:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":736,"name":"bool","nodeType":"ElementaryTypeName","src":"3016:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":737,"nodeType":"ArrayTypeName","src":"3016:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":740,"mutability":"mutable","name":"root","nameLocation":"3058:4:5","nodeType":"VariableDeclaration","scope":757,"src":"3050:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":739,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3050:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"leaves","nameLocation":"3089:6:5","nodeType":"VariableDeclaration","scope":757,"src":"3072:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3072:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":742,"nodeType":"ArrayTypeName","src":"3072:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"2974:127:5"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":757,"src":"3125:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":745,"name":"bool","nodeType":"ElementaryTypeName","src":"3125:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3124:6:5"},"scope":1140,"src":"2949:258:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":782,"nodeType":"Block","src":"3574:84:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":775,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"3617:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":776,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"3624:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":777,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"3636:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":774,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"3591:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":779,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"3647:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3591:60:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":773,"id":781,"nodeType":"Return","src":"3584:67:5"}]},"documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"3213:162:5","text":" @dev Calldata version of {multiProofVerify}\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details."},"id":783,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"3389:24:5","nodeType":"FunctionDefinition","parameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"proof","nameLocation":"3442:5:5","nodeType":"VariableDeclaration","scope":783,"src":"3423:24:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":759,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3423:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":760,"nodeType":"ArrayTypeName","src":"3423:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":764,"mutability":"mutable","name":"proofFlags","nameLocation":"3473:10:5","nodeType":"VariableDeclaration","scope":783,"src":"3457:26:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":762,"name":"bool","nodeType":"ElementaryTypeName","src":"3457:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":763,"nodeType":"ArrayTypeName","src":"3457:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":766,"mutability":"mutable","name":"root","nameLocation":"3501:4:5","nodeType":"VariableDeclaration","scope":783,"src":"3493:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":765,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3493:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"leaves","nameLocation":"3532:6:5","nodeType":"VariableDeclaration","scope":783,"src":"3515:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":767,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3515:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":768,"nodeType":"ArrayTypeName","src":"3515:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3413:131:5"},"returnParameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":783,"src":"3568:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":771,"name":"bool","nodeType":"ElementaryTypeName","src":"3568:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3567:6:5"},"scope":1140,"src":"3380:278:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":942,"nodeType":"Block","src":"4574:2107:5","statements":[{"assignments":[799],"declarations":[{"constant":false,"id":799,"mutability":"mutable","name":"leavesLen","nameLocation":"4966:9:5","nodeType":"VariableDeclaration","scope":942,"src":"4958:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":798,"name":"uint256","nodeType":"ElementaryTypeName","src":"4958:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":802,"initialValue":{"expression":{"id":800,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"4978:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4985:6:5","memberName":"length","nodeType":"MemberAccess","src":"4978:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4958:33:5"},{"assignments":[804],"declarations":[{"constant":false,"id":804,"mutability":"mutable","name":"proofLen","nameLocation":"5009:8:5","nodeType":"VariableDeclaration","scope":942,"src":"5001:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":803,"name":"uint256","nodeType":"ElementaryTypeName","src":"5001:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":807,"initialValue":{"expression":{"id":805,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"5020:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5026:6:5","memberName":"length","nodeType":"MemberAccess","src":"5020:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5001:31:5"},{"assignments":[809],"declarations":[{"constant":false,"id":809,"mutability":"mutable","name":"totalHashes","nameLocation":"5050:11:5","nodeType":"VariableDeclaration","scope":942,"src":"5042:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"5042:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":812,"initialValue":{"expression":{"id":810,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"5064:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5075:6:5","memberName":"length","nodeType":"MemberAccess","src":"5064:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5042:39:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":813,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"5129:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":814,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"5141:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5129:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":816,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"5153:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5167:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5153:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5129:39:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":824,"nodeType":"IfStatement","src":"5125:107:5","trueBody":{"id":823,"nodeType":"Block","src":"5170:62:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":820,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"5191:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5191:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":822,"nodeType":"RevertStatement","src":"5184:37:5"}]}},{"assignments":[829],"declarations":[{"constant":false,"id":829,"mutability":"mutable","name":"hashes","nameLocation":"5493:6:5","nodeType":"VariableDeclaration","scope":942,"src":"5476:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":827,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5476:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":828,"nodeType":"ArrayTypeName","src":"5476:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":835,"initialValue":{"arguments":[{"id":833,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"5516:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5502:13:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":830,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5506:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":831,"nodeType":"ArrayTypeName","src":"5506:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5502:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5476:52:5"},{"assignments":[837],"declarations":[{"constant":false,"id":837,"mutability":"mutable","name":"leafPos","nameLocation":"5546:7:5","nodeType":"VariableDeclaration","scope":942,"src":"5538:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"5538:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":839,"initialValue":{"hexValue":"30","id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5556:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5538:19:5"},{"assignments":[841],"declarations":[{"constant":false,"id":841,"mutability":"mutable","name":"hashPos","nameLocation":"5575:7:5","nodeType":"VariableDeclaration","scope":942,"src":"5567:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"5567:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":843,"initialValue":{"hexValue":"30","id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5567:19:5"},{"assignments":[845],"declarations":[{"constant":false,"id":845,"mutability":"mutable","name":"proofPos","nameLocation":"5604:8:5","nodeType":"VariableDeclaration","scope":942,"src":"5596:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":844,"name":"uint256","nodeType":"ElementaryTypeName","src":"5596:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":847,"initialValue":{"hexValue":"30","id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5615:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5596:20:5"},{"body":{"id":906,"nodeType":"Block","src":"6034:292:5","statements":[{"assignments":[859],"declarations":[{"constant":false,"id":859,"mutability":"mutable","name":"a","nameLocation":"6056:1:5","nodeType":"VariableDeclaration","scope":906,"src":"6048:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6048:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":872,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":860,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"6060:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":861,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"6070:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6060:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":867,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"6102:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":870,"indexExpression":{"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6109:9:5","subExpression":{"id":868,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"6109:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6102:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6060:59:5","trueExpression":{"baseExpression":{"id":863,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"6082:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":866,"indexExpression":{"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6089:9:5","subExpression":{"id":864,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"6089:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6082:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6048:71:5"},{"assignments":[874],"declarations":[{"constant":false,"id":874,"mutability":"mutable","name":"b","nameLocation":"6141:1:5","nodeType":"VariableDeclaration","scope":906,"src":"6133:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":873,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6133:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":896,"initialValue":{"condition":{"baseExpression":{"id":875,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"6145:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":877,"indexExpression":{"id":876,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"6156:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6145:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":891,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"6257:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":894,"indexExpression":{"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6263:10:5","subExpression":{"id":892,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"6263:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6257:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6145:129:5","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":878,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"6178:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":879,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"6188:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6178:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":885,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"6220:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":888,"indexExpression":{"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6227:9:5","subExpression":{"id":886,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"6227:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6220:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6178:59:5","trueExpression":{"baseExpression":{"id":881,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"6200:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":884,"indexExpression":{"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6207:9:5","subExpression":{"id":882,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"6207:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6200:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6177:61:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6133:141:5"},{"expression":{"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":897,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"6288:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":899,"indexExpression":{"id":898,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"6295:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6288:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":901,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"6310:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":902,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"6313:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":900,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"6300:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6300:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6288:27:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":905,"nodeType":"ExpressionStatement","src":"6288:27:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":852,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"6012:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":853,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"6016:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6012:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":907,"initializationExpression":{"assignments":[849],"declarations":[{"constant":false,"id":849,"mutability":"mutable","name":"i","nameLocation":"6005:1:5","nodeType":"VariableDeclaration","scope":907,"src":"5997:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"5997:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":851,"initialValue":{"hexValue":"30","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6009:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5997:13:5"},"loopExpression":{"expression":{"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6029:3:5","subExpression":{"id":855,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"6029:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":857,"nodeType":"ExpressionStatement","src":"6029:3:5"},"nodeType":"ForStatement","src":"5992:334:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":908,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"6340:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6354:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6340:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":927,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"6573:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6585:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6573:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":939,"nodeType":"Block","src":"6635:40:5","statements":[{"expression":{"baseExpression":{"id":935,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"6656:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":937,"indexExpression":{"hexValue":"30","id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6662:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6656:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":797,"id":938,"nodeType":"Return","src":"6649:15:5"}]},"id":940,"nodeType":"IfStatement","src":"6569:106:5","trueBody":{"id":934,"nodeType":"Block","src":"6588:41:5","statements":[{"expression":{"baseExpression":{"id":930,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"6609:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":932,"indexExpression":{"hexValue":"30","id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6616:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6609:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":797,"id":933,"nodeType":"Return","src":"6602:16:5"}]}},"id":941,"nodeType":"IfStatement","src":"6336:339:5","trueBody":{"id":926,"nodeType":"Block","src":"6357:206:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":911,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"6375:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":912,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"6387:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6375:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":918,"nodeType":"IfStatement","src":"6371:96:5","trueBody":{"id":917,"nodeType":"Block","src":"6397:70:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":914,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"6422:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6422:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":916,"nodeType":"RevertStatement","src":"6415:37:5"}]}},{"id":925,"nodeType":"UncheckedBlock","src":"6480:73:5","statements":[{"expression":{"baseExpression":{"id":919,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"6515:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":923,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":920,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"6522:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6536:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6522:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6515:23:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":797,"id":924,"nodeType":"Return","src":"6508:30:5"}]}]}}]},"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"3664:730:5","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer)."},"id":943,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"4408:17:5","nodeType":"FunctionDefinition","parameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"proof","nameLocation":"4452:5:5","nodeType":"VariableDeclaration","scope":943,"src":"4435:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":785,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4435:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":786,"nodeType":"ArrayTypeName","src":"4435:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":790,"mutability":"mutable","name":"proofFlags","nameLocation":"4481:10:5","nodeType":"VariableDeclaration","scope":943,"src":"4467:24:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":788,"name":"bool","nodeType":"ElementaryTypeName","src":"4467:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":789,"nodeType":"ArrayTypeName","src":"4467:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"leaves","nameLocation":"4518:6:5","nodeType":"VariableDeclaration","scope":943,"src":"4501:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":791,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4501:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":792,"nodeType":"ArrayTypeName","src":"4501:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4425:105:5"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"merkleRoot","nameLocation":"4562:10:5","nodeType":"VariableDeclaration","scope":943,"src":"4554:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4554:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4553:20:5"},"scope":1140,"src":"4399:2282:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1102,"nodeType":"Block","src":"7043:2107:5","statements":[{"assignments":[959],"declarations":[{"constant":false,"id":959,"mutability":"mutable","name":"leavesLen","nameLocation":"7435:9:5","nodeType":"VariableDeclaration","scope":1102,"src":"7427:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":958,"name":"uint256","nodeType":"ElementaryTypeName","src":"7427:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":962,"initialValue":{"expression":{"id":960,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"7447:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7454:6:5","memberName":"length","nodeType":"MemberAccess","src":"7447:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7427:33:5"},{"assignments":[964],"declarations":[{"constant":false,"id":964,"mutability":"mutable","name":"proofLen","nameLocation":"7478:8:5","nodeType":"VariableDeclaration","scope":1102,"src":"7470:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":963,"name":"uint256","nodeType":"ElementaryTypeName","src":"7470:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":967,"initialValue":{"expression":{"id":965,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"7489:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7495:6:5","memberName":"length","nodeType":"MemberAccess","src":"7489:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7470:31:5"},{"assignments":[969],"declarations":[{"constant":false,"id":969,"mutability":"mutable","name":"totalHashes","nameLocation":"7519:11:5","nodeType":"VariableDeclaration","scope":1102,"src":"7511:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"7511:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":972,"initialValue":{"expression":{"id":970,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"7533:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7544:6:5","memberName":"length","nodeType":"MemberAccess","src":"7533:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7511:39:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":973,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"7598:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":974,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"7610:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7598:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":976,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"7622:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7636:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7622:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7598:39:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":984,"nodeType":"IfStatement","src":"7594:107:5","trueBody":{"id":983,"nodeType":"Block","src":"7639:62:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":980,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"7660:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7660:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":982,"nodeType":"RevertStatement","src":"7653:37:5"}]}},{"assignments":[989],"declarations":[{"constant":false,"id":989,"mutability":"mutable","name":"hashes","nameLocation":"7962:6:5","nodeType":"VariableDeclaration","scope":1102,"src":"7945:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7945:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":988,"nodeType":"ArrayTypeName","src":"7945:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":995,"initialValue":{"arguments":[{"id":993,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"7985:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7971:13:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7975:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":991,"nodeType":"ArrayTypeName","src":"7975:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7971:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7945:52:5"},{"assignments":[997],"declarations":[{"constant":false,"id":997,"mutability":"mutable","name":"leafPos","nameLocation":"8015:7:5","nodeType":"VariableDeclaration","scope":1102,"src":"8007:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":996,"name":"uint256","nodeType":"ElementaryTypeName","src":"8007:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":999,"initialValue":{"hexValue":"30","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8025:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8007:19:5"},{"assignments":[1001],"declarations":[{"constant":false,"id":1001,"mutability":"mutable","name":"hashPos","nameLocation":"8044:7:5","nodeType":"VariableDeclaration","scope":1102,"src":"8036:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1000,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1003,"initialValue":{"hexValue":"30","id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8054:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8036:19:5"},{"assignments":[1005],"declarations":[{"constant":false,"id":1005,"mutability":"mutable","name":"proofPos","nameLocation":"8073:8:5","nodeType":"VariableDeclaration","scope":1102,"src":"8065:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1004,"name":"uint256","nodeType":"ElementaryTypeName","src":"8065:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1007,"initialValue":{"hexValue":"30","id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8084:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8065:20:5"},{"body":{"id":1066,"nodeType":"Block","src":"8503:292:5","statements":[{"assignments":[1019],"declarations":[{"constant":false,"id":1019,"mutability":"mutable","name":"a","nameLocation":"8525:1:5","nodeType":"VariableDeclaration","scope":1066,"src":"8517:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1018,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8517:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1032,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1020,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"8529:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1021,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8539:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8529:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1027,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"8571:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1030,"indexExpression":{"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8578:9:5","subExpression":{"id":1028,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"8578:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8571:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8529:59:5","trueExpression":{"baseExpression":{"id":1023,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"8551:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1026,"indexExpression":{"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8558:9:5","subExpression":{"id":1024,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"8558:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8551:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8517:71:5"},{"assignments":[1034],"declarations":[{"constant":false,"id":1034,"mutability":"mutable","name":"b","nameLocation":"8610:1:5","nodeType":"VariableDeclaration","scope":1066,"src":"8602:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8602:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1056,"initialValue":{"condition":{"baseExpression":{"id":1035,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"8614:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1037,"indexExpression":{"id":1036,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"8625:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8614:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1051,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"8726:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1054,"indexExpression":{"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8732:10:5","subExpression":{"id":1052,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"8732:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8726:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8614:129:5","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1038,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"8647:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1039,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8657:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8647:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1045,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"8689:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1048,"indexExpression":{"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8696:9:5","subExpression":{"id":1046,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"8696:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8689:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8647:59:5","trueExpression":{"baseExpression":{"id":1041,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"8669:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1044,"indexExpression":{"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8676:9:5","subExpression":{"id":1042,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"8676:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8669:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1050,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8646:61:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8602:141:5"},{"expression":{"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1057,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"8757:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1059,"indexExpression":{"id":1058,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"8764:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8757:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1061,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"8779:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1062,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"8782:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1060,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"8769:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8769:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8757:27:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1065,"nodeType":"ExpressionStatement","src":"8757:27:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1012,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"8481:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1013,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"8485:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8481:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1067,"initializationExpression":{"assignments":[1009],"declarations":[{"constant":false,"id":1009,"mutability":"mutable","name":"i","nameLocation":"8474:1:5","nodeType":"VariableDeclaration","scope":1067,"src":"8466:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"8466:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1011,"initialValue":{"hexValue":"30","id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8478:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8466:13:5"},"loopExpression":{"expression":{"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8498:3:5","subExpression":{"id":1015,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"8498:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1017,"nodeType":"ExpressionStatement","src":"8498:3:5"},"nodeType":"ForStatement","src":"8461:334:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1068,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"8809:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8823:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8809:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1087,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"9042:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9054:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9042:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1099,"nodeType":"Block","src":"9104:40:5","statements":[{"expression":{"baseExpression":{"id":1095,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"9125:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1097,"indexExpression":{"hexValue":"30","id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9131:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9125:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":957,"id":1098,"nodeType":"Return","src":"9118:15:5"}]},"id":1100,"nodeType":"IfStatement","src":"9038:106:5","trueBody":{"id":1094,"nodeType":"Block","src":"9057:41:5","statements":[{"expression":{"baseExpression":{"id":1090,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"9078:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1092,"indexExpression":{"hexValue":"30","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9085:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9078:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":957,"id":1093,"nodeType":"Return","src":"9071:16:5"}]}},"id":1101,"nodeType":"IfStatement","src":"8805:339:5","trueBody":{"id":1086,"nodeType":"Block","src":"8826:206:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1071,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"8844:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1072,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"8856:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8844:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1078,"nodeType":"IfStatement","src":"8840:96:5","trueBody":{"id":1077,"nodeType":"Block","src":"8866:70:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1074,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"8891:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8891:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1076,"nodeType":"RevertStatement","src":"8884:37:5"}]}},{"id":1085,"nodeType":"UncheckedBlock","src":"8949:73:5","statements":[{"expression":{"baseExpression":{"id":1079,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"8984:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1083,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1080,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"8991:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9005:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8991:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8984:23:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":957,"id":1084,"nodeType":"Return","src":"8977:30:5"}]}]}}]},"documentation":{"id":944,"nodeType":"StructuredDocumentation","src":"6687:164:5","text":" @dev Calldata version of {processMultiProof}.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details."},"id":1103,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"6865:25:5","nodeType":"FunctionDefinition","parameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"proof","nameLocation":"6919:5:5","nodeType":"VariableDeclaration","scope":1103,"src":"6900:24:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6900:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":946,"nodeType":"ArrayTypeName","src":"6900:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":950,"mutability":"mutable","name":"proofFlags","nameLocation":"6950:10:5","nodeType":"VariableDeclaration","scope":1103,"src":"6934:26:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":948,"name":"bool","nodeType":"ElementaryTypeName","src":"6934:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":949,"nodeType":"ArrayTypeName","src":"6934:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"leaves","nameLocation":"6987:6:5","nodeType":"VariableDeclaration","scope":1103,"src":"6970:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":951,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6970:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":952,"nodeType":"ArrayTypeName","src":"6970:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6890:109:5"},"returnParameters":{"id":957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"merkleRoot","nameLocation":"7031:10:5","nodeType":"VariableDeclaration","scope":1103,"src":"7023:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":955,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7023:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7022:20:5"},"scope":1140,"src":"6856:2294:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1126,"nodeType":"Block","src":"9301:75:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1113,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"9318:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1114,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"9322:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9318:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1121,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"9364:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1122,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"9367:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1120,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"9349:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9349:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9318:51:5","trueExpression":{"arguments":[{"id":1117,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"9341:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1118,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"9344:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1116,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"9326:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9326:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1112,"id":1125,"nodeType":"Return","src":"9311:58:5"}]},"documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"9156:68:5","text":" @dev Sorts the pair (a, b) and hashes the result."},"id":1127,"implemented":true,"kind":"function","modifiers":[],"name":"_hashPair","nameLocation":"9238:9:5","nodeType":"FunctionDefinition","parameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"a","nameLocation":"9256:1:5","nodeType":"VariableDeclaration","scope":1127,"src":"9248:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1105,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9248:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"b","nameLocation":"9267:1:5","nodeType":"VariableDeclaration","scope":1127,"src":"9259:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9259:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9247:22:5"},"returnParameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1127,"src":"9292:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1110,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9292:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9291:9:5"},"scope":1140,"src":"9229:147:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1138,"nodeType":"Block","src":"9579:178:5","statements":[{"AST":{"nodeType":"YulBlock","src":"9641:110:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9662:4:5","type":"","value":"0x00"},{"name":"a","nodeType":"YulIdentifier","src":"9668:1:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9655:6:5"},"nodeType":"YulFunctionCall","src":"9655:15:5"},"nodeType":"YulExpressionStatement","src":"9655:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9690:4:5","type":"","value":"0x20"},{"name":"b","nodeType":"YulIdentifier","src":"9696:1:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9683:6:5"},"nodeType":"YulFunctionCall","src":"9683:15:5"},"nodeType":"YulExpressionStatement","src":"9683:15:5"},{"nodeType":"YulAssignment","src":"9711:30:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9730:4:5","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"9736:4:5","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9720:9:5"},"nodeType":"YulFunctionCall","src":"9720:21:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9711:5:5"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1130,"isOffset":false,"isSlot":false,"src":"9668:1:5","valueSize":1},{"declaration":1132,"isOffset":false,"isSlot":false,"src":"9696:1:5","valueSize":1},{"declaration":1135,"isOffset":false,"isSlot":false,"src":"9711:5:5","valueSize":1}],"id":1137,"nodeType":"InlineAssembly","src":"9632:119:5"}]},"documentation":{"id":1128,"nodeType":"StructuredDocumentation","src":"9382:109:5","text":" @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory."},"id":1139,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientHash","nameLocation":"9505:14:5","nodeType":"FunctionDefinition","parameters":{"id":1133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"a","nameLocation":"9528:1:5","nodeType":"VariableDeclaration","scope":1139,"src":"9520:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9520:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1132,"mutability":"mutable","name":"b","nameLocation":"9539:1:5","nodeType":"VariableDeclaration","scope":1139,"src":"9531:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9531:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9519:22:5"},"returnParameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"value","nameLocation":"9572:5:5","nodeType":"VariableDeclaration","scope":1139,"src":"9564:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9564:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9563:15:5"},"scope":1140,"src":"9496:261:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1141,"src":"803:8956:5","usedErrors":[609],"usedEvents":[]}],"src":"118:9642:5"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"id":6,"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1164],"IERC165":[1176]},"id":1165,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1142,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1165,"sourceUnit":1177,"src":"140:38:6","symbolAliases":[{"foreign":{"id":1143,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"148:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1146,"name":"IERC165","nameLocations":["687:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1176,"src":"687:7:6"},"id":1147,"nodeType":"InheritanceSpecifier","src":"687:7:6"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":1145,"nodeType":"StructuredDocumentation","src":"180:478:6","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":1164,"linearizedBaseContracts":[1164,1176],"name":"ERC165","nameLocation":"677:6:6","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1175],"body":{"id":1162,"nodeType":"Block","src":"844:64:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1155,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"861:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1157,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"881:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1176_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1176_$","typeString":"type(contract IERC165)"}],"id":1156,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"876:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"876:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1176","typeString":"type(contract IERC165)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"890:11:6","memberName":"interfaceId","nodeType":"MemberAccess","src":"876:25:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"861:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1154,"id":1161,"nodeType":"Return","src":"854:47:6"}]},"documentation":{"id":1148,"nodeType":"StructuredDocumentation","src":"701:56:6","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1163,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"771:17:6","nodeType":"FunctionDefinition","parameters":{"id":1151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1150,"mutability":"mutable","name":"interfaceId","nameLocation":"796:11:6","nodeType":"VariableDeclaration","scope":1163,"src":"789:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1149,"name":"bytes4","nodeType":"ElementaryTypeName","src":"789:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"788:20:6"},"returnParameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1163,"src":"838:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1152,"name":"bool","nodeType":"ElementaryTypeName","src":"838:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"837:6:6"},"scope":1164,"src":"762:146:6","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1165,"src":"659:251:6","usedErrors":[],"usedEvents":[]}],"src":"114:797:6"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"id":7,"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1176]},"id":1177,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1166,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1167,"nodeType":"StructuredDocumentation","src":"141:279:7","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1176,"linearizedBaseContracts":[1176],"name":"IERC165","nameLocation":"431:7:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1168,"nodeType":"StructuredDocumentation","src":"445:340:7","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1175,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"799:17:7","nodeType":"FunctionDefinition","parameters":{"id":1171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1170,"mutability":"mutable","name":"interfaceId","nameLocation":"824:11:7","nodeType":"VariableDeclaration","scope":1175,"src":"817:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1169,"name":"bytes4","nodeType":"ElementaryTypeName","src":"817:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"816:20:7"},"returnParameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1175,"src":"860:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1172,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"859:6:7"},"scope":1176,"src":"790:76:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1177,"src":"421:447:7","usedErrors":[],"usedEvents":[]}],"src":"115:754:7"}},"contracts/core/DappadVesting.sol":{"id":8,"ast":{"absolutePath":"contracts/core/DappadVesting.sol","exportedSymbols":{"AccessControl":[295],"Context":[603],"DappadVesting":[3487],"ERC165":[1164],"Errors":[3928],"IAccessControl":[378],"IDappadSale":[4250],"IDappadSaleFactory":[3955],"IDappadStake":[4092],"IDappadStakeController":[4023],"IDappadStakeControllerFactory":[3967],"IDappadStakeFactory":[3963],"IDappadVesting":[4336],"IDappadVestingFactory":[3959],"IERC165":[1176],"IERC20":[456],"IERC20Extented":[3940],"IERC721":[573],"IERC721Extented":[3951],"MerkleProof":[1140]},"id":3488,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1178,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"33:23:8"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":1179,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3488,"sourceUnit":296,"src":"58:58:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":1180,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3488,"sourceUnit":1141,"src":"117:68:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/Interfaces.sol","file":"../interfaces/Interfaces.sol","id":1181,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3488,"sourceUnit":4337,"src":"186:38:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/errors/Errors.sol","file":"../errors/Errors.sol","id":1182,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3488,"sourceUnit":3929,"src":"225:30:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1183,"name":"AccessControl","nameLocations":["283:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"283:13:8"},"id":1184,"nodeType":"InheritanceSpecifier","src":"283:13:8"}],"canonicalName":"DappadVesting","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3487,"linearizedBaseContracts":[3487,295,1164,1176,378,603],"name":"DappadVesting","nameLocation":"266:13:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"117803e3","id":1189,"mutability":"constant","name":"OWNER","nameLocation":"327:5:8","nodeType":"VariableDeclaration","scope":3487,"src":"303:50:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"303:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4f574e4552","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"345:7:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b","typeString":"literal_string \"OWNER\""},"value":"OWNER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b","typeString":"literal_string \"OWNER\""}],"id":1186,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"335:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"335:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"2a0acc6a","id":1194,"mutability":"constant","name":"ADMIN","nameLocation":"383:5:8","nodeType":"VariableDeclaration","scope":3487,"src":"359:50:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"359:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"41444d494e","id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"401:7:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42","typeString":"literal_string \"ADMIN\""},"value":"ADMIN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42","typeString":"literal_string \"ADMIN\""}],"id":1191,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"391:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"391:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"b9edb3a5","id":1197,"mutability":"mutable","name":"defaultVesting","nameLocation":"446:14:8","nodeType":"VariableDeclaration","scope":3487,"src":"416:44:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting"},"typeName":{"id":1196,"nodeType":"UserDefinedTypeName","pathNode":{"id":1195,"name":"IDappadVesting.Vesting","nameLocations":["416:14:8","431:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":4277,"src":"416:22:8"},"referencedDeclaration":4277,"src":"416:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage_ptr","typeString":"struct IDappadVesting.Vesting"}},"visibility":"public"},{"constant":false,"functionSelector":"3c8ffc64","id":1200,"mutability":"mutable","name":"vestingSettings","nameLocation":"504:15:8","nodeType":"VariableDeclaration","scope":3487,"src":"466:53:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_VestingSettings_$4265_storage","typeString":"struct IDappadVesting.VestingSettings"},"typeName":{"id":1199,"nodeType":"UserDefinedTypeName","pathNode":{"id":1198,"name":"IDappadVesting.VestingSettings","nameLocations":["466:14:8","481:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":4265,"src":"466:30:8"},"referencedDeclaration":4265,"src":"466:30:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingSettings_$4265_storage_ptr","typeString":"struct IDappadVesting.VestingSettings"}},"visibility":"public"},{"constant":false,"functionSelector":"928978a0","id":1203,"mutability":"mutable","name":"vestingAddresses","nameLocation":"564:16:8","nodeType":"VariableDeclaration","scope":3487,"src":"525:55:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_storage","typeString":"struct IDappadVesting.VestingAddresses"},"typeName":{"id":1202,"nodeType":"UserDefinedTypeName","pathNode":{"id":1201,"name":"IDappadVesting.VestingAddresses","nameLocations":["525:14:8","540:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":4288,"src":"525:31:8"},"referencedDeclaration":4288,"src":"525:31:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_storage_ptr","typeString":"struct IDappadVesting.VestingAddresses"}},"visibility":"public"},{"constant":false,"functionSelector":"e480bd79","id":1206,"mutability":"mutable","name":"vestingStatistics","nameLocation":"626:17:8","nodeType":"VariableDeclaration","scope":3487,"src":"586:57:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_VestingStatistics_$4293_storage","typeString":"struct IDappadVesting.VestingStatistics"},"typeName":{"id":1205,"nodeType":"UserDefinedTypeName","pathNode":{"id":1204,"name":"IDappadVesting.VestingStatistics","nameLocations":["586:14:8","601:17:8"],"nodeType":"IdentifierPath","referencedDeclaration":4293,"src":"586:32:8"},"referencedDeclaration":4293,"src":"586:32:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingStatistics_$4293_storage_ptr","typeString":"struct IDappadVesting.VestingStatistics"}},"visibility":"public"},{"constant":false,"functionSelector":"fe0d7fbf","id":1211,"mutability":"mutable","name":"customVestings","nameLocation":"700:14:8","nodeType":"VariableDeclaration","scope":3487,"src":"650:64:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting)"},"typeName":{"id":1210,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1207,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"650:42:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1209,"nodeType":"UserDefinedTypeName","pathNode":{"id":1208,"name":"IDappadVesting.Vesting","nameLocations":["669:14:8","684:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":4277,"src":"669:22:8"},"referencedDeclaration":4277,"src":"669:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage_ptr","typeString":"struct IDappadVesting.Vesting"}}},"visibility":"public"},{"constant":false,"functionSelector":"e31e62d9","id":1217,"mutability":"mutable","name":"vestingClaimed","nameLocation":"772:14:8","nodeType":"VariableDeclaration","scope":3487,"src":"720:66:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"typeName":{"id":1216,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1212,"name":"address","nodeType":"ElementaryTypeName","src":"728:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"720:44:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1215,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1213,"name":"uint256","nodeType":"ElementaryTypeName","src":"747:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"739:24:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1214,"name":"bool","nodeType":"ElementaryTypeName","src":"758:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"ad4222c7","id":1221,"mutability":"mutable","name":"investmentAmounts","nameLocation":"827:17:8","nodeType":"VariableDeclaration","scope":3487,"src":"792:52:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1220,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1218,"name":"address","nodeType":"ElementaryTypeName","src":"800:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"792:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"811:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"e985e367","id":1224,"mutability":"mutable","name":"saleToken","nameLocation":"873:9:8","nodeType":"VariableDeclaration","scope":3487,"src":"851:31:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"},"typeName":{"id":1223,"nodeType":"UserDefinedTypeName","pathNode":{"id":1222,"name":"IERC20Extented","nameLocations":["851:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":3940,"src":"851:14:8"},"referencedDeclaration":3940,"src":"851:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"}},"visibility":"public"},{"constant":false,"functionSelector":"daf6ca30","id":1227,"mutability":"mutable","name":"saleContract","nameLocation":"907:12:8","nodeType":"VariableDeclaration","scope":3487,"src":"888:31:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadSale_$4250","typeString":"contract IDappadSale"},"typeName":{"id":1226,"nodeType":"UserDefinedTypeName","pathNode":{"id":1225,"name":"IDappadSale","nameLocations":["888:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":4250,"src":"888:11:8"},"referencedDeclaration":4250,"src":"888:11:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadSale_$4250","typeString":"contract IDappadSale"}},"visibility":"public"},{"anonymous":false,"eventSelector":"3d8339dd16c2311bf6ab491c826f9ecd3fe1858e58fe77f10c63eb2b03fdbc14","id":1241,"name":"UserClaimedVesting","nameLocation":"932:18:8","nodeType":"EventDefinition","parameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"indexed":false,"mutability":"mutable","name":"userAddress","nameLocation":"959:11:8","nodeType":"VariableDeclaration","scope":1241,"src":"951:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1228,"name":"address","nodeType":"ElementaryTypeName","src":"951:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1231,"indexed":false,"mutability":"mutable","name":"vestingIndex","nameLocation":"980:12:8","nodeType":"VariableDeclaration","scope":1241,"src":"972:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1230,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1233,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1002:6:8","nodeType":"VariableDeclaration","scope":1241,"src":"994:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"994:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1235,"indexed":false,"mutability":"mutable","name":"saleTokenAmount","nameLocation":"1018:15:8","nodeType":"VariableDeclaration","scope":1241,"src":"1010:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1234,"name":"uint256","nodeType":"ElementaryTypeName","src":"1010:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1237,"indexed":false,"mutability":"mutable","name":"totalVestingAmount","nameLocation":"1043:18:8","nodeType":"VariableDeclaration","scope":1241,"src":"1035:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"1035:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1239,"indexed":false,"mutability":"mutable","name":"claimedTime","nameLocation":"1071:11:8","nodeType":"VariableDeclaration","scope":1241,"src":"1063:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1063:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"950:133:8"},"src":"926:158:8"},{"anonymous":false,"eventSelector":"37a4c2c80e2c1b068fbe7ab8e6153e26f6abf47b430cb36b03f6c39b2db35799","id":1253,"name":"UserClaimedAllUnlockedVestings","nameLocation":"1095:30:8","nodeType":"EventDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"indexed":false,"mutability":"mutable","name":"userAddress","nameLocation":"1134:11:8","nodeType":"VariableDeclaration","scope":1253,"src":"1126:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"1126:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1245,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1155:6:8","nodeType":"VariableDeclaration","scope":1253,"src":"1147:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1244,"name":"uint256","nodeType":"ElementaryTypeName","src":"1147:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1247,"indexed":false,"mutability":"mutable","name":"saleTokenAmount","nameLocation":"1171:15:8","nodeType":"VariableDeclaration","scope":1253,"src":"1163:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1246,"name":"uint256","nodeType":"ElementaryTypeName","src":"1163:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1249,"indexed":false,"mutability":"mutable","name":"totalVestingAmount","nameLocation":"1196:18:8","nodeType":"VariableDeclaration","scope":1253,"src":"1188:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"1188:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1251,"indexed":false,"mutability":"mutable","name":"claimedTime","nameLocation":"1224:11:8","nodeType":"VariableDeclaration","scope":1253,"src":"1216:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1250,"name":"uint256","nodeType":"ElementaryTypeName","src":"1216:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1125:111:8"},"src":"1089:148:8"},{"anonymous":false,"eventSelector":"3d3828369183a98b7c1119e7cea475fa7365971789c1ba8451f5b30d7f3c149b","id":1261,"name":"SaleTokenAdded","nameLocation":"1248:14:8","nodeType":"EventDefinition","parameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"1271:4:8","nodeType":"VariableDeclaration","scope":1261,"src":"1263:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"1263:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1257,"indexed":false,"mutability":"mutable","name":"saleAmount","nameLocation":"1285:10:8","nodeType":"VariableDeclaration","scope":1261,"src":"1277:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"1277:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1259,"indexed":false,"mutability":"mutable","name":"totalSaleTokenAmount","nameLocation":"1305:20:8","nodeType":"VariableDeclaration","scope":1261,"src":"1297:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1258,"name":"uint256","nodeType":"ElementaryTypeName","src":"1297:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1262:64:8"},"src":"1242:85:8"},{"anonymous":false,"eventSelector":"3bde95f8dbdfe169f6663dd0f17dd76cfe84cca069d48fcda8275c0ef25646d6","id":1271,"name":"CustomVestingUpdated","nameLocation":"1338:20:8","nodeType":"EventDefinition","parameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"indexed":false,"mutability":"mutable","name":"userAddress","nameLocation":"1367:11:8","nodeType":"VariableDeclaration","scope":1271,"src":"1359:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1262,"name":"address","nodeType":"ElementaryTypeName","src":"1359:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1266,"indexed":false,"mutability":"mutable","name":"vesting","nameLocation":"1403:7:8","nodeType":"VariableDeclaration","scope":1271,"src":"1380:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting"},"typeName":{"id":1265,"nodeType":"UserDefinedTypeName","pathNode":{"id":1264,"name":"IDappadVesting.Vesting","nameLocations":["1380:14:8","1395:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":4277,"src":"1380:22:8"},"referencedDeclaration":4277,"src":"1380:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage_ptr","typeString":"struct IDappadVesting.Vesting"}},"visibility":"internal"},{"constant":false,"id":1269,"indexed":false,"mutability":"mutable","name":"vestingPercentages","nameLocation":"1422:18:8","nodeType":"VariableDeclaration","scope":1271,"src":"1412:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1267,"name":"uint256","nodeType":"ElementaryTypeName","src":"1412:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1268,"nodeType":"ArrayTypeName","src":"1412:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1358:83:8"},"src":"1332:110:8"},{"anonymous":false,"eventSelector":"f7d6bdf3ee749ac722ba01e58fd4c87234b2948c0d9b5a0232d6be227c8be2fa","id":1275,"name":"TotalVestingAmountUpdated","nameLocation":"1453:25:8","nodeType":"EventDefinition","parameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"indexed":false,"mutability":"mutable","name":"totalVestingAmount","nameLocation":"1487:18:8","nodeType":"VariableDeclaration","scope":1275,"src":"1479:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1272,"name":"uint256","nodeType":"ElementaryTypeName","src":"1479:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1478:28:8"},"src":"1447:60:8"},{"anonymous":false,"eventSelector":"4a7d91d48d7631fbad39b1025ee81e57e99a3babe757f2a29b9fd407349d0855","id":1283,"name":"DefaultVestingUpdated","nameLocation":"1518:21:8","nodeType":"EventDefinition","parameters":{"id":1282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"indexed":false,"mutability":"mutable","name":"vesting","nameLocation":"1563:7:8","nodeType":"VariableDeclaration","scope":1283,"src":"1540:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting"},"typeName":{"id":1277,"nodeType":"UserDefinedTypeName","pathNode":{"id":1276,"name":"IDappadVesting.Vesting","nameLocations":["1540:14:8","1555:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":4277,"src":"1540:22:8"},"referencedDeclaration":4277,"src":"1540:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage_ptr","typeString":"struct IDappadVesting.Vesting"}},"visibility":"internal"},{"constant":false,"id":1281,"indexed":false,"mutability":"mutable","name":"vestingPercentages","nameLocation":"1582:18:8","nodeType":"VariableDeclaration","scope":1283,"src":"1572:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"1572:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1280,"nodeType":"ArrayTypeName","src":"1572:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1539:62:8"},"src":"1512:90:8"},{"anonymous":false,"eventSelector":"8feb0a7153cadea0dc333f048b85018294754240c350d2b2c10a4c0b8ccac44d","id":1287,"name":"TotalSaleTokenAmountUpdated","nameLocation":"1613:27:8","nodeType":"EventDefinition","parameters":{"id":1286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"indexed":false,"mutability":"mutable","name":"totalSaleTokenAmount","nameLocation":"1649:20:8","nodeType":"VariableDeclaration","scope":1287,"src":"1641:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1284,"name":"uint256","nodeType":"ElementaryTypeName","src":"1641:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1640:30:8"},"src":"1607:64:8"},{"anonymous":false,"eventSelector":"b2405cc84542f567f9b670db7d7ec04b9907b651cddfdfcd11f8474cb8f16e79","id":1292,"name":"VestingAddressesUpdated","nameLocation":"1682:23:8","nodeType":"EventDefinition","parameters":{"id":1291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1290,"indexed":false,"mutability":"mutable","name":"vestingAddresses","nameLocation":"1738:16:8","nodeType":"VariableDeclaration","scope":1292,"src":"1706:48:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_memory_ptr","typeString":"struct IDappadVesting.VestingAddresses"},"typeName":{"id":1289,"nodeType":"UserDefinedTypeName","pathNode":{"id":1288,"name":"IDappadVesting.VestingAddresses","nameLocations":["1706:14:8","1721:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":4288,"src":"1706:31:8"},"referencedDeclaration":4288,"src":"1706:31:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_storage_ptr","typeString":"struct IDappadVesting.VestingAddresses"}},"visibility":"internal"}],"src":"1705:50:8"},"src":"1676:80:8"},{"anonymous":false,"eventSelector":"2a0deec9b25e9145e93f5ac49843d67610cc09e31d9010fdaa4bf410888a259a","id":1298,"name":"UserInvestmentAmountUpdated","nameLocation":"1767:27:8","nodeType":"EventDefinition","parameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"indexed":false,"mutability":"mutable","name":"userAddress","nameLocation":"1803:11:8","nodeType":"VariableDeclaration","scope":1298,"src":"1795:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"1795:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1296,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1824:6:8","nodeType":"VariableDeclaration","scope":1298,"src":"1816:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1295,"name":"uint256","nodeType":"ElementaryTypeName","src":"1816:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1794:37:8"},"src":"1761:71:8"},{"anonymous":false,"eventSelector":"7b9af4016ea794462793972f3d17adc8c498aac9f3baf41022e8469fa8f76bb2","id":1306,"name":"UserInvestmentAmountsUpdated","nameLocation":"1843:28:8","nodeType":"EventDefinition","parameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1301,"indexed":false,"mutability":"mutable","name":"userAddresses","nameLocation":"1882:13:8","nodeType":"VariableDeclaration","scope":1306,"src":"1872:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1299,"name":"address","nodeType":"ElementaryTypeName","src":"1872:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1300,"nodeType":"ArrayTypeName","src":"1872:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1304,"indexed":false,"mutability":"mutable","name":"amounts","nameLocation":"1907:7:8","nodeType":"VariableDeclaration","scope":1306,"src":"1897:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"1897:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1303,"nodeType":"ArrayTypeName","src":"1897:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1871:44:8"},"src":"1837:79:8"},{"body":{"id":1481,"nodeType":"Block","src":"2280:1470:8","statements":[{"expression":{"arguments":[{"id":1333,"name":"OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"2304:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1334,"name":"OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"2311:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1332,"name":"_setRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"2290:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32)"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2290:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1336,"nodeType":"ExpressionStatement","src":"2290:27:8"},{"expression":{"arguments":[{"id":1338,"name":"ADMIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"2341:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1339,"name":"OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"2348:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1337,"name":"_setRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"2327:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32)"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2327:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1341,"nodeType":"ExpressionStatement","src":"2327:27:8"},{"expression":{"arguments":[{"id":1343,"name":"OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"2376:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"expression":{"id":1344,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"2383:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":1345,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2397:16:8","memberName":"vestingAddresses","nodeType":"MemberAccess","referencedDeclaration":4256,"src":"2383:30:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_memory_ptr","typeString":"struct IDappadVesting.VestingAddresses memory"}},"id":1346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2414:12:8","memberName":"ownerAddress","nodeType":"MemberAccess","referencedDeclaration":4285,"src":"2383:43:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1342,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2365:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2365:62:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1348,"nodeType":"ExpressionStatement","src":"2365:62:8"},{"expression":{"arguments":[{"id":1350,"name":"ADMIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"2448:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"expression":{"id":1351,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"2455:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":1352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2469:16:8","memberName":"vestingAddresses","nodeType":"MemberAccess","referencedDeclaration":4256,"src":"2455:30:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_memory_ptr","typeString":"struct IDappadVesting.VestingAddresses memory"}},"id":1353,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2486:12:8","memberName":"adminAddress","nodeType":"MemberAccess","referencedDeclaration":4287,"src":"2455:43:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1349,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2437:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2437:62:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1355,"nodeType":"ExpressionStatement","src":"2437:62:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"expression":{"id":1356,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"2522:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":1357,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2536:14:8","memberName":"defaultVesting","nodeType":"MemberAccess","referencedDeclaration":4253,"src":"2522:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":1358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2551:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"2522:47:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2570:6:8","memberName":"length","nodeType":"MemberAccess","src":"2522:54:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2580:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2522:59:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1367,"nodeType":"IfStatement","src":"2518:108:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1362,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"2590:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2597:27:8","memberName":"EmptyVestingPercentageError","nodeType":"MemberAccess","referencedDeclaration":3845,"src":"2590:34:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2590:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1366,"nodeType":"RevertStatement","src":"2583:43:8"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1368,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"2640:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":1369,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2654:14:8","memberName":"defaultVesting","nodeType":"MemberAccess","referencedDeclaration":4253,"src":"2640:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":1370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2669:15:8","memberName":"vestingDuration","nodeType":"MemberAccess","referencedDeclaration":4269,"src":"2640:44:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":1371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2640:49:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1378,"nodeType":"IfStatement","src":"2636:98:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1373,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"2698:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2705:27:8","memberName":"InvalidVestingDurationError","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"2698:34:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2698:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1377,"nodeType":"RevertStatement","src":"2691:43:8"}},{"expression":{"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1379,"name":"defaultVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"2745:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1380,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"2762:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":1381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2776:14:8","memberName":"defaultVesting","nodeType":"MemberAccess","referencedDeclaration":4253,"src":"2762:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"src":"2745:45:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"id":1383,"nodeType":"ExpressionStatement","src":"2745:45:8"},{"expression":{"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1384,"name":"saleToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"2801:9:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"expression":{"id":1386,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"2828:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":1387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2842:16:8","memberName":"vestingAddresses","nodeType":"MemberAccess","referencedDeclaration":4256,"src":"2828:30:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_memory_ptr","typeString":"struct IDappadVesting.VestingAddresses memory"}},"id":1388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2859:16:8","memberName":"saleTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4279,"src":"2828:47:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1385,"name":"IERC20Extented","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"2813:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Extented_$3940_$","typeString":"type(contract IERC20Extented)"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2813:63:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"}},"src":"2801:75:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"}},"id":1391,"nodeType":"ExpressionStatement","src":"2801:75:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1392,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"2891:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":1393,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2905:16:8","memberName":"vestingAddresses","nodeType":"MemberAccess","referencedDeclaration":4256,"src":"2891:30:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_memory_ptr","typeString":"struct IDappadVesting.VestingAddresses memory"}},"id":1394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2922:19:8","memberName":"saleContractAddress","nodeType":"MemberAccess","referencedDeclaration":4283,"src":"2891:50:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2953:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2945:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"2945:7:8","typeDescriptions":{}}},"id":1398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2945:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2891:64:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1409,"nodeType":"IfStatement","src":"2887:173:8","trueBody":{"id":1408,"nodeType":"Block","src":"2957:103:8","statements":[{"expression":{"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1400,"name":"saleContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"2971:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadSale_$4250","typeString":"contract IDappadSale"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"expression":{"id":1402,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"2998:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":1403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3012:16:8","memberName":"vestingAddresses","nodeType":"MemberAccess","referencedDeclaration":4256,"src":"2998:30:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_memory_ptr","typeString":"struct IDappadVesting.VestingAddresses memory"}},"id":1404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3029:19:8","memberName":"saleContractAddress","nodeType":"MemberAccess","referencedDeclaration":4283,"src":"2998:50:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1401,"name":"IDappadSale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"2986:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDappadSale_$4250_$","typeString":"type(contract IDappadSale)"}},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2986:63:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IDappadSale_$4250","typeString":"contract IDappadSale"}},"src":"2971:78:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadSale_$4250","typeString":"contract IDappadSale"}},"id":1407,"nodeType":"ExpressionStatement","src":"2971:78:8"}]}},{"expression":{"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1410,"name":"vestingSettings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"3070:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingSettings_$4265_storage","typeString":"struct IDappadVesting.VestingSettings storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1411,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"3088:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":1412,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3102:15:8","memberName":"vestingSettings","nodeType":"MemberAccess","referencedDeclaration":4259,"src":"3088:29:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingSettings_$4265_memory_ptr","typeString":"struct IDappadVesting.VestingSettings memory"}},"src":"3070:47:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingSettings_$4265_storage","typeString":"struct IDappadVesting.VestingSettings storage ref"}},"id":1414,"nodeType":"ExpressionStatement","src":"3070:47:8"},{"expression":{"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1415,"name":"vestingAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"3136:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_storage","typeString":"struct IDappadVesting.VestingAddresses storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1416,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"3155:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":1417,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3169:16:8","memberName":"vestingAddresses","nodeType":"MemberAccess","referencedDeclaration":4256,"src":"3155:30:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_memory_ptr","typeString":"struct IDappadVesting.VestingAddresses memory"}},"src":"3136:49:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_storage","typeString":"struct IDappadVesting.VestingAddresses storage ref"}},"id":1419,"nodeType":"ExpressionStatement","src":"3136:49:8"},{"assignments":[1421],"declarations":[{"constant":false,"id":1421,"mutability":"mutable","name":"totalVestingPercentage","nameLocation":"3204:22:8","nodeType":"VariableDeclaration","scope":1481,"src":"3196:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1420,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1423,"initialValue":{"hexValue":"30","id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3229:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3196:34:8"},{"expression":{"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1424,"name":"defaultVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"3241:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"id":1426,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3256:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"3241:33:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"expression":{"expression":{"id":1430,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"3291:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":1431,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3305:14:8","memberName":"defaultVesting","nodeType":"MemberAccess","referencedDeclaration":4253,"src":"3291:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":1432,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3320:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"3291:47:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3339:6:8","memberName":"length","nodeType":"MemberAccess","src":"3291:54:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3277:13:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1427,"name":"uint256","nodeType":"ElementaryTypeName","src":"3281:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1428,"nodeType":"ArrayTypeName","src":"3281:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3277:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"3241:105:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1436,"nodeType":"ExpressionStatement","src":"3241:105:8"},{"body":{"id":1470,"nodeType":"Block","src":"3449:204:8","statements":[{"expression":{"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1450,"name":"defaultVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"3463:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"id":1453,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3478:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"3463:33:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1454,"indexExpression":{"id":1452,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"3497:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3463:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"expression":{"id":1455,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"3502:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":1456,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3516:14:8","memberName":"defaultVesting","nodeType":"MemberAccess","referencedDeclaration":4253,"src":"3502:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":1457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3531:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"3502:47:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1459,"indexExpression":{"id":1458,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"3550:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3502:50:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:89:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1461,"nodeType":"ExpressionStatement","src":"3463:89:8"},{"expression":{"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1462,"name":"totalVestingPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"3566:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"expression":{"expression":{"id":1463,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"3592:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":1464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3606:14:8","memberName":"defaultVesting","nodeType":"MemberAccess","referencedDeclaration":4253,"src":"3592:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":1465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3621:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"3592:47:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1467,"indexExpression":{"id":1466,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"3640:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3592:50:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3566:76:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1469,"nodeType":"ExpressionStatement","src":"3566:76:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1441,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"3384:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"expression":{"id":1442,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"3388:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":1443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3402:14:8","memberName":"defaultVesting","nodeType":"MemberAccess","referencedDeclaration":4253,"src":"3388:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":1444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3417:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"3388:47:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3436:6:8","memberName":"length","nodeType":"MemberAccess","src":"3388:54:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3384:58:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1471,"initializationExpression":{"assignments":[1438],"declarations":[{"constant":false,"id":1438,"mutability":"mutable","name":"i","nameLocation":"3377:1:8","nodeType":"VariableDeclaration","scope":1471,"src":"3369:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1437,"name":"uint256","nodeType":"ElementaryTypeName","src":"3369:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1440,"initialValue":{"hexValue":"30","id":1439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3381:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3369:13:8"},"loopExpression":{"expression":{"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3444:3:8","subExpression":{"id":1447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"3444:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1449,"nodeType":"ExpressionStatement","src":"3444:3:8"},"nodeType":"ForStatement","src":"3365:288:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1472,"name":"totalVestingPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"3667:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3130303030","id":1473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3693:5:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3667:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1480,"nodeType":"IfStatement","src":"3663:80:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1475,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"3707:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3714:27:8","memberName":"TotalVestingPercentageError","nodeType":"MemberAccess","referencedDeclaration":3847,"src":"3707:34:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3707:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1479,"nodeType":"RevertStatement","src":"3700:43:8"}}]},"id":1482,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"expression":{"id":1312,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"2009:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":1313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2023:16:8","memberName":"vestingAddresses","nodeType":"MemberAccess","referencedDeclaration":4256,"src":"2009:30:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_memory_ptr","typeString":"struct IDappadVesting.VestingAddresses memory"}},"id":1314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2040:16:8","memberName":"saleTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4279,"src":"2009:47:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1315,"kind":"modifierInvocation","modifierName":{"id":1311,"name":"notZeroAddress","nameLocations":["1994:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1492,"src":"1994:14:8"},"nodeType":"ModifierInvocation","src":"1994:63:8"},{"arguments":[{"expression":{"expression":{"id":1317,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"2082:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":1318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2096:16:8","memberName":"vestingAddresses","nodeType":"MemberAccess","referencedDeclaration":4256,"src":"2082:30:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_memory_ptr","typeString":"struct IDappadVesting.VestingAddresses memory"}},"id":1319,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2113:22:8","memberName":"factoryContractAddress","nodeType":"MemberAccess","referencedDeclaration":4281,"src":"2082:53:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1320,"kind":"modifierInvocation","modifierName":{"id":1316,"name":"notZeroAddress","nameLocations":["2067:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1492,"src":"2067:14:8"},"nodeType":"ModifierInvocation","src":"2067:69:8"},{"arguments":[{"expression":{"expression":{"id":1322,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"2161:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":1323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2175:16:8","memberName":"vestingAddresses","nodeType":"MemberAccess","referencedDeclaration":4256,"src":"2161:30:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_memory_ptr","typeString":"struct IDappadVesting.VestingAddresses memory"}},"id":1324,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2192:12:8","memberName":"ownerAddress","nodeType":"MemberAccess","referencedDeclaration":4285,"src":"2161:43:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1325,"kind":"modifierInvocation","modifierName":{"id":1321,"name":"notZeroAddress","nameLocations":["2146:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1492,"src":"2146:14:8"},"nodeType":"ModifierInvocation","src":"2146:59:8"},{"arguments":[{"expression":{"expression":{"id":1327,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"2230:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":1328,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2244:16:8","memberName":"vestingAddresses","nodeType":"MemberAccess","referencedDeclaration":4256,"src":"2230:30:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_memory_ptr","typeString":"struct IDappadVesting.VestingAddresses memory"}},"id":1329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2261:12:8","memberName":"adminAddress","nodeType":"MemberAccess","referencedDeclaration":4287,"src":"2230:43:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1330,"kind":"modifierInvocation","modifierName":{"id":1326,"name":"notZeroAddress","nameLocations":["2215:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1492,"src":"2215:14:8"},"nodeType":"ModifierInvocation","src":"2215:59:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1309,"mutability":"mutable","name":"vestingParams","nameLocation":"1970:13:8","nodeType":"VariableDeclaration","scope":1482,"src":"1934:49:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams"},"typeName":{"id":1308,"nodeType":"UserDefinedTypeName","pathNode":{"id":1307,"name":"IDappadVesting.VestingParams","nameLocations":["1934:14:8","1949:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":4260,"src":"1934:28:8"},"referencedDeclaration":4260,"src":"1934:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_storage_ptr","typeString":"struct IDappadVesting.VestingParams"}},"visibility":"internal"}],"src":"1933:51:8"},"returnParameters":{"id":1331,"nodeType":"ParameterList","parameters":[],"src":"2280:0:8"},"scope":3487,"src":"1922:1828:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1491,"nodeType":"Block","src":"3798:53:8","statements":[{"expression":{"arguments":[{"id":1487,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"3824:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1486,"name":"_notZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"3808:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3808:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1489,"nodeType":"ExpressionStatement","src":"3808:25:8"},{"id":1490,"nodeType":"PlaceholderStatement","src":"3843:1:8"}]},"id":1492,"name":"notZeroAddress","nameLocation":"3765:14:8","nodeType":"ModifierDefinition","parameters":{"id":1485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1484,"mutability":"mutable","name":"_address","nameLocation":"3788:8:8","nodeType":"VariableDeclaration","scope":1492,"src":"3780:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:18:8"},"src":"3756:95:8","virtual":false,"visibility":"internal"},{"body":{"id":1501,"nodeType":"Block","src":"3894:48:8","statements":[{"expression":{"arguments":[{"id":1497,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"3915:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1496,"name":"_onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"3904:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$__$","typeString":"function (address) view"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3904:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1499,"nodeType":"ExpressionStatement","src":"3904:20:8"},{"id":1500,"nodeType":"PlaceholderStatement","src":"3934:1:8"}]},"id":1502,"name":"onlyOwner","nameLocation":"3866:9:8","nodeType":"ModifierDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"_address","nameLocation":"3884:8:8","nodeType":"VariableDeclaration","scope":1502,"src":"3876:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"3876:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3875:18:8"},"src":"3857:85:8","virtual":false,"visibility":"internal"},{"body":{"id":1511,"nodeType":"Block","src":"3992:55:8","statements":[{"expression":{"arguments":[{"id":1507,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"4020:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1506,"name":"_onlyOwnerOrAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"4002:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$__$","typeString":"function (address) view"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4002:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1509,"nodeType":"ExpressionStatement","src":"4002:27:8"},{"id":1510,"nodeType":"PlaceholderStatement","src":"4039:1:8"}]},"id":1512,"name":"onlyOwnerOrAdmin","nameLocation":"3957:16:8","nodeType":"ModifierDefinition","parameters":{"id":1505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"_address","nameLocation":"3982:8:8","nodeType":"VariableDeclaration","scope":1512,"src":"3974:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1503,"name":"address","nodeType":"ElementaryTypeName","src":"3974:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3973:18:8"},"src":"3948:99:8","virtual":false,"visibility":"internal"},{"body":{"id":1528,"nodeType":"Block","src":"4140:75:8","statements":[{"expression":{"arguments":[{"id":1522,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"4170:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"}},{"id":1523,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"4177:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1524,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"4190:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1521,"name":"_hasEnoughAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"4150:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_IERC20Extented_$3940_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20Extented,address,uint256) view"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4150:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1526,"nodeType":"ExpressionStatement","src":"4150:47:8"},{"id":1527,"nodeType":"PlaceholderStatement","src":"4207:1:8"}]},"id":1529,"name":"hasEnoughAllowance","nameLocation":"4062:18:8","nodeType":"ModifierDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1515,"mutability":"mutable","name":"token","nameLocation":"4096:5:8","nodeType":"VariableDeclaration","scope":1529,"src":"4081:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"},"typeName":{"id":1514,"nodeType":"UserDefinedTypeName","pathNode":{"id":1513,"name":"IERC20Extented","nameLocations":["4081:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":3940,"src":"4081:14:8"},"referencedDeclaration":3940,"src":"4081:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"}},"visibility":"internal"},{"constant":false,"id":1517,"mutability":"mutable","name":"userAddress","nameLocation":"4111:11:8","nodeType":"VariableDeclaration","scope":1529,"src":"4103:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"4103:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1519,"mutability":"mutable","name":"amount","nameLocation":"4132:6:8","nodeType":"VariableDeclaration","scope":1529,"src":"4124:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1518,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4080:59:8"},"src":"4053:162:8","virtual":false,"visibility":"internal"},{"body":{"id":1742,"nodeType":"Block","src":"4316:1816:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1540,"name":"vestingAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"4329:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_storage","typeString":"struct IDappadVesting.VestingAddresses storage ref"}},"id":1541,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4346:19:8","memberName":"saleContractAddress","nodeType":"MemberAccess","referencedDeclaration":4283,"src":"4329:36:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4377:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4369:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1542,"name":"address","nodeType":"ElementaryTypeName","src":"4369:7:8","typeDescriptions":{}}},"id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4369:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4329:50:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1589,"nodeType":"Block","src":"4671:99:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1577,"name":"investmentAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"4689:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1580,"indexExpression":{"expression":{"id":1578,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4707:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4711:6:8","memberName":"sender","nodeType":"MemberAccess","src":"4707:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4689:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4722:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4689:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1588,"nodeType":"IfStatement","src":"4685:74:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1583,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"4732:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4739:18:8","memberName":"NotJoinedSaleError","nodeType":"MemberAccess","referencedDeclaration":3857,"src":"4732:25:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4732:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1587,"nodeType":"RevertStatement","src":"4725:34:8"}}]},"id":1590,"nodeType":"IfStatement","src":"4326:444:8","trueBody":{"id":1576,"nodeType":"Block","src":"4381:284:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1549,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4436:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4440:6:8","memberName":"sender","nodeType":"MemberAccess","src":"4436:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1547,"name":"saleContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"4399:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadSale_$4250","typeString":"contract IDappadSale"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4412:23:8","memberName":"getUserInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4227,"src":"4399:36:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4451:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4399:53:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1559,"nodeType":"IfStatement","src":"4395:93:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1554,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"4461:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4468:18:8","memberName":"NotJoinedSaleError","nodeType":"MemberAccess","referencedDeclaration":3857,"src":"4461:25:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4461:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1558,"nodeType":"RevertStatement","src":"4454:34:8"}},{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1560,"name":"saleContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"4507:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadSale_$4250","typeString":"contract IDappadSale"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4520:16:8","memberName":"getRefundEnabled","nodeType":"MemberAccess","referencedDeclaration":4237,"src":"4507:29:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bool_$","typeString":"function () view external returns (bool)"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4507:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1575,"nodeType":"IfStatement","src":"4503:152:8","trueBody":{"id":1574,"nodeType":"Block","src":"4540:115:8","statements":[{"condition":{"arguments":[{"expression":{"id":1565,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4591:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4595:6:8","memberName":"sender","nodeType":"MemberAccess","src":"4591:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1563,"name":"saleContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"4562:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadSale_$4250","typeString":"contract IDappadSale"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4575:15:8","memberName":"getUserRefunded","nodeType":"MemberAccess","referencedDeclaration":4244,"src":"4562:28:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4562:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1573,"nodeType":"IfStatement","src":"4558:82:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1568,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"4611:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4618:20:8","memberName":"AlreadyRefundedError","nodeType":"MemberAccess","referencedDeclaration":3897,"src":"4611:27:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4611:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1572,"nodeType":"RevertStatement","src":"4604:36:8"}}]}}]}},{"condition":{"baseExpression":{"baseExpression":{"id":1591,"name":"vestingClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"4784:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":1594,"indexExpression":{"expression":{"id":1592,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4799:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4803:6:8","memberName":"sender","nodeType":"MemberAccess","src":"4799:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4784:26:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":1596,"indexExpression":{"id":1595,"name":"vestingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"4811:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4784:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1602,"nodeType":"IfStatement","src":"4780:81:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1597,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"4833:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4840:19:8","memberName":"AlreadyClaimedError","nodeType":"MemberAccess","referencedDeclaration":3899,"src":"4833:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4833:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1601,"nodeType":"RevertStatement","src":"4826:35:8"}},{"assignments":[1607],"declarations":[{"constant":false,"id":1607,"mutability":"mutable","name":"currentVesting","nameLocation":"4902:14:8","nodeType":"VariableDeclaration","scope":1742,"src":"4872:44:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting"},"typeName":{"id":1606,"nodeType":"UserDefinedTypeName","pathNode":{"id":1605,"name":"IDappadVesting.Vesting","nameLocations":["4872:14:8","4887:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":4277,"src":"4872:22:8"},"referencedDeclaration":4277,"src":"4872:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage_ptr","typeString":"struct IDappadVesting.Vesting"}},"visibility":"internal"}],"id":1609,"initialValue":{"id":1608,"name":"defaultVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"4919:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4872:61:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1610,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"4948:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":1613,"indexExpression":{"expression":{"id":1611,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4963:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4967:6:8","memberName":"sender","nodeType":"MemberAccess","src":"4963:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4948:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"id":1614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4975:12:8","memberName":"vestingCount","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"4948:39:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4990:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4948:43:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1625,"nodeType":"IfStatement","src":"4944:117:8","trueBody":{"id":1624,"nodeType":"Block","src":"4993:68:8","statements":[{"expression":{"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1617,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"5007:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1618,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"5024:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":1621,"indexExpression":{"expression":{"id":1619,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5039:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5043:6:8","memberName":"sender","nodeType":"MemberAccess","src":"5039:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5024:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"src":"5007:43:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":1623,"nodeType":"ExpressionStatement","src":"5007:43:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1626,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5075:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5081:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"5075:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1628,"name":"vestingSettings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5094:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingSettings_$4265_storage","typeString":"struct IDappadVesting.VestingSettings storage ref"}},"id":1629,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5110:9:8","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":4262,"src":"5094:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5075:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1636,"nodeType":"IfStatement","src":"5071:91:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1631,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"5128:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5135:25:8","memberName":"VestingsNotClaimableError","nodeType":"MemberAccess","referencedDeclaration":3873,"src":"5128:32:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5128:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1635,"nodeType":"RevertStatement","src":"5121:41:8"}},{"assignments":[1638],"declarations":[{"constant":false,"id":1638,"mutability":"mutable","name":"claimable","nameLocation":"5186:9:8","nodeType":"VariableDeclaration","scope":1742,"src":"5181:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1637,"name":"bool","nodeType":"ElementaryTypeName","src":"5181:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1644,"initialValue":{"arguments":[{"expression":{"id":1640,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5218:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5222:6:8","memberName":"sender","nodeType":"MemberAccess","src":"5218:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1642,"name":"vestingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"5230:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1639,"name":"getVestingClaimable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"5198:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5198:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"5181:62:8"},{"condition":{"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5257:10:8","subExpression":{"id":1645,"name":"claimable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"5258:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1652,"nodeType":"IfStatement","src":"5253:56:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1647,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"5276:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5283:24:8","memberName":"VestingNotClaimableError","nodeType":"MemberAccess","referencedDeclaration":3901,"src":"5276:31:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1651,"nodeType":"RevertStatement","src":"5269:40:8"}},{"expression":{"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1653,"name":"vestingClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"5320:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":1657,"indexExpression":{"expression":{"id":1654,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5335:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5339:6:8","memberName":"sender","nodeType":"MemberAccess","src":"5335:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5320:26:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":1658,"indexExpression":{"id":1656,"name":"vestingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"5347:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5320:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5363:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5320:47:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1661,"nodeType":"ExpressionStatement","src":"5320:47:8"},{"assignments":[1663],"declarations":[{"constant":false,"id":1663,"mutability":"mutable","name":"saleTokenAmount","nameLocation":"5386:15:8","nodeType":"VariableDeclaration","scope":1742,"src":"5378:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1662,"name":"uint256","nodeType":"ElementaryTypeName","src":"5378:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1668,"initialValue":{"arguments":[{"expression":{"id":1665,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5430:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5434:6:8","memberName":"sender","nodeType":"MemberAccess","src":"5430:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1664,"name":"getUserTotalVestingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"5404:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:8"},{"assignments":[1670],"declarations":[{"constant":false,"id":1670,"mutability":"mutable","name":"claimAmount","nameLocation":"5459:11:8","nodeType":"VariableDeclaration","scope":1742,"src":"5451:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"5451:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1680,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1671,"name":"saleTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"5474:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"baseExpression":{"expression":{"id":1672,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"5492:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":1673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5507:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"5492:33:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1675,"indexExpression":{"id":1674,"name":"vestingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"5526:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5492:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5474:65:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1677,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5473:67:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5543:5:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"5473:75:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5451:97:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1681,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"5562:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5577:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5562:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1689,"nodeType":"IfStatement","src":"5559:61:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1684,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"5587:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5594:24:8","memberName":"VestingNotClaimableError","nodeType":"MemberAccess","referencedDeclaration":3901,"src":"5587:31:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5587:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1688,"nodeType":"RevertStatement","src":"5580:40:8"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1694,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5663:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_DappadVesting_$3487","typeString":"contract DappadVesting"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DappadVesting_$3487","typeString":"contract DappadVesting"}],"id":1693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5655:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1692,"name":"address","nodeType":"ElementaryTypeName","src":"5655:7:8","typeDescriptions":{}}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5655:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1690,"name":"saleToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"5635:9:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5645:9:8","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":413,"src":"5635:19:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5635:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1697,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"5672:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5635:48:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1704,"nodeType":"IfStatement","src":"5631:102:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1699,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"5692:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5699:32:8","memberName":"InsufficientContractBalanceError","nodeType":"MemberAccess","referencedDeclaration":3795,"src":"5692:39:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5692:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1703,"nodeType":"RevertStatement","src":"5685:48:8"}},{"expression":{"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1705,"name":"vestingStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"5744:17:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingStatistics_$4293_storage","typeString":"struct IDappadVesting.VestingStatistics storage ref"}},"id":1707,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5762:18:8","memberName":"totalVestingAmount","nodeType":"MemberAccess","referencedDeclaration":4290,"src":"5744:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1708,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"5784:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5744:51:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1710,"nodeType":"ExpressionStatement","src":"5744:51:8"},{"eventCall":{"arguments":[{"expression":{"id":1712,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5830:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5834:6:8","memberName":"sender","nodeType":"MemberAccess","src":"5830:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1714,"name":"vestingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"5842:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1715,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"5856:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1716,"name":"saleTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"5869:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1717,"name":"vestingStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"5886:17:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingStatistics_$4293_storage","typeString":"struct IDappadVesting.VestingStatistics storage ref"}},"id":1718,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5904:18:8","memberName":"totalVestingAmount","nodeType":"MemberAccess","referencedDeclaration":4290,"src":"5886:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1719,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5924:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5930:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"5924:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1711,"name":"UserClaimedVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"5811:18:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256,uint256,uint256)"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5811:129:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1722,"nodeType":"EmitStatement","src":"5806:134:8"},{"assignments":[1724],"declarations":[{"constant":false,"id":1724,"mutability":"mutable","name":"successfullyTransfered","nameLocation":"5956:22:8","nodeType":"VariableDeclaration","scope":1742,"src":"5951:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1723,"name":"bool","nodeType":"ElementaryTypeName","src":"5951:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1731,"initialValue":{"arguments":[{"expression":{"id":1727,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6000:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6004:6:8","memberName":"sender","nodeType":"MemberAccess","src":"6000:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1729,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"6012:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1725,"name":"saleToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"5981:9:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5991:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":423,"src":"5981:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5981:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"5951:73:8"},{"condition":{"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6038:23:8","subExpression":{"id":1732,"name":"successfullyTransfered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"6039:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1739,"nodeType":"IfStatement","src":"6034:69:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1734,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"6070:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6077:24:8","memberName":"TokenTransferFailedError","nodeType":"MemberAccess","referencedDeclaration":3787,"src":"6070:31:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6070:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1738,"nodeType":"RevertStatement","src":"6063:40:8"}},{"expression":{"hexValue":"74727565","id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6121:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1539,"id":1741,"nodeType":"Return","src":"6114:11:8"}]},"functionSelector":"ac97b417","id":1743,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":1534,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4289:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4293:6:8","memberName":"sender","nodeType":"MemberAccess","src":"4289:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1536,"kind":"modifierInvocation","modifierName":{"id":1533,"name":"notZeroAddress","nameLocations":["4274:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1492,"src":"4274:14:8"},"nodeType":"ModifierInvocation","src":"4274:26:8"}],"name":"claimVesting","nameLocation":"4230:12:8","nodeType":"FunctionDefinition","parameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1531,"mutability":"mutable","name":"vestingIndex","nameLocation":"4251:12:8","nodeType":"VariableDeclaration","scope":1743,"src":"4243:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"4243:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4242:22:8"},"returnParameters":{"id":1539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1743,"src":"4310:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1537,"name":"bool","nodeType":"ElementaryTypeName","src":"4310:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4309:6:8"},"scope":3487,"src":"4221:1911:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1953,"nodeType":"Block","src":"6225:1782:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1752,"name":"vestingAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"6238:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_storage","typeString":"struct IDappadVesting.VestingAddresses storage ref"}},"id":1753,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6255:19:8","memberName":"saleContractAddress","nodeType":"MemberAccess","referencedDeclaration":4283,"src":"6238:36:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6286:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6278:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1754,"name":"address","nodeType":"ElementaryTypeName","src":"6278:7:8","typeDescriptions":{}}},"id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6278:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6238:50:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1801,"nodeType":"Block","src":"6580:99:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1789,"name":"investmentAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"6598:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1792,"indexExpression":{"expression":{"id":1790,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6616:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6620:6:8","memberName":"sender","nodeType":"MemberAccess","src":"6616:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6598:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6598:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1800,"nodeType":"IfStatement","src":"6594:74:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1795,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"6641:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6648:18:8","memberName":"NotJoinedSaleError","nodeType":"MemberAccess","referencedDeclaration":3857,"src":"6641:25:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6641:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1799,"nodeType":"RevertStatement","src":"6634:34:8"}}]},"id":1802,"nodeType":"IfStatement","src":"6235:444:8","trueBody":{"id":1788,"nodeType":"Block","src":"6290:284:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1761,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6345:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6349:6:8","memberName":"sender","nodeType":"MemberAccess","src":"6345:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1759,"name":"saleContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"6308:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadSale_$4250","typeString":"contract IDappadSale"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6321:23:8","memberName":"getUserInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4227,"src":"6308:36:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6308:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6360:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6308:53:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1771,"nodeType":"IfStatement","src":"6304:93:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1766,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"6370:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6377:18:8","memberName":"NotJoinedSaleError","nodeType":"MemberAccess","referencedDeclaration":3857,"src":"6370:25:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1770,"nodeType":"RevertStatement","src":"6363:34:8"}},{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1772,"name":"saleContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"6416:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadSale_$4250","typeString":"contract IDappadSale"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6429:16:8","memberName":"getRefundEnabled","nodeType":"MemberAccess","referencedDeclaration":4237,"src":"6416:29:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bool_$","typeString":"function () view external returns (bool)"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6416:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1787,"nodeType":"IfStatement","src":"6412:152:8","trueBody":{"id":1786,"nodeType":"Block","src":"6449:115:8","statements":[{"condition":{"arguments":[{"expression":{"id":1777,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6500:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6504:6:8","memberName":"sender","nodeType":"MemberAccess","src":"6500:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1775,"name":"saleContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"6471:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadSale_$4250","typeString":"contract IDappadSale"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6484:15:8","memberName":"getUserRefunded","nodeType":"MemberAccess","referencedDeclaration":4244,"src":"6471:28:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6471:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1785,"nodeType":"IfStatement","src":"6467:82:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1780,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"6520:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6527:20:8","memberName":"AlreadyRefundedError","nodeType":"MemberAccess","referencedDeclaration":3897,"src":"6520:27:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6520:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1784,"nodeType":"RevertStatement","src":"6513:36:8"}}]}}]}},{"assignments":[1804],"declarations":[{"constant":false,"id":1804,"mutability":"mutable","name":"saleTokenAmount","nameLocation":"6697:15:8","nodeType":"VariableDeclaration","scope":1953,"src":"6689:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1803,"name":"uint256","nodeType":"ElementaryTypeName","src":"6689:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1809,"initialValue":{"arguments":[{"expression":{"id":1806,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6741:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6745:6:8","memberName":"sender","nodeType":"MemberAccess","src":"6741:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1805,"name":"getUserTotalVestingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"6715:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6715:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6689:63:8"},{"assignments":[1811],"declarations":[{"constant":false,"id":1811,"mutability":"mutable","name":"claimAmount","nameLocation":"6770:11:8","nodeType":"VariableDeclaration","scope":1953,"src":"6762:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1810,"name":"uint256","nodeType":"ElementaryTypeName","src":"6762:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1813,"initialValue":{"hexValue":"30","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6784:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6762:23:8"},{"assignments":[1818],"declarations":[{"constant":false,"id":1818,"mutability":"mutable","name":"currentVesting","nameLocation":"6826:14:8","nodeType":"VariableDeclaration","scope":1953,"src":"6796:44:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting"},"typeName":{"id":1817,"nodeType":"UserDefinedTypeName","pathNode":{"id":1816,"name":"IDappadVesting.Vesting","nameLocations":["6796:14:8","6811:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":4277,"src":"6796:22:8"},"referencedDeclaration":4277,"src":"6796:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage_ptr","typeString":"struct IDappadVesting.Vesting"}},"visibility":"internal"}],"id":1820,"initialValue":{"id":1819,"name":"defaultVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"6843:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6796:61:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1821,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"6872:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":1824,"indexExpression":{"expression":{"id":1822,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6887:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6891:6:8","memberName":"sender","nodeType":"MemberAccess","src":"6887:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6872:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"id":1825,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6899:12:8","memberName":"vestingCount","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"6872:39:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6914:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6872:43:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1836,"nodeType":"IfStatement","src":"6868:117:8","trueBody":{"id":1835,"nodeType":"Block","src":"6917:68:8","statements":[{"expression":{"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1828,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"6931:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1829,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"6948:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":1832,"indexExpression":{"expression":{"id":1830,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6963:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6967:6:8","memberName":"sender","nodeType":"MemberAccess","src":"6963:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6948:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"src":"6931:43:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":1834,"nodeType":"ExpressionStatement","src":"6931:43:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1837,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6999:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7005:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"6999:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1839,"name":"vestingSettings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"7018:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingSettings_$4265_storage","typeString":"struct IDappadVesting.VestingSettings storage ref"}},"id":1840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7034:9:8","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":4262,"src":"7018:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6999:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1847,"nodeType":"IfStatement","src":"6995:91:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1842,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"7052:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7059:25:8","memberName":"VestingsNotClaimableError","nodeType":"MemberAccess","referencedDeclaration":3873,"src":"7052:32:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7052:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1846,"nodeType":"RevertStatement","src":"7045:41:8"}},{"body":{"id":1891,"nodeType":"Block","src":"7155:270:8","statements":[{"assignments":[1860],"declarations":[{"constant":false,"id":1860,"mutability":"mutable","name":"claimable","nameLocation":"7174:9:8","nodeType":"VariableDeclaration","scope":1891,"src":"7169:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1859,"name":"bool","nodeType":"ElementaryTypeName","src":"7169:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1866,"initialValue":{"arguments":[{"expression":{"id":1862,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7206:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7210:6:8","memberName":"sender","nodeType":"MemberAccess","src":"7206:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1864,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"7218:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1861,"name":"getVestingClaimable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"7186:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7186:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"7169:51:8"},{"condition":{"id":1867,"name":"claimable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"7238:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1890,"nodeType":"IfStatement","src":"7234:181:8","trueBody":{"id":1889,"nodeType":"Block","src":"7249:166:8","statements":[{"expression":{"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1868,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"7267:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1869,"name":"saleTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"7283:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"baseExpression":{"expression":{"id":1870,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"7301:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":1871,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7316:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"7301:33:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1873,"indexExpression":{"id":1872,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"7335:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7301:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7283:54:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1875,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7282:56:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7341:5:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"7282:64:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7267:79:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1879,"nodeType":"ExpressionStatement","src":"7267:79:8"},{"expression":{"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1880,"name":"vestingClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"7364:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":1884,"indexExpression":{"expression":{"id":1881,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7379:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7383:6:8","memberName":"sender","nodeType":"MemberAccess","src":"7379:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7364:26:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":1885,"indexExpression":{"id":1883,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"7391:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7364:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7396:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7364:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1888,"nodeType":"ExpressionStatement","src":"7364:36:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1852,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"7117:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1853,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"7121:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":1854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7136:12:8","memberName":"vestingCount","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"7121:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7117:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1892,"initializationExpression":{"assignments":[1849],"declarations":[{"constant":false,"id":1849,"mutability":"mutable","name":"i","nameLocation":"7110:1:8","nodeType":"VariableDeclaration","scope":1892,"src":"7102:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1848,"name":"uint256","nodeType":"ElementaryTypeName","src":"7102:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1851,"initialValue":{"hexValue":"30","id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7114:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7102:13:8"},"loopExpression":{"expression":{"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7150:3:8","subExpression":{"id":1856,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"7150:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1858,"nodeType":"ExpressionStatement","src":"7150:3:8"},"nodeType":"ForStatement","src":"7097:328:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1893,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"7438:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7453:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7438:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1901,"nodeType":"IfStatement","src":"7435:62:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1896,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"7463:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7470:25:8","memberName":"VestingsNotClaimableError","nodeType":"MemberAccess","referencedDeclaration":3873,"src":"7463:32:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7463:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1900,"nodeType":"RevertStatement","src":"7456:41:8"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1906,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7540:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_DappadVesting_$3487","typeString":"contract DappadVesting"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DappadVesting_$3487","typeString":"contract DappadVesting"}],"id":1905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7532:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1904,"name":"address","nodeType":"ElementaryTypeName","src":"7532:7:8","typeDescriptions":{}}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7532:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1902,"name":"saleToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"7512:9:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7522:9:8","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":413,"src":"7512:19:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7512:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1909,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"7549:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7512:48:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1916,"nodeType":"IfStatement","src":"7508:102:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1911,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"7569:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7576:32:8","memberName":"InsufficientContractBalanceError","nodeType":"MemberAccess","referencedDeclaration":3795,"src":"7569:39:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7569:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1915,"nodeType":"RevertStatement","src":"7562:48:8"}},{"expression":{"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1917,"name":"vestingStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"7621:17:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingStatistics_$4293_storage","typeString":"struct IDappadVesting.VestingStatistics storage ref"}},"id":1919,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7639:18:8","memberName":"totalVestingAmount","nodeType":"MemberAccess","referencedDeclaration":4290,"src":"7621:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1920,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"7661:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7621:51:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1922,"nodeType":"ExpressionStatement","src":"7621:51:8"},{"eventCall":{"arguments":[{"expression":{"id":1924,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7719:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7723:6:8","memberName":"sender","nodeType":"MemberAccess","src":"7719:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1926,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"7731:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1927,"name":"saleTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"7744:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1928,"name":"vestingStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"7761:17:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingStatistics_$4293_storage","typeString":"struct IDappadVesting.VestingStatistics storage ref"}},"id":1929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7779:18:8","memberName":"totalVestingAmount","nodeType":"MemberAccess","referencedDeclaration":4290,"src":"7761:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1930,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7799:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7805:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"7799:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1923,"name":"UserClaimedAllUnlockedVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"7688:30:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256,uint256)"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7688:127:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1933,"nodeType":"EmitStatement","src":"7683:132:8"},{"assignments":[1935],"declarations":[{"constant":false,"id":1935,"mutability":"mutable","name":"successfullyTransfered","nameLocation":"7831:22:8","nodeType":"VariableDeclaration","scope":1953,"src":"7826:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1934,"name":"bool","nodeType":"ElementaryTypeName","src":"7826:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1942,"initialValue":{"arguments":[{"expression":{"id":1938,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7875:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7879:6:8","memberName":"sender","nodeType":"MemberAccess","src":"7875:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1940,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"7887:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1936,"name":"saleToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"7856:9:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7866:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":423,"src":"7856:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"7826:73:8"},{"condition":{"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7913:23:8","subExpression":{"id":1943,"name":"successfullyTransfered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"7914:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1950,"nodeType":"IfStatement","src":"7909:69:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1945,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"7945:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7952:24:8","memberName":"TokenTransferFailedError","nodeType":"MemberAccess","referencedDeclaration":3787,"src":"7945:31:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7945:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1949,"nodeType":"RevertStatement","src":"7938:40:8"}},{"expression":{"hexValue":"74727565","id":1951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7996:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1751,"id":1952,"nodeType":"Return","src":"7989:11:8"}]},"functionSelector":"ed6e45c8","id":1954,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":1746,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6198:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6202:6:8","memberName":"sender","nodeType":"MemberAccess","src":"6198:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1748,"kind":"modifierInvocation","modifierName":{"id":1745,"name":"notZeroAddress","nameLocations":["6183:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1492,"src":"6183:14:8"},"nodeType":"ModifierInvocation","src":"6183:26:8"}],"name":"claimAllUnlockedVestings","nameLocation":"6147:24:8","nodeType":"FunctionDefinition","parameters":{"id":1744,"nodeType":"ParameterList","parameters":[],"src":"6171:2:8"},"returnParameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1954,"src":"6219:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1749,"name":"bool","nodeType":"ElementaryTypeName","src":"6219:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6218:6:8"},"scope":3487,"src":"6138:1869:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2003,"nodeType":"Block","src":"8118:286:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1971,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8159:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_DappadVesting_$3487","typeString":"contract DappadVesting"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DappadVesting_$3487","typeString":"contract DappadVesting"}],"id":1970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8151:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1969,"name":"address","nodeType":"ElementaryTypeName","src":"8151:7:8","typeDescriptions":{}}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8151:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1967,"name":"saleToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"8131:9:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8141:9:8","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":413,"src":"8131:19:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8131:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8168:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8131:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2000,"nodeType":"IfStatement","src":"8128:247:8","trueBody":{"id":1999,"nodeType":"Block","src":"8171:204:8","statements":[{"assignments":[1977],"declarations":[{"constant":false,"id":1977,"mutability":"mutable","name":"successfullyTransfered","nameLocation":"8190:22:8","nodeType":"VariableDeclaration","scope":1999,"src":"8185:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1976,"name":"bool","nodeType":"ElementaryTypeName","src":"8185:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1990,"initialValue":{"arguments":[{"expression":{"id":1980,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8234:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8238:6:8","memberName":"sender","nodeType":"MemberAccess","src":"8234:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":1986,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8274:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_DappadVesting_$3487","typeString":"contract DappadVesting"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DappadVesting_$3487","typeString":"contract DappadVesting"}],"id":1985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8266:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1984,"name":"address","nodeType":"ElementaryTypeName","src":"8266:7:8","typeDescriptions":{}}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8266:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1982,"name":"saleToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"8246:9:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8256:9:8","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":413,"src":"8246:19:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8246:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1978,"name":"saleToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"8215:9:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8225:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":423,"src":"8215:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8215:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"8185:96:8"},{"condition":{"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8299:23:8","subExpression":{"id":1991,"name":"successfullyTransfered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"8300:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1998,"nodeType":"IfStatement","src":"8295:69:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1993,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"8331:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8338:24:8","memberName":"TokenTransferFailedError","nodeType":"MemberAccess","referencedDeclaration":3787,"src":"8331:31:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8331:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1997,"nodeType":"RevertStatement","src":"8324:40:8"}}]}},{"expression":{"hexValue":"74727565","id":2001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8393:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1966,"id":2002,"nodeType":"Return","src":"8386:11:8"}]},"functionSelector":"9a68404d","id":2004,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":1957,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8062:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8066:6:8","memberName":"sender","nodeType":"MemberAccess","src":"8062:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1959,"kind":"modifierInvocation","modifierName":{"id":1956,"name":"notZeroAddress","nameLocations":["8047:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1492,"src":"8047:14:8"},"nodeType":"ModifierInvocation","src":"8047:26:8"},{"arguments":[{"expression":{"id":1961,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8091:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8095:6:8","memberName":"sender","nodeType":"MemberAccess","src":"8091:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1963,"kind":"modifierInvocation","modifierName":{"id":1960,"name":"onlyOwnerOrAdmin","nameLocations":["8074:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1512,"src":"8074:16:8"},"nodeType":"ModifierInvocation","src":"8074:28:8"}],"name":"emergencyOnly","nameLocation":"8022:13:8","nodeType":"FunctionDefinition","parameters":{"id":1955,"nodeType":"ParameterList","parameters":[],"src":"8035:2:8"},"returnParameters":{"id":1966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2004,"src":"8112:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1964,"name":"bool","nodeType":"ElementaryTypeName","src":"8112:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8111:6:8"},"scope":3487,"src":"8013:391:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2071,"nodeType":"Block","src":"8551:451:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2023,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8585:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8589:6:8","memberName":"sender","nodeType":"MemberAccess","src":"8585:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2021,"name":"saleToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"8565:9:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8575:9:8","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":413,"src":"8565:19:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8565:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2026,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"8599:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8565:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2033,"nodeType":"IfStatement","src":"8561:86:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2028,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"8614:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8621:24:8","memberName":"InsufficientBalanceError","nodeType":"MemberAccess","referencedDeclaration":3793,"src":"8614:31:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2032,"nodeType":"RevertStatement","src":"8607:40:8"}},{"expression":{"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2034,"name":"vestingStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"8658:17:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingStatistics_$4293_storage","typeString":"struct IDappadVesting.VestingStatistics storage ref"}},"id":2036,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8676:20:8","memberName":"totalSaleTokenAmount","nodeType":"MemberAccess","referencedDeclaration":4292,"src":"8658:38:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2037,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"8700:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8658:48:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2039,"nodeType":"ExpressionStatement","src":"8658:48:8"},{"eventCall":{"arguments":[{"expression":{"id":2041,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8737:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8741:6:8","memberName":"sender","nodeType":"MemberAccess","src":"8737:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2043,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"8749:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2044,"name":"vestingStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"8757:17:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingStatistics_$4293_storage","typeString":"struct IDappadVesting.VestingStatistics storage ref"}},"id":2045,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8775:20:8","memberName":"totalSaleTokenAmount","nodeType":"MemberAccess","referencedDeclaration":4292,"src":"8757:38:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2040,"name":"SaleTokenAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"8722:14:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8722:74:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2047,"nodeType":"EmitStatement","src":"8717:79:8"},{"assignments":[2049],"declarations":[{"constant":false,"id":2049,"mutability":"mutable","name":"successfullyTransfered","nameLocation":"8812:22:8","nodeType":"VariableDeclaration","scope":2071,"src":"8807:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2048,"name":"bool","nodeType":"ElementaryTypeName","src":"8807:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2060,"initialValue":{"arguments":[{"expression":{"id":2052,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8860:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8864:6:8","memberName":"sender","nodeType":"MemberAccess","src":"8860:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2056,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8880:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_DappadVesting_$3487","typeString":"contract DappadVesting"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DappadVesting_$3487","typeString":"contract DappadVesting"}],"id":2055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8872:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2054,"name":"address","nodeType":"ElementaryTypeName","src":"8872:7:8","typeDescriptions":{}}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8872:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2058,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"8887:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2050,"name":"saleToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"8837:9:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8847:12:8","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":455,"src":"8837:22:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8837:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"8807:87:8"},{"condition":{"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8908:23:8","subExpression":{"id":2061,"name":"successfullyTransfered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"8909:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2068,"nodeType":"IfStatement","src":"8904:69:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2063,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"8940:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8947:24:8","memberName":"TokenTransferFailedError","nodeType":"MemberAccess","referencedDeclaration":3787,"src":"8940:31:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8940:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2067,"nodeType":"RevertStatement","src":"8933:40:8"}},{"expression":{"hexValue":"74727565","id":2069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8991:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2020,"id":2070,"nodeType":"Return","src":"8984:11:8"}]},"functionSelector":"9903a4c1","id":2072,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":2009,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8474:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8478:6:8","memberName":"sender","nodeType":"MemberAccess","src":"8474:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2011,"kind":"modifierInvocation","modifierName":{"id":2008,"name":"onlyOwnerOrAdmin","nameLocations":["8457:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1512,"src":"8457:16:8"},"nodeType":"ModifierInvocation","src":"8457:28:8"},{"arguments":[{"id":2013,"name":"saleToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"8505:9:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"}},{"expression":{"id":2014,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8516:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8520:6:8","memberName":"sender","nodeType":"MemberAccess","src":"8516:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2016,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"8528:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2017,"kind":"modifierInvocation","modifierName":{"id":2012,"name":"hasEnoughAllowance","nameLocations":["8486:18:8"],"nodeType":"IdentifierPath","referencedDeclaration":1529,"src":"8486:18:8"},"nodeType":"ModifierInvocation","src":"8486:49:8"}],"name":"addSaleToken","nameLocation":"8419:12:8","nodeType":"FunctionDefinition","parameters":{"id":2007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2006,"mutability":"mutable","name":"amount","nameLocation":"8440:6:8","nodeType":"VariableDeclaration","scope":2072,"src":"8432:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2005,"name":"uint256","nodeType":"ElementaryTypeName","src":"8432:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8431:16:8"},"returnParameters":{"id":2020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2072,"src":"8545:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2018,"name":"bool","nodeType":"ElementaryTypeName","src":"8545:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8544:6:8"},"scope":3487,"src":"8410:592:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2107,"nodeType":"Block","src":"9131:204:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2085,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"9145:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9155:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9145:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2093,"nodeType":"IfStatement","src":"9141:51:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2088,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"9165:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9172:18:8","memberName":"InvalidAmountError","nodeType":"MemberAccess","referencedDeclaration":3813,"src":"9165:25:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9165:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2092,"nodeType":"RevertStatement","src":"9158:34:8"}},{"expression":{"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2094,"name":"investmentAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"9203:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2096,"indexExpression":{"id":2095,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"9221:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9203:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2097,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"9236:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9203:39:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2099,"nodeType":"ExpressionStatement","src":"9203:39:8"},{"eventCall":{"arguments":[{"id":2101,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"9286:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2102,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"9299:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2100,"name":"UserInvestmentAmountUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"9258:27:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9258:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2104,"nodeType":"EmitStatement","src":"9253:53:8"},{"expression":{"hexValue":"74727565","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9324:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2084,"id":2106,"nodeType":"Return","src":"9317:11:8"}]},"functionSelector":"50ef5d4a","id":2108,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":2079,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9104:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9108:6:8","memberName":"sender","nodeType":"MemberAccess","src":"9104:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2081,"kind":"modifierInvocation","modifierName":{"id":2078,"name":"onlyOwnerOrAdmin","nameLocations":["9087:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1512,"src":"9087:16:8"},"nodeType":"ModifierInvocation","src":"9087:28:8"}],"name":"setUserInvestmentAmount","nameLocation":"9017:23:8","nodeType":"FunctionDefinition","parameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2074,"mutability":"mutable","name":"userAddress","nameLocation":"9049:11:8","nodeType":"VariableDeclaration","scope":2108,"src":"9041:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2073,"name":"address","nodeType":"ElementaryTypeName","src":"9041:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2076,"mutability":"mutable","name":"amount","nameLocation":"9070:6:8","nodeType":"VariableDeclaration","scope":2108,"src":"9062:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2075,"name":"uint256","nodeType":"ElementaryTypeName","src":"9062:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9040:37:8"},"returnParameters":{"id":2084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2108,"src":"9125:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2082,"name":"bool","nodeType":"ElementaryTypeName","src":"9125:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9124:6:8"},"scope":3487,"src":"9008:327:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2189,"nodeType":"Block","src":"9490:478:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2123,"name":"userAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"9504:13:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9518:6:8","memberName":"length","nodeType":"MemberAccess","src":"9504:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2125,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"9528:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9536:6:8","memberName":"length","nodeType":"MemberAccess","src":"9528:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9504:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2133,"nodeType":"IfStatement","src":"9500:85:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2128,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"9551:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9558:25:8","memberName":"ArraysLengthMismatchError","nodeType":"MemberAccess","referencedDeclaration":3789,"src":"9551:32:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9551:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2132,"nodeType":"RevertStatement","src":"9544:41:8"}},{"body":{"id":2180,"nodeType":"Block","src":"9647:225:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2145,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"9665:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2147,"indexExpression":{"id":2146,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"9673:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9665:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9679:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9665:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2155,"nodeType":"IfStatement","src":"9661:55:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2150,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"9689:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9696:18:8","memberName":"InvalidAmountError","nodeType":"MemberAccess","referencedDeclaration":3813,"src":"9689:25:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9689:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2154,"nodeType":"RevertStatement","src":"9682:34:8"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2156,"name":"userAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"9734:13:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2158,"indexExpression":{"id":2157,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"9748:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9734:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9762:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9754:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2159,"name":"address","nodeType":"ElementaryTypeName","src":"9754:7:8","typeDescriptions":{}}},"id":2162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9754:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9734:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2169,"nodeType":"IfStatement","src":"9730:68:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2164,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"9773:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9780:16:8","memberName":"ZeroAddressError","nodeType":"MemberAccess","referencedDeclaration":3783,"src":"9773:23:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9773:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2168,"nodeType":"RevertStatement","src":"9766:32:8"}},{"expression":{"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2170,"name":"investmentAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"9813:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2174,"indexExpression":{"baseExpression":{"id":2171,"name":"userAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"9831:13:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2173,"indexExpression":{"id":2172,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"9845:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9831:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9813:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2175,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"9851:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2177,"indexExpression":{"id":2176,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"9859:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9851:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9813:48:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2179,"nodeType":"ExpressionStatement","src":"9813:48:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2138,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"9616:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2139,"name":"userAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"9620:13:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9634:6:8","memberName":"length","nodeType":"MemberAccess","src":"9620:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9616:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2181,"initializationExpression":{"assignments":[2135],"declarations":[{"constant":false,"id":2135,"mutability":"mutable","name":"i","nameLocation":"9609:1:8","nodeType":"VariableDeclaration","scope":2181,"src":"9601:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2134,"name":"uint256","nodeType":"ElementaryTypeName","src":"9601:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2137,"initialValue":{"hexValue":"30","id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9613:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9601:13:8"},"loopExpression":{"expression":{"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9642:3:8","subExpression":{"id":2142,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"9642:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2144,"nodeType":"ExpressionStatement","src":"9642:3:8"},"nodeType":"ForStatement","src":"9596:276:8"},{"eventCall":{"arguments":[{"id":2183,"name":"userAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"9916:13:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},{"id":2184,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"9931:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}],"id":2182,"name":"UserInvestmentAmountsUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"9887:28:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address[] memory,uint256[] memory)"}},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9887:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2186,"nodeType":"EmitStatement","src":"9882:57:8"},{"expression":{"hexValue":"74727565","id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9957:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2122,"id":2188,"nodeType":"Return","src":"9950:11:8"}]},"functionSelector":"e49f6835","id":2190,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":2117,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9463:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9467:6:8","memberName":"sender","nodeType":"MemberAccess","src":"9463:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2119,"kind":"modifierInvocation","modifierName":{"id":2116,"name":"onlyOwnerOrAdmin","nameLocations":["9446:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1512,"src":"9446:16:8"},"nodeType":"ModifierInvocation","src":"9446:28:8"}],"name":"setUserInvestmentAmounts","nameLocation":"9350:24:8","nodeType":"FunctionDefinition","parameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2111,"mutability":"mutable","name":"userAddresses","nameLocation":"9394:13:8","nodeType":"VariableDeclaration","scope":2190,"src":"9375:32:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2109,"name":"address","nodeType":"ElementaryTypeName","src":"9375:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2110,"nodeType":"ArrayTypeName","src":"9375:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2114,"mutability":"mutable","name":"amounts","nameLocation":"9428:7:8","nodeType":"VariableDeclaration","scope":2190,"src":"9409:26:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2112,"name":"uint256","nodeType":"ElementaryTypeName","src":"9409:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2113,"nodeType":"ArrayTypeName","src":"9409:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"9374:62:8"},"returnParameters":{"id":2122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2190,"src":"9484:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2120,"name":"bool","nodeType":"ElementaryTypeName","src":"9484:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9483:6:8"},"scope":3487,"src":"9341:627:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2270,"nodeType":"Block","src":"10093:590:8","statements":[{"expression":{"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2202,"name":"defaultVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"10103:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2203,"name":"vesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"10120:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"src":"10103:24:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"id":2205,"nodeType":"ExpressionStatement","src":"10103:24:8"},{"assignments":[2207],"declarations":[{"constant":false,"id":2207,"mutability":"mutable","name":"totalVestingPercentage","nameLocation":"10146:22:8","nodeType":"VariableDeclaration","scope":2270,"src":"10138:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2206,"name":"uint256","nodeType":"ElementaryTypeName","src":"10138:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2209,"initialValue":{"hexValue":"30","id":2208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10138:34:8"},{"expression":{"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2210,"name":"defaultVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"10183:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"id":2212,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10198:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"10183:33:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"expression":{"id":2216,"name":"vesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"10233:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10241:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"10233:26:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10260:6:8","memberName":"length","nodeType":"MemberAccess","src":"10233:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10219:13:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2213,"name":"uint256","nodeType":"ElementaryTypeName","src":"10223:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2214,"nodeType":"ArrayTypeName","src":"10223:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10219:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"10183:84:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2221,"nodeType":"ExpressionStatement","src":"10183:84:8"},{"body":{"id":2251,"nodeType":"Block","src":"10328:162:8","statements":[{"expression":{"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2233,"name":"defaultVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"10342:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"id":2236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10357:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"10342:33:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2237,"indexExpression":{"id":2235,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"10376:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10342:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":2238,"name":"vesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"10381:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2239,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10389:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"10381:26:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2241,"indexExpression":{"id":2240,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"10408:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10381:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10342:68:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2243,"nodeType":"ExpressionStatement","src":"10342:68:8"},{"expression":{"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2244,"name":"totalVestingPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"10424:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"expression":{"id":2245,"name":"vesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"10450:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10458:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"10450:26:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2248,"indexExpression":{"id":2247,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"10477:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10450:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10424:55:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2250,"nodeType":"ExpressionStatement","src":"10424:55:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2226,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"10297:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2227,"name":"vesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"10301:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2228,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10309:12:8","memberName":"vestingCount","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"10301:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10297:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2252,"initializationExpression":{"assignments":[2223],"declarations":[{"constant":false,"id":2223,"mutability":"mutable","name":"i","nameLocation":"10290:1:8","nodeType":"VariableDeclaration","scope":2252,"src":"10282:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2222,"name":"uint256","nodeType":"ElementaryTypeName","src":"10282:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2225,"initialValue":{"hexValue":"30","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10294:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10282:13:8"},"loopExpression":{"expression":{"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10323:3:8","subExpression":{"id":2230,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"10323:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2232,"nodeType":"ExpressionStatement","src":"10323:3:8"},"nodeType":"ForStatement","src":"10277:213:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2253,"name":"totalVestingPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"10504:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3130303030","id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10530:5:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"10504:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2261,"nodeType":"IfStatement","src":"10500:80:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2256,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"10544:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10551:27:8","memberName":"TotalVestingPercentageError","nodeType":"MemberAccess","referencedDeclaration":3847,"src":"10544:34:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10544:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2260,"nodeType":"RevertStatement","src":"10537:43:8"}},{"eventCall":{"arguments":[{"id":2263,"name":"vesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"10618:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},{"expression":{"id":2264,"name":"vesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"10627:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2265,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10635:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"10627:26:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2262,"name":"DefaultVestingUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"10596:21:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$_Vesting_$4277_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (struct IDappadVesting.Vesting memory,uint256[] memory)"}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10596:58:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2267,"nodeType":"EmitStatement","src":"10591:63:8"},{"expression":{"hexValue":"74727565","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10672:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2201,"id":2269,"nodeType":"Return","src":"10665:11:8"}]},"functionSelector":"a37f9d25","id":2271,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":2196,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10066:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10070:6:8","memberName":"sender","nodeType":"MemberAccess","src":"10066:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2198,"kind":"modifierInvocation","modifierName":{"id":2195,"name":"onlyOwnerOrAdmin","nameLocations":["10049:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1512,"src":"10049:16:8"},"nodeType":"ModifierInvocation","src":"10049:28:8"}],"name":"setDefaultVesting","nameLocation":"9983:17:8","nodeType":"FunctionDefinition","parameters":{"id":2194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2193,"mutability":"mutable","name":"vesting","nameLocation":"10031:7:8","nodeType":"VariableDeclaration","scope":2271,"src":"10001:37:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting"},"typeName":{"id":2192,"nodeType":"UserDefinedTypeName","pathNode":{"id":2191,"name":"IDappadVesting.Vesting","nameLocations":["10001:14:8","10016:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":4277,"src":"10001:22:8"},"referencedDeclaration":4277,"src":"10001:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage_ptr","typeString":"struct IDappadVesting.Vesting"}},"visibility":"internal"}],"src":"10000:39:8"},"returnParameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2271,"src":"10087:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2199,"name":"bool","nodeType":"ElementaryTypeName","src":"10087:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10086:6:8"},"scope":3487,"src":"9974:709:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2358,"nodeType":"Block","src":"10828:641:8","statements":[{"expression":{"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2285,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"10838:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":2287,"indexExpression":{"id":2286,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"10853:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10838:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2288,"name":"vesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"10868:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"src":"10838:37:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"id":2290,"nodeType":"ExpressionStatement","src":"10838:37:8"},{"assignments":[2292],"declarations":[{"constant":false,"id":2292,"mutability":"mutable","name":"totalVestingPercentage","nameLocation":"10894:22:8","nodeType":"VariableDeclaration","scope":2358,"src":"10886:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2291,"name":"uint256","nodeType":"ElementaryTypeName","src":"10886:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2294,"initialValue":{"hexValue":"30","id":2293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10919:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10886:34:8"},{"expression":{"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2295,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"10931:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":2297,"indexExpression":{"id":2296,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"10946:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10931:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"id":2298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10959:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"10931:46:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"expression":{"id":2302,"name":"vesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"10994:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11002:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"10994:26:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11021:6:8","memberName":"length","nodeType":"MemberAccess","src":"10994:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10980:13:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2299,"name":"uint256","nodeType":"ElementaryTypeName","src":"10984:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2300,"nodeType":"ArrayTypeName","src":"10984:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10980:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"10931:97:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2307,"nodeType":"ExpressionStatement","src":"10931:97:8"},{"body":{"id":2338,"nodeType":"Block","src":"11089:175:8","statements":[{"expression":{"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":2319,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"11103:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":2321,"indexExpression":{"id":2320,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"11118:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11103:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"id":2322,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11131:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"11103:46:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2324,"indexExpression":{"id":2323,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"11150:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11103:49:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":2325,"name":"vesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"11155:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11163:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"11155:26:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2328,"indexExpression":{"id":2327,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"11182:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11155:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11103:81:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2330,"nodeType":"ExpressionStatement","src":"11103:81:8"},{"expression":{"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2331,"name":"totalVestingPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"11198:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"expression":{"id":2332,"name":"vesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"11224:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11232:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"11224:26:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2335,"indexExpression":{"id":2334,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"11251:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11224:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11198:55:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2337,"nodeType":"ExpressionStatement","src":"11198:55:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2312,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"11058:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2313,"name":"vesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"11062:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11070:12:8","memberName":"vestingCount","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"11062:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11058:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2339,"initializationExpression":{"assignments":[2309],"declarations":[{"constant":false,"id":2309,"mutability":"mutable","name":"i","nameLocation":"11051:1:8","nodeType":"VariableDeclaration","scope":2339,"src":"11043:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2308,"name":"uint256","nodeType":"ElementaryTypeName","src":"11043:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2311,"initialValue":{"hexValue":"30","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11055:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11043:13:8"},"loopExpression":{"expression":{"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11084:3:8","subExpression":{"id":2316,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"11084:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2318,"nodeType":"ExpressionStatement","src":"11084:3:8"},"nodeType":"ForStatement","src":"11038:226:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2340,"name":"totalVestingPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"11278:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3130303030","id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11304:5:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"11278:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2348,"nodeType":"IfStatement","src":"11274:80:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2343,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"11318:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11325:27:8","memberName":"TotalVestingPercentageError","nodeType":"MemberAccess","referencedDeclaration":3847,"src":"11318:34:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11318:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2347,"nodeType":"RevertStatement","src":"11311:43:8"}},{"eventCall":{"arguments":[{"id":2350,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"11391:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2351,"name":"vesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"11404:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},{"expression":{"id":2352,"name":"vesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"11413:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2353,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11421:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"11413:26:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2349,"name":"CustomVestingUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"11370:20:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_struct$_Vesting_$4277_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,struct IDappadVesting.Vesting memory,uint256[] memory)"}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11370:70:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2355,"nodeType":"EmitStatement","src":"11365:75:8"},{"expression":{"hexValue":"74727565","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11458:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2284,"id":2357,"nodeType":"Return","src":"11451:11:8"}]},"functionSelector":"cfa0ef64","id":2359,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":2279,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10801:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10805:6:8","memberName":"sender","nodeType":"MemberAccess","src":"10801:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2281,"kind":"modifierInvocation","modifierName":{"id":2278,"name":"onlyOwnerOrAdmin","nameLocations":["10784:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1512,"src":"10784:16:8"},"nodeType":"ModifierInvocation","src":"10784:28:8"}],"name":"setCustomVesting","nameLocation":"10698:16:8","nodeType":"FunctionDefinition","parameters":{"id":2277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"userAddress","nameLocation":"10723:11:8","nodeType":"VariableDeclaration","scope":2359,"src":"10715:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2272,"name":"address","nodeType":"ElementaryTypeName","src":"10715:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2276,"mutability":"mutable","name":"vesting","nameLocation":"10766:7:8","nodeType":"VariableDeclaration","scope":2359,"src":"10736:37:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting"},"typeName":{"id":2275,"nodeType":"UserDefinedTypeName","pathNode":{"id":2274,"name":"IDappadVesting.Vesting","nameLocations":["10736:14:8","10751:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":4277,"src":"10736:22:8"},"referencedDeclaration":4277,"src":"10736:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage_ptr","typeString":"struct IDappadVesting.Vesting"}},"visibility":"internal"}],"src":"10714:60:8"},"returnParameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2359,"src":"10822:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2282,"name":"bool","nodeType":"ElementaryTypeName","src":"10822:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10821:6:8"},"scope":3487,"src":"10689:780:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2508,"nodeType":"Block","src":"11633:980:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2375,"name":"userAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"11647:13:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11661:6:8","memberName":"length","nodeType":"MemberAccess","src":"11647:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2377,"name":"vestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"11671:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vesting_$4277_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDappadVesting.Vesting calldata[] calldata"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11680:6:8","memberName":"length","nodeType":"MemberAccess","src":"11671:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11647:39:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2385,"nodeType":"IfStatement","src":"11643:86:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2380,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"11695:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11702:25:8","memberName":"ArraysLengthMismatchError","nodeType":"MemberAccess","referencedDeclaration":3789,"src":"11695:32:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11695:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2384,"nodeType":"RevertStatement","src":"11688:41:8"}},{"body":{"id":2504,"nodeType":"Block","src":"11791:790:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2397,"name":"userAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"11809:13:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2399,"indexExpression":{"id":2398,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"11823:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11809:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11837:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11829:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2400,"name":"address","nodeType":"ElementaryTypeName","src":"11829:7:8","typeDescriptions":{}}},"id":2403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11829:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11809:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2410,"nodeType":"IfStatement","src":"11805:68:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2405,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"11848:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11855:16:8","memberName":"ZeroAddressError","nodeType":"MemberAccess","referencedDeclaration":3783,"src":"11848:23:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11848:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2409,"nodeType":"RevertStatement","src":"11841:32:8"}},{"expression":{"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2411,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"11888:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":2415,"indexExpression":{"baseExpression":{"id":2412,"name":"userAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"11903:13:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2414,"indexExpression":{"id":2413,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"11917:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11903:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11888:32:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2416,"name":"vestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"11923:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vesting_$4277_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDappadVesting.Vesting calldata[] calldata"}},"id":2418,"indexExpression":{"id":2417,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"11932:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11923:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_calldata_ptr","typeString":"struct IDappadVesting.Vesting calldata"}},"src":"11888:46:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"id":2420,"nodeType":"ExpressionStatement","src":"11888:46:8"},{"assignments":[2422],"declarations":[{"constant":false,"id":2422,"mutability":"mutable","name":"totalVestingPercentage","nameLocation":"11957:22:8","nodeType":"VariableDeclaration","scope":2504,"src":"11949:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2421,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2424,"initialValue":{"hexValue":"30","id":2423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11982:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11949:34:8"},{"expression":{"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2425,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"11998:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":2429,"indexExpression":{"baseExpression":{"id":2426,"name":"userAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"12013:13:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2428,"indexExpression":{"id":2427,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"12027:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12013:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11998:32:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"id":2430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12031:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"11998:51:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"expression":{"baseExpression":{"id":2434,"name":"vestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"12066:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vesting_$4277_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDappadVesting.Vesting calldata[] calldata"}},"id":2436,"indexExpression":{"id":2435,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"12075:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12066:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_calldata_ptr","typeString":"struct IDappadVesting.Vesting calldata"}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12078:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"12066:30:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12097:6:8","memberName":"length","nodeType":"MemberAccess","src":"12066:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12052:13:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2431,"name":"uint256","nodeType":"ElementaryTypeName","src":"12056:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2432,"nodeType":"ArrayTypeName","src":"12056:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12052:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"11998:106:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2441,"nodeType":"ExpressionStatement","src":"11998:106:8"},{"body":{"id":2480,"nodeType":"Block","src":"12173:200:8","statements":[{"expression":{"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":2455,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"12191:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":2459,"indexExpression":{"baseExpression":{"id":2456,"name":"userAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"12206:13:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2458,"indexExpression":{"id":2457,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"12220:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12206:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12191:32:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"id":2460,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12224:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"12191:51:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2462,"indexExpression":{"id":2461,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"12243:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12191:54:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":2463,"name":"vestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"12248:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vesting_$4277_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDappadVesting.Vesting calldata[] calldata"}},"id":2465,"indexExpression":{"id":2464,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"12257:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12248:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_calldata_ptr","typeString":"struct IDappadVesting.Vesting calldata"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12260:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"12248:30:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2468,"indexExpression":{"id":2467,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"12279:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12248:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12191:90:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2470,"nodeType":"ExpressionStatement","src":"12191:90:8"},{"expression":{"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2471,"name":"totalVestingPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"12299:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":2472,"name":"vestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"12325:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vesting_$4277_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDappadVesting.Vesting calldata[] calldata"}},"id":2474,"indexExpression":{"id":2473,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"12334:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12325:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_calldata_ptr","typeString":"struct IDappadVesting.Vesting calldata"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12337:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"12325:30:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2477,"indexExpression":{"id":2476,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"12356:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12325:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12299:59:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2479,"nodeType":"ExpressionStatement","src":"12299:59:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2446,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"12138:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":2447,"name":"vestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"12142:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vesting_$4277_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDappadVesting.Vesting calldata[] calldata"}},"id":2449,"indexExpression":{"id":2448,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"12151:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12142:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_calldata_ptr","typeString":"struct IDappadVesting.Vesting calldata"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12154:12:8","memberName":"vestingCount","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"12142:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12138:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2481,"initializationExpression":{"assignments":[2443],"declarations":[{"constant":false,"id":2443,"mutability":"mutable","name":"j","nameLocation":"12131:1:8","nodeType":"VariableDeclaration","scope":2481,"src":"12123:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2442,"name":"uint256","nodeType":"ElementaryTypeName","src":"12123:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2445,"initialValue":{"hexValue":"30","id":2444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12135:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12123:13:8"},"loopExpression":{"expression":{"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12168:3:8","subExpression":{"id":2452,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"12168:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2454,"nodeType":"ExpressionStatement","src":"12168:3:8"},"nodeType":"ForStatement","src":"12118:255:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2482,"name":"totalVestingPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"12391:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3130303030","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12417:5:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"12391:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2490,"nodeType":"IfStatement","src":"12387:80:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2485,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"12431:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12438:27:8","memberName":"TotalVestingPercentageError","nodeType":"MemberAccess","referencedDeclaration":3847,"src":"12431:34:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12431:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2489,"nodeType":"RevertStatement","src":"12424:43:8"}},{"eventCall":{"arguments":[{"baseExpression":{"id":2492,"name":"userAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"12508:13:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2494,"indexExpression":{"id":2493,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"12522:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12508:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2495,"name":"vestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"12526:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vesting_$4277_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDappadVesting.Vesting calldata[] calldata"}},"id":2497,"indexExpression":{"id":2496,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"12535:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12526:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_calldata_ptr","typeString":"struct IDappadVesting.Vesting calldata"}},{"expression":{"baseExpression":{"id":2498,"name":"vestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"12539:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vesting_$4277_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDappadVesting.Vesting calldata[] calldata"}},"id":2500,"indexExpression":{"id":2499,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"12548:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12539:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_calldata_ptr","typeString":"struct IDappadVesting.Vesting calldata"}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12551:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"12539:30:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Vesting_$4277_calldata_ptr","typeString":"struct IDappadVesting.Vesting calldata"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}],"id":2491,"name":"CustomVestingUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"12487:20:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_struct$_Vesting_$4277_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,struct IDappadVesting.Vesting memory,uint256[] memory)"}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12487:83:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2503,"nodeType":"EmitStatement","src":"12482:88:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2390,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"11760:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2391,"name":"userAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"11764:13:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11778:6:8","memberName":"length","nodeType":"MemberAccess","src":"11764:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11760:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2505,"initializationExpression":{"assignments":[2387],"declarations":[{"constant":false,"id":2387,"mutability":"mutable","name":"i","nameLocation":"11753:1:8","nodeType":"VariableDeclaration","scope":2505,"src":"11745:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2386,"name":"uint256","nodeType":"ElementaryTypeName","src":"11745:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2389,"initialValue":{"hexValue":"30","id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11757:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11745:13:8"},"loopExpression":{"expression":{"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11786:3:8","subExpression":{"id":2394,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"11786:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2396,"nodeType":"ExpressionStatement","src":"11786:3:8"},"nodeType":"ForStatement","src":"11740:841:8"},{"expression":{"hexValue":"74727565","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12602:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2374,"id":2507,"nodeType":"Return","src":"12595:11:8"}]},"functionSelector":"d8f3c99d","id":2509,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":2369,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11606:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11610:6:8","memberName":"sender","nodeType":"MemberAccess","src":"11606:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2371,"kind":"modifierInvocation","modifierName":{"id":2368,"name":"onlyOwnerOrAdmin","nameLocations":["11589:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1512,"src":"11589:16:8"},"nodeType":"ModifierInvocation","src":"11589:28:8"}],"name":"setCustomVestings","nameLocation":"11484:17:8","nodeType":"FunctionDefinition","parameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2362,"mutability":"mutable","name":"userAddresses","nameLocation":"11521:13:8","nodeType":"VariableDeclaration","scope":2509,"src":"11502:32:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2360,"name":"address","nodeType":"ElementaryTypeName","src":"11502:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2361,"nodeType":"ArrayTypeName","src":"11502:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2366,"mutability":"mutable","name":"vestings","nameLocation":"11570:8:8","nodeType":"VariableDeclaration","scope":2509,"src":"11536:42:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vesting_$4277_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDappadVesting.Vesting[]"},"typeName":{"baseType":{"id":2364,"nodeType":"UserDefinedTypeName","pathNode":{"id":2363,"name":"IDappadVesting.Vesting","nameLocations":["11536:14:8","11551:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":4277,"src":"11536:22:8"},"referencedDeclaration":4277,"src":"11536:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage_ptr","typeString":"struct IDappadVesting.Vesting"}},"id":2365,"nodeType":"ArrayTypeName","src":"11536:24:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vesting_$4277_storage_$dyn_storage_ptr","typeString":"struct IDappadVesting.Vesting[]"}},"visibility":"internal"}],"src":"11501:78:8"},"returnParameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2509,"src":"11627:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2372,"name":"bool","nodeType":"ElementaryTypeName","src":"11627:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11626:6:8"},"scope":3487,"src":"11475:1138:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2532,"nodeType":"Block","src":"12721:137:8","statements":[{"expression":{"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2520,"name":"vestingStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"12731:17:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingStatistics_$4293_storage","typeString":"struct IDappadVesting.VestingStatistics storage ref"}},"id":2522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12749:20:8","memberName":"totalSaleTokenAmount","nodeType":"MemberAccess","referencedDeclaration":4292,"src":"12731:38:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2523,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"12772:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12731:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2525,"nodeType":"ExpressionStatement","src":"12731:47:8"},{"eventCall":{"arguments":[{"id":2527,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"12822:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2526,"name":"TotalSaleTokenAmountUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"12794:27:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12794:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2529,"nodeType":"EmitStatement","src":"12789:40:8"},{"expression":{"hexValue":"74727565","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12847:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2519,"id":2531,"nodeType":"Return","src":"12840:11:8"}]},"functionSelector":"e7b6167d","id":2533,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":2514,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12694:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12698:6:8","memberName":"sender","nodeType":"MemberAccess","src":"12694:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2516,"kind":"modifierInvocation","modifierName":{"id":2513,"name":"onlyOwnerOrAdmin","nameLocations":["12677:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1512,"src":"12677:16:8"},"nodeType":"ModifierInvocation","src":"12677:28:8"}],"name":"setTotalSaleTokenAmount","nameLocation":"12628:23:8","nodeType":"FunctionDefinition","parameters":{"id":2512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2511,"mutability":"mutable","name":"amount","nameLocation":"12660:6:8","nodeType":"VariableDeclaration","scope":2533,"src":"12652:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"12652:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12651:16:8"},"returnParameters":{"id":2519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2533,"src":"12715:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2517,"name":"bool","nodeType":"ElementaryTypeName","src":"12715:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12714:6:8"},"scope":3487,"src":"12619:239:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2556,"nodeType":"Block","src":"12964:133:8","statements":[{"expression":{"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2544,"name":"vestingStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"12974:17:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingStatistics_$4293_storage","typeString":"struct IDappadVesting.VestingStatistics storage ref"}},"id":2546,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12992:18:8","memberName":"totalVestingAmount","nodeType":"MemberAccess","referencedDeclaration":4290,"src":"12974:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2547,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"13013:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12974:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2549,"nodeType":"ExpressionStatement","src":"12974:45:8"},{"eventCall":{"arguments":[{"id":2551,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"13061:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2550,"name":"TotalVestingAmountUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"13035:25:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13035:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2553,"nodeType":"EmitStatement","src":"13030:38:8"},{"expression":{"hexValue":"74727565","id":2554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13086:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2543,"id":2555,"nodeType":"Return","src":"13079:11:8"}]},"functionSelector":"75420c99","id":2557,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":2538,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12937:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12941:6:8","memberName":"sender","nodeType":"MemberAccess","src":"12937:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2540,"kind":"modifierInvocation","modifierName":{"id":2537,"name":"onlyOwnerOrAdmin","nameLocations":["12920:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1512,"src":"12920:16:8"},"nodeType":"ModifierInvocation","src":"12920:28:8"}],"name":"setTotalVestingAmount","nameLocation":"12873:21:8","nodeType":"FunctionDefinition","parameters":{"id":2536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2535,"mutability":"mutable","name":"amount","nameLocation":"12903:6:8","nodeType":"VariableDeclaration","scope":2557,"src":"12895:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2534,"name":"uint256","nodeType":"ElementaryTypeName","src":"12895:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12894:16:8"},"returnParameters":{"id":2543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2557,"src":"12958:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2541,"name":"bool","nodeType":"ElementaryTypeName","src":"12958:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12957:6:8"},"scope":3487,"src":"12864:233:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2611,"nodeType":"Block","src":"13245:453:8","statements":[{"expression":{"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2569,"name":"vestingAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"13255:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_storage","typeString":"struct IDappadVesting.VestingAddresses storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2570,"name":"newVestingAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"13274:19:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_memory_ptr","typeString":"struct IDappadVesting.VestingAddresses memory"}},"src":"13255:38:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_storage","typeString":"struct IDappadVesting.VestingAddresses storage ref"}},"id":2572,"nodeType":"ExpressionStatement","src":"13255:38:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2573,"name":"newVestingAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"13308:19:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_memory_ptr","typeString":"struct IDappadVesting.VestingAddresses memory"}},"id":2574,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13328:16:8","memberName":"saleTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4279,"src":"13308:36:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13356:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13348:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2575,"name":"address","nodeType":"ElementaryTypeName","src":"13348:7:8","typeDescriptions":{}}},"id":2578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13348:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13308:50:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2588,"nodeType":"IfStatement","src":"13304:145:8","trueBody":{"id":2587,"nodeType":"Block","src":"13360:89:8","statements":[{"expression":{"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2580,"name":"saleToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"13374:9:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2582,"name":"newVestingAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"13401:19:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_memory_ptr","typeString":"struct IDappadVesting.VestingAddresses memory"}},"id":2583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13421:16:8","memberName":"saleTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4279,"src":"13401:36:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2581,"name":"IERC20Extented","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"13386:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Extented_$3940_$","typeString":"type(contract IERC20Extented)"}},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13386:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"}},"src":"13374:64:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"}},"id":2586,"nodeType":"ExpressionStatement","src":"13374:64:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2589,"name":"newVestingAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"13463:19:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_memory_ptr","typeString":"struct IDappadVesting.VestingAddresses memory"}},"id":2590,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13483:19:8","memberName":"saleContractAddress","nodeType":"MemberAccess","referencedDeclaration":4283,"src":"13463:39:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13514:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13506:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2591,"name":"address","nodeType":"ElementaryTypeName","src":"13506:7:8","typeDescriptions":{}}},"id":2594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13506:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13463:53:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2604,"nodeType":"IfStatement","src":"13459:151:8","trueBody":{"id":2603,"nodeType":"Block","src":"13518:92:8","statements":[{"expression":{"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2596,"name":"saleContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"13532:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadSale_$4250","typeString":"contract IDappadSale"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2598,"name":"newVestingAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"13559:19:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_memory_ptr","typeString":"struct IDappadVesting.VestingAddresses memory"}},"id":2599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13579:19:8","memberName":"saleContractAddress","nodeType":"MemberAccess","referencedDeclaration":4283,"src":"13559:39:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2597,"name":"IDappadSale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"13547:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDappadSale_$4250_$","typeString":"type(contract IDappadSale)"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13547:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IDappadSale_$4250","typeString":"contract IDappadSale"}},"src":"13532:67:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadSale_$4250","typeString":"contract IDappadSale"}},"id":2602,"nodeType":"ExpressionStatement","src":"13532:67:8"}]}},{"eventCall":{"arguments":[{"id":2606,"name":"newVestingAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"13649:19:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_memory_ptr","typeString":"struct IDappadVesting.VestingAddresses memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VestingAddresses_$4288_memory_ptr","typeString":"struct IDappadVesting.VestingAddresses memory"}],"id":2605,"name":"VestingAddressesUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"13625:23:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$_VestingAddresses_$4288_memory_ptr_$returns$__$","typeString":"function (struct IDappadVesting.VestingAddresses memory)"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13625:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2608,"nodeType":"EmitStatement","src":"13620:49:8"},{"expression":{"hexValue":"74727565","id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13687:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2568,"id":2610,"nodeType":"Return","src":"13680:11:8"}]},"functionSelector":"334aa9f1","id":2612,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":2563,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13218:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13222:6:8","memberName":"sender","nodeType":"MemberAccess","src":"13218:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2565,"kind":"modifierInvocation","modifierName":{"id":2562,"name":"onlyOwnerOrAdmin","nameLocations":["13201:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1512,"src":"13201:16:8"},"nodeType":"ModifierInvocation","src":"13201:28:8"}],"name":"setVestingAddresses","nameLocation":"13112:19:8","nodeType":"FunctionDefinition","parameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2560,"mutability":"mutable","name":"newVestingAddresses","nameLocation":"13171:19:8","nodeType":"VariableDeclaration","scope":2612,"src":"13132:58:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_memory_ptr","typeString":"struct IDappadVesting.VestingAddresses"},"typeName":{"id":2559,"nodeType":"UserDefinedTypeName","pathNode":{"id":2558,"name":"IDappadVesting.VestingAddresses","nameLocations":["13132:14:8","13147:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":4288,"src":"13132:31:8"},"referencedDeclaration":4288,"src":"13132:31:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_storage_ptr","typeString":"struct IDappadVesting.VestingAddresses"}},"visibility":"internal"}],"src":"13131:60:8"},"returnParameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2612,"src":"13239:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2566,"name":"bool","nodeType":"ElementaryTypeName","src":"13239:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13238:6:8"},"scope":3487,"src":"13103:595:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2699,"nodeType":"Block","src":"13818:904:8","statements":[{"assignments":[2626],"declarations":[{"constant":false,"id":2626,"mutability":"mutable","name":"currentVesting","nameLocation":"13858:14:8","nodeType":"VariableDeclaration","scope":2699,"src":"13828:44:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting"},"typeName":{"id":2625,"nodeType":"UserDefinedTypeName","pathNode":{"id":2624,"name":"IDappadVesting.Vesting","nameLocations":["13828:14:8","13843:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":4277,"src":"13828:22:8"},"referencedDeclaration":4277,"src":"13828:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage_ptr","typeString":"struct IDappadVesting.Vesting"}},"visibility":"internal"}],"id":2628,"initialValue":{"id":2627,"name":"defaultVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"13875:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13828:61:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2629,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"13904:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":2631,"indexExpression":{"id":2630,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"13919:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13904:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"id":2632,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13932:12:8","memberName":"vestingCount","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"13904:40:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13947:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13904:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2642,"nodeType":"IfStatement","src":"13900:119:8","trueBody":{"id":2641,"nodeType":"Block","src":"13950:69:8","statements":[{"expression":{"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2635,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"13964:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2636,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"13981:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":2638,"indexExpression":{"id":2637,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"13996:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13981:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"src":"13964:44:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2640,"nodeType":"ExpressionStatement","src":"13964:44:8"}]}},{"assignments":[2644],"declarations":[{"constant":false,"id":2644,"mutability":"mutable","name":"userTotalVestingAmount","nameLocation":"14037:22:8","nodeType":"VariableDeclaration","scope":2699,"src":"14029:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2643,"name":"uint256","nodeType":"ElementaryTypeName","src":"14029:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2646,"initialValue":{"hexValue":"30","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14062:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14029:34:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2647,"name":"vestingAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"14078:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_storage","typeString":"struct IDappadVesting.VestingAddresses storage ref"}},"id":2648,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14095:19:8","memberName":"saleContractAddress","nodeType":"MemberAccess","referencedDeclaration":4283,"src":"14078:36:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14126:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14118:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2649,"name":"address","nodeType":"ElementaryTypeName","src":"14118:7:8","typeDescriptions":{}}},"id":2652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14118:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14078:50:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2695,"nodeType":"Block","src":"14538:138:8","statements":[{"expression":{"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2685,"name":"userTotalVestingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"14552:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2687,"name":"vestingSettings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"14602:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingSettings_$4265_storage","typeString":"struct IDappadVesting.VestingSettings storage ref"}},"id":2688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14618:14:8","memberName":"saleTokenPrice","nodeType":"MemberAccess","referencedDeclaration":4264,"src":"14602:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2689,"name":"investmentAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"14634:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2691,"indexExpression":{"id":2690,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"14652:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14634:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2686,"name":"calculateSaleTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"14577:24:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:88:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14552:113:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2694,"nodeType":"ExpressionStatement","src":"14552:113:8"}]},"id":2696,"nodeType":"IfStatement","src":"14074:602:8","trueBody":{"id":2684,"nodeType":"Block","src":"14130:402:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2654,"name":"vestingSettings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"14148:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingSettings_$4265_storage","typeString":"struct IDappadVesting.VestingSettings storage ref"}},"id":2655,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14164:14:8","memberName":"saleTokenPrice","nodeType":"MemberAccess","referencedDeclaration":4264,"src":"14148:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14181:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14148:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2682,"nodeType":"Block","src":"14355:167:8","statements":[{"expression":{"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2670,"name":"userTotalVestingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"14373:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2672,"name":"saleContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"14423:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadSale_$4250","typeString":"contract IDappadSale"}},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14436:17:8","memberName":"getSaleTokenPrice","nodeType":"MemberAccess","referencedDeclaration":4249,"src":"14423:30:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14423:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2677,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"14494:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2675,"name":"saleContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"14457:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadSale_$4250","typeString":"contract IDappadSale"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14470:23:8","memberName":"getUserInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4227,"src":"14457:36:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14457:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2671,"name":"calculateSaleTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"14398:24:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14398:109:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14373:134:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2681,"nodeType":"ExpressionStatement","src":"14373:134:8"}]},"id":2683,"nodeType":"IfStatement","src":"14144:378:8","trueBody":{"id":2669,"nodeType":"Block","src":"14184:165:8","statements":[{"expression":{"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2658,"name":"userTotalVestingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"14202:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2660,"name":"vestingSettings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"14252:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingSettings_$4265_storage","typeString":"struct IDappadVesting.VestingSettings storage ref"}},"id":2661,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14268:14:8","memberName":"saleTokenPrice","nodeType":"MemberAccess","referencedDeclaration":4264,"src":"14252:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2664,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"14321:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2662,"name":"saleContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"14284:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDappadSale_$4250","typeString":"contract IDappadSale"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14297:23:8","memberName":"getUserInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":4227,"src":"14284:36:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14284:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2659,"name":"calculateSaleTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"14227:24:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14227:107:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14202:132:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2668,"nodeType":"ExpressionStatement","src":"14202:132:8"}]}}]}},{"expression":{"id":2697,"name":"userTotalVestingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"14693:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2621,"id":2698,"nodeType":"Return","src":"14686:29:8"}]},"functionSelector":"bf5a0c59","id":2700,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2617,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"13787:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2618,"kind":"modifierInvocation","modifierName":{"id":2616,"name":"notZeroAddress","nameLocations":["13772:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1492,"src":"13772:14:8"},"nodeType":"ModifierInvocation","src":"13772:27:8"}],"name":"getUserTotalVestingAmount","nameLocation":"13713:25:8","nodeType":"FunctionDefinition","parameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"userAddress","nameLocation":"13747:11:8","nodeType":"VariableDeclaration","scope":2700,"src":"13739:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2613,"name":"address","nodeType":"ElementaryTypeName","src":"13739:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13738:21:8"},"returnParameters":{"id":2621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2700,"src":"13809:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2619,"name":"uint256","nodeType":"ElementaryTypeName","src":"13809:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13808:9:8"},"scope":3487,"src":"13704:1018:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2722,"nodeType":"Block","src":"14842:92:8","statements":[{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2709,"name":"investmentAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"14861:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2710,"name":"saleTokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"14880:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14861:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2712,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14860:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14899:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2714,"name":"saleToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"14905:9:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14915:8:8","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":3939,"src":"14905:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14905:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14899:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2718,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14898:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14860:66:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2720,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14859:68:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2708,"id":2721,"nodeType":"Return","src":"14852:75:8"}]},"functionSelector":"fe671bdc","id":2723,"implemented":true,"kind":"function","modifiers":[],"name":"calculateSaleTokenAmount","nameLocation":"14737:24:8","nodeType":"FunctionDefinition","parameters":{"id":2705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2702,"mutability":"mutable","name":"saleTokenPrice","nameLocation":"14770:14:8","nodeType":"VariableDeclaration","scope":2723,"src":"14762:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"14762:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2704,"mutability":"mutable","name":"investmentAmount","nameLocation":"14794:16:8","nodeType":"VariableDeclaration","scope":2723,"src":"14786:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2703,"name":"uint256","nodeType":"ElementaryTypeName","src":"14786:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14761:50:8"},"returnParameters":{"id":2708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2723,"src":"14833:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2706,"name":"uint256","nodeType":"ElementaryTypeName","src":"14833:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14832:9:8"},"scope":3487,"src":"14728:206:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2859,"nodeType":"Block","src":"15039:1371:8","statements":[{"assignments":[2736],"declarations":[{"constant":false,"id":2736,"mutability":"mutable","name":"currentVesting","nameLocation":"15079:14:8","nodeType":"VariableDeclaration","scope":2859,"src":"15049:44:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting"},"typeName":{"id":2735,"nodeType":"UserDefinedTypeName","pathNode":{"id":2734,"name":"IDappadVesting.Vesting","nameLocations":["15049:14:8","15064:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":4277,"src":"15049:22:8"},"referencedDeclaration":4277,"src":"15049:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage_ptr","typeString":"struct IDappadVesting.Vesting"}},"visibility":"internal"}],"id":2738,"initialValue":{"id":2737,"name":"defaultVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"15096:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15049:61:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2739,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"15125:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":2741,"indexExpression":{"id":2740,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"15140:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15125:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"id":2742,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15153:12:8","memberName":"vestingCount","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"15125:40:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15168:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15125:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2752,"nodeType":"IfStatement","src":"15121:119:8","trueBody":{"id":2751,"nodeType":"Block","src":"15171:69:8","statements":[{"expression":{"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2745,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"15185:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2746,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"15202:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":2748,"indexExpression":{"id":2747,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"15217:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15202:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"src":"15185:44:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2750,"nodeType":"ExpressionStatement","src":"15185:44:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2753,"name":"vestingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"15254:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2754,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"15270:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15285:12:8","memberName":"vestingCount","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"15270:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15254:43:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2762,"nodeType":"IfStatement","src":"15250:89:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2757,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"15306:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15313:24:8","memberName":"InvalidVestingIndexError","nodeType":"MemberAccess","referencedDeclaration":3829,"src":"15306:31:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15306:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2761,"nodeType":"RevertStatement","src":"15299:40:8"}},{"condition":{"baseExpression":{"baseExpression":{"id":2763,"name":"vestingClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"15353:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":2765,"indexExpression":{"id":2764,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"15368:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15353:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":2767,"indexExpression":{"id":2766,"name":"vestingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"15381:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15353:41:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2857,"nodeType":"Block","src":"15439:965:8","statements":[{"assignments":[2772],"declarations":[{"constant":false,"id":2772,"mutability":"mutable","name":"startDate","nameLocation":"15461:9:8","nodeType":"VariableDeclaration","scope":2857,"src":"15453:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2771,"name":"uint256","nodeType":"ElementaryTypeName","src":"15453:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2775,"initialValue":{"expression":{"id":2773,"name":"vestingSettings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"15473:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingSettings_$4265_storage","typeString":"struct IDappadVesting.VestingSettings storage ref"}},"id":2774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15489:9:8","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":4262,"src":"15473:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15453:45:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2776,"name":"vestingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"15516:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15516:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2855,"nodeType":"Block","src":"16012:382:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2818,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"16033:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2819,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16048:20:8","memberName":"vestingCliffDuration","nodeType":"MemberAccess","referencedDeclaration":4271,"src":"16033:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16071:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16033:39:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2853,"nodeType":"Block","src":"16246:134:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2838,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"16275:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16281:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"16275:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2840,"name":"startDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"16295:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2841,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"16308:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16323:15:8","memberName":"vestingDuration","nodeType":"MemberAccess","referencedDeclaration":4269,"src":"16308:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2843,"name":"vestingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"16342:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16357:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16342:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2846,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16341:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16308:51:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2848,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16307:53:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16295:65:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16294:67:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16275:86:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2731,"id":2852,"nodeType":"Return","src":"16268:93:8"}]},"id":2854,"nodeType":"IfStatement","src":"16030:350:8","trueBody":{"id":2837,"nodeType":"Block","src":"16074:166:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2822,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"16103:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16109:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"16103:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2824,"name":"startDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"16123:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2825,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"16135:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16150:20:8","memberName":"vestingCliffDuration","nodeType":"MemberAccess","referencedDeclaration":4271,"src":"16135:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16123:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2828,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"16174:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2829,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16189:15:8","memberName":"vestingDuration","nodeType":"MemberAccess","referencedDeclaration":4269,"src":"16174:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2830,"name":"vestingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"16207:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16174:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2832,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16173:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16123:97:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2834,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16122:99:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16103:118:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2731,"id":2836,"nodeType":"Return","src":"16096:125:8"}]}}]},"id":2856,"nodeType":"IfStatement","src":"15513:881:8","trueBody":{"id":2817,"nodeType":"Block","src":"15535:471:8","statements":[{"condition":{"expression":{"id":2779,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"15556:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15571:5:8","memberName":"onTGE","nodeType":"MemberAccess","referencedDeclaration":4276,"src":"15556:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2815,"nodeType":"Block","src":"15636:356:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2784,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"15661:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2785,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15676:20:8","memberName":"vestingCliffDuration","nodeType":"MemberAccess","referencedDeclaration":4271,"src":"15661:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15699:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15661:39:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2813,"nodeType":"Block","src":"15832:142:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2798,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15865:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15871:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"15865:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2800,"name":"startDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"15885:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2801,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"15898:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15913:15:8","memberName":"vestingDuration","nodeType":"MemberAccess","referencedDeclaration":4269,"src":"15898:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2803,"name":"vestingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"15932:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15947:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15932:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2806,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15931:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15898:51:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15897:53:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15885:65:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2810,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15884:67:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15865:86:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2731,"id":2812,"nodeType":"Return","src":"15858:93:8"}]},"id":2814,"nodeType":"IfStatement","src":"15658:316:8","trueBody":{"id":2797,"nodeType":"Block","src":"15702:124:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2788,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15735:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15741:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"15735:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2790,"name":"startDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"15755:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2791,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"15767:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2792,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15782:20:8","memberName":"vestingCliffDuration","nodeType":"MemberAccess","referencedDeclaration":4271,"src":"15767:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15755:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2794,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15754:49:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15735:68:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2731,"id":2796,"nodeType":"Return","src":"15728:75:8"}]}}]},"id":2816,"nodeType":"IfStatement","src":"15553:439:8","trueBody":{"id":2783,"nodeType":"Block","src":"15578:52:8","statements":[{"expression":{"hexValue":"74727565","id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15607:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2731,"id":2782,"nodeType":"Return","src":"15600:11:8"}]}}]}}]},"id":2858,"nodeType":"IfStatement","src":"15350:1054:8","trueBody":{"id":2770,"nodeType":"Block","src":"15396:37:8","statements":[{"expression":{"hexValue":"66616c7365","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15417:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2731,"id":2769,"nodeType":"Return","src":"15410:12:8"}]}}]},"functionSelector":"5679a0ed","id":2860,"implemented":true,"kind":"function","modifiers":[],"name":"getVestingClaimable","nameLocation":"14949:19:8","nodeType":"FunctionDefinition","parameters":{"id":2728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"userAddress","nameLocation":"14977:11:8","nodeType":"VariableDeclaration","scope":2860,"src":"14969:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2724,"name":"address","nodeType":"ElementaryTypeName","src":"14969:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2727,"mutability":"mutable","name":"vestingIndex","nameLocation":"14998:12:8","nodeType":"VariableDeclaration","scope":2860,"src":"14990:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2726,"name":"uint256","nodeType":"ElementaryTypeName","src":"14990:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14968:43:8"},"returnParameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2860,"src":"15033:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2729,"name":"bool","nodeType":"ElementaryTypeName","src":"15033:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15032:6:8"},"scope":3487,"src":"14940:1470:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2915,"nodeType":"Block","src":"16524:402:8","statements":[{"assignments":[2874],"declarations":[{"constant":false,"id":2874,"mutability":"mutable","name":"currentVesting","nameLocation":"16564:14:8","nodeType":"VariableDeclaration","scope":2915,"src":"16534:44:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting"},"typeName":{"id":2873,"nodeType":"UserDefinedTypeName","pathNode":{"id":2872,"name":"IDappadVesting.Vesting","nameLocations":["16534:14:8","16549:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":4277,"src":"16534:22:8"},"referencedDeclaration":4277,"src":"16534:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage_ptr","typeString":"struct IDappadVesting.Vesting"}},"visibility":"internal"}],"id":2876,"initialValue":{"id":2875,"name":"defaultVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"16581:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16534:61:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2877,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"16610:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":2879,"indexExpression":{"id":2878,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"16625:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16610:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"id":2880,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16638:12:8","memberName":"vestingCount","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"16610:40:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16653:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16610:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2890,"nodeType":"IfStatement","src":"16606:119:8","trueBody":{"id":2889,"nodeType":"Block","src":"16656:69:8","statements":[{"expression":{"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2883,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"16670:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2884,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"16687:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":2886,"indexExpression":{"id":2885,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"16702:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16687:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"src":"16670:44:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2888,"nodeType":"ExpressionStatement","src":"16670:44:8"}]}},{"body":{"id":2911,"nodeType":"Block","src":"16793:104:8","statements":[{"condition":{"baseExpression":{"baseExpression":{"id":2902,"name":"vestingClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"16811:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":2904,"indexExpression":{"id":2903,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"16826:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16811:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":2906,"indexExpression":{"id":2905,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"16839:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16811:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2910,"nodeType":"IfStatement","src":"16807:80:8","trueBody":{"id":2909,"nodeType":"Block","src":"16843:44:8","statements":[{"expression":{"hexValue":"74727565","id":2907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16868:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2869,"id":2908,"nodeType":"Return","src":"16861:11:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2895,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"16755:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2896,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"16759:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16774:12:8","memberName":"vestingCount","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"16759:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16755:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2912,"initializationExpression":{"assignments":[2892],"declarations":[{"constant":false,"id":2892,"mutability":"mutable","name":"i","nameLocation":"16748:1:8","nodeType":"VariableDeclaration","scope":2912,"src":"16740:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2891,"name":"uint256","nodeType":"ElementaryTypeName","src":"16740:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2894,"initialValue":{"hexValue":"30","id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16752:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16740:13:8"},"loopExpression":{"expression":{"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16788:3:8","subExpression":{"id":2899,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"16788:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2901,"nodeType":"ExpressionStatement","src":"16788:3:8"},"nodeType":"ForStatement","src":"16735:162:8"},{"expression":{"hexValue":"66616c7365","id":2913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16914:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2869,"id":2914,"nodeType":"Return","src":"16907:12:8"}]},"functionSelector":"786b4456","id":2916,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2865,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"16496:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2866,"kind":"modifierInvocation","modifierName":{"id":2864,"name":"notZeroAddress","nameLocations":["16481:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1492,"src":"16481:14:8"},"nodeType":"ModifierInvocation","src":"16481:27:8"}],"name":"getAnyVestingClaimed","nameLocation":"16425:20:8","nodeType":"FunctionDefinition","parameters":{"id":2863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2862,"mutability":"mutable","name":"userAddress","nameLocation":"16454:11:8","nodeType":"VariableDeclaration","scope":2916,"src":"16446:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2861,"name":"address","nodeType":"ElementaryTypeName","src":"16446:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16445:21:8"},"returnParameters":{"id":2869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2916,"src":"16518:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2867,"name":"bool","nodeType":"ElementaryTypeName","src":"16518:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16517:6:8"},"scope":3487,"src":"16416:510:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2934,"nodeType":"Block","src":"17059:65:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2928,"name":"vestingClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"17076:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":2930,"indexExpression":{"id":2929,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"17091:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17076:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":2932,"indexExpression":{"id":2931,"name":"vestingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"17104:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17076:41:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2927,"id":2933,"nodeType":"Return","src":"17069:48:8"}]},"functionSelector":"7eb16ac2","id":2935,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2923,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"17031:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2924,"kind":"modifierInvocation","modifierName":{"id":2922,"name":"notZeroAddress","nameLocations":["17016:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1492,"src":"17016:14:8"},"nodeType":"ModifierInvocation","src":"17016:27:8"}],"name":"getVestingClaimed","nameLocation":"16941:17:8","nodeType":"FunctionDefinition","parameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2918,"mutability":"mutable","name":"userAddress","nameLocation":"16967:11:8","nodeType":"VariableDeclaration","scope":2935,"src":"16959:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2917,"name":"address","nodeType":"ElementaryTypeName","src":"16959:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2920,"mutability":"mutable","name":"vestingIndex","nameLocation":"16988:12:8","nodeType":"VariableDeclaration","scope":2935,"src":"16980:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2919,"name":"uint256","nodeType":"ElementaryTypeName","src":"16980:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16958:43:8"},"returnParameters":{"id":2927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2935,"src":"17053:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2925,"name":"bool","nodeType":"ElementaryTypeName","src":"17053:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17052:6:8"},"scope":3487,"src":"16932:192:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3011,"nodeType":"Block","src":"17248:642:8","statements":[{"assignments":[2949],"declarations":[{"constant":false,"id":2949,"mutability":"mutable","name":"currentVesting","nameLocation":"17288:14:8","nodeType":"VariableDeclaration","scope":3011,"src":"17258:44:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting"},"typeName":{"id":2948,"nodeType":"UserDefinedTypeName","pathNode":{"id":2947,"name":"IDappadVesting.Vesting","nameLocations":["17258:14:8","17273:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":4277,"src":"17258:22:8"},"referencedDeclaration":4277,"src":"17258:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage_ptr","typeString":"struct IDappadVesting.Vesting"}},"visibility":"internal"}],"id":2951,"initialValue":{"id":2950,"name":"defaultVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"17305:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17258:61:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2952,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"17334:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":2954,"indexExpression":{"id":2953,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"17349:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17334:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"id":2955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17362:12:8","memberName":"vestingCount","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"17334:40:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17377:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17334:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2965,"nodeType":"IfStatement","src":"17330:119:8","trueBody":{"id":2964,"nodeType":"Block","src":"17380:69:8","statements":[{"expression":{"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2958,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"17394:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2959,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"17411:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":2961,"indexExpression":{"id":2960,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"17426:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17411:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"src":"17394:44:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2963,"nodeType":"ExpressionStatement","src":"17394:44:8"}]}},{"assignments":[2967],"declarations":[{"constant":false,"id":2967,"mutability":"mutable","name":"unclaimedTokenAmount","nameLocation":"17475:20:8","nodeType":"VariableDeclaration","scope":3011,"src":"17467:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2966,"name":"uint256","nodeType":"ElementaryTypeName","src":"17467:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2969,"initialValue":{"hexValue":"30","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17498:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17467:32:8"},{"assignments":[2971],"declarations":[{"constant":false,"id":2971,"mutability":"mutable","name":"userTotalVestingAmount","nameLocation":"17517:22:8","nodeType":"VariableDeclaration","scope":3011,"src":"17509:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2970,"name":"uint256","nodeType":"ElementaryTypeName","src":"17509:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2975,"initialValue":{"arguments":[{"id":2973,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"17568:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2972,"name":"getUserTotalVestingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"17542:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17542:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17509:71:8"},{"body":{"id":3007,"nodeType":"Block","src":"17649:189:8","statements":[{"condition":{"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17667:31:8","subExpression":{"baseExpression":{"baseExpression":{"id":2987,"name":"vestingClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"17668:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":2989,"indexExpression":{"id":2988,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"17683:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17668:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":2991,"indexExpression":{"id":2990,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"17696:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17668:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3006,"nodeType":"IfStatement","src":"17663:165:8","trueBody":{"id":3005,"nodeType":"Block","src":"17700:128:8","statements":[{"expression":{"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2993,"name":"unclaimedTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"17718:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2994,"name":"userTotalVestingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"17743:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"baseExpression":{"expression":{"id":2995,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"17768:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2996,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17783:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"17768:33:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2998,"indexExpression":{"id":2997,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"17802:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17768:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17743:61:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3000,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17742:63:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":3001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17808:5:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"17742:71:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17718:95:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3004,"nodeType":"ExpressionStatement","src":"17718:95:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2980,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"17611:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2981,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"17615:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":2982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17630:12:8","memberName":"vestingCount","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"17615:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17611:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3008,"initializationExpression":{"assignments":[2977],"declarations":[{"constant":false,"id":2977,"mutability":"mutable","name":"i","nameLocation":"17604:1:8","nodeType":"VariableDeclaration","scope":3008,"src":"17596:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2976,"name":"uint256","nodeType":"ElementaryTypeName","src":"17596:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2979,"initialValue":{"hexValue":"30","id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17608:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17596:13:8"},"loopExpression":{"expression":{"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17644:3:8","subExpression":{"id":2984,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"17644:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2986,"nodeType":"ExpressionStatement","src":"17644:3:8"},"nodeType":"ForStatement","src":"17591:247:8"},{"expression":{"id":3009,"name":"unclaimedTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"17863:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2944,"id":3010,"nodeType":"Return","src":"17856:27:8"}]},"functionSelector":"cd861e16","id":3012,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2940,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"17217:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2941,"kind":"modifierInvocation","modifierName":{"id":2939,"name":"notZeroAddress","nameLocations":["17202:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1492,"src":"17202:14:8"},"nodeType":"ModifierInvocation","src":"17202:27:8"}],"name":"getUserUnclaimedTokenAmount","nameLocation":"17139:27:8","nodeType":"FunctionDefinition","parameters":{"id":2938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2937,"mutability":"mutable","name":"userAddress","nameLocation":"17175:11:8","nodeType":"VariableDeclaration","scope":3012,"src":"17167:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2936,"name":"address","nodeType":"ElementaryTypeName","src":"17167:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17166:21:8"},"returnParameters":{"id":2944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3012,"src":"17239:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2942,"name":"uint256","nodeType":"ElementaryTypeName","src":"17239:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17238:9:8"},"scope":3487,"src":"17130:760:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3094,"nodeType":"Block","src":"18011:665:8","statements":[{"assignments":[3026],"declarations":[{"constant":false,"id":3026,"mutability":"mutable","name":"currentVesting","nameLocation":"18051:14:8","nodeType":"VariableDeclaration","scope":3094,"src":"18021:44:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting"},"typeName":{"id":3025,"nodeType":"UserDefinedTypeName","pathNode":{"id":3024,"name":"IDappadVesting.Vesting","nameLocations":["18021:14:8","18036:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":4277,"src":"18021:22:8"},"referencedDeclaration":4277,"src":"18021:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage_ptr","typeString":"struct IDappadVesting.Vesting"}},"visibility":"internal"}],"id":3028,"initialValue":{"id":3027,"name":"defaultVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"18068:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18021:61:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3029,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"18097:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":3031,"indexExpression":{"id":3030,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"18112:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18097:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"id":3032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18125:12:8","memberName":"vestingCount","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"18097:40:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18140:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18097:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3042,"nodeType":"IfStatement","src":"18093:119:8","trueBody":{"id":3041,"nodeType":"Block","src":"18143:69:8","statements":[{"expression":{"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3035,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"18157:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3036,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"18174:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":3038,"indexExpression":{"id":3037,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"18189:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18174:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"src":"18157:44:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3040,"nodeType":"ExpressionStatement","src":"18157:44:8"}]}},{"assignments":[3044],"declarations":[{"constant":false,"id":3044,"mutability":"mutable","name":"lockedTokenAmount","nameLocation":"18238:17:8","nodeType":"VariableDeclaration","scope":3094,"src":"18230:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3043,"name":"uint256","nodeType":"ElementaryTypeName","src":"18230:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3046,"initialValue":{"hexValue":"30","id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18258:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18230:29:8"},{"assignments":[3048],"declarations":[{"constant":false,"id":3048,"mutability":"mutable","name":"userTotalVestingAmount","nameLocation":"18277:22:8","nodeType":"VariableDeclaration","scope":3094,"src":"18269:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3047,"name":"uint256","nodeType":"ElementaryTypeName","src":"18269:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3052,"initialValue":{"arguments":[{"id":3050,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"18328:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3049,"name":"getUserTotalVestingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"18302:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18302:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18269:71:8"},{"body":{"id":3090,"nodeType":"Block","src":"18409:226:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18427:31:8","subExpression":{"baseExpression":{"baseExpression":{"id":3064,"name":"vestingClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"18428:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":3066,"indexExpression":{"id":3065,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"18443:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18428:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":3068,"indexExpression":{"id":3067,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"18456:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18428:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18462:36:8","subExpression":{"arguments":[{"id":3071,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"18483:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3072,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"18496:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3070,"name":"getVestingClaimable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"18463:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18463:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18427:71:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3089,"nodeType":"IfStatement","src":"18423:202:8","trueBody":{"id":3088,"nodeType":"Block","src":"18500:125:8","statements":[{"expression":{"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3076,"name":"lockedTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"18518:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3077,"name":"userTotalVestingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"18540:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"baseExpression":{"expression":{"id":3078,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"18565:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3079,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18580:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"18565:33:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3081,"indexExpression":{"id":3080,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"18599:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18565:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18540:61:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3083,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18539:63:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":3084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18605:5:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"18539:71:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18518:92:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3087,"nodeType":"ExpressionStatement","src":"18518:92:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3057,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"18371:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3058,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"18375:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3059,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18390:12:8","memberName":"vestingCount","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"18375:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18371:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3091,"initializationExpression":{"assignments":[3054],"declarations":[{"constant":false,"id":3054,"mutability":"mutable","name":"i","nameLocation":"18364:1:8","nodeType":"VariableDeclaration","scope":3091,"src":"18356:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3053,"name":"uint256","nodeType":"ElementaryTypeName","src":"18356:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3056,"initialValue":{"hexValue":"30","id":3055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18368:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18356:13:8"},"loopExpression":{"expression":{"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18404:3:8","subExpression":{"id":3061,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"18404:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3063,"nodeType":"ExpressionStatement","src":"18404:3:8"},"nodeType":"ForStatement","src":"18351:284:8"},{"expression":{"id":3092,"name":"lockedTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"18652:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3021,"id":3093,"nodeType":"Return","src":"18645:24:8"}]},"functionSelector":"85489f23","id":3095,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3017,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"17980:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3018,"kind":"modifierInvocation","modifierName":{"id":3016,"name":"notZeroAddress","nameLocations":["17965:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1492,"src":"17965:14:8"},"nodeType":"ModifierInvocation","src":"17965:27:8"}],"name":"getUserLockedTokenAmount","nameLocation":"17905:24:8","nodeType":"FunctionDefinition","parameters":{"id":3015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3014,"mutability":"mutable","name":"userAddress","nameLocation":"17938:11:8","nodeType":"VariableDeclaration","scope":3095,"src":"17930:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3013,"name":"address","nodeType":"ElementaryTypeName","src":"17930:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17929:21:8"},"returnParameters":{"id":3021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3095,"src":"18002:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3019,"name":"uint256","nodeType":"ElementaryTypeName","src":"18002:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18001:9:8"},"scope":3487,"src":"17896:780:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3176,"nodeType":"Block","src":"18799:670:8","statements":[{"assignments":[3109],"declarations":[{"constant":false,"id":3109,"mutability":"mutable","name":"currentVesting","nameLocation":"18839:14:8","nodeType":"VariableDeclaration","scope":3176,"src":"18809:44:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting"},"typeName":{"id":3108,"nodeType":"UserDefinedTypeName","pathNode":{"id":3107,"name":"IDappadVesting.Vesting","nameLocations":["18809:14:8","18824:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":4277,"src":"18809:22:8"},"referencedDeclaration":4277,"src":"18809:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage_ptr","typeString":"struct IDappadVesting.Vesting"}},"visibility":"internal"}],"id":3111,"initialValue":{"id":3110,"name":"defaultVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"18856:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18809:61:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3112,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"18885:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":3114,"indexExpression":{"id":3113,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"18900:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18885:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"id":3115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18913:12:8","memberName":"vestingCount","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"18885:40:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18928:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18885:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3125,"nodeType":"IfStatement","src":"18881:119:8","trueBody":{"id":3124,"nodeType":"Block","src":"18931:69:8","statements":[{"expression":{"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3118,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"18945:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3119,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"18962:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":3121,"indexExpression":{"id":3120,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"18977:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18962:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"src":"18945:44:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3123,"nodeType":"ExpressionStatement","src":"18945:44:8"}]}},{"assignments":[3127],"declarations":[{"constant":false,"id":3127,"mutability":"mutable","name":"unlockedTokenAmount","nameLocation":"19026:19:8","nodeType":"VariableDeclaration","scope":3176,"src":"19018:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3126,"name":"uint256","nodeType":"ElementaryTypeName","src":"19018:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3129,"initialValue":{"hexValue":"30","id":3128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19048:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19018:31:8"},{"assignments":[3131],"declarations":[{"constant":false,"id":3131,"mutability":"mutable","name":"userTotalVestingAmount","nameLocation":"19067:22:8","nodeType":"VariableDeclaration","scope":3176,"src":"19059:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3130,"name":"uint256","nodeType":"ElementaryTypeName","src":"19059:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3135,"initialValue":{"arguments":[{"id":3133,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"19118:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3132,"name":"getUserTotalVestingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"19092:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19092:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19059:71:8"},{"body":{"id":3172,"nodeType":"Block","src":"19199:227:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19217:31:8","subExpression":{"baseExpression":{"baseExpression":{"id":3147,"name":"vestingClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"19218:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":3149,"indexExpression":{"id":3148,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"19233:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19218:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":3151,"indexExpression":{"id":3150,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"19246:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19218:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":3154,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"19272:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3155,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"19285:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3153,"name":"getVestingClaimable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"19252:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19252:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19217:70:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3171,"nodeType":"IfStatement","src":"19213:203:8","trueBody":{"id":3170,"nodeType":"Block","src":"19289:127:8","statements":[{"expression":{"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3158,"name":"unlockedTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"19307:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3159,"name":"userTotalVestingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"19331:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"baseExpression":{"expression":{"id":3160,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"19356:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19371:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"19356:33:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3163,"indexExpression":{"id":3162,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"19390:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19356:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19331:61:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3165,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19330:63:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":3166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19396:5:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"19330:71:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19307:94:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3169,"nodeType":"ExpressionStatement","src":"19307:94:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3140,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"19161:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3141,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"19165:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3142,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19180:12:8","memberName":"vestingCount","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"19165:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19161:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3173,"initializationExpression":{"assignments":[3137],"declarations":[{"constant":false,"id":3137,"mutability":"mutable","name":"i","nameLocation":"19154:1:8","nodeType":"VariableDeclaration","scope":3173,"src":"19146:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3136,"name":"uint256","nodeType":"ElementaryTypeName","src":"19146:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3139,"initialValue":{"hexValue":"30","id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19158:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19146:13:8"},"loopExpression":{"expression":{"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19194:3:8","subExpression":{"id":3144,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"19194:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3146,"nodeType":"ExpressionStatement","src":"19194:3:8"},"nodeType":"ForStatement","src":"19141:285:8"},{"expression":{"id":3174,"name":"unlockedTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"19443:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3104,"id":3175,"nodeType":"Return","src":"19436:26:8"}]},"functionSelector":"5410c77b","id":3177,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3100,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"18768:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3101,"kind":"modifierInvocation","modifierName":{"id":3099,"name":"notZeroAddress","nameLocations":["18753:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1492,"src":"18753:14:8"},"nodeType":"ModifierInvocation","src":"18753:27:8"}],"name":"getUserUnlockedTokenAmount","nameLocation":"18691:26:8","nodeType":"FunctionDefinition","parameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"userAddress","nameLocation":"18726:11:8","nodeType":"VariableDeclaration","scope":3177,"src":"18718:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3096,"name":"address","nodeType":"ElementaryTypeName","src":"18718:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18717:21:8"},"returnParameters":{"id":3104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3177,"src":"18790:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3102,"name":"uint256","nodeType":"ElementaryTypeName","src":"18790:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18789:9:8"},"scope":3487,"src":"18682:787:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3281,"nodeType":"Block","src":"19583:1015:8","statements":[{"assignments":[3191],"declarations":[{"constant":false,"id":3191,"mutability":"mutable","name":"currentVesting","nameLocation":"19623:14:8","nodeType":"VariableDeclaration","scope":3281,"src":"19593:44:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting"},"typeName":{"id":3190,"nodeType":"UserDefinedTypeName","pathNode":{"id":3189,"name":"IDappadVesting.Vesting","nameLocations":["19593:14:8","19608:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":4277,"src":"19593:22:8"},"referencedDeclaration":4277,"src":"19593:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage_ptr","typeString":"struct IDappadVesting.Vesting"}},"visibility":"internal"}],"id":3193,"initialValue":{"id":3192,"name":"defaultVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"19640:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"nodeType":"VariableDeclarationStatement","src":"19593:61:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3194,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"19669:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":3196,"indexExpression":{"id":3195,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"19684:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19669:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"id":3197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19697:12:8","memberName":"vestingCount","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"19669:40:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19712:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19669:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3207,"nodeType":"IfStatement","src":"19665:119:8","trueBody":{"id":3206,"nodeType":"Block","src":"19715:69:8","statements":[{"expression":{"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3200,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"19729:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3201,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"19746:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":3203,"indexExpression":{"id":3202,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"19761:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19746:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"src":"19729:44:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3205,"nodeType":"ExpressionStatement","src":"19729:44:8"}]}},{"assignments":[3209],"declarations":[{"constant":false,"id":3209,"mutability":"mutable","name":"vestingIndex","nameLocation":"19802:12:8","nodeType":"VariableDeclaration","scope":3281,"src":"19794:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3208,"name":"uint256","nodeType":"ElementaryTypeName","src":"19794:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3213,"initialValue":{"arguments":[{"id":3211,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"19841:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3210,"name":"getUserNextVestingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"19817:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19817:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19794:59:8"},{"condition":{"expression":{"id":3214,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"19868:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19883:5:8","memberName":"onTGE","nodeType":"MemberAccess","referencedDeclaration":4276,"src":"19868:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3279,"nodeType":"Block","src":"20244:348:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3248,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"20261:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3249,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20276:20:8","memberName":"vestingCliffDuration","nodeType":"MemberAccess","referencedDeclaration":4271,"src":"20261:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20299:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20261:39:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3277,"nodeType":"Block","src":"20467:115:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3268,"name":"vestingSettings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"20492:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingSettings_$4265_storage","typeString":"struct IDappadVesting.VestingSettings storage ref"}},"id":3269,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20508:9:8","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":4262,"src":"20492:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3270,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"20521:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20536:15:8","memberName":"vestingDuration","nodeType":"MemberAccess","referencedDeclaration":4269,"src":"20521:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3272,"name":"vestingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"20554:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20521:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3274,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20520:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20492:75:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3186,"id":3276,"nodeType":"Return","src":"20485:82:8"}]},"id":3278,"nodeType":"IfStatement","src":"20258:324:8","trueBody":{"id":3267,"nodeType":"Block","src":"20302:159:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3252,"name":"vestingSettings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"20327:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingSettings_$4265_storage","typeString":"struct IDappadVesting.VestingSettings storage ref"}},"id":3253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20343:9:8","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":4262,"src":"20327:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":3254,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"20355:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20370:20:8","memberName":"vestingCliffDuration","nodeType":"MemberAccess","referencedDeclaration":4271,"src":"20355:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20327:63:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3257,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"20394:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20409:15:8","memberName":"vestingDuration","nodeType":"MemberAccess","referencedDeclaration":4269,"src":"20394:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3259,"name":"vestingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"20428:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20443:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20428:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3262,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20427:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20394:51:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3264,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20393:53:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20327:119:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3186,"id":3266,"nodeType":"Return","src":"20320:126:8"}]}}]},"id":3280,"nodeType":"IfStatement","src":"19864:728:8","trueBody":{"id":3247,"nodeType":"Block","src":"19890:348:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3216,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"19907:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19922:20:8","memberName":"vestingCliffDuration","nodeType":"MemberAccess","referencedDeclaration":4271,"src":"19907:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19945:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19907:39:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3245,"nodeType":"Block","src":"20113:115:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3236,"name":"vestingSettings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"20138:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingSettings_$4265_storage","typeString":"struct IDappadVesting.VestingSettings storage ref"}},"id":3237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20154:9:8","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":4262,"src":"20138:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3238,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"20167:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3239,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20182:15:8","memberName":"vestingDuration","nodeType":"MemberAccess","referencedDeclaration":4269,"src":"20167:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3240,"name":"vestingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"20200:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20167:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3242,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20166:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20138:75:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3186,"id":3244,"nodeType":"Return","src":"20131:82:8"}]},"id":3246,"nodeType":"IfStatement","src":"19904:324:8","trueBody":{"id":3235,"nodeType":"Block","src":"19948:159:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3220,"name":"vestingSettings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"19973:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingSettings_$4265_storage","typeString":"struct IDappadVesting.VestingSettings storage ref"}},"id":3221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19989:9:8","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":4262,"src":"19973:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":3222,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"20001:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3223,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20016:20:8","memberName":"vestingCliffDuration","nodeType":"MemberAccess","referencedDeclaration":4271,"src":"20001:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19973:63:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3225,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"20040:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20055:15:8","memberName":"vestingDuration","nodeType":"MemberAccess","referencedDeclaration":4269,"src":"20040:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3227,"name":"vestingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"20074:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20089:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20074:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20073:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20040:51:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20039:53:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19973:119:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3186,"id":3234,"nodeType":"Return","src":"19966:126:8"}]}}]}}]},"functionSelector":"3e1043bf","id":3282,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3182,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"19552:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3183,"kind":"modifierInvocation","modifierName":{"id":3181,"name":"notZeroAddress","nameLocations":["19537:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1492,"src":"19537:14:8"},"nodeType":"ModifierInvocation","src":"19537:27:8"}],"name":"getNextUnlockDate","nameLocation":"19484:17:8","nodeType":"FunctionDefinition","parameters":{"id":3180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3179,"mutability":"mutable","name":"userAddress","nameLocation":"19510:11:8","nodeType":"VariableDeclaration","scope":3282,"src":"19502:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3178,"name":"address","nodeType":"ElementaryTypeName","src":"19502:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19501:21:8"},"returnParameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3282,"src":"19574:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3184,"name":"uint256","nodeType":"ElementaryTypeName","src":"19574:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19573:9:8"},"scope":3487,"src":"19475:1123:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3345,"nodeType":"Block","src":"20716:453:8","statements":[{"assignments":[3296],"declarations":[{"constant":false,"id":3296,"mutability":"mutable","name":"currentVesting","nameLocation":"20756:14:8","nodeType":"VariableDeclaration","scope":3345,"src":"20726:44:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting"},"typeName":{"id":3295,"nodeType":"UserDefinedTypeName","pathNode":{"id":3294,"name":"IDappadVesting.Vesting","nameLocations":["20726:14:8","20741:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":4277,"src":"20726:22:8"},"referencedDeclaration":4277,"src":"20726:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage_ptr","typeString":"struct IDappadVesting.Vesting"}},"visibility":"internal"}],"id":3298,"initialValue":{"id":3297,"name":"defaultVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"20773:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"nodeType":"VariableDeclarationStatement","src":"20726:61:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3299,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"20802:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":3301,"indexExpression":{"id":3300,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"20817:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20802:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"id":3302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20830:12:8","memberName":"vestingCount","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"20802:40:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20845:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20802:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3312,"nodeType":"IfStatement","src":"20798:119:8","trueBody":{"id":3311,"nodeType":"Block","src":"20848:69:8","statements":[{"expression":{"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3305,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"20862:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3306,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"20879:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":3308,"indexExpression":{"id":3307,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"20894:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20879:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"src":"20862:44:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3310,"nodeType":"ExpressionStatement","src":"20862:44:8"}]}},{"assignments":[3314],"declarations":[{"constant":false,"id":3314,"mutability":"mutable","name":"vestingIndex","nameLocation":"20935:12:8","nodeType":"VariableDeclaration","scope":3345,"src":"20927:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3313,"name":"uint256","nodeType":"ElementaryTypeName","src":"20927:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3316,"initialValue":{"hexValue":"30","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20950:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20927:24:8"},{"body":{"id":3339,"nodeType":"Block","src":"21020:109:8","statements":[{"condition":{"baseExpression":{"baseExpression":{"id":3328,"name":"vestingClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"21038:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":3330,"indexExpression":{"id":3329,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"21053:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21038:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":3332,"indexExpression":{"id":3331,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"21066:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21038:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3338,"nodeType":"IfStatement","src":"21034:85:8","trueBody":{"id":3337,"nodeType":"Block","src":"21070:49:8","statements":[{"expression":{"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3333,"name":"vestingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"21088:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3334,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"21103:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21088:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3336,"nodeType":"ExpressionStatement","src":"21088:16:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3321,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"20982:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3322,"name":"currentVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"20986:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21001:12:8","memberName":"vestingCount","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"20986:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20982:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3340,"initializationExpression":{"assignments":[3318],"declarations":[{"constant":false,"id":3318,"mutability":"mutable","name":"i","nameLocation":"20975:1:8","nodeType":"VariableDeclaration","scope":3340,"src":"20967:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3317,"name":"uint256","nodeType":"ElementaryTypeName","src":"20967:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3320,"initialValue":{"hexValue":"30","id":3319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20979:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20967:13:8"},"loopExpression":{"expression":{"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21015:3:8","subExpression":{"id":3325,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"21015:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3327,"nodeType":"ExpressionStatement","src":"21015:3:8"},"nodeType":"ForStatement","src":"20962:167:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3341,"name":"vestingIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"21146:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21161:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"21146:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3291,"id":3344,"nodeType":"Return","src":"21139:23:8"}]},"functionSelector":"274dab5a","id":3346,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3287,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"20685:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3288,"kind":"modifierInvocation","modifierName":{"id":3286,"name":"notZeroAddress","nameLocations":["20670:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1492,"src":"20670:14:8"},"nodeType":"ModifierInvocation","src":"20670:27:8"}],"name":"getUserNextVestingIndex","nameLocation":"20613:23:8","nodeType":"FunctionDefinition","parameters":{"id":3285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3284,"mutability":"mutable","name":"userAddress","nameLocation":"20645:11:8","nodeType":"VariableDeclaration","scope":3346,"src":"20637:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3283,"name":"address","nodeType":"ElementaryTypeName","src":"20637:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20636:21:8"},"returnParameters":{"id":3291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3346,"src":"20707:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3289,"name":"uint256","nodeType":"ElementaryTypeName","src":"20707:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20706:9:8"},"scope":3487,"src":"20604:565:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3355,"nodeType":"Block","src":"21256:57:8","statements":[{"expression":{"expression":{"id":3352,"name":"defaultVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"21273:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"id":3353,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21288:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"21273:33:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":3351,"id":3354,"nodeType":"Return","src":"21266:40:8"}]},"functionSelector":"1ac7eaf5","id":3356,"implemented":true,"kind":"function","modifiers":[],"name":"getDefaultVestingPercentages","nameLocation":"21184:28:8","nodeType":"FunctionDefinition","parameters":{"id":3347,"nodeType":"ParameterList","parameters":[],"src":"21212:2:8"},"returnParameters":{"id":3351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3356,"src":"21238:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3348,"name":"uint256","nodeType":"ElementaryTypeName","src":"21238:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3349,"nodeType":"ArrayTypeName","src":"21238:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"21237:18:8"},"scope":3487,"src":"21175:138:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3369,"nodeType":"Block","src":"21418:70:8","statements":[{"expression":{"expression":{"baseExpression":{"id":3364,"name":"customVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"21435:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vesting_$4277_storage_$","typeString":"mapping(address => struct IDappadVesting.Vesting storage ref)"}},"id":3366,"indexExpression":{"id":3365,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"21450:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21435:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage","typeString":"struct IDappadVesting.Vesting storage ref"}},"id":3367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21463:18:8","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"21435:46:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":3363,"id":3368,"nodeType":"Return","src":"21428:53:8"}]},"functionSelector":"9bb395b0","id":3370,"implemented":true,"kind":"function","modifiers":[],"name":"getCustomVestingPercentages","nameLocation":"21328:27:8","nodeType":"FunctionDefinition","parameters":{"id":3359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3358,"mutability":"mutable","name":"userAddress","nameLocation":"21364:11:8","nodeType":"VariableDeclaration","scope":3370,"src":"21356:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3357,"name":"address","nodeType":"ElementaryTypeName","src":"21356:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21355:21:8"},"returnParameters":{"id":3363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3370,"src":"21400:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3360,"name":"uint256","nodeType":"ElementaryTypeName","src":"21400:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3361,"nodeType":"ArrayTypeName","src":"21400:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"21399:18:8"},"scope":3487,"src":"21319:169:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3378,"nodeType":"Block","src":"21559:60:8","statements":[{"expression":{"expression":{"id":3375,"name":"vestingStatistics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"21576:17:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingStatistics_$4293_storage","typeString":"struct IDappadVesting.VestingStatistics storage ref"}},"id":3376,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21594:18:8","memberName":"totalVestingAmount","nodeType":"MemberAccess","referencedDeclaration":4290,"src":"21576:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3374,"id":3377,"nodeType":"Return","src":"21569:43:8"}]},"functionSelector":"17a76955","id":3379,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalVestingAmount","nameLocation":"21503:21:8","nodeType":"FunctionDefinition","parameters":{"id":3371,"nodeType":"ParameterList","parameters":[],"src":"21524:2:8"},"returnParameters":{"id":3374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3379,"src":"21550:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3372,"name":"uint256","nodeType":"ElementaryTypeName","src":"21550:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21549:9:8"},"scope":3487,"src":"21494:125:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3387,"nodeType":"Block","src":"21688:57:8","statements":[{"expression":{"expression":{"id":3384,"name":"vestingAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"21705:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_storage","typeString":"struct IDappadVesting.VestingAddresses storage ref"}},"id":3385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21722:16:8","memberName":"saleTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4279,"src":"21705:33:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3383,"id":3386,"nodeType":"Return","src":"21698:40:8"}]},"functionSelector":"2dee1fe8","id":3388,"implemented":true,"kind":"function","modifiers":[],"name":"getSaleTokenAddress","nameLocation":"21634:19:8","nodeType":"FunctionDefinition","parameters":{"id":3380,"nodeType":"ParameterList","parameters":[],"src":"21653:2:8"},"returnParameters":{"id":3383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3388,"src":"21679:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3381,"name":"address","nodeType":"ElementaryTypeName","src":"21679:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21678:9:8"},"scope":3487,"src":"21625:120:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3396,"nodeType":"Block","src":"21820:63:8","statements":[{"expression":{"expression":{"id":3393,"name":"vestingAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"21837:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_storage","typeString":"struct IDappadVesting.VestingAddresses storage ref"}},"id":3394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21854:22:8","memberName":"factoryContractAddress","nodeType":"MemberAccess","referencedDeclaration":4281,"src":"21837:39:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3392,"id":3395,"nodeType":"Return","src":"21830:46:8"}]},"functionSelector":"63b8476b","id":3397,"implemented":true,"kind":"function","modifiers":[],"name":"getFactoryContractAddress","nameLocation":"21760:25:8","nodeType":"FunctionDefinition","parameters":{"id":3389,"nodeType":"ParameterList","parameters":[],"src":"21785:2:8"},"returnParameters":{"id":3392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3397,"src":"21811:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3390,"name":"address","nodeType":"ElementaryTypeName","src":"21811:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21810:9:8"},"scope":3487,"src":"21751:132:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3414,"nodeType":"Block","src":"21946:77:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3402,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"21960:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21972:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3403,"name":"address","nodeType":"ElementaryTypeName","src":"21972:7:8","typeDescriptions":{}}},"id":3406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21972:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21960:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3413,"nodeType":"IfStatement","src":"21956:60:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3408,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"21991:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21998:16:8","memberName":"ZeroAddressError","nodeType":"MemberAccess","referencedDeclaration":3783,"src":"21991:23:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21991:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3412,"nodeType":"RevertStatement","src":"21984:32:8"}}]},"id":3415,"implemented":true,"kind":"function","modifiers":[],"name":"_notZeroAddress","nameLocation":"21898:15:8","nodeType":"FunctionDefinition","parameters":{"id":3400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3399,"mutability":"mutable","name":"_address","nameLocation":"21922:8:8","nodeType":"VariableDeclaration","scope":3415,"src":"21914:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3398,"name":"address","nodeType":"ElementaryTypeName","src":"21914:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21913:18:8"},"returnParameters":{"id":3401,"nodeType":"ParameterList","parameters":[],"src":"21946:0:8"},"scope":3487,"src":"21889:134:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3431,"nodeType":"Block","src":"22081:81:8","statements":[{"condition":{"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"22095:25:8","subExpression":{"arguments":[{"id":3421,"name":"OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"22104:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3422,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"22111:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3420,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"22096:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22096:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3430,"nodeType":"IfStatement","src":"22091:64:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3425,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"22129:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22136:17:8","memberName":"UnauthorizedError","nodeType":"MemberAccess","referencedDeclaration":3785,"src":"22129:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22129:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3429,"nodeType":"RevertStatement","src":"22122:33:8"}}]},"id":3432,"implemented":true,"kind":"function","modifiers":[],"name":"_onlyOwner","nameLocation":"22038:10:8","nodeType":"FunctionDefinition","parameters":{"id":3418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3417,"mutability":"mutable","name":"_address","nameLocation":"22057:8:8","nodeType":"VariableDeclaration","scope":3432,"src":"22049:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3416,"name":"address","nodeType":"ElementaryTypeName","src":"22049:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22048:18:8"},"returnParameters":{"id":3419,"nodeType":"ParameterList","parameters":[],"src":"22081:0:8"},"scope":3487,"src":"22029:133:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3454,"nodeType":"Block","src":"22227:110:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"22241:25:8","subExpression":{"arguments":[{"id":3438,"name":"OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"22250:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3439,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"22257:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3437,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"22242:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22242:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"22270:25:8","subExpression":{"arguments":[{"id":3443,"name":"ADMIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"22279:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3444,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"22286:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3442,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"22271:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22271:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22241:54:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3453,"nodeType":"IfStatement","src":"22237:93:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3448,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"22304:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22311:17:8","memberName":"UnauthorizedError","nodeType":"MemberAccess","referencedDeclaration":3785,"src":"22304:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22304:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3452,"nodeType":"RevertStatement","src":"22297:33:8"}}]},"id":3455,"implemented":true,"kind":"function","modifiers":[],"name":"_onlyOwnerOrAdmin","nameLocation":"22177:17:8","nodeType":"FunctionDefinition","parameters":{"id":3435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3434,"mutability":"mutable","name":"_address","nameLocation":"22203:8:8","nodeType":"VariableDeclaration","scope":3455,"src":"22195:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3433,"name":"address","nodeType":"ElementaryTypeName","src":"22195:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22194:18:8"},"returnParameters":{"id":3436,"nodeType":"ParameterList","parameters":[],"src":"22227:0:8"},"scope":3487,"src":"22168:169:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3485,"nodeType":"Block","src":"22445:163:8","statements":[{"assignments":[3466],"declarations":[{"constant":false,"id":3466,"mutability":"mutable","name":"userAllowance","nameLocation":"22463:13:8","nodeType":"VariableDeclaration","scope":3485,"src":"22455:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3465,"name":"uint256","nodeType":"ElementaryTypeName","src":"22455:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3475,"initialValue":{"arguments":[{"id":3469,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"22495:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3472,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"22516:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_DappadVesting_$3487","typeString":"contract DappadVesting"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DappadVesting_$3487","typeString":"contract DappadVesting"}],"id":3471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22508:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3470,"name":"address","nodeType":"ElementaryTypeName","src":"22508:7:8","typeDescriptions":{}}},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22508:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3467,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"22479:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22485:9:8","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":433,"src":"22479:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22479:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22455:67:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3476,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"22535:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3477,"name":"userAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"22544:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22535:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3484,"nodeType":"IfStatement","src":"22532:69:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3479,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"22566:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22573:26:8","memberName":"InsufficientAllowanceError","nodeType":"MemberAccess","referencedDeclaration":3797,"src":"22566:33:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22566:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3483,"nodeType":"RevertStatement","src":"22559:42:8"}}]},"id":3486,"implemented":true,"kind":"function","modifiers":[],"name":"_hasEnoughAllowance","nameLocation":"22352:19:8","nodeType":"FunctionDefinition","parameters":{"id":3463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3458,"mutability":"mutable","name":"token","nameLocation":"22387:5:8","nodeType":"VariableDeclaration","scope":3486,"src":"22372:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"},"typeName":{"id":3457,"nodeType":"UserDefinedTypeName","pathNode":{"id":3456,"name":"IERC20Extented","nameLocations":["22372:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":3940,"src":"22372:14:8"},"referencedDeclaration":3940,"src":"22372:14:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Extented_$3940","typeString":"contract IERC20Extented"}},"visibility":"internal"},{"constant":false,"id":3460,"mutability":"mutable","name":"userAddress","nameLocation":"22402:11:8","nodeType":"VariableDeclaration","scope":3486,"src":"22394:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3459,"name":"address","nodeType":"ElementaryTypeName","src":"22394:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3462,"mutability":"mutable","name":"amount","nameLocation":"22423:6:8","nodeType":"VariableDeclaration","scope":3486,"src":"22415:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3461,"name":"uint256","nodeType":"ElementaryTypeName","src":"22415:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22371:59:8"},"returnParameters":{"id":3464,"nodeType":"ParameterList","parameters":[],"src":"22445:0:8"},"scope":3487,"src":"22343:265:8","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3488,"src":"257:22353:8","usedErrors":[305,308,3783,3785,3787,3789,3793,3795,3797,3813,3825,3829,3845,3847,3857,3873,3897,3899,3901],"usedEvents":[317,326,335,1241,1253,1261,1271,1275,1283,1287,1292,1298,1306]}],"src":"33:22577:8"}},"contracts/core/DappadVestingFactory.sol":{"id":9,"ast":{"absolutePath":"contracts/core/DappadVestingFactory.sol","exportedSymbols":{"AccessControl":[295],"Context":[603],"DappadVesting":[3487],"DappadVestingFactory":[3779],"ERC165":[1164],"Errors":[3928],"IAccessControl":[378],"IDappadSale":[4250],"IDappadSaleFactory":[3955],"IDappadStake":[4092],"IDappadStakeController":[4023],"IDappadStakeControllerFactory":[3967],"IDappadStakeFactory":[3963],"IDappadVesting":[4336],"IDappadVestingFactory":[3959],"IERC165":[1176],"IERC20":[456],"IERC20Extented":[3940],"IERC721":[573],"IERC721Extented":[3951],"MerkleProof":[1140]},"id":3780,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3489,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"33:23:9"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":3490,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3780,"sourceUnit":296,"src":"58:58:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/DappadVesting.sol","file":"./DappadVesting.sol","id":3491,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3780,"sourceUnit":3488,"src":"117:29:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/Interfaces.sol","file":"../interfaces/Interfaces.sol","id":3492,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3780,"sourceUnit":4337,"src":"147:38:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/errors/Errors.sol","file":"../errors/Errors.sol","id":3493,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3780,"sourceUnit":3929,"src":"186:30:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3494,"name":"AccessControl","nameLocations":["251:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"251:13:9"},"id":3495,"nodeType":"InheritanceSpecifier","src":"251:13:9"}],"canonicalName":"DappadVestingFactory","contractDependencies":[3487],"contractKind":"contract","fullyImplemented":true,"id":3779,"linearizedBaseContracts":[3779,295,1164,1176,378,603],"name":"DappadVestingFactory","nameLocation":"227:20:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"117803e3","id":3500,"mutability":"constant","name":"OWNER","nameLocation":"295:5:9","nodeType":"VariableDeclaration","scope":3779,"src":"271:50:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3496,"name":"bytes32","nodeType":"ElementaryTypeName","src":"271:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4f574e4552","id":3498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"313:7:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b","typeString":"literal_string \"OWNER\""},"value":"OWNER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b","typeString":"literal_string \"OWNER\""}],"id":3497,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"303:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"303:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"2a0acc6a","id":3505,"mutability":"constant","name":"ADMIN","nameLocation":"351:5:9","nodeType":"VariableDeclaration","scope":3779,"src":"327:50:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3501,"name":"bytes32","nodeType":"ElementaryTypeName","src":"327:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"41444d494e","id":3503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"369:7:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42","typeString":"literal_string \"ADMIN\""},"value":"ADMIN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42","typeString":"literal_string \"ADMIN\""}],"id":3502,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"359:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"359:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"bf5a1383","id":3508,"mutability":"mutable","name":"allVestings","nameLocation":"401:11:9","nodeType":"VariableDeclaration","scope":3779,"src":"384:28:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":3506,"name":"address","nodeType":"ElementaryTypeName","src":"384:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3507,"nodeType":"ArrayTypeName","src":"384:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"anonymous":false,"eventSelector":"2ebb92afaf83ff700c8cbb7d86e0d28a975ab60bfa47c9a003c7f01dcb1166c7","id":3527,"name":"VestingCreated","nameLocation":"425:14:9","nodeType":"EventDefinition","parameters":{"id":3526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3510,"indexed":false,"mutability":"mutable","name":"vestingCount","nameLocation":"457:12:9","nodeType":"VariableDeclaration","scope":3527,"src":"449:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3509,"name":"uint256","nodeType":"ElementaryTypeName","src":"449:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3512,"indexed":false,"mutability":"mutable","name":"vestingDuration","nameLocation":"487:15:9","nodeType":"VariableDeclaration","scope":3527,"src":"479:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3511,"name":"uint256","nodeType":"ElementaryTypeName","src":"479:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3514,"indexed":false,"mutability":"mutable","name":"vestingCliffDuration","nameLocation":"520:20:9","nodeType":"VariableDeclaration","scope":3527,"src":"512:28:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3513,"name":"uint256","nodeType":"ElementaryTypeName","src":"512:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3517,"indexed":false,"mutability":"mutable","name":"vestingPercentages","nameLocation":"560:18:9","nodeType":"VariableDeclaration","scope":3527,"src":"550:28:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3515,"name":"uint256","nodeType":"ElementaryTypeName","src":"550:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3516,"nodeType":"ArrayTypeName","src":"550:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3519,"indexed":false,"mutability":"mutable","name":"onTGE","nameLocation":"593:5:9","nodeType":"VariableDeclaration","scope":3527,"src":"588:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3518,"name":"bool","nodeType":"ElementaryTypeName","src":"588:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3521,"indexed":false,"mutability":"mutable","name":"saleTokenAddress","nameLocation":"616:16:9","nodeType":"VariableDeclaration","scope":3527,"src":"608:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3520,"name":"address","nodeType":"ElementaryTypeName","src":"608:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3523,"indexed":false,"mutability":"mutable","name":"saleContractAddress","nameLocation":"650:19:9","nodeType":"VariableDeclaration","scope":3527,"src":"642:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3522,"name":"address","nodeType":"ElementaryTypeName","src":"642:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3525,"indexed":false,"mutability":"mutable","name":"factoryContractAddress","nameLocation":"687:22:9","nodeType":"VariableDeclaration","scope":3527,"src":"679:30:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3524,"name":"address","nodeType":"ElementaryTypeName","src":"679:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"439:276:9"},"src":"419:297:9"},{"anonymous":false,"eventSelector":"d085eed8df4d307965bf7c941103b5df3c4c9b85ab024d96efd506124010c442","id":3531,"name":"StakeContractAddressUpdated","nameLocation":"727:27:9","nodeType":"EventDefinition","parameters":{"id":3530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3529,"indexed":false,"mutability":"mutable","name":"_stakeContractAddress","nameLocation":"763:21:9","nodeType":"VariableDeclaration","scope":3531,"src":"755:29:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3528,"name":"address","nodeType":"ElementaryTypeName","src":"755:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"754:31:9"},"src":"721:65:9"},{"body":{"id":3559,"nodeType":"Block","src":"876:183:9","statements":[{"expression":{"arguments":[{"id":3538,"name":"OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"900:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3539,"name":"OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"907:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3537,"name":"_setRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"886:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32)"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"886:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3541,"nodeType":"ExpressionStatement","src":"886:27:9"},{"expression":{"arguments":[{"id":3543,"name":"ADMIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"937:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3544,"name":"OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"944:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3542,"name":"_setRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"923:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32)"}},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3546,"nodeType":"ExpressionStatement","src":"923:27:9"},{"expression":{"arguments":[{"id":3548,"name":"OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"972:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3549,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"979:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"983:6:9","memberName":"sender","nodeType":"MemberAccess","src":"979:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3547,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"961:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"961:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3552,"nodeType":"ExpressionStatement","src":"961:29:9"},{"expression":{"arguments":[{"id":3554,"name":"ADMIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"1011:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3555,"name":"vestingFactoryParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"1018:20:9","typeDescriptions":{"typeIdentifier":"t_struct$_VestingFactoryParams_$3958_memory_ptr","typeString":"struct IDappadVestingFactory.VestingFactoryParams memory"}},"id":3556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1039:12:9","memberName":"adminAddress","nodeType":"MemberAccess","referencedDeclaration":3957,"src":"1018:33:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3553,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"1000:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1000:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3558,"nodeType":"ExpressionStatement","src":"1000:52:9"}]},"id":3560,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3534,"mutability":"mutable","name":"vestingFactoryParams","nameLocation":"854:20:9","nodeType":"VariableDeclaration","scope":3560,"src":"804:70:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VestingFactoryParams_$3958_memory_ptr","typeString":"struct IDappadVestingFactory.VestingFactoryParams"},"typeName":{"id":3533,"nodeType":"UserDefinedTypeName","pathNode":{"id":3532,"name":"IDappadVestingFactory.VestingFactoryParams","nameLocations":["804:21:9","826:20:9"],"nodeType":"IdentifierPath","referencedDeclaration":3958,"src":"804:42:9"},"referencedDeclaration":3958,"src":"804:42:9","typeDescriptions":{"typeIdentifier":"t_struct$_VestingFactoryParams_$3958_storage_ptr","typeString":"struct IDappadVestingFactory.VestingFactoryParams"}},"visibility":"internal"}],"src":"803:72:9"},"returnParameters":{"id":3536,"nodeType":"ParameterList","parameters":[],"src":"876:0:9"},"scope":3779,"src":"792:267:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3569,"nodeType":"Block","src":"1107:53:9","statements":[{"expression":{"arguments":[{"id":3565,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"1133:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3564,"name":"_notZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"1117:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1117:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3567,"nodeType":"ExpressionStatement","src":"1117:25:9"},{"id":3568,"nodeType":"PlaceholderStatement","src":"1152:1:9"}]},"id":3570,"name":"notZeroAddress","nameLocation":"1074:14:9","nodeType":"ModifierDefinition","parameters":{"id":3563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3562,"mutability":"mutable","name":"_address","nameLocation":"1097:8:9","nodeType":"VariableDeclaration","scope":3570,"src":"1089:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3561,"name":"address","nodeType":"ElementaryTypeName","src":"1089:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1088:18:9"},"src":"1065:95:9","virtual":false,"visibility":"internal"},{"body":{"id":3579,"nodeType":"Block","src":"1203:48:9","statements":[{"expression":{"arguments":[{"id":3575,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"1224:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3574,"name":"_onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"1213:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$__$","typeString":"function (address) view"}},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1213:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3577,"nodeType":"ExpressionStatement","src":"1213:20:9"},{"id":3578,"nodeType":"PlaceholderStatement","src":"1243:1:9"}]},"id":3580,"name":"onlyOwner","nameLocation":"1175:9:9","nodeType":"ModifierDefinition","parameters":{"id":3573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3572,"mutability":"mutable","name":"_address","nameLocation":"1193:8:9","nodeType":"VariableDeclaration","scope":3580,"src":"1185:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3571,"name":"address","nodeType":"ElementaryTypeName","src":"1185:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1184:18:9"},"src":"1166:85:9","virtual":false,"visibility":"internal"},{"body":{"id":3589,"nodeType":"Block","src":"1301:55:9","statements":[{"expression":{"arguments":[{"id":3585,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"1329:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3584,"name":"_onlyOwnerOrAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"1311:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$__$","typeString":"function (address) view"}},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1311:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3587,"nodeType":"ExpressionStatement","src":"1311:27:9"},{"id":3588,"nodeType":"PlaceholderStatement","src":"1348:1:9"}]},"id":3590,"name":"onlyOwnerOrAdmin","nameLocation":"1266:16:9","nodeType":"ModifierDefinition","parameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3582,"mutability":"mutable","name":"_address","nameLocation":"1291:8:9","nodeType":"VariableDeclaration","scope":3590,"src":"1283:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3581,"name":"address","nodeType":"ElementaryTypeName","src":"1283:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1282:18:9"},"src":"1257:99:9","virtual":false,"visibility":"internal"},{"body":{"id":3687,"nodeType":"Block","src":"1589:975:9","statements":[{"assignments":[3611],"declarations":[{"constant":false,"id":3611,"mutability":"mutable","name":"vestingParams","nameLocation":"1635:13:9","nodeType":"VariableDeclaration","scope":3687,"src":"1599:49:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams"},"typeName":{"id":3610,"nodeType":"UserDefinedTypeName","pathNode":{"id":3609,"name":"IDappadVesting.VestingParams","nameLocations":["1599:14:9","1614:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":4260,"src":"1599:28:9"},"referencedDeclaration":4260,"src":"1599:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_storage_ptr","typeString":"struct IDappadVesting.VestingParams"}},"visibility":"internal"}],"id":3613,"initialValue":{"id":3612,"name":"_vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"1651:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"nodeType":"VariableDeclarationStatement","src":"1599:66:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"expression":{"id":3614,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"1680:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":3615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1694:14:9","memberName":"defaultVesting","nodeType":"MemberAccess","referencedDeclaration":4253,"src":"1680:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3616,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1709:18:9","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"1680:47:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1728:6:9","memberName":"length","nodeType":"MemberAccess","src":"1680:54:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1738:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1680:59:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3626,"nodeType":"IfStatement","src":"1676:133:9","trueBody":{"id":3625,"nodeType":"Block","src":"1741:68:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3620,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"1762:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1769:27:9","memberName":"EmptyVestingPercentageError","nodeType":"MemberAccess","referencedDeclaration":3845,"src":"1762:34:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1762:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3624,"nodeType":"RevertStatement","src":"1755:43:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3627,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"1822:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":3628,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1836:14:9","memberName":"defaultVesting","nodeType":"MemberAccess","referencedDeclaration":4253,"src":"1822:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3629,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1851:15:9","memberName":"vestingDuration","nodeType":"MemberAccess","referencedDeclaration":4269,"src":"1822:44:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1870:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1822:49:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3638,"nodeType":"IfStatement","src":"1818:123:9","trueBody":{"id":3637,"nodeType":"Block","src":"1873:68:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3632,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"1894:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:27:9","memberName":"InvalidVestingDurationError","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"1894:34:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1894:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3636,"nodeType":"RevertStatement","src":"1887:43:9"}]}},{"assignments":[3641],"declarations":[{"constant":false,"id":3641,"mutability":"mutable","name":"newVesting","nameLocation":"1965:10:9","nodeType":"VariableDeclaration","scope":3687,"src":"1951:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_DappadVesting_$3487","typeString":"contract DappadVesting"},"typeName":{"id":3640,"nodeType":"UserDefinedTypeName","pathNode":{"id":3639,"name":"DappadVesting","nameLocations":["1951:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":3487,"src":"1951:13:9"},"referencedDeclaration":3487,"src":"1951:13:9","typeDescriptions":{"typeIdentifier":"t_contract$_DappadVesting_$3487","typeString":"contract DappadVesting"}},"visibility":"internal"}],"id":3647,"initialValue":{"arguments":[{"id":3645,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"1996:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}],"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"1978:17:9","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_struct$_VestingParams_$4260_memory_ptr_$returns$_t_contract$_DappadVesting_$3487_$","typeString":"function (struct IDappadVesting.VestingParams memory) returns (contract DappadVesting)"},"typeName":{"id":3643,"nodeType":"UserDefinedTypeName","pathNode":{"id":3642,"name":"DappadVesting","nameLocations":["1982:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":3487,"src":"1982:13:9"},"referencedDeclaration":3487,"src":"1982:13:9","typeDescriptions":{"typeIdentifier":"t_contract$_DappadVesting_$3487","typeString":"contract DappadVesting"}}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1978:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_DappadVesting_$3487","typeString":"contract DappadVesting"}},"nodeType":"VariableDeclarationStatement","src":"1951:59:9"},{"expression":{"arguments":[{"arguments":[{"id":3653,"name":"newVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3641,"src":"2046:10:9","typeDescriptions":{"typeIdentifier":"t_contract$_DappadVesting_$3487","typeString":"contract DappadVesting"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DappadVesting_$3487","typeString":"contract DappadVesting"}],"id":3652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2038:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3651,"name":"address","nodeType":"ElementaryTypeName","src":"2038:7:9","typeDescriptions":{}}},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2038:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3648,"name":"allVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"2021:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2033:4:9","memberName":"push","nodeType":"MemberAccess","src":"2021:16:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2021:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3656,"nodeType":"ExpressionStatement","src":"2021:37:9"},{"eventCall":{"arguments":[{"expression":{"expression":{"id":3658,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"2102:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":3659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2116:14:9","memberName":"defaultVesting","nodeType":"MemberAccess","referencedDeclaration":4253,"src":"2102:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3660,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2131:12:9","memberName":"vestingCount","nodeType":"MemberAccess","referencedDeclaration":4267,"src":"2102:41:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":3661,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"2157:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":3662,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2171:14:9","memberName":"defaultVesting","nodeType":"MemberAccess","referencedDeclaration":4253,"src":"2157:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3663,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2186:15:9","memberName":"vestingDuration","nodeType":"MemberAccess","referencedDeclaration":4269,"src":"2157:44:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":3664,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"2215:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":3665,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2229:14:9","memberName":"defaultVesting","nodeType":"MemberAccess","referencedDeclaration":4253,"src":"2215:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2244:20:9","memberName":"vestingCliffDuration","nodeType":"MemberAccess","referencedDeclaration":4271,"src":"2215:49:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":3667,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"2278:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":3668,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2292:14:9","memberName":"defaultVesting","nodeType":"MemberAccess","referencedDeclaration":4253,"src":"2278:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3669,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2307:18:9","memberName":"vestingPercentages","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"2278:47:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"expression":{"id":3670,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"2339:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":3671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2353:14:9","memberName":"defaultVesting","nodeType":"MemberAccess","referencedDeclaration":4253,"src":"2339:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_memory_ptr","typeString":"struct IDappadVesting.Vesting memory"}},"id":3672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2368:5:9","memberName":"onTGE","nodeType":"MemberAccess","referencedDeclaration":4276,"src":"2339:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"expression":{"id":3673,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"2387:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":3674,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2401:16:9","memberName":"vestingAddresses","nodeType":"MemberAccess","referencedDeclaration":4256,"src":"2387:30:9","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_memory_ptr","typeString":"struct IDappadVesting.VestingAddresses memory"}},"id":3675,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2418:16:9","memberName":"saleTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4279,"src":"2387:47:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":3676,"name":"vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"2448:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":3677,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2462:16:9","memberName":"vestingAddresses","nodeType":"MemberAccess","referencedDeclaration":4256,"src":"2448:30:9","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_memory_ptr","typeString":"struct IDappadVesting.VestingAddresses memory"}},"id":3678,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2479:19:9","memberName":"saleContractAddress","nodeType":"MemberAccess","referencedDeclaration":4283,"src":"2448:50:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3681,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2520:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_DappadVestingFactory_$3779","typeString":"contract DappadVestingFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DappadVestingFactory_$3779","typeString":"contract DappadVestingFactory"}],"id":3680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2512:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3679,"name":"address","nodeType":"ElementaryTypeName","src":"2512:7:9","typeDescriptions":{}}},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2512:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3657,"name":"VestingCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"2074:14:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256[] memory,bool,address,address,address)"}},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2074:461:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3684,"nodeType":"EmitStatement","src":"2069:466:9"},{"expression":{"hexValue":"74727565","id":3685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2553:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3606,"id":3686,"nodeType":"Return","src":"2546:11:9"}]},"functionSelector":"19dfc573","id":3688,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":3596,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1477:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1481:6:9","memberName":"sender","nodeType":"MemberAccess","src":"1477:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3598,"kind":"modifierInvocation","modifierName":{"id":3595,"name":"onlyOwnerOrAdmin","nameLocations":["1460:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":3590,"src":"1460:16:9"},"nodeType":"ModifierInvocation","src":"1460:28:9"},{"arguments":[{"expression":{"expression":{"id":3600,"name":"_vestingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"1512:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams memory"}},"id":3601,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1527:16:9","memberName":"vestingAddresses","nodeType":"MemberAccess","referencedDeclaration":4256,"src":"1512:31:9","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_memory_ptr","typeString":"struct IDappadVesting.VestingAddresses memory"}},"id":3602,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1544:16:9","memberName":"saleTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4279,"src":"1512:48:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3603,"kind":"modifierInvocation","modifierName":{"id":3599,"name":"notZeroAddress","nameLocations":["1497:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":3570,"src":"1497:14:9"},"nodeType":"ModifierInvocation","src":"1497:64:9"}],"name":"createVesting","nameLocation":"1371:13:9","nodeType":"FunctionDefinition","parameters":{"id":3594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3593,"mutability":"mutable","name":"_vestingParams","nameLocation":"1421:14:9","nodeType":"VariableDeclaration","scope":3688,"src":"1385:50:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_memory_ptr","typeString":"struct IDappadVesting.VestingParams"},"typeName":{"id":3592,"nodeType":"UserDefinedTypeName","pathNode":{"id":3591,"name":"IDappadVesting.VestingParams","nameLocations":["1385:14:9","1400:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":4260,"src":"1385:28:9"},"referencedDeclaration":4260,"src":"1385:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_VestingParams_$4260_storage_ptr","typeString":"struct IDappadVesting.VestingParams"}},"visibility":"internal"}],"src":"1384:52:9"},"returnParameters":{"id":3606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3688,"src":"1579:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3604,"name":"bool","nodeType":"ElementaryTypeName","src":"1579:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1578:6:9"},"scope":3779,"src":"1362:1202:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3696,"nodeType":"Block","src":"2629:42:9","statements":[{"expression":{"expression":{"id":3693,"name":"allVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"2646:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2658:6:9","memberName":"length","nodeType":"MemberAccess","src":"2646:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3692,"id":3695,"nodeType":"Return","src":"2639:25:9"}]},"functionSelector":"0e246273","id":3697,"implemented":true,"kind":"function","modifiers":[],"name":"getVestingCount","nameLocation":"2579:15:9","nodeType":"FunctionDefinition","parameters":{"id":3689,"nodeType":"ParameterList","parameters":[],"src":"2594:2:9"},"returnParameters":{"id":3692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3697,"src":"2620:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3690,"name":"uint256","nodeType":"ElementaryTypeName","src":"2620:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2619:9:9"},"scope":3779,"src":"2570:101:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3719,"nodeType":"Block","src":"2744:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3704,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"2758:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":3705,"name":"allVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"2767:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2779:6:9","memberName":"length","nodeType":"MemberAccess","src":"2767:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2758:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3714,"nodeType":"IfStatement","src":"2754:98:9","trueBody":{"id":3713,"nodeType":"Block","src":"2787:65:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3708,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"2808:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2815:24:9","memberName":"InvalidVestingIndexError","nodeType":"MemberAccess","referencedDeclaration":3829,"src":"2808:31:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2808:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3712,"nodeType":"RevertStatement","src":"2801:40:9"}]}},{"expression":{"baseExpression":{"id":3715,"name":"allVestings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"2868:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3717,"indexExpression":{"id":3716,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"2880:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2868:18:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3703,"id":3718,"nodeType":"Return","src":"2861:25:9"}]},"functionSelector":"615155dd","id":3720,"implemented":true,"kind":"function","modifiers":[],"name":"getVesting","nameLocation":"2686:10:9","nodeType":"FunctionDefinition","parameters":{"id":3700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3699,"mutability":"mutable","name":"index","nameLocation":"2705:5:9","nodeType":"VariableDeclaration","scope":3720,"src":"2697:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3698,"name":"uint256","nodeType":"ElementaryTypeName","src":"2697:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2696:15:9"},"returnParameters":{"id":3703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3720,"src":"2735:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3701,"name":"address","nodeType":"ElementaryTypeName","src":"2735:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2734:9:9"},"scope":3779,"src":"2677:216:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3737,"nodeType":"Block","src":"2956:77:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3725,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"2970:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2990:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2982:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3726,"name":"address","nodeType":"ElementaryTypeName","src":"2982:7:9","typeDescriptions":{}}},"id":3729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2982:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2970:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3736,"nodeType":"IfStatement","src":"2966:60:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3731,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"3001:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3008:16:9","memberName":"ZeroAddressError","nodeType":"MemberAccess","referencedDeclaration":3783,"src":"3001:23:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3001:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3735,"nodeType":"RevertStatement","src":"2994:32:9"}}]},"id":3738,"implemented":true,"kind":"function","modifiers":[],"name":"_notZeroAddress","nameLocation":"2908:15:9","nodeType":"FunctionDefinition","parameters":{"id":3723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3722,"mutability":"mutable","name":"_address","nameLocation":"2932:8:9","nodeType":"VariableDeclaration","scope":3738,"src":"2924:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3721,"name":"address","nodeType":"ElementaryTypeName","src":"2924:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2923:18:9"},"returnParameters":{"id":3724,"nodeType":"ParameterList","parameters":[],"src":"2956:0:9"},"scope":3779,"src":"2899:134:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3754,"nodeType":"Block","src":"3091:81:9","statements":[{"condition":{"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3105:25:9","subExpression":{"arguments":[{"id":3744,"name":"OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"3114:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3745,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"3121:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3743,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3106:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3106:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3753,"nodeType":"IfStatement","src":"3101:64:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3748,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"3139:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3146:17:9","memberName":"UnauthorizedError","nodeType":"MemberAccess","referencedDeclaration":3785,"src":"3139:24:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3139:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3752,"nodeType":"RevertStatement","src":"3132:33:9"}}]},"id":3755,"implemented":true,"kind":"function","modifiers":[],"name":"_onlyOwner","nameLocation":"3048:10:9","nodeType":"FunctionDefinition","parameters":{"id":3741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3740,"mutability":"mutable","name":"_address","nameLocation":"3067:8:9","nodeType":"VariableDeclaration","scope":3755,"src":"3059:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3739,"name":"address","nodeType":"ElementaryTypeName","src":"3059:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3058:18:9"},"returnParameters":{"id":3742,"nodeType":"ParameterList","parameters":[],"src":"3091:0:9"},"scope":3779,"src":"3039:133:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3777,"nodeType":"Block","src":"3237:110:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3251:25:9","subExpression":{"arguments":[{"id":3761,"name":"OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"3260:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3762,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3757,"src":"3267:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3760,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3252:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3252:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3280:25:9","subExpression":{"arguments":[{"id":3766,"name":"ADMIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"3289:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3767,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3757,"src":"3296:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3765,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3281:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3251:54:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3776,"nodeType":"IfStatement","src":"3247:93:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3771,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"3314:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3928_$","typeString":"type(contract Errors)"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:17:9","memberName":"UnauthorizedError","nodeType":"MemberAccess","referencedDeclaration":3785,"src":"3314:24:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3775,"nodeType":"RevertStatement","src":"3307:33:9"}}]},"id":3778,"implemented":true,"kind":"function","modifiers":[],"name":"_onlyOwnerOrAdmin","nameLocation":"3187:17:9","nodeType":"FunctionDefinition","parameters":{"id":3758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3757,"mutability":"mutable","name":"_address","nameLocation":"3213:8:9","nodeType":"VariableDeclaration","scope":3778,"src":"3205:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3756,"name":"address","nodeType":"ElementaryTypeName","src":"3205:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3204:18:9"},"returnParameters":{"id":3759,"nodeType":"ParameterList","parameters":[],"src":"3237:0:9"},"scope":3779,"src":"3178:169:9","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3780,"src":"218:3131:9","usedErrors":[305,308,3783,3785,3825,3829,3845],"usedEvents":[317,326,335,3527,3531]}],"src":"33:3316:9"}},"contracts/errors/Errors.sol":{"id":10,"ast":{"absolutePath":"contracts/errors/Errors.sol","exportedSymbols":{"Errors":[3928]},"id":3929,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3781,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"33:23:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3928,"linearizedBaseContracts":[3928],"name":"Errors","nameLocation":"76:6:10","nodeType":"ContractDefinition","nodes":[{"errorSelector":"3efa09af","id":3783,"name":"ZeroAddressError","nameLocation":"95:16:10","nodeType":"ErrorDefinition","parameters":{"id":3782,"nodeType":"ParameterList","parameters":[],"src":"111:2:10"},"src":"89:25:10"},{"errorSelector":"8b5701f7","id":3785,"name":"UnauthorizedError","nameLocation":"125:17:10","nodeType":"ErrorDefinition","parameters":{"id":3784,"nodeType":"ParameterList","parameters":[],"src":"142:2:10"},"src":"119:26:10"},{"errorSelector":"f83e23f5","id":3787,"name":"TokenTransferFailedError","nameLocation":"156:24:10","nodeType":"ErrorDefinition","parameters":{"id":3786,"nodeType":"ParameterList","parameters":[],"src":"180:2:10"},"src":"150:33:10"},{"errorSelector":"0f9e68e6","id":3789,"name":"ArraysLengthMismatchError","nameLocation":"194:25:10","nodeType":"ErrorDefinition","parameters":{"id":3788,"nodeType":"ParameterList","parameters":[],"src":"219:2:10"},"src":"188:34:10"},{"errorSelector":"98c6aeab","id":3791,"name":"NotEnabledError","nameLocation":"233:15:10","nodeType":"ErrorDefinition","parameters":{"id":3790,"nodeType":"ParameterList","parameters":[],"src":"248:2:10"},"src":"227:24:10"},{"errorSelector":"384d3c59","id":3793,"name":"InsufficientBalanceError","nameLocation":"263:24:10","nodeType":"ErrorDefinition","parameters":{"id":3792,"nodeType":"ParameterList","parameters":[],"src":"287:2:10"},"src":"257:33:10"},{"errorSelector":"e23f04e1","id":3795,"name":"InsufficientContractBalanceError","nameLocation":"301:32:10","nodeType":"ErrorDefinition","parameters":{"id":3794,"nodeType":"ParameterList","parameters":[],"src":"333:2:10"},"src":"295:41:10"},{"errorSelector":"73a74a78","id":3797,"name":"InsufficientAllowanceError","nameLocation":"347:26:10","nodeType":"ErrorDefinition","parameters":{"id":3796,"nodeType":"ParameterList","parameters":[],"src":"373:2:10"},"src":"341:35:10"},{"errorSelector":"093496e6","id":3799,"name":"UserHasNoNFTError","nameLocation":"387:17:10","nodeType":"ErrorDefinition","parameters":{"id":3798,"nodeType":"ParameterList","parameters":[],"src":"404:2:10"},"src":"381:26:10"},{"errorSelector":"50754704","id":3801,"name":"UserNotRegisteredError","nameLocation":"418:22:10","nodeType":"ErrorDefinition","parameters":{"id":3800,"nodeType":"ParameterList","parameters":[],"src":"440:2:10"},"src":"412:31:10"},{"errorSelector":"d3c27975","id":3803,"name":"UserAlreadyRegisteredError","nameLocation":"454:26:10","nodeType":"ErrorDefinition","parameters":{"id":3802,"nodeType":"ParameterList","parameters":[],"src":"480:2:10"},"src":"448:35:10"},{"errorSelector":"bab3af0b","id":3805,"name":"RegisterNotStartedError","nameLocation":"494:23:10","nodeType":"ErrorDefinition","parameters":{"id":3804,"nodeType":"ParameterList","parameters":[],"src":"517:2:10"},"src":"488:32:10"},{"errorSelector":"a82a69f8","id":3807,"name":"MaxTierInvestmentReachedError","nameLocation":"531:29:10","nodeType":"ErrorDefinition","parameters":{"id":3806,"nodeType":"ParameterList","parameters":[],"src":"560:2:10"},"src":"525:38:10"},{"errorSelector":"4ce4fc26","id":3809,"name":"RegisterAlreadyEndedError","nameLocation":"574:25:10","nodeType":"ErrorDefinition","parameters":{"id":3808,"nodeType":"ParameterList","parameters":[],"src":"599:2:10"},"src":"568:34:10"},{"errorSelector":"6f6fd835","id":3811,"name":"TierOneCannotJoinStakerRoundError","nameLocation":"613:33:10","nodeType":"ErrorDefinition","parameters":{"id":3810,"nodeType":"ParameterList","parameters":[],"src":"646:2:10"},"src":"607:42:10"},{"errorSelector":"7a8d6428","id":3813,"name":"InvalidAmountError","nameLocation":"661:18:10","nodeType":"ErrorDefinition","parameters":{"id":3812,"nodeType":"ParameterList","parameters":[],"src":"679:2:10"},"src":"655:27:10"},{"errorSelector":"7dbc322c","id":3815,"name":"InvalidTierIndexError","nameLocation":"693:21:10","nodeType":"ErrorDefinition","parameters":{"id":3814,"nodeType":"ParameterList","parameters":[],"src":"714:2:10"},"src":"687:30:10"},{"errorSelector":"070dcd44","id":3817,"name":"InvalidSaleStartDateError","nameLocation":"728:25:10","nodeType":"ErrorDefinition","parameters":{"id":3816,"nodeType":"ParameterList","parameters":[],"src":"753:2:10"},"src":"722:34:10"},{"errorSelector":"7f9b37b2","id":3819,"name":"InvalidSaleEndDateError","nameLocation":"767:23:10","nodeType":"ErrorDefinition","parameters":{"id":3818,"nodeType":"ParameterList","parameters":[],"src":"790:2:10"},"src":"761:32:10"},{"errorSelector":"1e672f3b","id":3821,"name":"InvalidSaleDurationError","nameLocation":"804:24:10","nodeType":"ErrorDefinition","parameters":{"id":3820,"nodeType":"ParameterList","parameters":[],"src":"828:2:10"},"src":"798:33:10"},{"errorSelector":"e14abd8f","id":3823,"name":"InvalidMaxInvestmentAmountError","nameLocation":"842:31:10","nodeType":"ErrorDefinition","parameters":{"id":3822,"nodeType":"ParameterList","parameters":[],"src":"873:2:10"},"src":"836:40:10"},{"errorSelector":"28cec4b6","id":3825,"name":"InvalidVestingDurationError","nameLocation":"887:27:10","nodeType":"ErrorDefinition","parameters":{"id":3824,"nodeType":"ParameterList","parameters":[],"src":"914:2:10"},"src":"881:36:10"},{"errorSelector":"62510e8f","id":3827,"name":"InvalidSaleIndexError","nameLocation":"928:21:10","nodeType":"ErrorDefinition","parameters":{"id":3826,"nodeType":"ParameterList","parameters":[],"src":"949:2:10"},"src":"922:30:10"},{"errorSelector":"690cd635","id":3829,"name":"InvalidVestingIndexError","nameLocation":"963:24:10","nodeType":"ErrorDefinition","parameters":{"id":3828,"nodeType":"ParameterList","parameters":[],"src":"987:2:10"},"src":"957:33:10"},{"errorSelector":"d2b13237","id":3831,"name":"InvalidStakeContractAddressError","nameLocation":"1001:32:10","nodeType":"ErrorDefinition","parameters":{"id":3830,"nodeType":"ParameterList","parameters":[],"src":"1033:2:10"},"src":"995:41:10"},{"errorSelector":"42477839","id":3833,"name":"InvalidInterestRateError","nameLocation":"1048:24:10","nodeType":"ErrorDefinition","parameters":{"id":3832,"nodeType":"ParameterList","parameters":[],"src":"1072:2:10"},"src":"1042:33:10"},{"errorSelector":"2de8ce6f","id":3835,"name":"InvalidLockDurationError","nameLocation":"1086:24:10","nodeType":"ErrorDefinition","parameters":{"id":3834,"nodeType":"ParameterList","parameters":[],"src":"1110:2:10"},"src":"1080:33:10"},{"errorSelector":"093424cc","id":3837,"name":"InvalidPaymasterInputLengthError","nameLocation":"1125:32:10","nodeType":"ErrorDefinition","parameters":{"id":3836,"nodeType":"ParameterList","parameters":[],"src":"1157:2:10"},"src":"1119:41:10"},{"errorSelector":"9f12e874","id":3839,"name":"InvalidTokenError","nameLocation":"1171:17:10","nodeType":"ErrorDefinition","parameters":{"id":3838,"nodeType":"ParameterList","parameters":[],"src":"1188:2:10"},"src":"1165:26:10"},{"errorSelector":"1cfd4015","id":3841,"name":"EmptySaleNameError","nameLocation":"1203:18:10","nodeType":"ErrorDefinition","parameters":{"id":3840,"nodeType":"ParameterList","parameters":[],"src":"1221:2:10"},"src":"1197:27:10"},{"errorSelector":"ed4d9fcc","id":3843,"name":"EmptyTierDetailsError","nameLocation":"1235:21:10","nodeType":"ErrorDefinition","parameters":{"id":3842,"nodeType":"ParameterList","parameters":[],"src":"1256:2:10"},"src":"1229:30:10"},{"errorSelector":"2729bb34","id":3845,"name":"EmptyVestingPercentageError","nameLocation":"1270:27:10","nodeType":"ErrorDefinition","parameters":{"id":3844,"nodeType":"ParameterList","parameters":[],"src":"1297:2:10"},"src":"1264:36:10"},{"errorSelector":"e9715102","id":3847,"name":"TotalVestingPercentageError","nameLocation":"1311:27:10","nodeType":"ErrorDefinition","parameters":{"id":3846,"nodeType":"ParameterList","parameters":[],"src":"1338:2:10"},"src":"1305:36:10"},{"errorSelector":"1bcb7a5c","id":3849,"name":"FailedToAddToken","nameLocation":"1353:16:10","nodeType":"ErrorDefinition","parameters":{"id":3848,"nodeType":"ParameterList","parameters":[],"src":"1369:2:10"},"src":"1347:25:10"},{"errorSelector":"6f36ba6f","id":3851,"name":"SaleNotStartedError","nameLocation":"1383:19:10","nodeType":"ErrorDefinition","parameters":{"id":3850,"nodeType":"ParameterList","parameters":[],"src":"1402:2:10"},"src":"1377:28:10"},{"errorSelector":"68a5e0cb","id":3853,"name":"SaleNotEndedError","nameLocation":"1416:17:10","nodeType":"ErrorDefinition","parameters":{"id":3852,"nodeType":"ParameterList","parameters":[],"src":"1433:2:10"},"src":"1410:26:10"},{"errorSelector":"6b62c0a5","id":3855,"name":"SaleAlreadyEndedError","nameLocation":"1447:21:10","nodeType":"ErrorDefinition","parameters":{"id":3854,"nodeType":"ParameterList","parameters":[],"src":"1468:2:10"},"src":"1441:30:10"},{"errorSelector":"2f0e159d","id":3857,"name":"NotJoinedSaleError","nameLocation":"1482:18:10","nodeType":"ErrorDefinition","parameters":{"id":3856,"nodeType":"ParameterList","parameters":[],"src":"1500:2:10"},"src":"1476:27:10"},{"errorSelector":"252adcf9","id":3859,"name":"AlreadyJoinedSaleError","nameLocation":"1514:22:10","nodeType":"ErrorDefinition","parameters":{"id":3858,"nodeType":"ParameterList","parameters":[],"src":"1536:2:10"},"src":"1508:31:10"},{"errorSelector":"778ba6f7","id":3861,"name":"SaleIsPausedError","nameLocation":"1550:17:10","nodeType":"ErrorDefinition","parameters":{"id":3860,"nodeType":"ParameterList","parameters":[],"src":"1567:2:10"},"src":"1544:26:10"},{"errorSelector":"07d5746f","id":3863,"name":"UserHasNoNFTsError","nameLocation":"1581:18:10","nodeType":"ErrorDefinition","parameters":{"id":3862,"nodeType":"ParameterList","parameters":[],"src":"1599:2:10"},"src":"1575:27:10"},{"errorSelector":"919ace34","id":3865,"name":"FCFSSaleNotEnabledError","nameLocation":"1614:23:10","nodeType":"ErrorDefinition","parameters":{"id":3864,"nodeType":"ParameterList","parameters":[],"src":"1637:2:10"},"src":"1608:32:10"},{"errorSelector":"4e135726","id":3867,"name":"FCFSSaleNotStartedError","nameLocation":"1651:23:10","nodeType":"ErrorDefinition","parameters":{"id":3866,"nodeType":"ParameterList","parameters":[],"src":"1674:2:10"},"src":"1645:32:10"},{"errorSelector":"61a63aad","id":3869,"name":"FCFSSaleAlreadyStartedError","nameLocation":"1688:27:10","nodeType":"ErrorDefinition","parameters":{"id":3868,"nodeType":"ParameterList","parameters":[],"src":"1715:2:10"},"src":"1682:36:10"},{"errorSelector":"766bbb51","id":3871,"name":"FirstVestingAlreadyClaimedError","nameLocation":"1729:31:10","nodeType":"ErrorDefinition","parameters":{"id":3870,"nodeType":"ParameterList","parameters":[],"src":"1760:2:10"},"src":"1723:40:10"},{"errorSelector":"8f78e530","id":3873,"name":"VestingsNotClaimableError","nameLocation":"1774:25:10","nodeType":"ErrorDefinition","parameters":{"id":3872,"nodeType":"ParameterList","parameters":[],"src":"1799:2:10"},"src":"1768:34:10"},{"errorSelector":"16203c04","id":3875,"name":"UserNotWhitelistedError","nameLocation":"1814:23:10","nodeType":"ErrorDefinition","parameters":{"id":3874,"nodeType":"ParameterList","parameters":[],"src":"1837:2:10"},"src":"1808:32:10"},{"errorSelector":"ba4c4493","id":3877,"name":"MinimumInvestmentNotReachedError","nameLocation":"1852:32:10","nodeType":"ErrorDefinition","parameters":{"id":3876,"nodeType":"ParameterList","parameters":[],"src":"1884:2:10"},"src":"1846:41:10"},{"errorSelector":"ecb54fbe","id":3879,"name":"MaximumInvestmentReachedError","nameLocation":"1898:29:10","nodeType":"ErrorDefinition","parameters":{"id":3878,"nodeType":"ParameterList","parameters":[],"src":"1927:2:10"},"src":"1892:38:10"},{"errorSelector":"f39595f9","id":3881,"name":"MaxTotalInvestmentReachedError","nameLocation":"1941:30:10","nodeType":"ErrorDefinition","parameters":{"id":3880,"nodeType":"ParameterList","parameters":[],"src":"1971:2:10"},"src":"1935:39:10"},{"errorSelector":"9b207309","id":3883,"name":"MaxNodeCountReachedError","nameLocation":"1985:24:10","nodeType":"ErrorDefinition","parameters":{"id":3882,"nodeType":"ParameterList","parameters":[],"src":"2009:2:10"},"src":"1979:33:10"},{"errorSelector":"23178682","id":3885,"name":"MaxNodeCountPerUserReachedError","nameLocation":"2023:31:10","nodeType":"ErrorDefinition","parameters":{"id":3884,"nodeType":"ParameterList","parameters":[],"src":"2054:2:10"},"src":"2017:40:10"},{"errorSelector":"9b2a6ce4","id":3887,"name":"MinimumNodeTierNotReachedError","nameLocation":"2068:30:10","nodeType":"ErrorDefinition","parameters":{"id":3886,"nodeType":"ParameterList","parameters":[],"src":"2098:2:10"},"src":"2062:39:10"},{"errorSelector":"91279a1d","id":3889,"name":"MaximumNodeTierReachedError","nameLocation":"2112:27:10","nodeType":"ErrorDefinition","parameters":{"id":3888,"nodeType":"ParameterList","parameters":[],"src":"2139:2:10"},"src":"2106:36:10"},{"errorSelector":"64120d87","id":3891,"name":"MinimumUserTierNotReachedError","nameLocation":"2153:30:10","nodeType":"ErrorDefinition","parameters":{"id":3890,"nodeType":"ParameterList","parameters":[],"src":"2183:2:10"},"src":"2147:39:10"},{"errorSelector":"8d8fcf06","id":3893,"name":"RefundNotEnabledError","nameLocation":"2198:21:10","nodeType":"ErrorDefinition","parameters":{"id":3892,"nodeType":"ParameterList","parameters":[],"src":"2219:2:10"},"src":"2192:30:10"},{"errorSelector":"e7985113","id":3895,"name":"RefundPeriodOverError","nameLocation":"2233:21:10","nodeType":"ErrorDefinition","parameters":{"id":3894,"nodeType":"ParameterList","parameters":[],"src":"2254:2:10"},"src":"2227:30:10"},{"errorSelector":"8c85e4bc","id":3897,"name":"AlreadyRefundedError","nameLocation":"2268:20:10","nodeType":"ErrorDefinition","parameters":{"id":3896,"nodeType":"ParameterList","parameters":[],"src":"2288:2:10"},"src":"2262:29:10"},{"errorSelector":"5f1e377d","id":3899,"name":"AlreadyClaimedError","nameLocation":"2303:19:10","nodeType":"ErrorDefinition","parameters":{"id":3898,"nodeType":"ParameterList","parameters":[],"src":"2322:2:10"},"src":"2297:28:10"},{"errorSelector":"23ec979c","id":3901,"name":"VestingNotClaimableError","nameLocation":"2336:24:10","nodeType":"ErrorDefinition","parameters":{"id":3900,"nodeType":"ParameterList","parameters":[],"src":"2360:2:10"},"src":"2330:33:10"},{"errorSelector":"18f97b98","id":3903,"name":"NoTierDetailsFoundError","nameLocation":"2374:23:10","nodeType":"ErrorDefinition","parameters":{"id":3902,"nodeType":"ParameterList","parameters":[],"src":"2397:2:10"},"src":"2368:32:10"},{"errorSelector":"4a51cc46","id":3905,"name":"UserHasNoStakedAmountError","nameLocation":"2412:26:10","nodeType":"ErrorDefinition","parameters":{"id":3904,"nodeType":"ParameterList","parameters":[],"src":"2438:2:10"},"src":"2406:35:10"},{"errorSelector":"df509110","id":3907,"name":"StakePeriodNotOverError","nameLocation":"2452:23:10","nodeType":"ErrorDefinition","parameters":{"id":3906,"nodeType":"ParameterList","parameters":[],"src":"2475:2:10"},"src":"2446:32:10"},{"errorSelector":"05e1fcb7","id":3909,"name":"StakeIsPausedError","nameLocation":"2489:18:10","nodeType":"ErrorDefinition","parameters":{"id":3908,"nodeType":"ParameterList","parameters":[],"src":"2507:2:10"},"src":"2483:27:10"},{"errorSelector":"a9a32530","id":3911,"name":"InvalidStakeIndexError","nameLocation":"2521:22:10","nodeType":"ErrorDefinition","parameters":{"id":3910,"nodeType":"ParameterList","parameters":[],"src":"2543:2:10"},"src":"2515:31:10"},{"errorSelector":"ae21ad84","id":3913,"name":"NoRewardToHarvestError","nameLocation":"2557:22:10","nodeType":"ErrorDefinition","parameters":{"id":3912,"nodeType":"ParameterList","parameters":[],"src":"2579:2:10"},"src":"2551:31:10"},{"errorSelector":"fb8aeeb0","id":3915,"name":"NoRewardToReInvestError","nameLocation":"2593:23:10","nodeType":"ErrorDefinition","parameters":{"id":3914,"nodeType":"ParameterList","parameters":[],"src":"2616:2:10"},"src":"2587:32:10"},{"errorSelector":"d89c1562","id":3917,"name":"MinimumStakePointsNotReachedError","nameLocation":"2630:33:10","nodeType":"ErrorDefinition","parameters":{"id":3916,"nodeType":"ParameterList","parameters":[],"src":"2663:2:10"},"src":"2624:42:10"},{"errorSelector":"7689c407","id":3919,"name":"OnlyBootloaderError","nameLocation":"2678:19:10","nodeType":"ErrorDefinition","parameters":{"id":3918,"nodeType":"ParameterList","parameters":[],"src":"2697:2:10"},"src":"2672:28:10"},{"errorSelector":"092b9694","id":3921,"name":"TxTransferFailedError","nameLocation":"2711:21:10","nodeType":"ErrorDefinition","parameters":{"id":3920,"nodeType":"ParameterList","parameters":[],"src":"2732:2:10"},"src":"2705:30:10"},{"errorSelector":"ed1cead2","id":3923,"name":"UnsupportedPaymasterFlowError","nameLocation":"2746:29:10","nodeType":"ErrorDefinition","parameters":{"id":3922,"nodeType":"ParameterList","parameters":[],"src":"2775:2:10"},"src":"2740:38:10"},{"errorSelector":"f598682c","id":3925,"name":"EmergencyOverRewardError","nameLocation":"2790:24:10","nodeType":"ErrorDefinition","parameters":{"id":3924,"nodeType":"ParameterList","parameters":[],"src":"2814:2:10"},"src":"2784:33:10"},{"errorSelector":"f20478a4","id":3927,"name":"EmergencyOverAmountError","nameLocation":"2828:24:10","nodeType":"ErrorDefinition","parameters":{"id":3926,"nodeType":"ParameterList","parameters":[],"src":"2852:2:10"},"src":"2822:33:10"}],"scope":3929,"src":"58:2799:10","usedErrors":[3783,3785,3787,3789,3791,3793,3795,3797,3799,3801,3803,3805,3807,3809,3811,3813,3815,3817,3819,3821,3823,3825,3827,3829,3831,3833,3835,3837,3839,3841,3843,3845,3847,3849,3851,3853,3855,3857,3859,3861,3863,3865,3867,3869,3871,3873,3875,3877,3879,3881,3883,3885,3887,3889,3891,3893,3895,3897,3899,3901,3903,3905,3907,3909,3911,3913,3915,3917,3919,3921,3923,3925,3927],"usedEvents":[]}],"src":"33:2824:10"}},"contracts/interfaces/Interfaces.sol":{"id":11,"ast":{"absolutePath":"contracts/interfaces/Interfaces.sol","exportedSymbols":{"IDappadSale":[4250],"IDappadSaleFactory":[3955],"IDappadStake":[4092],"IDappadStakeController":[4023],"IDappadStakeControllerFactory":[3967],"IDappadStakeFactory":[3963],"IDappadVesting":[4336],"IDappadVestingFactory":[3959],"IERC165":[1176],"IERC20":[456],"IERC20Extented":[3940],"IERC721":[573],"IERC721Extented":[3951]},"id":4337,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3930,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"33:23:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3931,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4337,"sourceUnit":457,"src":"58:56:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":3932,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4337,"sourceUnit":574,"src":"115:58:11","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3933,"name":"IERC20","nameLocations":["211:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":456,"src":"211:6:11"},"id":3934,"nodeType":"InheritanceSpecifier","src":"211:6:11"}],"canonicalName":"IERC20Extented","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":3940,"linearizedBaseContracts":[3940,456],"name":"IERC20Extented","nameLocation":"193:14:11","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":3939,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"233:8:11","nodeType":"FunctionDefinition","parameters":{"id":3935,"nodeType":"ParameterList","parameters":[],"src":"241:2:11"},"returnParameters":{"id":3938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3939,"src":"273:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3936,"name":"uint8","nodeType":"ElementaryTypeName","src":"273:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"272:7:11"},"scope":3940,"src":"224:56:11","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4337,"src":"175:108:11","usedErrors":[],"usedEvents":[390,399]},{"abstract":true,"baseContracts":[{"baseName":{"id":3941,"name":"IERC721","nameLocations":["322:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":573,"src":"322:7:11"},"id":3942,"nodeType":"InheritanceSpecifier","src":"322:7:11"}],"canonicalName":"IERC721Extented","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":3951,"linearizedBaseContracts":[3951,573,1176],"name":"IERC721Extented","nameLocation":"303:15:11","nodeType":"ContractDefinition","nodes":[{"functionSelector":"8462151c","id":3950,"implemented":false,"kind":"function","modifiers":[],"name":"tokensOfOwner","nameLocation":"345:13:11","nodeType":"FunctionDefinition","parameters":{"id":3945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3944,"mutability":"mutable","name":"owner","nameLocation":"367:5:11","nodeType":"VariableDeclaration","scope":3950,"src":"359:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3943,"name":"address","nodeType":"ElementaryTypeName","src":"359:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"358:15:11"},"returnParameters":{"id":3949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3950,"src":"405:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3946,"name":"uint256","nodeType":"ElementaryTypeName","src":"405:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3947,"nodeType":"ArrayTypeName","src":"405:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"404:18:11"},"scope":3951,"src":"336:87:11","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":4337,"src":"285:140:11","usedErrors":[],"usedEvents":[472,481,490]},{"abstract":false,"baseContracts":[],"canonicalName":"IDappadSaleFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":true,"id":3955,"linearizedBaseContracts":[3955],"name":"IDappadSaleFactory","nameLocation":"437:18:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IDappadSaleFactory.SaleFactoryParams","id":3954,"members":[{"constant":false,"id":3953,"mutability":"mutable","name":"adminAddress","nameLocation":"505:12:11","nodeType":"VariableDeclaration","scope":3954,"src":"497:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3952,"name":"address","nodeType":"ElementaryTypeName","src":"497:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"SaleFactoryParams","nameLocation":"469:17:11","nodeType":"StructDefinition","scope":3955,"src":"462:62:11","visibility":"public"}],"scope":4337,"src":"427:99:11","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IDappadVestingFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":true,"id":3959,"linearizedBaseContracts":[3959],"name":"IDappadVestingFactory","nameLocation":"538:21:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IDappadVestingFactory.VestingFactoryParams","id":3958,"members":[{"constant":false,"id":3957,"mutability":"mutable","name":"adminAddress","nameLocation":"612:12:11","nodeType":"VariableDeclaration","scope":3958,"src":"604:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3956,"name":"address","nodeType":"ElementaryTypeName","src":"604:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"VestingFactoryParams","nameLocation":"573:20:11","nodeType":"StructDefinition","scope":3959,"src":"566:65:11","visibility":"public"}],"scope":4337,"src":"528:105:11","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IDappadStakeFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":true,"id":3963,"linearizedBaseContracts":[3963],"name":"IDappadStakeFactory","nameLocation":"645:19:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IDappadStakeFactory.StakeFactoryParams","id":3962,"members":[{"constant":false,"id":3961,"mutability":"mutable","name":"adminAddress","nameLocation":"715:12:11","nodeType":"VariableDeclaration","scope":3962,"src":"707:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3960,"name":"address","nodeType":"ElementaryTypeName","src":"707:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"StakeFactoryParams","nameLocation":"678:18:11","nodeType":"StructDefinition","scope":3963,"src":"671:63:11","visibility":"public"}],"scope":4337,"src":"635:101:11","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IDappadStakeControllerFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":true,"id":3967,"linearizedBaseContracts":[3967],"name":"IDappadStakeControllerFactory","nameLocation":"748:29:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IDappadStakeControllerFactory.StakeControllerFactoryParams","id":3966,"members":[{"constant":false,"id":3965,"mutability":"mutable","name":"adminAddress","nameLocation":"838:12:11","nodeType":"VariableDeclaration","scope":3966,"src":"830:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3964,"name":"address","nodeType":"ElementaryTypeName","src":"830:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"StakeControllerFactoryParams","nameLocation":"791:28:11","nodeType":"StructDefinition","scope":3967,"src":"784:73:11","visibility":"public"}],"scope":4337,"src":"738:121:11","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IDappadStakeController","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4023,"linearizedBaseContracts":[4023],"name":"IDappadStakeController","nameLocation":"871:22:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IDappadStakeController.StakeControllerParams","id":3978,"members":[{"constant":false,"id":3970,"mutability":"mutable","name":"stakeControllerDetails","nameLocation":"962:22:11","nodeType":"VariableDeclaration","scope":3978,"src":"939:45:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeControllerDetails_$3991_storage_ptr","typeString":"struct IDappadStakeController.StakeControllerDetails"},"typeName":{"id":3969,"nodeType":"UserDefinedTypeName","pathNode":{"id":3968,"name":"StakeControllerDetails","nameLocations":["939:22:11"],"nodeType":"IdentifierPath","referencedDeclaration":3991,"src":"939:22:11"},"referencedDeclaration":3991,"src":"939:22:11","typeDescriptions":{"typeIdentifier":"t_struct$_StakeControllerDetails_$3991_storage_ptr","typeString":"struct IDappadStakeController.StakeControllerDetails"}},"visibility":"internal"},{"constant":false,"id":3973,"mutability":"mutable","name":"stakeControllerAddresses","nameLocation":"1019:24:11","nodeType":"VariableDeclaration","scope":3978,"src":"994:49:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeControllerAddresses_$4007_storage_ptr","typeString":"struct IDappadStakeController.StakeControllerAddresses"},"typeName":{"id":3972,"nodeType":"UserDefinedTypeName","pathNode":{"id":3971,"name":"StakeControllerAddresses","nameLocations":["994:24:11"],"nodeType":"IdentifierPath","referencedDeclaration":4007,"src":"994:24:11"},"referencedDeclaration":4007,"src":"994:24:11","typeDescriptions":{"typeIdentifier":"t_struct$_StakeControllerAddresses_$4007_storage_ptr","typeString":"struct IDappadStakeController.StakeControllerAddresses"}},"visibility":"internal"},{"constant":false,"id":3977,"mutability":"mutable","name":"stakeControllerTiers","nameLocation":"1075:20:11","nodeType":"VariableDeclaration","scope":3978,"src":"1053:42:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StakeControllerTier_$4010_storage_$dyn_storage_ptr","typeString":"struct IDappadStakeController.StakeControllerTier[]"},"typeName":{"baseType":{"id":3975,"nodeType":"UserDefinedTypeName","pathNode":{"id":3974,"name":"StakeControllerTier","nameLocations":["1053:19:11"],"nodeType":"IdentifierPath","referencedDeclaration":4010,"src":"1053:19:11"},"referencedDeclaration":4010,"src":"1053:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_StakeControllerTier_$4010_storage_ptr","typeString":"struct IDappadStakeController.StakeControllerTier"}},"id":3976,"nodeType":"ArrayTypeName","src":"1053:21:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StakeControllerTier_$4010_storage_$dyn_storage_ptr","typeString":"struct IDappadStakeController.StakeControllerTier[]"}},"visibility":"internal"}],"name":"StakeControllerParams","nameLocation":"907:21:11","nodeType":"StructDefinition","scope":4023,"src":"900:202:11","visibility":"public"},{"canonicalName":"IDappadStakeController.StakeControllerDetails","id":3991,"members":[{"constant":false,"id":3980,"mutability":"mutable","name":"requiredTokensForNftBonus","nameLocation":"1156:25:11","nodeType":"VariableDeclaration","scope":3991,"src":"1148:33:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3979,"name":"uint256","nodeType":"ElementaryTypeName","src":"1148:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3982,"mutability":"mutable","name":"bonusEnd","nameLocation":"1199:8:11","nodeType":"VariableDeclaration","scope":3991,"src":"1191:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3981,"name":"uint256","nodeType":"ElementaryTypeName","src":"1191:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3984,"mutability":"mutable","name":"addBonusPerNft","nameLocation":"1222:14:11","nodeType":"VariableDeclaration","scope":3991,"src":"1217:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3983,"name":"bool","nodeType":"ElementaryTypeName","src":"1217:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3987,"mutability":"mutable","name":"bonusesPerNft","nameLocation":"1256:13:11","nodeType":"VariableDeclaration","scope":3991,"src":"1246:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3985,"name":"uint256","nodeType":"ElementaryTypeName","src":"1246:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3986,"nodeType":"ArrayTypeName","src":"1246:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3990,"mutability":"mutable","name":"stakeContractPointMultipliers","nameLocation":"1289:29:11","nodeType":"VariableDeclaration","scope":3991,"src":"1279:39:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3988,"name":"uint256","nodeType":"ElementaryTypeName","src":"1279:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3989,"nodeType":"ArrayTypeName","src":"1279:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"StakeControllerDetails","nameLocation":"1115:22:11","nodeType":"StructDefinition","scope":4023,"src":"1108:217:11","visibility":"public"},{"canonicalName":"IDappadStakeController.StakeControllerAddresses","id":4007,"members":[{"constant":false,"id":3993,"mutability":"mutable","name":"tokenAddress","nameLocation":"1381:12:11","nodeType":"VariableDeclaration","scope":4007,"src":"1373:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3992,"name":"address","nodeType":"ElementaryTypeName","src":"1373:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3995,"mutability":"mutable","name":"ownerAddress","nameLocation":"1411:12:11","nodeType":"VariableDeclaration","scope":4007,"src":"1403:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3994,"name":"address","nodeType":"ElementaryTypeName","src":"1403:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3997,"mutability":"mutable","name":"adminAddress","nameLocation":"1441:12:11","nodeType":"VariableDeclaration","scope":4007,"src":"1433:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3996,"name":"address","nodeType":"ElementaryTypeName","src":"1433:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4000,"mutability":"mutable","name":"nftContractAddresses","nameLocation":"1473:20:11","nodeType":"VariableDeclaration","scope":4007,"src":"1463:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3998,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3999,"nodeType":"ArrayTypeName","src":"1463:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4003,"mutability":"mutable","name":"stakeContractAddresses","nameLocation":"1513:22:11","nodeType":"VariableDeclaration","scope":4007,"src":"1503:32:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4001,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4002,"nodeType":"ArrayTypeName","src":"1503:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4006,"mutability":"mutable","name":"bonusVestingContractAddresses","nameLocation":"1555:29:11","nodeType":"VariableDeclaration","scope":4007,"src":"1545:39:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4004,"name":"address","nodeType":"ElementaryTypeName","src":"1545:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4005,"nodeType":"ArrayTypeName","src":"1545:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"name":"StakeControllerAddresses","nameLocation":"1338:24:11","nodeType":"StructDefinition","scope":4023,"src":"1331:260:11","visibility":"public"},{"canonicalName":"IDappadStakeController.StakeControllerTier","id":4010,"members":[{"constant":false,"id":4009,"mutability":"mutable","name":"requiredStakePoints","nameLocation":"1646:19:11","nodeType":"VariableDeclaration","scope":4010,"src":"1638:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4008,"name":"uint256","nodeType":"ElementaryTypeName","src":"1638:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeControllerTier","nameLocation":"1608:19:11","nodeType":"StructDefinition","scope":4023,"src":"1601:71:11","visibility":"public"},{"functionSelector":"67184e28","id":4015,"implemented":false,"kind":"function","modifiers":[],"name":"getTierCount","nameLocation":"1687:12:11","nodeType":"FunctionDefinition","parameters":{"id":4011,"nodeType":"ParameterList","parameters":[],"src":"1699:2:11"},"returnParameters":{"id":4014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4015,"src":"1725:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4012,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1724:9:11"},"scope":4023,"src":"1678:56:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"bb9d537b","id":4022,"implemented":false,"kind":"function","modifiers":[],"name":"getUserTierIndex","nameLocation":"1748:16:11","nodeType":"FunctionDefinition","parameters":{"id":4018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4017,"mutability":"mutable","name":"userAddress","nameLocation":"1773:11:11","nodeType":"VariableDeclaration","scope":4022,"src":"1765:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4016,"name":"address","nodeType":"ElementaryTypeName","src":"1765:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1764:21:11"},"returnParameters":{"id":4021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4022,"src":"1809:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4019,"name":"uint256","nodeType":"ElementaryTypeName","src":"1809:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1808:9:11"},"scope":4023,"src":"1739:79:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4337,"src":"861:959:11","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IDappadStake","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4092,"linearizedBaseContracts":[4092],"name":"IDappadStake","nameLocation":"1832:12:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IDappadStake.StakeParams","id":4030,"members":[{"constant":false,"id":4026,"mutability":"mutable","name":"stakeDetails","nameLocation":"1893:12:11","nodeType":"VariableDeclaration","scope":4030,"src":"1880:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeDetails_$4041_storage_ptr","typeString":"struct IDappadStake.StakeDetails"},"typeName":{"id":4025,"nodeType":"UserDefinedTypeName","pathNode":{"id":4024,"name":"StakeDetails","nameLocations":["1880:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":4041,"src":"1880:12:11"},"referencedDeclaration":4041,"src":"1880:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_StakeDetails_$4041_storage_ptr","typeString":"struct IDappadStake.StakeDetails"}},"visibility":"internal"},{"constant":false,"id":4029,"mutability":"mutable","name":"stakeAddresses","nameLocation":"1931:14:11","nodeType":"VariableDeclaration","scope":4030,"src":"1916:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeAddresses_$4048_storage_ptr","typeString":"struct IDappadStake.StakeAddresses"},"typeName":{"id":4028,"nodeType":"UserDefinedTypeName","pathNode":{"id":4027,"name":"StakeAddresses","nameLocations":["1916:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":4048,"src":"1916:14:11"},"referencedDeclaration":4048,"src":"1916:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_StakeAddresses_$4048_storage_ptr","typeString":"struct IDappadStake.StakeAddresses"}},"visibility":"internal"}],"name":"StakeParams","nameLocation":"1858:11:11","nodeType":"StructDefinition","scope":4092,"src":"1851:101:11","visibility":"public"},{"canonicalName":"IDappadStake.StakeDetails","id":4041,"members":[{"constant":false,"id":4032,"mutability":"mutable","name":"interestRate","nameLocation":"1996:12:11","nodeType":"VariableDeclaration","scope":4041,"src":"1988:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4031,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4034,"mutability":"mutable","name":"lockDuration","nameLocation":"2026:12:11","nodeType":"VariableDeclaration","scope":4041,"src":"2018:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4033,"name":"uint256","nodeType":"ElementaryTypeName","src":"2018:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4036,"mutability":"mutable","name":"lockDurationRewardMultiplier","nameLocation":"2056:28:11","nodeType":"VariableDeclaration","scope":4041,"src":"2048:36:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4035,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4038,"mutability":"mutable","name":"lockDurationPointMultiplier","nameLocation":"2102:27:11","nodeType":"VariableDeclaration","scope":4041,"src":"2094:35:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4037,"name":"uint256","nodeType":"ElementaryTypeName","src":"2094:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4040,"mutability":"mutable","name":"stakePaused","nameLocation":"2144:11:11","nodeType":"VariableDeclaration","scope":4041,"src":"2139:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4039,"name":"bool","nodeType":"ElementaryTypeName","src":"2139:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StakeDetails","nameLocation":"1965:12:11","nodeType":"StructDefinition","scope":4092,"src":"1958:204:11","visibility":"public"},{"canonicalName":"IDappadStake.StakeAddresses","id":4048,"members":[{"constant":false,"id":4043,"mutability":"mutable","name":"tokenAddress","nameLocation":"2208:12:11","nodeType":"VariableDeclaration","scope":4048,"src":"2200:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4042,"name":"address","nodeType":"ElementaryTypeName","src":"2200:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4045,"mutability":"mutable","name":"ownerAddress","nameLocation":"2238:12:11","nodeType":"VariableDeclaration","scope":4048,"src":"2230:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4044,"name":"address","nodeType":"ElementaryTypeName","src":"2230:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4047,"mutability":"mutable","name":"adminAddress","nameLocation":"2268:12:11","nodeType":"VariableDeclaration","scope":4048,"src":"2260:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4046,"name":"address","nodeType":"ElementaryTypeName","src":"2260:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"StakeAddresses","nameLocation":"2175:14:11","nodeType":"StructDefinition","scope":4092,"src":"2168:119:11","visibility":"public"},{"canonicalName":"IDappadStake.StakeStatistics","id":4057,"members":[{"constant":false,"id":4050,"mutability":"mutable","name":"rewardBalance","nameLocation":"2334:13:11","nodeType":"VariableDeclaration","scope":4057,"src":"2326:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4049,"name":"uint256","nodeType":"ElementaryTypeName","src":"2326:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4052,"mutability":"mutable","name":"totalStakedAmount","nameLocation":"2365:17:11","nodeType":"VariableDeclaration","scope":4057,"src":"2357:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4051,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4054,"mutability":"mutable","name":"totalHarvestedRewardAmount","nameLocation":"2400:26:11","nodeType":"VariableDeclaration","scope":4057,"src":"2392:34:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"2392:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4056,"mutability":"mutable","name":"totalParticipants","nameLocation":"2444:17:11","nodeType":"VariableDeclaration","scope":4057,"src":"2436:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4055,"name":"uint256","nodeType":"ElementaryTypeName","src":"2436:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeStatistics","nameLocation":"2300:15:11","nodeType":"StructDefinition","scope":4092,"src":"2293:175:11","visibility":"public"},{"canonicalName":"IDappadStake.Stake","id":4070,"members":[{"constant":false,"id":4059,"mutability":"mutable","name":"endTime","nameLocation":"2505:7:11","nodeType":"VariableDeclaration","scope":4070,"src":"2497:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4058,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4061,"mutability":"mutable","name":"totalStakedAmount","nameLocation":"2530:17:11","nodeType":"VariableDeclaration","scope":4070,"src":"2522:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4060,"name":"uint256","nodeType":"ElementaryTypeName","src":"2522:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4063,"mutability":"mutable","name":"totalStakePoints","nameLocation":"2565:16:11","nodeType":"VariableDeclaration","scope":4070,"src":"2557:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4062,"name":"uint256","nodeType":"ElementaryTypeName","src":"2557:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4065,"mutability":"mutable","name":"stakeCount","nameLocation":"2599:10:11","nodeType":"VariableDeclaration","scope":4070,"src":"2591:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4064,"name":"uint256","nodeType":"ElementaryTypeName","src":"2591:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4069,"mutability":"mutable","name":"stakeFeatures","nameLocation":"2635:13:11","nodeType":"VariableDeclaration","scope":4070,"src":"2619:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StakeFeatures_$4077_storage_$dyn_storage_ptr","typeString":"struct IDappadStake.StakeFeatures[]"},"typeName":{"baseType":{"id":4067,"nodeType":"UserDefinedTypeName","pathNode":{"id":4066,"name":"StakeFeatures","nameLocations":["2619:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":4077,"src":"2619:13:11"},"referencedDeclaration":4077,"src":"2619:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_StakeFeatures_$4077_storage_ptr","typeString":"struct IDappadStake.StakeFeatures"}},"id":4068,"nodeType":"ArrayTypeName","src":"2619:15:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StakeFeatures_$4077_storage_$dyn_storage_ptr","typeString":"struct IDappadStake.StakeFeatures[]"}},"visibility":"internal"}],"name":"Stake","nameLocation":"2481:5:11","nodeType":"StructDefinition","scope":4092,"src":"2474:181:11","visibility":"public"},{"canonicalName":"IDappadStake.StakeFeatures","id":4077,"members":[{"constant":false,"id":4072,"mutability":"mutable","name":"interestRate","nameLocation":"2700:12:11","nodeType":"VariableDeclaration","scope":4077,"src":"2692:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4071,"name":"uint256","nodeType":"ElementaryTypeName","src":"2692:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4074,"mutability":"mutable","name":"stakeTime","nameLocation":"2730:9:11","nodeType":"VariableDeclaration","scope":4077,"src":"2722:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4073,"name":"uint256","nodeType":"ElementaryTypeName","src":"2722:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4076,"mutability":"mutable","name":"stakedAmount","nameLocation":"2757:12:11","nodeType":"VariableDeclaration","scope":4077,"src":"2749:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4075,"name":"uint256","nodeType":"ElementaryTypeName","src":"2749:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeFeatures","nameLocation":"2668:13:11","nodeType":"StructDefinition","scope":4092,"src":"2661:115:11","visibility":"public"},{"functionSelector":"5a129248","id":4083,"implemented":false,"kind":"function","modifiers":[],"name":"getStakeStatistics","nameLocation":"2791:18:11","nodeType":"FunctionDefinition","parameters":{"id":4078,"nodeType":"ParameterList","parameters":[],"src":"2809:2:11"},"returnParameters":{"id":4082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4083,"src":"2835:35:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeStatistics_$4057_memory_ptr","typeString":"struct IDappadStake.StakeStatistics"},"typeName":{"id":4080,"nodeType":"UserDefinedTypeName","pathNode":{"id":4079,"name":"IDappadStake.StakeStatistics","nameLocations":["2835:12:11","2848:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":4057,"src":"2835:28:11"},"referencedDeclaration":4057,"src":"2835:28:11","typeDescriptions":{"typeIdentifier":"t_struct$_StakeStatistics_$4057_storage_ptr","typeString":"struct IDappadStake.StakeStatistics"}},"visibility":"internal"}],"src":"2834:37:11"},"scope":4092,"src":"2782:90:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"bbadc93a","id":4091,"implemented":false,"kind":"function","modifiers":[],"name":"getUserStake","nameLocation":"2886:12:11","nodeType":"FunctionDefinition","parameters":{"id":4086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4085,"mutability":"mutable","name":"userAddress","nameLocation":"2907:11:11","nodeType":"VariableDeclaration","scope":4091,"src":"2899:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4084,"name":"address","nodeType":"ElementaryTypeName","src":"2899:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2898:21:11"},"returnParameters":{"id":4090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4091,"src":"2943:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$4070_memory_ptr","typeString":"struct IDappadStake.Stake"},"typeName":{"id":4088,"nodeType":"UserDefinedTypeName","pathNode":{"id":4087,"name":"IDappadStake.Stake","nameLocations":["2943:12:11","2956:5:11"],"nodeType":"IdentifierPath","referencedDeclaration":4070,"src":"2943:18:11"},"referencedDeclaration":4070,"src":"2943:18:11","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$4070_storage_ptr","typeString":"struct IDappadStake.Stake"}},"visibility":"internal"}],"src":"2942:27:11"},"scope":4092,"src":"2877:93:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4337,"src":"1822:1150:11","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IDappadSale","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4250,"linearizedBaseContracts":[4250],"name":"IDappadSale","nameLocation":"2984:11:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IDappadSale.SaleParams","id":4100,"members":[{"constant":false,"id":4095,"mutability":"mutable","name":"sale","nameLocation":"3035:4:11","nodeType":"VariableDeclaration","scope":4100,"src":"3030:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4116_storage_ptr","typeString":"struct IDappadSale.Sale"},"typeName":{"id":4094,"nodeType":"UserDefinedTypeName","pathNode":{"id":4093,"name":"Sale","nameLocations":["3030:4:11"],"nodeType":"IdentifierPath","referencedDeclaration":4116,"src":"3030:4:11"},"referencedDeclaration":4116,"src":"3030:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$4116_storage_ptr","typeString":"struct IDappadSale.Sale"}},"visibility":"internal"},{"constant":false,"id":4099,"mutability":"mutable","name":"tierDetails","nameLocation":"3067:11:11","nodeType":"VariableDeclaration","scope":4100,"src":"3049:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SaleTierDetails_$4210_storage_$dyn_storage_ptr","typeString":"struct IDappadSale.SaleTierDetails[]"},"typeName":{"baseType":{"id":4097,"nodeType":"UserDefinedTypeName","pathNode":{"id":4096,"name":"SaleTierDetails","nameLocations":["3049:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":4210,"src":"3049:15:11"},"referencedDeclaration":4210,"src":"3049:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTierDetails_$4210_storage_ptr","typeString":"struct IDappadSale.SaleTierDetails"}},"id":4098,"nodeType":"ArrayTypeName","src":"3049:17:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SaleTierDetails_$4210_storage_$dyn_storage_ptr","typeString":"struct IDappadSale.SaleTierDetails[]"}},"visibility":"internal"}],"name":"SaleParams","nameLocation":"3009:10:11","nodeType":"StructDefinition","scope":4250,"src":"3002:83:11","visibility":"public"},{"canonicalName":"IDappadSale.Sale","id":4116,"members":[{"constant":false,"id":4103,"mutability":"mutable","name":"saleDetails","nameLocation":"3129:11:11","nodeType":"VariableDeclaration","scope":4116,"src":"3117:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4139_storage_ptr","typeString":"struct IDappadSale.SaleDetails"},"typeName":{"id":4102,"nodeType":"UserDefinedTypeName","pathNode":{"id":4101,"name":"SaleDetails","nameLocations":["3117:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":4139,"src":"3117:11:11"},"referencedDeclaration":4139,"src":"3117:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_SaleDetails_$4139_storage_ptr","typeString":"struct IDappadSale.SaleDetails"}},"visibility":"internal"},{"constant":false,"id":4106,"mutability":"mutable","name":"fcfsDetails","nameLocation":"3166:11:11","nodeType":"VariableDeclaration","scope":4116,"src":"3150:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_SaleFcfsDetails_$4144_storage_ptr","typeString":"struct IDappadSale.SaleFcfsDetails"},"typeName":{"id":4105,"nodeType":"UserDefinedTypeName","pathNode":{"id":4104,"name":"SaleFcfsDetails","nameLocations":["3150:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":4144,"src":"3150:15:11"},"referencedDeclaration":4144,"src":"3150:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_SaleFcfsDetails_$4144_storage_ptr","typeString":"struct IDappadSale.SaleFcfsDetails"}},"visibility":"internal"},{"constant":false,"id":4109,"mutability":"mutable","name":"refundDetails","nameLocation":"3205:13:11","nodeType":"VariableDeclaration","scope":4116,"src":"3187:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRefundDetails_$4149_storage_ptr","typeString":"struct IDappadSale.SaleRefundDetails"},"typeName":{"id":4108,"nodeType":"UserDefinedTypeName","pathNode":{"id":4107,"name":"SaleRefundDetails","nameLocations":["3187:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":4149,"src":"3187:17:11"},"referencedDeclaration":4149,"src":"3187:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_SaleRefundDetails_$4149_storage_ptr","typeString":"struct IDappadSale.SaleRefundDetails"}},"visibility":"internal"},{"constant":false,"id":4112,"mutability":"mutable","name":"ticketDetails","nameLocation":"3246:13:11","nodeType":"VariableDeclaration","scope":4116,"src":"3228:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTicketDetails_$4154_storage_ptr","typeString":"struct IDappadSale.SaleTicketDetails"},"typeName":{"id":4111,"nodeType":"UserDefinedTypeName","pathNode":{"id":4110,"name":"SaleTicketDetails","nameLocations":["3228:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":4154,"src":"3228:17:11"},"referencedDeclaration":4154,"src":"3228:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_SaleTicketDetails_$4154_storage_ptr","typeString":"struct IDappadSale.SaleTicketDetails"}},"visibility":"internal"},{"constant":false,"id":4115,"mutability":"mutable","name":"saleAddresses","nameLocation":"3283:13:11","nodeType":"VariableDeclaration","scope":4116,"src":"3269:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4184_storage_ptr","typeString":"struct IDappadSale.SaleAddresses"},"typeName":{"id":4114,"nodeType":"UserDefinedTypeName","pathNode":{"id":4113,"name":"SaleAddresses","nameLocations":["3269:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":4184,"src":"3269:13:11"},"referencedDeclaration":4184,"src":"3269:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_SaleAddresses_$4184_storage_ptr","typeString":"struct IDappadSale.SaleAddresses"}},"visibility":"internal"}],"name":"Sale","nameLocation":"3102:4:11","nodeType":"StructDefinition","scope":4250,"src":"3095:208:11","visibility":"public"},{"canonicalName":"IDappadSale.SaleDetails","id":4139,"members":[{"constant":false,"id":4118,"mutability":"mutable","name":"registerStart","nameLocation":"3350:13:11","nodeType":"VariableDeclaration","scope":4139,"src":"3342:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4117,"name":"uint256","nodeType":"ElementaryTypeName","src":"3342:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4120,"mutability":"mutable","name":"registerEnd","nameLocation":"3381:11:11","nodeType":"VariableDeclaration","scope":4139,"src":"3373:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4119,"name":"uint256","nodeType":"ElementaryTypeName","src":"3373:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4122,"mutability":"mutable","name":"registerTokenAmount","nameLocation":"3410:19:11","nodeType":"VariableDeclaration","scope":4139,"src":"3402:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4121,"name":"uint256","nodeType":"ElementaryTypeName","src":"3402:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4124,"mutability":"mutable","name":"saleStart","nameLocation":"3447:9:11","nodeType":"VariableDeclaration","scope":4139,"src":"3439:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4123,"name":"uint256","nodeType":"ElementaryTypeName","src":"3439:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4126,"mutability":"mutable","name":"saleEnd","nameLocation":"3474:7:11","nodeType":"VariableDeclaration","scope":4139,"src":"3466:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4125,"name":"uint256","nodeType":"ElementaryTypeName","src":"3466:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4128,"mutability":"mutable","name":"saleTokenPrice","nameLocation":"3499:14:11","nodeType":"VariableDeclaration","scope":4139,"src":"3491:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4127,"name":"uint256","nodeType":"ElementaryTypeName","src":"3491:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4130,"mutability":"mutable","name":"maxInvestmentAmount","nameLocation":"3531:19:11","nodeType":"VariableDeclaration","scope":4139,"src":"3523:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4129,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4132,"mutability":"mutable","name":"projectOwnerFeePercentage","nameLocation":"3568:25:11","nodeType":"VariableDeclaration","scope":4139,"src":"3560:33:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4131,"name":"uint256","nodeType":"ElementaryTypeName","src":"3560:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4134,"mutability":"mutable","name":"registerTokenEnabled","nameLocation":"3608:20:11","nodeType":"VariableDeclaration","scope":4139,"src":"3603:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4133,"name":"bool","nodeType":"ElementaryTypeName","src":"3603:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4136,"mutability":"mutable","name":"salePaused","nameLocation":"3643:10:11","nodeType":"VariableDeclaration","scope":4139,"src":"3638:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4135,"name":"bool","nodeType":"ElementaryTypeName","src":"3638:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4138,"mutability":"mutable","name":"saleName","nameLocation":"3670:8:11","nodeType":"VariableDeclaration","scope":4139,"src":"3663:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4137,"name":"string","nodeType":"ElementaryTypeName","src":"3663:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"SaleDetails","nameLocation":"3320:11:11","nodeType":"StructDefinition","scope":4250,"src":"3313:372:11","visibility":"public"},{"canonicalName":"IDappadSale.SaleFcfsDetails","id":4144,"members":[{"constant":false,"id":4141,"mutability":"mutable","name":"fcfsSaleDuration","nameLocation":"3732:16:11","nodeType":"VariableDeclaration","scope":4144,"src":"3724:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4140,"name":"uint256","nodeType":"ElementaryTypeName","src":"3724:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4143,"mutability":"mutable","name":"fcfsSaleMultiplier","nameLocation":"3766:18:11","nodeType":"VariableDeclaration","scope":4144,"src":"3758:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4142,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"SaleFcfsDetails","nameLocation":"3698:15:11","nodeType":"StructDefinition","scope":4250,"src":"3691:100:11","visibility":"public"},{"canonicalName":"IDappadSale.SaleRefundDetails","id":4149,"members":[{"constant":false,"id":4146,"mutability":"mutable","name":"refundDuration","nameLocation":"3840:14:11","nodeType":"VariableDeclaration","scope":4149,"src":"3832:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4145,"name":"uint256","nodeType":"ElementaryTypeName","src":"3832:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4148,"mutability":"mutable","name":"refundEnabled","nameLocation":"3869:13:11","nodeType":"VariableDeclaration","scope":4149,"src":"3864:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4147,"name":"bool","nodeType":"ElementaryTypeName","src":"3864:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"SaleRefundDetails","nameLocation":"3804:17:11","nodeType":"StructDefinition","scope":4250,"src":"3797:92:11","visibility":"public"},{"canonicalName":"IDappadSale.SaleTicketDetails","id":4154,"members":[{"constant":false,"id":4151,"mutability":"mutable","name":"ticketPrice","nameLocation":"3938:11:11","nodeType":"VariableDeclaration","scope":4154,"src":"3930:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4150,"name":"uint256","nodeType":"ElementaryTypeName","src":"3930:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4153,"mutability":"mutable","name":"ticketMerkleRoot","nameLocation":"3967:16:11","nodeType":"VariableDeclaration","scope":4154,"src":"3959:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3959:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"SaleTicketDetails","nameLocation":"3902:17:11","nodeType":"StructDefinition","scope":4250,"src":"3895:95:11","visibility":"public"},{"canonicalName":"IDappadSale.SaleRegisterDetails","id":4161,"members":[{"constant":false,"id":4156,"mutability":"mutable","name":"registerTokenAmount","nameLocation":"4041:19:11","nodeType":"VariableDeclaration","scope":4161,"src":"4033:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4155,"name":"uint256","nodeType":"ElementaryTypeName","src":"4033:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4158,"mutability":"mutable","name":"tierIndex","nameLocation":"4078:9:11","nodeType":"VariableDeclaration","scope":4161,"src":"4070:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4157,"name":"uint256","nodeType":"ElementaryTypeName","src":"4070:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4160,"mutability":"mutable","name":"registered","nameLocation":"4102:10:11","nodeType":"VariableDeclaration","scope":4161,"src":"4097:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4159,"name":"bool","nodeType":"ElementaryTypeName","src":"4097:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"SaleRegisterDetails","nameLocation":"4003:19:11","nodeType":"StructDefinition","scope":4250,"src":"3996:123:11","visibility":"public"},{"canonicalName":"IDappadSale.SaleAddresses","id":4184,"members":[{"constant":false,"id":4163,"mutability":"mutable","name":"saleTokenAddress","nameLocation":"4164:16:11","nodeType":"VariableDeclaration","scope":4184,"src":"4156:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4162,"name":"address","nodeType":"ElementaryTypeName","src":"4156:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4165,"mutability":"mutable","name":"registerTokenAddress","nameLocation":"4198:20:11","nodeType":"VariableDeclaration","scope":4184,"src":"4190:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4164,"name":"address","nodeType":"ElementaryTypeName","src":"4190:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4167,"mutability":"mutable","name":"investmentTokenAddress","nameLocation":"4236:22:11","nodeType":"VariableDeclaration","scope":4184,"src":"4228:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4166,"name":"address","nodeType":"ElementaryTypeName","src":"4228:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4169,"mutability":"mutable","name":"factoryContractAddress","nameLocation":"4276:22:11","nodeType":"VariableDeclaration","scope":4184,"src":"4268:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4168,"name":"address","nodeType":"ElementaryTypeName","src":"4268:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4171,"mutability":"mutable","name":"nftContractAddress","nameLocation":"4316:18:11","nodeType":"VariableDeclaration","scope":4184,"src":"4308:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4170,"name":"address","nodeType":"ElementaryTypeName","src":"4308:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4173,"mutability":"mutable","name":"stakeControllerContractAddress","nameLocation":"4352:30:11","nodeType":"VariableDeclaration","scope":4184,"src":"4344:38:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4172,"name":"address","nodeType":"ElementaryTypeName","src":"4344:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4175,"mutability":"mutable","name":"vestingContractAddress","nameLocation":"4400:22:11","nodeType":"VariableDeclaration","scope":4184,"src":"4392:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4174,"name":"address","nodeType":"ElementaryTypeName","src":"4392:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4177,"mutability":"mutable","name":"ownerAddress","nameLocation":"4440:12:11","nodeType":"VariableDeclaration","scope":4184,"src":"4432:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4176,"name":"address","nodeType":"ElementaryTypeName","src":"4432:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4179,"mutability":"mutable","name":"adminAddress","nameLocation":"4470:12:11","nodeType":"VariableDeclaration","scope":4184,"src":"4462:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4178,"name":"address","nodeType":"ElementaryTypeName","src":"4462:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4181,"mutability":"mutable","name":"launchpadFeeAddress","nameLocation":"4500:19:11","nodeType":"VariableDeclaration","scope":4184,"src":"4492:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4180,"name":"address","nodeType":"ElementaryTypeName","src":"4492:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4183,"mutability":"mutable","name":"projectOwnerFeeAddress","nameLocation":"4537:22:11","nodeType":"VariableDeclaration","scope":4184,"src":"4529:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4182,"name":"address","nodeType":"ElementaryTypeName","src":"4529:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"SaleAddresses","nameLocation":"4132:13:11","nodeType":"StructDefinition","scope":4250,"src":"4125:441:11","visibility":"public"},{"canonicalName":"IDappadSale.SaleStatistics","id":4195,"members":[{"constant":false,"id":4186,"mutability":"mutable","name":"totalInvestmentAmount","nameLocation":"4612:21:11","nodeType":"VariableDeclaration","scope":4195,"src":"4604:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4185,"name":"uint256","nodeType":"ElementaryTypeName","src":"4604:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4188,"mutability":"mutable","name":"totalSaleTokenAmount","nameLocation":"4651:20:11","nodeType":"VariableDeclaration","scope":4195,"src":"4643:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4187,"name":"uint256","nodeType":"ElementaryTypeName","src":"4643:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4190,"mutability":"mutable","name":"totalParticipants","nameLocation":"4689:17:11","nodeType":"VariableDeclaration","scope":4195,"src":"4681:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4189,"name":"uint256","nodeType":"ElementaryTypeName","src":"4681:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4192,"mutability":"mutable","name":"totalRegisters","nameLocation":"4724:14:11","nodeType":"VariableDeclaration","scope":4195,"src":"4716:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4191,"name":"uint256","nodeType":"ElementaryTypeName","src":"4716:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4194,"mutability":"mutable","name":"totalRegisterTokenAmountLeft","nameLocation":"4756:28:11","nodeType":"VariableDeclaration","scope":4195,"src":"4748:36:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4193,"name":"uint256","nodeType":"ElementaryTypeName","src":"4748:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"SaleStatistics","nameLocation":"4579:14:11","nodeType":"StructDefinition","scope":4250,"src":"4572:219:11","visibility":"public"},{"canonicalName":"IDappadSale.SaleTierDetails","id":4210,"members":[{"constant":false,"id":4197,"mutability":"mutable","name":"minInvestmentAmount","nameLocation":"4838:19:11","nodeType":"VariableDeclaration","scope":4210,"src":"4830:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4196,"name":"uint256","nodeType":"ElementaryTypeName","src":"4830:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4199,"mutability":"mutable","name":"maxInvestmentAmount","nameLocation":"4875:19:11","nodeType":"VariableDeclaration","scope":4210,"src":"4867:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4198,"name":"uint256","nodeType":"ElementaryTypeName","src":"4867:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4201,"mutability":"mutable","name":"tierMaxInvestmentAmount","nameLocation":"4912:23:11","nodeType":"VariableDeclaration","scope":4210,"src":"4904:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4200,"name":"uint256","nodeType":"ElementaryTypeName","src":"4904:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4203,"mutability":"mutable","name":"ticketAmount","nameLocation":"4953:12:11","nodeType":"VariableDeclaration","scope":4210,"src":"4945:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4202,"name":"uint256","nodeType":"ElementaryTypeName","src":"4945:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4205,"mutability":"mutable","name":"whitelistMerkleRoot","nameLocation":"4983:19:11","nodeType":"VariableDeclaration","scope":4210,"src":"4975:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4975:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4207,"mutability":"mutable","name":"totalInvestmentAmount","nameLocation":"5020:21:11","nodeType":"VariableDeclaration","scope":4210,"src":"5012:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4206,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4209,"mutability":"mutable","name":"totalParticipants","nameLocation":"5059:17:11","nodeType":"VariableDeclaration","scope":4210,"src":"5051:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4208,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"SaleTierDetails","nameLocation":"4804:15:11","nodeType":"StructDefinition","scope":4250,"src":"4797:286:11","visibility":"public"},{"functionSelector":"f15ce722","id":4215,"implemented":false,"kind":"function","modifiers":[],"name":"addSaleToken","nameLocation":"5098:12:11","nodeType":"FunctionDefinition","parameters":{"id":4211,"nodeType":"ParameterList","parameters":[],"src":"5110:2:11"},"returnParameters":{"id":4214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4215,"src":"5131:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4212,"name":"bool","nodeType":"ElementaryTypeName","src":"5131:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5130:6:11"},"scope":4250,"src":"5089:48:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c077da9e","id":4220,"implemented":false,"kind":"function","modifiers":[],"name":"getIsSaleActive","nameLocation":"5151:15:11","nodeType":"FunctionDefinition","parameters":{"id":4216,"nodeType":"ParameterList","parameters":[],"src":"5166:2:11"},"returnParameters":{"id":4219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4220,"src":"5192:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4217,"name":"bool","nodeType":"ElementaryTypeName","src":"5192:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5191:6:11"},"scope":4250,"src":"5142:56:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5e87e5a6","id":4227,"implemented":false,"kind":"function","modifiers":[],"name":"getUserInvestmentAmount","nameLocation":"5212:23:11","nodeType":"FunctionDefinition","parameters":{"id":4223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4222,"mutability":"mutable","name":"userAddress","nameLocation":"5244:11:11","nodeType":"VariableDeclaration","scope":4227,"src":"5236:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4221,"name":"address","nodeType":"ElementaryTypeName","src":"5236:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5235:21:11"},"returnParameters":{"id":4226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4227,"src":"5280:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4224,"name":"uint256","nodeType":"ElementaryTypeName","src":"5280:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5279:9:11"},"scope":4250,"src":"5203:86:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"2ecad13f","id":4232,"implemented":false,"kind":"function","modifiers":[],"name":"getSaleEndDate","nameLocation":"5303:14:11","nodeType":"FunctionDefinition","parameters":{"id":4228,"nodeType":"ParameterList","parameters":[],"src":"5317:2:11"},"returnParameters":{"id":4231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4232,"src":"5343:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4229,"name":"uint256","nodeType":"ElementaryTypeName","src":"5343:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5342:9:11"},"scope":4250,"src":"5294:58:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"85c06faa","id":4237,"implemented":false,"kind":"function","modifiers":[],"name":"getRefundEnabled","nameLocation":"5366:16:11","nodeType":"FunctionDefinition","parameters":{"id":4233,"nodeType":"ParameterList","parameters":[],"src":"5382:2:11"},"returnParameters":{"id":4236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4237,"src":"5408:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4234,"name":"bool","nodeType":"ElementaryTypeName","src":"5408:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5407:6:11"},"scope":4250,"src":"5357:57:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cf72d3db","id":4244,"implemented":false,"kind":"function","modifiers":[],"name":"getUserRefunded","nameLocation":"5428:15:11","nodeType":"FunctionDefinition","parameters":{"id":4240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4239,"mutability":"mutable","name":"userAddress","nameLocation":"5452:11:11","nodeType":"VariableDeclaration","scope":4244,"src":"5444:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4238,"name":"address","nodeType":"ElementaryTypeName","src":"5444:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5443:21:11"},"returnParameters":{"id":4243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4244,"src":"5488:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4241,"name":"bool","nodeType":"ElementaryTypeName","src":"5488:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5487:6:11"},"scope":4250,"src":"5419:75:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"06c8e316","id":4249,"implemented":false,"kind":"function","modifiers":[],"name":"getSaleTokenPrice","nameLocation":"5508:17:11","nodeType":"FunctionDefinition","parameters":{"id":4245,"nodeType":"ParameterList","parameters":[],"src":"5525:2:11"},"returnParameters":{"id":4248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4249,"src":"5551:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4246,"name":"uint256","nodeType":"ElementaryTypeName","src":"5551:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5550:9:11"},"scope":4250,"src":"5499:61:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4337,"src":"2974:2588:11","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IDappadVesting","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4336,"linearizedBaseContracts":[4336],"name":"IDappadVesting","nameLocation":"5574:14:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IDappadVesting.VestingParams","id":4260,"members":[{"constant":false,"id":4253,"mutability":"mutable","name":"defaultVesting","nameLocation":"5634:14:11","nodeType":"VariableDeclaration","scope":4260,"src":"5626:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage_ptr","typeString":"struct IDappadVesting.Vesting"},"typeName":{"id":4252,"nodeType":"UserDefinedTypeName","pathNode":{"id":4251,"name":"Vesting","nameLocations":["5626:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":4277,"src":"5626:7:11"},"referencedDeclaration":4277,"src":"5626:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Vesting_$4277_storage_ptr","typeString":"struct IDappadVesting.Vesting"}},"visibility":"internal"},{"constant":false,"id":4256,"mutability":"mutable","name":"vestingAddresses","nameLocation":"5675:16:11","nodeType":"VariableDeclaration","scope":4260,"src":"5658:33:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_storage_ptr","typeString":"struct IDappadVesting.VestingAddresses"},"typeName":{"id":4255,"nodeType":"UserDefinedTypeName","pathNode":{"id":4254,"name":"VestingAddresses","nameLocations":["5658:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":4288,"src":"5658:16:11"},"referencedDeclaration":4288,"src":"5658:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_VestingAddresses_$4288_storage_ptr","typeString":"struct IDappadVesting.VestingAddresses"}},"visibility":"internal"},{"constant":false,"id":4259,"mutability":"mutable","name":"vestingSettings","nameLocation":"5717:15:11","nodeType":"VariableDeclaration","scope":4260,"src":"5701:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_VestingSettings_$4265_storage_ptr","typeString":"struct IDappadVesting.VestingSettings"},"typeName":{"id":4258,"nodeType":"UserDefinedTypeName","pathNode":{"id":4257,"name":"VestingSettings","nameLocations":["5701:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":4265,"src":"5701:15:11"},"referencedDeclaration":4265,"src":"5701:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_VestingSettings_$4265_storage_ptr","typeString":"struct IDappadVesting.VestingSettings"}},"visibility":"internal"}],"name":"VestingParams","nameLocation":"5602:13:11","nodeType":"StructDefinition","scope":4336,"src":"5595:144:11","visibility":"public"},{"canonicalName":"IDappadVesting.VestingSettings","id":4265,"members":[{"constant":false,"id":4262,"mutability":"mutable","name":"startDate","nameLocation":"5786:9:11","nodeType":"VariableDeclaration","scope":4265,"src":"5778:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4261,"name":"uint256","nodeType":"ElementaryTypeName","src":"5778:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4264,"mutability":"mutable","name":"saleTokenPrice","nameLocation":"5813:14:11","nodeType":"VariableDeclaration","scope":4265,"src":"5805:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4263,"name":"uint256","nodeType":"ElementaryTypeName","src":"5805:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"VestingSettings","nameLocation":"5752:15:11","nodeType":"StructDefinition","scope":4336,"src":"5745:89:11","visibility":"public"},{"canonicalName":"IDappadVesting.Vesting","id":4277,"members":[{"constant":false,"id":4267,"mutability":"mutable","name":"vestingCount","nameLocation":"5873:12:11","nodeType":"VariableDeclaration","scope":4277,"src":"5865:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4266,"name":"uint256","nodeType":"ElementaryTypeName","src":"5865:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4269,"mutability":"mutable","name":"vestingDuration","nameLocation":"5903:15:11","nodeType":"VariableDeclaration","scope":4277,"src":"5895:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4268,"name":"uint256","nodeType":"ElementaryTypeName","src":"5895:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4271,"mutability":"mutable","name":"vestingCliffDuration","nameLocation":"5936:20:11","nodeType":"VariableDeclaration","scope":4277,"src":"5928:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4270,"name":"uint256","nodeType":"ElementaryTypeName","src":"5928:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4274,"mutability":"mutable","name":"vestingPercentages","nameLocation":"5976:18:11","nodeType":"VariableDeclaration","scope":4277,"src":"5966:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4272,"name":"uint256","nodeType":"ElementaryTypeName","src":"5966:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4273,"nodeType":"ArrayTypeName","src":"5966:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4276,"mutability":"mutable","name":"onTGE","nameLocation":"6009:5:11","nodeType":"VariableDeclaration","scope":4277,"src":"6004:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4275,"name":"bool","nodeType":"ElementaryTypeName","src":"6004:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Vesting","nameLocation":"5847:7:11","nodeType":"StructDefinition","scope":4336,"src":"5840:181:11","visibility":"public"},{"canonicalName":"IDappadVesting.VestingAddresses","id":4288,"members":[{"constant":false,"id":4279,"mutability":"mutable","name":"saleTokenAddress","nameLocation":"6069:16:11","nodeType":"VariableDeclaration","scope":4288,"src":"6061:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4278,"name":"address","nodeType":"ElementaryTypeName","src":"6061:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4281,"mutability":"mutable","name":"factoryContractAddress","nameLocation":"6103:22:11","nodeType":"VariableDeclaration","scope":4288,"src":"6095:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4280,"name":"address","nodeType":"ElementaryTypeName","src":"6095:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4283,"mutability":"mutable","name":"saleContractAddress","nameLocation":"6143:19:11","nodeType":"VariableDeclaration","scope":4288,"src":"6135:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4282,"name":"address","nodeType":"ElementaryTypeName","src":"6135:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4285,"mutability":"mutable","name":"ownerAddress","nameLocation":"6180:12:11","nodeType":"VariableDeclaration","scope":4288,"src":"6172:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4284,"name":"address","nodeType":"ElementaryTypeName","src":"6172:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4287,"mutability":"mutable","name":"adminAddress","nameLocation":"6210:12:11","nodeType":"VariableDeclaration","scope":4288,"src":"6202:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4286,"name":"address","nodeType":"ElementaryTypeName","src":"6202:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"VestingAddresses","nameLocation":"6034:16:11","nodeType":"StructDefinition","scope":4336,"src":"6027:202:11","visibility":"public"},{"canonicalName":"IDappadVesting.VestingStatistics","id":4293,"members":[{"constant":false,"id":4290,"mutability":"mutable","name":"totalVestingAmount","nameLocation":"6278:18:11","nodeType":"VariableDeclaration","scope":4293,"src":"6270:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4289,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4292,"mutability":"mutable","name":"totalSaleTokenAmount","nameLocation":"6314:20:11","nodeType":"VariableDeclaration","scope":4293,"src":"6306:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4291,"name":"uint256","nodeType":"ElementaryTypeName","src":"6306:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"VestingStatistics","nameLocation":"6242:17:11","nodeType":"StructDefinition","scope":4336,"src":"6235:106:11","visibility":"public"},{"functionSelector":"75420c99","id":4300,"implemented":false,"kind":"function","modifiers":[],"name":"setTotalVestingAmount","nameLocation":"6356:21:11","nodeType":"FunctionDefinition","parameters":{"id":4296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4295,"mutability":"mutable","name":"amount","nameLocation":"6386:6:11","nodeType":"VariableDeclaration","scope":4300,"src":"6378:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4294,"name":"uint256","nodeType":"ElementaryTypeName","src":"6378:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6377:16:11"},"returnParameters":{"id":4299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4300,"src":"6412:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4297,"name":"bool","nodeType":"ElementaryTypeName","src":"6412:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6411:6:11"},"scope":4336,"src":"6347:71:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"7eb16ac2","id":4309,"implemented":false,"kind":"function","modifiers":[],"name":"getVestingClaimed","nameLocation":"6432:17:11","nodeType":"FunctionDefinition","parameters":{"id":4305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4302,"mutability":"mutable","name":"userAddress","nameLocation":"6458:11:11","nodeType":"VariableDeclaration","scope":4309,"src":"6450:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4301,"name":"address","nodeType":"ElementaryTypeName","src":"6450:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4304,"mutability":"mutable","name":"vestingIndex","nameLocation":"6479:12:11","nodeType":"VariableDeclaration","scope":4309,"src":"6471:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4303,"name":"uint256","nodeType":"ElementaryTypeName","src":"6471:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6449:43:11"},"returnParameters":{"id":4308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4309,"src":"6516:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4306,"name":"bool","nodeType":"ElementaryTypeName","src":"6516:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6515:6:11"},"scope":4336,"src":"6423:99:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"17a76955","id":4314,"implemented":false,"kind":"function","modifiers":[],"name":"getTotalVestingAmount","nameLocation":"6536:21:11","nodeType":"FunctionDefinition","parameters":{"id":4310,"nodeType":"ParameterList","parameters":[],"src":"6557:2:11"},"returnParameters":{"id":4313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4314,"src":"6583:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4311,"name":"uint256","nodeType":"ElementaryTypeName","src":"6583:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6582:9:11"},"scope":4336,"src":"6527:65:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"786b4456","id":4321,"implemented":false,"kind":"function","modifiers":[],"name":"getAnyVestingClaimed","nameLocation":"6606:20:11","nodeType":"FunctionDefinition","parameters":{"id":4317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4316,"mutability":"mutable","name":"userAddress","nameLocation":"6635:11:11","nodeType":"VariableDeclaration","scope":4321,"src":"6627:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4315,"name":"address","nodeType":"ElementaryTypeName","src":"6627:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6626:21:11"},"returnParameters":{"id":4320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4321,"src":"6671:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4318,"name":"bool","nodeType":"ElementaryTypeName","src":"6671:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6670:6:11"},"scope":4336,"src":"6597:80:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"bf5a0c59","id":4328,"implemented":false,"kind":"function","modifiers":[],"name":"getUserTotalVestingAmount","nameLocation":"6691:25:11","nodeType":"FunctionDefinition","parameters":{"id":4324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4323,"mutability":"mutable","name":"userAddress","nameLocation":"6725:11:11","nodeType":"VariableDeclaration","scope":4328,"src":"6717:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4322,"name":"address","nodeType":"ElementaryTypeName","src":"6717:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6716:21:11"},"returnParameters":{"id":4327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4328,"src":"6761:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4325,"name":"uint256","nodeType":"ElementaryTypeName","src":"6761:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6760:9:11"},"scope":4336,"src":"6682:88:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cd861e16","id":4335,"implemented":false,"kind":"function","modifiers":[],"name":"getUserUnclaimedTokenAmount","nameLocation":"6784:27:11","nodeType":"FunctionDefinition","parameters":{"id":4331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4330,"mutability":"mutable","name":"userAddress","nameLocation":"6820:11:11","nodeType":"VariableDeclaration","scope":4335,"src":"6812:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4329,"name":"address","nodeType":"ElementaryTypeName","src":"6812:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6811:21:11"},"returnParameters":{"id":4334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4335,"src":"6856:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4332,"name":"uint256","nodeType":"ElementaryTypeName","src":"6856:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6855:9:11"},"scope":4336,"src":"6775:90:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4337,"src":"5564:1303:11","usedErrors":[],"usedEvents":[]}],"src":"33:6834:11"}}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[{"inputs":[],"name":"MerkleProofInvalidMultiproof","type":"error"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MerkleProofInvalidMultiproof\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the Merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates Merkle trees that are safe against this attack out of the box.\",\"errors\":{\"MerkleProofInvalidMultiproof()\":[{\"details\":\"The multiproof provided is not valid.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":null,"zk_version":"1.3.23"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"MerkleProof.sol:MerkleProof\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000484fd3ca1933181ec6513e9dde73ec546582d25a58f81bca582f856a190b4fb3"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 5:\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\"\nobject \"MerkleProof_1140\" {\n    code {\n        {\n            /// @src 5:803:9759  \"library MerkleProof {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"MerkleProof_1140_deployed\")\n            codecopy(_1, dataoffset(\"MerkleProof_1140_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 5:\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\"\n    object \"MerkleProof_1140_deployed\" {\n        code {\n            {\n                /// @src 5:803:9759  \"library MerkleProof {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122021973078dd74a323b878ee3ed782698c1d6beb730c5f21ff62cd8935463d1b6364736f6c63430008140033\"\n    }\n}\n","hash":"010000074b8a549c430b8b1d9225b1d599f1badcd220ce5430c9cecd02843f94","factoryDependencies":{}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"contracts/core/DappadVesting.sol":{"DappadVesting":{"abi":[{"inputs":[{"components":[{"components":[{"internalType":"uint256","name":"vestingCount","type":"uint256"},{"internalType":"uint256","name":"vestingDuration","type":"uint256"},{"internalType":"uint256","name":"vestingCliffDuration","type":"uint256"},{"internalType":"uint256[]","name":"vestingPercentages","type":"uint256[]"},{"internalType":"bool","name":"onTGE","type":"bool"}],"internalType":"struct IDappadVesting.Vesting","name":"defaultVesting","type":"tuple"},{"components":[{"internalType":"address","name":"saleTokenAddress","type":"address"},{"internalType":"address","name":"factoryContractAddress","type":"address"},{"internalType":"address","name":"saleContractAddress","type":"address"},{"internalType":"address","name":"ownerAddress","type":"address"},{"internalType":"address","name":"adminAddress","type":"address"}],"internalType":"struct IDappadVesting.VestingAddresses","name":"vestingAddresses","type":"tuple"},{"components":[{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"saleTokenPrice","type":"uint256"}],"internalType":"struct IDappadVesting.VestingSettings","name":"vestingSettings","type":"tuple"}],"internalType":"struct IDappadVesting.VestingParams","name":"vestingParams","type":"tuple"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"AlreadyClaimedError","type":"error"},{"inputs":[],"name":"AlreadyRefundedError","type":"error"},{"inputs":[],"name":"ArraysLengthMismatchError","type":"error"},{"inputs":[],"name":"EmptyVestingPercentageError","type":"error"},{"inputs":[],"name":"InsufficientAllowanceError","type":"error"},{"inputs":[],"name":"InsufficientBalanceError","type":"error"},{"inputs":[],"name":"InsufficientContractBalanceError","type":"error"},{"inputs":[],"name":"InvalidAmountError","type":"error"},{"inputs":[],"name":"InvalidVestingDurationError","type":"error"},{"inputs":[],"name":"InvalidVestingIndexError","type":"error"},{"inputs":[],"name":"NotJoinedSaleError","type":"error"},{"inputs":[],"name":"TokenTransferFailedError","type":"error"},{"inputs":[],"name":"TotalVestingPercentageError","type":"error"},{"inputs":[],"name":"UnauthorizedError","type":"error"},{"inputs":[],"name":"VestingNotClaimableError","type":"error"},{"inputs":[],"name":"VestingsNotClaimableError","type":"error"},{"inputs":[],"name":"ZeroAddressError","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"userAddress","type":"address"},{"components":[{"internalType":"uint256","name":"vestingCount","type":"uint256"},{"internalType":"uint256","name":"vestingDuration","type":"uint256"},{"internalType":"uint256","name":"vestingCliffDuration","type":"uint256"},{"internalType":"uint256[]","name":"vestingPercentages","type":"uint256[]"},{"internalType":"bool","name":"onTGE","type":"bool"}],"indexed":false,"internalType":"struct IDappadVesting.Vesting","name":"vesting","type":"tuple"},{"indexed":false,"internalType":"uint256[]","name":"vestingPercentages","type":"uint256[]"}],"name":"CustomVestingUpdated","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint256","name":"vestingCount","type":"uint256"},{"internalType":"uint256","name":"vestingDuration","type":"uint256"},{"internalType":"uint256","name":"vestingCliffDuration","type":"uint256"},{"internalType":"uint256[]","name":"vestingPercentages","type":"uint256[]"},{"internalType":"bool","name":"onTGE","type":"bool"}],"indexed":false,"internalType":"struct IDappadVesting.Vesting","name":"vesting","type":"tuple"},{"indexed":false,"internalType":"uint256[]","name":"vestingPercentages","type":"uint256[]"}],"name":"DefaultVestingUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"saleAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalSaleTokenAmount","type":"uint256"}],"name":"SaleTokenAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"totalSaleTokenAmount","type":"uint256"}],"name":"TotalSaleTokenAmountUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"totalVestingAmount","type":"uint256"}],"name":"TotalVestingAmountUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"userAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"saleTokenAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalVestingAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"claimedTime","type":"uint256"}],"name":"UserClaimedAllUnlockedVestings","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"userAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"vestingIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"saleTokenAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalVestingAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"claimedTime","type":"uint256"}],"name":"UserClaimedVesting","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"userAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"UserInvestmentAmountUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"userAddresses","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"UserInvestmentAmountsUpdated","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"address","name":"saleTokenAddress","type":"address"},{"internalType":"address","name":"factoryContractAddress","type":"address"},{"internalType":"address","name":"saleContractAddress","type":"address"},{"internalType":"address","name":"ownerAddress","type":"address"},{"internalType":"address","name":"adminAddress","type":"address"}],"indexed":false,"internalType":"struct IDappadVesting.VestingAddresses","name":"vestingAddresses","type":"tuple"}],"name":"VestingAddressesUpdated","type":"event"},{"inputs":[],"name":"ADMIN","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OWNER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"addSaleToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"saleTokenPrice","type":"uint256"},{"internalType":"uint256","name":"investmentAmount","type":"uint256"}],"name":"calculateSaleTokenAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimAllUnlockedVestings","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"vestingIndex","type":"uint256"}],"name":"claimVesting","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"customVestings","outputs":[{"internalType":"uint256","name":"vestingCount","type":"uint256"},{"internalType":"uint256","name":"vestingDuration","type":"uint256"},{"internalType":"uint256","name":"vestingCliffDuration","type":"uint256"},{"internalType":"bool","name":"onTGE","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultVesting","outputs":[{"internalType":"uint256","name":"vestingCount","type":"uint256"},{"internalType":"uint256","name":"vestingDuration","type":"uint256"},{"internalType":"uint256","name":"vestingCliffDuration","type":"uint256"},{"internalType":"bool","name":"onTGE","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"emergencyOnly","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getAnyVestingClaimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getCustomVestingPercentages","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDefaultVestingPercentages","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFactoryContractAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getNextUnlockDate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSaleTokenAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalVestingAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserLockedTokenAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserNextVestingIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserTotalVestingAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserUnclaimedTokenAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserUnlockedTokenAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"uint256","name":"vestingIndex","type":"uint256"}],"name":"getVestingClaimable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"uint256","name":"vestingIndex","type":"uint256"}],"name":"getVestingClaimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"investmentAmounts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"saleContract","outputs":[{"internalType":"contract IDappadSale","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"saleToken","outputs":[{"internalType":"contract IERC20Extented","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"},{"components":[{"internalType":"uint256","name":"vestingCount","type":"uint256"},{"internalType":"uint256","name":"vestingDuration","type":"uint256"},{"internalType":"uint256","name":"vestingCliffDuration","type":"uint256"},{"internalType":"uint256[]","name":"vestingPercentages","type":"uint256[]"},{"internalType":"bool","name":"onTGE","type":"bool"}],"internalType":"struct IDappadVesting.Vesting","name":"vesting","type":"tuple"}],"name":"setCustomVesting","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"userAddresses","type":"address[]"},{"components":[{"internalType":"uint256","name":"vestingCount","type":"uint256"},{"internalType":"uint256","name":"vestingDuration","type":"uint256"},{"internalType":"uint256","name":"vestingCliffDuration","type":"uint256"},{"internalType":"uint256[]","name":"vestingPercentages","type":"uint256[]"},{"internalType":"bool","name":"onTGE","type":"bool"}],"internalType":"struct IDappadVesting.Vesting[]","name":"vestings","type":"tuple[]"}],"name":"setCustomVestings","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"vestingCount","type":"uint256"},{"internalType":"uint256","name":"vestingDuration","type":"uint256"},{"internalType":"uint256","name":"vestingCliffDuration","type":"uint256"},{"internalType":"uint256[]","name":"vestingPercentages","type":"uint256[]"},{"internalType":"bool","name":"onTGE","type":"bool"}],"internalType":"struct IDappadVesting.Vesting","name":"vesting","type":"tuple"}],"name":"setDefaultVesting","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"setTotalSaleTokenAmount","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"setTotalVestingAmount","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"setUserInvestmentAmount","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"userAddresses","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"setUserInvestmentAmounts","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"saleTokenAddress","type":"address"},{"internalType":"address","name":"factoryContractAddress","type":"address"},{"internalType":"address","name":"saleContractAddress","type":"address"},{"internalType":"address","name":"ownerAddress","type":"address"},{"internalType":"address","name":"adminAddress","type":"address"}],"internalType":"struct IDappadVesting.VestingAddresses","name":"newVestingAddresses","type":"tuple"}],"name":"setVestingAddresses","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"vestingAddresses","outputs":[{"internalType":"address","name":"saleTokenAddress","type":"address"},{"internalType":"address","name":"factoryContractAddress","type":"address"},{"internalType":"address","name":"saleContractAddress","type":"address"},{"internalType":"address","name":"ownerAddress","type":"address"},{"internalType":"address","name":"adminAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"vestingClaimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"vestingSettings","outputs":[{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"saleTokenPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"vestingStatistics","outputs":[{"internalType":"uint256","name":"totalVestingAmount","type":"uint256"},{"internalType":"uint256","name":"totalSaleTokenAmount","type":"uint256"}],"stateMutability":"view","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"vestingCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingCliffDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"vestingPercentages\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"onTGE\",\"type\":\"bool\"}],\"internalType\":\"struct IDappadVesting.Vesting\",\"name\":\"defaultVesting\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"saleTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factoryContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"saleContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"adminAddress\",\"type\":\"address\"}],\"internalType\":\"struct IDappadVesting.VestingAddresses\",\"name\":\"vestingAddresses\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleTokenPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IDappadVesting.VestingSettings\",\"name\":\"vestingSettings\",\"type\":\"tuple\"}],\"internalType\":\"struct IDappadVesting.VestingParams\",\"name\":\"vestingParams\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyClaimedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyRefundedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArraysLengthMismatchError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyVestingPercentageError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAllowanceError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalanceError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientContractBalanceError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmountError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVestingDurationError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVestingIndexError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotJoinedSaleError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenTransferFailedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TotalVestingPercentageError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VestingNotClaimableError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VestingsNotClaimableError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressError\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"vestingCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingCliffDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"vestingPercentages\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"onTGE\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct IDappadVesting.Vesting\",\"name\":\"vesting\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"vestingPercentages\",\"type\":\"uint256[]\"}],\"name\":\"CustomVestingUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"vestingCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingCliffDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"vestingPercentages\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"onTGE\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct IDappadVesting.Vesting\",\"name\":\"vesting\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"vestingPercentages\",\"type\":\"uint256[]\"}],\"name\":\"DefaultVestingUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"saleAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSaleTokenAmount\",\"type\":\"uint256\"}],\"name\":\"SaleTokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSaleTokenAmount\",\"type\":\"uint256\"}],\"name\":\"TotalSaleTokenAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalVestingAmount\",\"type\":\"uint256\"}],\"name\":\"TotalVestingAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"saleTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalVestingAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimedTime\",\"type\":\"uint256\"}],\"name\":\"UserClaimedAllUnlockedVestings\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vestingIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"saleTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalVestingAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimedTime\",\"type\":\"uint256\"}],\"name\":\"UserClaimedVesting\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UserInvestmentAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"userAddresses\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"UserInvestmentAmountsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"saleTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factoryContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"saleContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"adminAddress\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IDappadVesting.VestingAddresses\",\"name\":\"vestingAddresses\",\"type\":\"tuple\"}],\"name\":\"VestingAddressesUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OWNER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addSaleToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"saleTokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentAmount\",\"type\":\"uint256\"}],\"name\":\"calculateSaleTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAllUnlockedVestings\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vestingIndex\",\"type\":\"uint256\"}],\"name\":\"claimVesting\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"customVestings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"vestingCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingCliffDuration\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"onTGE\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultVesting\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"vestingCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingCliffDuration\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"onTGE\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyOnly\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getAnyVestingClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getCustomVestingPercentages\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultVestingPercentages\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFactoryContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getNextUnlockDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSaleTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalVestingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserLockedTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserNextVestingIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserTotalVestingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserUnclaimedTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserUnlockedTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"vestingIndex\",\"type\":\"uint256\"}],\"name\":\"getVestingClaimable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"vestingIndex\",\"type\":\"uint256\"}],\"name\":\"getVestingClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"investmentAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleContract\",\"outputs\":[{\"internalType\":\"contract IDappadSale\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleToken\",\"outputs\":[{\"internalType\":\"contract IERC20Extented\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"vestingCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingCliffDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"vestingPercentages\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"onTGE\",\"type\":\"bool\"}],\"internalType\":\"struct IDappadVesting.Vesting\",\"name\":\"vesting\",\"type\":\"tuple\"}],\"name\":\"setCustomVesting\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"userAddresses\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"vestingCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingCliffDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"vestingPercentages\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"onTGE\",\"type\":\"bool\"}],\"internalType\":\"struct IDappadVesting.Vesting[]\",\"name\":\"vestings\",\"type\":\"tuple[]\"}],\"name\":\"setCustomVestings\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"vestingCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingCliffDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"vestingPercentages\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"onTGE\",\"type\":\"bool\"}],\"internalType\":\"struct IDappadVesting.Vesting\",\"name\":\"vesting\",\"type\":\"tuple\"}],\"name\":\"setDefaultVesting\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setTotalSaleTokenAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setTotalVestingAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setUserInvestmentAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"setUserInvestmentAmounts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"saleTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factoryContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"saleContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"adminAddress\",\"type\":\"address\"}],\"internalType\":\"struct IDappadVesting.VestingAddresses\",\"name\":\"newVestingAddresses\",\"type\":\"tuple\"}],\"name\":\"setVestingAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"saleTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factoryContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"saleContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"adminAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vestingClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingSettings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleTokenPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingStatistics\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalVestingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSaleTokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/DappadVesting.sol\":\"DappadVesting\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/core/DappadVesting.sol\":{\"keccak256\":\"0x7bbae398c8e56da3bfc92472160bb85f9dc37e5643dfed7a398373ae1fa39720\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7ff1ed53b05252e8aa1e698dbf6411fb78a0b089e9df27523d97a99ddc8d951\",\"dweb:/ipfs/QmduGR1S3DwXSx5rSUZd5uts1tZoqnpLR5Lhn1mkMCNghS\"]},\"contracts/errors/Errors.sol\":{\"keccak256\":\"0x1e7bd8e98aaf625e63f63fa8d2bf4f8b4beb93313e33dfb6affdcdd9a7524f70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0613414bf0ad19a7ebc66e8eba189869aacf94f9e734536488a75216942650\",\"dweb:/ipfs/QmRGKqDpx3ef5D3MXMyoR7U23HWqDZmj9Kt2QJgcgD37YR\"]},\"contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xcee038fff82ea087fcca9ccabcc0e8e8d98fe8e907c3d781e16b653badd7bd42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8437b64a0e7587e2d0ab0f37767f9be8bce72b41ecb3c340940a301f35422f48\",\"dweb:/ipfs/QmYy6hA9PY78CDsq71zPsYxBKJxGgSSpSmhXSW4kSLke4a\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":null,"zk_version":"1.3.23"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"DappadVesting.sol:DappadVesting\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[23]\n\tptr.add\tr1, r0, r9\n\tptr.add\tr9, r0, stack[@ptr_calldata]\n\tadd\tr9, r0, r1\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r3\n\tadd\tr3, r0, stack-[21]\n\tst.1\t64, r3\n\tand\t@CPI0_0[0], r1, r1\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r1, r2\n\tjump.lt\t@.BB0_2\n\tld\tr9, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_26[0], r2, r3\n\tjump.le\t@.BB0_92\n\tsub.s!\t@CPI0_27[0], r2, r3\n\tjump.le\t@.BB0_122\n\tsub.s!\t@CPI0_28[0], r2, r3\n\tjump.gt\t@.BB0_144\n\tsub.s!\t@CPI0_36[0], r2, r3\n\tjump.gt\t@.BB0_141\n\tsub.s!\t@CPI0_40[0], r2, r3\n\tjump.eq\t@.BB0_827\n\tsub.s!\t@CPI0_41[0], r2, r3\n\tjump.eq\t@.BB0_891\n\tsub.s!\t@CPI0_42[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_4[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r3\n\tadd\t@CPI0_5[0], r0, r4\n\tsub!\tr3, r1, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_5[0], r3, r3\n\tsub!\tr3, r0, r6\n\tadd.ge\tr0, r0, r4\n\tsub.s!\t@CPI0_5[0], r3, r3\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r2, r3\n\tptr.add\tr9, r3, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[12]\n\tsub.s!\t@CPI0_4[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\t36, r2, stack-[11]\n\tadd\tstack-[12], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\tstack-[11], r2, r2\n\tsub!\tr2, r1, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r9, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[18]\n\tsub.s!\t@CPI0_4[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[18], r0, r2\n\tadd\t35, r2, r2\n\tadd\t@CPI0_5[0], r0, r3\n\tsub!\tr2, r1, r4\n\tadd\tr0, r0, r4\n\tadd.ge\tr3, r0, r4\n\tand\t@CPI0_5[0], r2, r2\n\tsub!\tr2, r0, r5\n\tadd.ge\tr0, r0, r3\n\tsub.s!\t@CPI0_5[0], r2, r2\n\tadd.ne\tr4, r0, r3\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[18], r0, r2\n\tadd\t4, r2, r2\n\tptr.add\tr9, r2, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[23]\n\tsub.s!\t@CPI0_4[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[18], r0, r2\n\tadd\t36, r2, stack-[22]\n\tadd\tstack-[23], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\tstack-[22], r2, r2\n\tsub!\tr2, r1, r1\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr1\n\tand\t@CPI0_9[0], r1, r1\n\tadd\tr1, r0, stack-[21]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_909\n\tadd\tstack-[21], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_206\n.BB0_909:\n\tadd\tstack-[23], r0, r2\n\tsub!\tstack-[12], r2, r1\n\tjump.ne\t@.BB0_910\n\tsub!\tstack-[12], r0, r1\n\tjump.eq\t@.BB0_212\n\tsub.s\t195, r0, r1\n\tsub.s\tstack-[18], r1, stack-[14]\n\tadd\t@CPI0_5[0], r0, r6\n\tadd\tr0, r0, stack-[13]\n.BB0_914:\n\tadd\tstack-[13], r0, r1\n\tshl.s\t5, r1, r2\n\tadd\tstack-[11], r2, stack-[16]\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\tstack-[16], r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r4\n\tjump.gt\t@.BB0_2\n\tsub!\tr1, r0, r4\n\tjump.eq\t@.BB0_37\n\tadd\tstack-[22], r2, stack-[17]\n\tptr.add.s\tstack-[17], r3, r2\n\tld\tr2, r4\n\tadd\tstack-[18], r0, r2\n\tsub\tstack[@calldatasize], r2, r2\n\tsub.s\t195, r2, r2\n\tsub!\tr4, r2, r3\n\tadd\tr0, r0, r3\n\tadd.ge\tr6, r0, r3\n\tand\t@CPI0_5[0], r2, r2\n\tadd\tr4, r0, stack-[23]\n\tand\t@CPI0_5[0], r4, r4\n\tsub!\tr4, r2, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr6, r0, r5\n\txor\tr4, r2, r2\n\tsub.s!\t@CPI0_5[0], r2, r2\n\tadd.ne\tr3, r0, r5\n\tsub!\tr5, r0, r2\n\tjump.ne\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\t@CPI0_5[0], r0, r9\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[23], r0, r3\n\tadd\tstack-[22], r3, r2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add\tr3, r2, r4\n\tld\tr4, r4\n\tld\tr1, r5\n\tsstore\tr5, r4\n\tadd\t32, r2, r1\n\tptr.add\tr3, r1, r1\n\tld\tr1, r1\n\tadd\t1, r5, r4\n\tsstore\tr4, r1\n\tadd\t64, r2, r1\n\tptr.add\tr3, r1, r1\n\tld\tr1, r1\n\tadd\tr5, r0, stack-[21]\n\tadd\t2, r5, r4\n\tsstore\tr4, r1\n\tadd\t96, r2, stack-[20]\n\tptr.add.s\tstack-[20], r3, r1\n\tld\tr1, r4\n\tadd\tstack[@calldatasize], r0, r1\n\tsub\tr1, r2, r5\n\tsub.s\t31, r5, r5\n\tsub!\tr4, r5, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr9, r0, r6\n\tand\t@CPI0_5[0], r5, r5\n\tand\t@CPI0_5[0], r4, r7\n\tsub!\tr7, r5, r8\n\tadd\tr0, r0, r8\n\tadd.lt\tr9, r0, r8\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI0_5[0], r5, r5\n\tadd.ne\tr6, r0, r8\n\tsub!\tr8, r0, r5\n\tjump.ne\t@.BB0_2\n\tadd\tr4, r2, r2\n\tptr.add\tr3, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[23]\n\tsub.s!\t@CPI0_4[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[23], r0, r3\n\tshl.s\t5, r3, r3\n\tsub\tr1, r3, r1\n\tadd\t32, r2, r3\n\tsub!\tr3, r1, r2\n\tadd\tr0, r0, r2\n\tadd.gt\tr9, r0, r2\n\tand\t@CPI0_5[0], r1, r1\n\tadd\tr3, r0, stack-[19]\n\tand\t@CPI0_5[0], r3, r3\n\tsub!\tr3, r1, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr9, r0, r4\n\txor\tr3, r1, r1\n\tsub.s!\t@CPI0_5[0], r1, r1\n\tadd.ne\tr2, r0, r4\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[21], r0, r1\n\tadd\t3, r1, r4\n\tsload\tr4, r2\n\tadd\tstack-[23], r0, r1\n\tsstore\tr4, r1\n\tsub!\tr2, r1, r1\n\tjump.le\t@.BB0_926\n\tadd\tr2, r0, stack-[9]\n\tadd\tr4, r0, stack-[10]\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r2\n\tadd\tstack-[23], r2, r1\n\tadd\tstack-[9], r2, r2\n\tsub!\tr1, r2, r3\n\tadd\tstack-[10], r0, r4\n\tjump.ge\t@.BB0_926\n.BB0_925:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_925\n.BB0_926:\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\t@CPI0_5[0], r0, r9\n\tjump.eq\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tld\tr1, r1\n\tadd\tstack-[23], r0, r6\n\tsub!\tr6, r0, r3\n\tadd\tstack-[19], r0, r7\n\tjump.eq\t@.BB0_930\n\tadd\tr0, r0, r3\n.BB0_929:\n\tadd\tr3, r1, r4\n\tptr.add\tr2, r7, r5\n\tld\tr5, r5\n\tsstore\tr4, r5\n\tadd\t32, r7, r7\n\tadd\t1, r3, r3\n\tsub!\tr3, r6, r4\n\tjump.lt\t@.BB0_929\n.BB0_930:\n\tadd\tstack-[20], r0, r1\n\tadd\t32, r1, r1\n\tptr.add\tr2, r1, r1\n\tld\tr1, r1\n\tsub!\tr1, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr1, r3, r3\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[21], r0, r3\n\tadd\t4, r3, r3\n\tsload\tr3, r4\n\tsub.s\t256, r0, r5\n\tand\tr4, r5, r4\n\tor\tr4, r1, r1\n\tsstore\tr3, r1\n\tptr.add.s\tstack-[17], r2, r1\n\tld\tr1, r3\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\tstack-[18], r1, r4\n\tsub.s\t195, r4, r4\n\tsub!\tr3, r4, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr9, r0, r5\n\tand\t@CPI0_5[0], r4, r4\n\tand\t@CPI0_5[0], r3, r6\n\tsub!\tr6, r4, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr9, r0, r7\n\txor\tr6, r4, r4\n\tsub.s!\t@CPI0_5[0], r4, r4\n\tadd.ne\tr5, r0, r7\n\tsub!\tr7, r0, r4\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[22], r3, r3\n\tadd\t96, r3, r4\n\tptr.add\tr2, r4, r4\n\tsub\tr1, r3, r5\n\tsub.s\t31, r5, r5\n\tld\tr4, r4\n\tsub!\tr4, r5, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr9, r0, r6\n\tand\t@CPI0_5[0], r5, r5\n\tand\t@CPI0_5[0], r4, r7\n\tsub!\tr7, r5, r8\n\tadd\tr0, r0, r8\n\tadd.lt\tr9, r0, r8\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI0_5[0], r5, r5\n\tadd.ne\tr6, r0, r8\n\tsub!\tr8, r0, r5\n\tjump.ne\t@.BB0_2\n\tadd\tr4, r3, r5\n\tptr.add\tr2, r5, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI0_4[0], r4, r3\n\tjump.gt\t@.BB0_2\n\tshl.s\t5, r4, r3\n\tsub\tr1, r3, r6\n\tadd\t32, r5, r5\n\tsub!\tr5, r6, r7\n\tadd\tr0, r0, r7\n\tadd.gt\tr9, r0, r7\n\tand\t@CPI0_5[0], r6, r6\n\tand\t@CPI0_5[0], r5, r5\n\tsub!\tr5, r6, r8\n\tadd\tr0, r0, r8\n\tadd.lt\tr9, r0, r8\n\txor\tr5, r6, r5\n\tsub.s!\t@CPI0_5[0], r5, r5\n\tadd.ne\tr7, r0, r8\n\tsub!\tr8, r0, r5\n\tjump.ne\t@.BB0_2\n\tadd\t63, r3, r5\n\tsub.s\t32, r0, r6\n\tand\tr5, r6, r5\n\tld.1\t64, r6\n\tadd\tr6, r5, r5\n\tadd\tr6, r0, stack-[23]\n\tsub!\tr5, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_4[0], r5, r7\n\tjump.gt\t@.BB0_4\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r5\n\tadd\tstack-[23], r0, r5\n\tst.1.inc\tr5, r4, r8\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_1227\n\tptr.add\tr2, r1, r1\n\tadd\tr0, r0, r5\n.BB0_939:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_939\n.BB0_1227:\n\tadd\tr8, r0, stack-[21]\n\tand!\t31, r3, r1\n\tjump.eq\t@.BB0_941\n.BB0_941:\n\tptr.add.s\tstack-[16], r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\tstack-[15], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[23], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[23]\n\tsub.s!\t@CPI0_4[0], r2, r2\n\tjump.gt\t@.BB0_4\n\tadd\t3, r1, r4\n\tsload\tr4, r2\n\tadd\tstack-[23], r0, r1\n\tsstore\tr4, r1\n\tsub!\tr2, r1, r1\n\tjump.le\t@.BB0_949\n\tadd\tr2, r0, stack-[19]\n\tadd\tr4, r0, stack-[20]\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r2\n\tadd\tstack-[23], r2, r1\n\tadd\tstack-[19], r2, r2\n\tsub!\tr1, r2, r3\n\tadd\tstack-[20], r0, r4\n\tjump.ge\t@.BB0_949\n.BB0_948:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_948\n.BB0_949:\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\t@CPI0_5[0], r0, r12\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[23], r0, r6\n\tsub!\tr6, r0, r2\n\tadd\tstack-[21], r0, r5\n\tjump.eq\t@.BB0_953\n\tadd\tr0, r0, r2\n.BB0_952:\n\tadd\tr2, r1, r3\n\tld.1.inc\tr5, r4, r5\n\tsstore\tr3, r4\n\tadd\t1, r2, r2\n\tsub!\tr2, r6, r3\n\tjump.lt\t@.BB0_952\n.BB0_953:\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\tstack-[14], r2, r4\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\tstack-[17], r1, r3\n\tld\tr3, r3\n\tsub!\tr3, r4, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr12, r0, r5\n\tand\t@CPI0_5[0], r4, r4\n\tand\t@CPI0_5[0], r3, r6\n\tsub!\tr6, r4, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr12, r0, r7\n\txor\tr6, r4, r4\n\tsub.s!\t@CPI0_5[0], r4, r4\n\tadd.ne\tr5, r0, r7\n\tsub!\tr7, r0, r4\n\tjump.ne\t@.BB0_2\n\tadd\tr0, r0, stack-[21]\n\tadd\tr0, r0, r10\n.BB0_956:\n\tadd\tstack-[22], r3, r4\n\tptr.add\tr1, r4, r5\n\tld\tr5, r5\n\tsub!\tr10, r5, r6\n\tjump.ge\t@.BB0_971\n\tadd\t96, r4, r3\n\tptr.add\tr1, r3, r3\n\tsub\tr2, r4, r5\n\tsub.s\t31, r5, r5\n\tld\tr3, r3\n\tsub!\tr3, r5, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr12, r0, r6\n\tand\t@CPI0_5[0], r5, r5\n\tand\t@CPI0_5[0], r3, r7\n\tsub!\tr7, r5, r8\n\tadd\tr0, r0, r8\n\tadd.lt\tr12, r0, r8\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI0_5[0], r5, r5\n\tadd.ne\tr6, r0, r8\n\tsub!\tr8, r0, r5\n\tjump.ne\t@.BB0_2\n\tadd\tr3, r4, r4\n\tptr.add\tr1, r4, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_4[0], r3, r5\n\tjump.gt\t@.BB0_2\n\tshl.s\t5, r3, r5\n\tsub\tr2, r5, r5\n\tadd\t32, r4, r2\n\tsub!\tr2, r5, r4\n\tadd\tr0, r0, r4\n\tadd.gt\tr12, r0, r4\n\tand\t@CPI0_5[0], r5, r5\n\tand\t@CPI0_5[0], r2, r6\n\tsub!\tr6, r5, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr12, r0, r7\n\txor\tr6, r5, r5\n\tsub.s!\t@CPI0_5[0], r5, r5\n\tadd.ne\tr4, r0, r7\n\tsub!\tr7, r0, r4\n\tjump.ne\t@.BB0_2\n\tsub!\tr10, r3, r3\n\tjump.ge\t@.BB0_84\n\tptr.add.s\tstack-[16], r1, r3\n\tshl.s\t5, r10, stack-[19]\n\tadd\tstack-[19], r2, r2\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[20]\n\tld\tr3, r1\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\tstack-[15], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr10, r0, stack-[23]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[23], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t3, r1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB0_84\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[23], r0, r10\n\tadd\t@CPI0_5[0], r0, r12\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r10, r1\n\tadd\tstack-[20], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\tstack-[18], r2, r1\n\tsub.s\t195, r1, r4\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\tstack-[17], r1, r3\n\tld\tr3, r3\n\tsub!\tr3, r4, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr12, r0, r5\n\tand\t@CPI0_5[0], r4, r4\n\tand\t@CPI0_5[0], r3, r6\n\tsub!\tr6, r4, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr12, r0, r7\n\txor\tr6, r4, r4\n\tsub.s!\t@CPI0_5[0], r4, r4\n\tadd.ne\tr5, r0, r7\n\tsub!\tr7, r0, r4\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[22], r3, r4\n\tadd\t96, r4, r5\n\tptr.add\tr1, r5, r5\n\tsub\tr2, r4, r6\n\tsub.s\t31, r6, r6\n\tld\tr5, r5\n\tsub!\tr5, r6, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr12, r0, r7\n\tand\t@CPI0_5[0], r6, r6\n\tand\t@CPI0_5[0], r5, r8\n\tsub!\tr8, r6, r9\n\tadd\tr0, r0, r9\n\tadd.lt\tr12, r0, r9\n\txor\tr8, r6, r6\n\tsub.s!\t@CPI0_5[0], r6, r6\n\tadd.ne\tr7, r0, r9\n\tsub!\tr9, r0, r6\n\tjump.ne\t@.BB0_2\n\tadd\tr5, r4, r5\n\tptr.add\tr1, r5, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI0_4[0], r4, r6\n\tjump.gt\t@.BB0_2\n\tshl.s\t5, r4, r6\n\tsub\tr2, r6, r6\n\tadd\t32, r5, r5\n\tsub!\tr5, r6, r7\n\tadd\tr0, r0, r7\n\tadd.gt\tr12, r0, r7\n\tand\t@CPI0_5[0], r6, r6\n\tand\t@CPI0_5[0], r5, r8\n\tsub!\tr8, r6, r9\n\tadd\tr0, r0, r9\n\tadd.lt\tr12, r0, r9\n\txor\tr8, r6, r6\n\tsub.s!\t@CPI0_5[0], r6, r6\n\tadd.ne\tr7, r0, r9\n\tsub!\tr9, r0, r6\n\tjump.ne\t@.BB0_2\n\tsub!\tr10, r4, r4\n\tjump.ge\t@.BB0_84\n\tadd\tstack-[19], r5, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r4\n\tadd\tstack-[21], r4, stack-[21]\n\tsub!\tstack-[21], r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_87\n\tadd\tstack-[14], r2, r4\n\tsub!\tr3, r4, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr12, r0, r5\n\tand\t@CPI0_5[0], r4, r4\n\tand\t@CPI0_5[0], r3, r6\n\tsub!\tr6, r4, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr12, r0, r7\n\txor\tr6, r4, r4\n\tsub.s!\t@CPI0_5[0], r4, r4\n\tadd.ne\tr5, r0, r7\n\tadd\t1, r10, r10\n\tsub!\tr7, r0, r4\n\tjump.eq\t@.BB0_956\n\tjump\t@.BB0_2\n.BB0_971:\n\tadd\tstack-[21], r0, r6\n\tsub.s!\t10000, r6, r6\n\tjump.ne\t@.BB0_88\n\tptr.add.s\tstack-[16], r1, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI0_9[0], r6, r7\n\tjump.gt\t@.BB0_2\n\tsub.s\tstack-[18], r2, r7\n\tsub.s\t195, r7, r7\n\tsub!\tr3, r7, r8\n\tadd\tr0, r0, r8\n\tadd.ge\tr12, r0, r8\n\tand\t@CPI0_5[0], r7, r7\n\tand\t@CPI0_5[0], r3, r3\n\tsub!\tr3, r7, r9\n\tadd\tr0, r0, r9\n\tadd.lt\tr12, r0, r9\n\txor\tr3, r7, r3\n\tsub.s!\t@CPI0_5[0], r3, r3\n\tadd.ne\tr8, r0, r9\n\tsub!\tr9, r0, r3\n\tjump.ne\t@.BB0_2\n\tsub\tr2, r4, r3\n\tsub.s\t31, r3, r8\n\tadd\t96, r4, r7\n\tptr.add\tr1, r7, r3\n\tld\tr3, r3\n\tsub!\tr3, r8, r9\n\tadd\tr0, r0, r9\n\tadd.ge\tr12, r0, r9\n\tand\t@CPI0_5[0], r8, r8\n\tand\t@CPI0_5[0], r3, r10\n\tsub!\tr10, r8, r11\n\tadd\tr0, r0, r11\n\tadd.lt\tr12, r0, r11\n\txor\tr10, r8, r8\n\tsub.s!\t@CPI0_5[0], r8, r8\n\tadd.ne\tr9, r0, r11\n\tsub!\tr11, r0, r8\n\tjump.ne\t@.BB0_2\n\tadd\tr3, r4, r8\n\tptr.add\tr1, r8, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI0_4[0], r4, r3\n\tjump.gt\t@.BB0_2\n\tshl.s\t5, r4, r3\n\tsub\tr2, r3, r2\n\tadd\t32, r8, r8\n\tsub!\tr8, r2, r9\n\tadd\tr0, r0, r9\n\tadd.gt\tr12, r0, r9\n\tand\t@CPI0_5[0], r2, r2\n\tand\t@CPI0_5[0], r8, r10\n\tsub!\tr10, r2, r11\n\tadd\tr0, r0, r11\n\tadd.lt\tr12, r0, r11\n\txor\tr10, r2, r2\n\tsub.s!\t@CPI0_5[0], r2, r2\n\tadd.ne\tr9, r0, r11\n\tsub!\tr11, r0, r2\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r2\n\tadd\t96, r2, r9\n\tst.1\tr9, r5\n\tadd\t32, r2, r5\n\tadd\t96, r0, r9\n\tst.1\tr5, r9\n\tst.1\tr2, r6\n\tsub.s\t64, r7, r5\n\tptr.add\tr1, r5, r5\n\tld\tr5, r5\n\tadd\t128, r2, r6\n\tst.1\tr6, r5\n\tsub.s\t32, r7, r7\n\tptr.add\tr1, r7, r5\n\tld\tr5, r5\n\tadd\t192, r2, r6\n\tadd\t160, r0, r9\n\tst.1\tr6, r9\n\tadd\t160, r2, r6\n\tst.1\tr6, r5\n\tptr.add\tr1, r8, r5\n\tadd\t256, r2, r6\n\tst.1\tr6, r4\n\tadd\t288, r2, r8\n\tand!\t@CPI0_107[0], r4, r6\n\tjump.eq\t@.BB0_1226\n\tadd\tr0, r0, r9\n.BB0_979:\n\tshl.s\t5, r9, r10\n\tadd\tr8, r10, r11\n\tptr.add\tr5, r10, r10\n\tld\tr10, r10\n\tst.1\tr11, r10\n\tadd\t1, r9, r9\n\tsub!\tr9, r6, r10\n\tjump.lt\t@.BB0_979\n.BB0_1226:\n\tsub!\tr0, r0, r9\n\tjump.eq\t@.BB0_981\n.BB0_981:\n\tadd\t64, r7, r7\n\tptr.add\tr1, r7, r1\n\tld\tr1, r1\n\tsub!\tr1, r0, r7\n\tadd\t0, r0, r7\n\tadd.ne\t1, r0, r7\n\tsub!\tr1, r7, r7\n\tjump.ne\t@.BB0_2\n\tadd\t224, r2, r7\n\tst.1\tr7, r1\n\tadd\tr8, r3, r1\n\tsub\tr1, r2, r7\n\tadd\t64, r2, r8\n\tst.1\tr8, r7\n\tst.1.inc\tr1, r4, r1\n\tsub!\tr6, r0, r4\n\tjump.eq\t@.BB0_1225\n\tadd\tr0, r0, r4\n.BB0_984:\n\tshl.s\t5, r4, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr5, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r4, r4\n\tsub!\tr4, r6, r7\n\tjump.lt\t@.BB0_984\n.BB0_1225:\n\tsub!\tr0, r0, r4\n\tjump.eq\t@.BB0_986\n.BB0_986:\n\tsub\tr3, r2, r3\n\tadd\tr3, r1, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_111[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tadd\t@CPI0_5[0], r0, r6\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[13], r0, r2\n\tadd\t1, r2, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\tstack-[12], r2, r1\n\tjump.lt\t@.BB0_914\n\tjump\t@.BB0_212\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_1[0], r1, r2\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tjump.gt\t@.BB0_6\n.BB0_4:\n\tadd\t@CPI0_132[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB0_5:\n\tst.1\t4, r1\n\tadd\t@CPI0_92[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_6:\n\tadd\t159, r1, r2\n\tand\t@CPI0_3[0], r2, r2\n\tst.1\t64, r2\n\tand\t31, r1, r2\n\tshr.s!\t5, r1, r3\n\tjump.eq\t@.BB0_1240\n\tadd\tr0, r0, r4\n.BB0_8:\n\tshl.s\t5, r4, r5\n\tptr.add\tr9, r5, r6\n\tld\tr6, r6\n\tadd\t128, r5, r5\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_8\n.BB0_1240:\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r3, r3\n\tptr.add\tr9, r3, r4\n\tshl.s\t3, r2, r2\n\tadd\t128, r3, r3\n\tld.1\tr3, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr4, r4\n\tsub\t256, r2, r2\n\tshr\tr4, r2, r4\n\tshl\tr4, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr3, r2\n.BB0_10:\n\tsub.s!\t32, r1, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r2\n\tsub.s!\t@CPI0_4[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tadd\t128, r1, r4\n\tadd\t128, r2, r5\n\tsub\tr4, r5, r1\n\tadd\t@CPI0_5[0], r0, r3\n\tsub.s!\t256, r1, r6\n\tadd\tr0, r0, r6\n\tadd.lt\tr3, r0, r6\n\tand\t@CPI0_5[0], r1, r7\n\tsub!\tr7, r0, r8\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI0_5[0], r7, r7\n\tadd.ne\tr6, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_13\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_92:\n\tsub.s!\t@CPI0_57[0], r2, r3\n\tjump.gt\t@.BB0_107\n\tsub.s!\t@CPI0_72[0], r2, r3\n\tjump.le\t@.BB0_94\n\tsub.s!\t@CPI0_73[0], r2, r3\n\tjump.gt\t@.BB0_104\n\tsub.s!\t@CPI0_77[0], r2, r3\n\tjump.eq\t@.BB0_171\n\tsub.s!\t@CPI0_78[0], r2, r1\n\tjump.eq\t@.BB0_175\n\tsub.s!\t@CPI0_79[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t8, r0, r1\n\tjump\t@.BB0_179\n.BB0_122:\n\tsub.s!\t@CPI0_43[0], r2, r3\n\tjump.le\t@.BB0_123\n\tsub.s!\t@CPI0_44[0], r2, r3\n\tjump.gt\t@.BB0_133\n\tsub.s!\t@CPI0_48[0], r2, r3\n\tjump.eq\t@.BB0_607\n\tsub.s!\t@CPI0_49[0], r2, r3\n\tjump.eq\t@.BB0_662\n\tsub.s!\t@CPI0_50[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tjump\t@.BB0_160\n.BB0_107:\n\tsub.s!\t@CPI0_58[0], r2, r3\n\tjump.le\t@.BB0_108\n\tsub.s!\t@CPI0_59[0], r2, r3\n\tjump.gt\t@.BB0_118\n\tsub.s!\t@CPI0_63[0], r2, r3\n\tjump.eq\t@.BB0_370\n\tsub.s!\t@CPI0_64[0], r2, r3\n\tjump.eq\t@.BB0_372\n\tsub.s!\t@CPI0_65[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[21]\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tsub!\tstack-[21], r0, r1\n\tjump.eq\t@.BB0_229\n\tadd\t288, r0, r1\n\tst.1\t64, r1\n\tadd\t1, r0, r2\n\tsload\tr2, r2\n\tst.1\t128, r2\n\tadd\t2, r0, r2\n\tsload\tr2, r2\n\tst.1\t160, r2\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tst.1\t192, r2\n\tadd\t320, r0, r3\n\tadd\t4, r0, r2\n\tsload\tr2, r2\n\tst.1\t288, r2\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_387\n\tadd\t@CPI0_20[0], r0, r3\n\tadd\t320, r0, r4\n\tadd\tr0, r0, r5\n.BB0_385:\n\tadd\tr4, r0, r6\n\tsload\tr3, r4\n\tst.1.inc\tr6, r4, r4\n\tadd\t1, r3, r3\n\tadd\t1, r5, r5\n\tsub!\tr5, r2, r7\n\tjump.lt\t@.BB0_385\n\tadd\t63, r6, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r3\n\tadd\t@CPI0_113[0], r3, r2\n\tsub.s!\t@CPI0_114[0], r2, r2\n\tjump.lt\t@.BB0_4\n.BB0_387:\n\tst.1\t64, r3\n\tst.1\t224, r1\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t256, r1\n\tadd\tstack-[21], r0, r1\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r3\n\tld\tr1, r4\n\tsload\tr4, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_389\n.BB0_397:\n\tld.1\tr3, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_404\n\tadd\tr3, r0, stack-[20]\n\tadd\t16, r0, stack-[19]\n\tadd\t32784, r0, stack-[22]\n\tadd\tr0, r0, stack-[23]\n.BB0_400:\n\tadd\tstack-[21], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[19], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\tstack-[22], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[23], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\tstack-[22], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_403\n\tadd\tstack-[23], r0, r3\n\tadd\t1, r3, stack-[23]\n\tadd\tstack-[20], r0, r2\n\tld.1\tr2, r2\n\tsub!\tstack-[23], r2, r2\n\tjump.lt\t@.BB0_400\n.BB0_403:\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n.BB0_404:\n\tand\t1, r1, r1\n\tjump\t@.BB0_283\n.BB0_144:\n\tsub.s!\t@CPI0_29[0], r2, r3\n\tjump.gt\t@.BB0_148\n\tsub.s!\t@CPI0_33[0], r2, r3\n\tjump.eq\t@.BB0_995\n\tsub.s!\t@CPI0_34[0], r2, r3\n\tjump.eq\t@.BB0_1028\n\tsub.s!\t@CPI0_35[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t18, r0, r1\n\tjump\t@.BB0_179\n.BB0_123:\n\tsub.s!\t@CPI0_51[0], r2, r3\n\tjump.le\t@.BB0_124\n\tsub.s!\t@CPI0_52[0], r2, r3\n\tjump.eq\t@.BB0_547\n\tsub.s!\t@CPI0_53[0], r2, r3\n\tjump.eq\t@.BB0_601\n\tsub.s!\t@CPI0_54[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tst.1\t128, r0\n\tadd\t@CPI0_105[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_94:\n\tsub.s!\t@CPI0_80[0], r2, r3\n\tjump.le\t@.BB0_95\n\tsub.s!\t@CPI0_81[0], r2, r3\n\tjump.eq\t@.BB0_158\n\tsub.s!\t@CPI0_82[0], r2, r3\n\tjump.eq\t@.BB0_161\n\tsub.s!\t@CPI0_83[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\t1, r1, r1\n\tjump\t@.BB0_160\n.BB0_108:\n\tsub.s!\t@CPI0_66[0], r2, r3\n\tjump.le\t@.BB0_109\n\tsub.s!\t@CPI0_67[0], r2, r3\n\tjump.eq\t@.BB0_284\n\tsub.s!\t@CPI0_68[0], r2, r3\n\tjump.eq\t@.BB0_295\n\tsub.s!\t@CPI0_69[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r9, r2\n\tld\tr2, r2\n\tnear_call\tr0, @fun_getVestingClaimable, @DEFAULT_UNWIND\n\tsub!\tr1, r0, r1\n\tjump\t@.BB0_369\n.BB0_141:\n\tsub.s!\t@CPI0_37[0], r2, r3\n\tjump.eq\t@.BB0_987\n\tsub.s!\t@CPI0_38[0], r2, r3\n\tjump.eq\t@.BB0_989\n\tsub.s!\t@CPI0_39[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t14, r0, r1\n\tsload\tr1, r1\n\tadd\t13, r0, r2\n\tjump\t@.BB0_224\n.BB0_148:\n\tsub.s!\t@CPI0_30[0], r2, r3\n\tjump.eq\t@.BB0_1037\n\tsub.s!\t@CPI0_31[0], r2, r3\n\tjump.eq\t@.BB0_1194\n\tsub.s!\t@CPI0_32[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tptr.add.s\t36, r9, r2\n\tld\tr2, r2\n\tnear_call\tr0, @fun_calculateSaleTokenAmount, @DEFAULT_UNWIND\n\tjump\t@.BB0_283\n.BB0_133:\n\tsub.s!\t@CPI0_45[0], r2, r3\n\tjump.eq\t@.BB0_791\n\tsub.s!\t@CPI0_46[0], r2, r3\n\tjump.eq\t@.BB0_794\n\tsub.s!\t@CPI0_47[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[20]\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tsub!\tstack-[20], r0, r1\n\tjump.eq\t@.BB0_229\n\tadd\t288, r0, r1\n\tst.1\t64, r1\n\tadd\t1, r0, r2\n\tsload\tr2, r2\n\tst.1\t128, r2\n\tadd\t2, r0, r2\n\tsload\tr2, r2\n\tst.1\t160, r2\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tst.1\t192, r2\n\tadd\t320, r0, r3\n\tadd\t4, r0, r2\n\tsload\tr2, r2\n\tst.1\t288, r2\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_806\n\tadd\t@CPI0_20[0], r0, r3\n\tadd\t320, r0, r4\n\tadd\tr0, r0, r5\n.BB0_804:\n\tadd\tr4, r0, r6\n\tsload\tr3, r4\n\tst.1.inc\tr6, r4, r4\n\tadd\t1, r3, r3\n\tadd\t1, r5, r5\n\tsub!\tr5, r2, r7\n\tjump.lt\t@.BB0_804\n\tadd\t63, r6, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r3\n\tadd\t@CPI0_113[0], r3, r2\n\tsub.s!\t@CPI0_114[0], r2, r2\n\tjump.lt\t@.BB0_4\n.BB0_806:\n\tst.1\t64, r3\n\tst.1\t224, r1\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t256, r1\n\tadd\tstack-[20], r0, r1\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\t224, r0, stack-[16]\n\tld\tr1, r3\n\tsload\tr3, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_808\n.BB0_816:\n\tadd\tstack-[20], r0, r1\n\tnear_call\tr0, @modifier_notZeroAddress, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[17]\n\tadd\tstack-[21], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, stack-[18]\n\tjump.ne\t@.BB0_817\n.BB0_818:\n\tld.1\t64, r1\n\tadd\tstack-[18], r0, r2\n\tjump\t@.BB0_213\n.BB0_104:\n\tsub.s!\t@CPI0_74[0], r2, r3\n\tjump.eq\t@.BB0_180\n\tsub.s!\t@CPI0_75[0], r2, r3\n\tjump.eq\t@.BB0_195\n\tsub.s!\t@CPI0_76[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r9, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_218\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tjump\t@.BB0_221\n.BB0_118:\n\tsub.s!\t@CPI0_60[0], r2, r3\n\tjump.eq\t@.BB0_405\n\tsub.s!\t@CPI0_61[0], r2, r3\n\tjump.eq\t@.BB0_409\n\tsub.s!\t@CPI0_62[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r9, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[23]\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[22]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[23], r0, r2\n\tjump\t@.BB0_481\n.BB0_13:\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[23]\n\tsub.s!\t@CPI0_6[0], r3, r3\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[23], r0, r3\n\tadd\t96, r3, r3\n\tst.1\t64, r3\n\tld.1\tr5, r6\n\tsub.s!\t@CPI0_4[0], r6, r7\n\tjump.gt\t@.BB0_2\n\tadd\tr6, r5, r5\n\tsub\tr4, r5, r6\n\tadd\t@CPI0_5[0], r0, r7\n\tsub.s!\t160, r6, r8\n\tadd\tr0, r0, r8\n\tadd.lt\tr7, r0, r8\n\tand\t@CPI0_5[0], r6, r6\n\tsub!\tr6, r0, r9\n\tadd.le\tr0, r0, r7\n\tsub.s!\t@CPI0_5[0], r6, r6\n\tadd.ne\tr8, r0, r7\n\tsub!\tr7, r0, r6\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[23], r0, r6\n\tsub.s!\t@CPI0_7[0], r6, r6\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[23], r0, r8\n\tadd\t256, r8, r6\n\tst.1\t64, r6\n\tld.1.inc\tr5, r6, r7\n\tst.1\tr3, r6\n\tld.1\tr7, r6\n\tadd\t128, r8, r7\n\tst.1\tr7, r6\n\tadd\t160, r8, r6\n\tadd\t64, r5, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t96, r5, r6\n\tld.1\tr6, r6\n\tsub.s!\t@CPI0_4[0], r6, r7\n\tjump.gt\t@.BB0_2\n\tadd\tr6, r5, r6\n\tadd\t31, r6, r7\n\tsub!\tr7, r4, r7\n\tjump.ge\t@.BB0_2\n\tld.1.inc\tr6, r8, r6\n\tsub.s!\t@CPI0_4[0], r8, r7\n\tjump.gt\t@.BB0_4\n\tshl.s\t5, r8, r9\n\tadd\t63, r9, r7\n\tsub.s\t32, r0, stack-[22]\n\tand\tstack-[22], r7, r10\n\tld.1\t64, r7\n\tadd\tr7, r10, r10\n\tsub!\tr10, r7, r11\n\tadd\t0, r0, r11\n\tadd.lt\t1, r0, r11\n\tsub.s!\t@CPI0_4[0], r10, r12\n\tjump.gt\t@.BB0_4\n\tand!\t1, r11, r11\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r10\n\tst.1\tr7, r8\n\tadd\tr9, r6, r9\n\tsub!\tr9, r4, r4\n\tjump.gt\t@.BB0_2\n\tsub!\tr8, r0, r4\n\tjump.eq\t@.BB0_26\n\tadd\tr7, r0, r4\n.BB0_25:\n\tadd\t32, r4, r4\n\tld.1.inc\tr6, r8, r6\n\tst.1\tr4, r8\n\tsub!\tr6, r9, r8\n\tjump.lt\t@.BB0_25\n.BB0_26:\n\tadd\tstack-[23], r0, r4\n\tadd\t192, r4, r4\n\tst.1\tr4, r7\n\tadd\t128, r5, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tsub!\tr4, r5, r5\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[23], r0, r5\n\tst.1.inc\tr5, r3, r3\n\tadd\tr3, r0, stack-[21]\n\tadd\t224, r5, r3\n\tst.1\tr3, r4\n\tsub.s\t32, r1, r3\n\tadd\t@CPI0_5[0], r0, r4\n\tsub.s!\t160, r3, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI0_5[0], r3, r3\n\tsub!\tr3, r0, r6\n\tadd.le\tr0, r0, r4\n\tsub.s!\t@CPI0_5[0], r3, r3\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r3\n\tsub.s!\t@CPI0_8[0], r3, r4\n\tjump.gt\t@.BB0_4\n\tadd\t160, r3, r4\n\tst.1\t64, r4\n\tadd\t160, r2, r4\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_9[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr3, r4, r4\n\tadd\t192, r2, r5\n\tld.1\tr5, r5\n\tsub.s!\t@CPI0_9[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tst.1\tr4, r5\n\tadd\t224, r2, r4\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_9[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\t64, r3, r5\n\tst.1\tr5, r4\n\tadd\t256, r2, r4\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_9[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\t96, r3, r5\n\tst.1\tr5, r4\n\tadd\t288, r2, r4\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_9[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\t128, r3, r5\n\tst.1\tr5, r4\n\tadd\tstack-[21], r0, r4\n\tst.1\tr4, r3\n\tsub.s\t64, r0, r3\n\tand\tr1, r3, r1\n\tsub.s!\t192, r1, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_10[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tadd\t64, r1, r3\n\tst.1\t64, r3\n\tadd\t320, r2, r3\n\tld.1\tr3, r3\n\tst.1.inc\tr1, r3, r3\n\tadd\t352, r2, r2\n\tld.1\tr2, r2\n\tst.1\tr3, r2\n\tadd\tstack-[23], r0, r2\n\tadd\t64, r2, r2\n\tadd\tr2, r0, stack-[19]\n\tst.1\tr2, r1\n\tadd\tstack-[21], r0, r1\n\tld.1\tr1, r1\n\tld.1.inc\tr1, r3, r2\n\tand!\t@CPI0_9[0], r3, r3\n\tjump.eq\t@.BB0_37\n\tld.1\tr2, r2\n\tand!\t@CPI0_9[0], r2, r2\n\tjump.eq\t@.BB0_37\n\tadd\t96, r1, r2\n\tld.1\tr2, r2\n\tand!\t@CPI0_9[0], r2, r2\n\tjump.eq\t@.BB0_37\n\tadd\t128, r1, r1\n\tld.1\tr1, r1\n\tand!\t@CPI0_9[0], r1, r1\n\tjump.ne\t@.BB0_41\n.BB0_37:\n\tld.1\t64, r1\n\tadd\t@CPI0_112[0], r0, r2\n\tjump\t@.BB0_524\n.BB0_124:\n\tsub.s!\t@CPI0_55[0], r2, r3\n\tjump.eq\t@.BB0_482\n\tsub.s!\t@CPI0_56[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[21]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[23]\n\tand\t@CPI0_9[0], r1, r1\n\tadd\tr1, r0, stack-[22]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_490\n\tadd\tstack-[22], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_206\n.BB0_490:\n\tadd\t18, r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r10\n\tadd\t@CPI0_122[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[23], r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r10, r1\n\tcontext.this\tr3\n\tadd\tr3, r0, stack-[19]\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_9[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr2, r0, stack-[20]\n\tjump.ne\t@.BB0_492\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_502\n.BB0_95:\n\tsub.s!\t@CPI0_84[0], r2, r3\n\tjump.eq\t@.BB0_151\n\tsub.s!\t@CPI0_85[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_11[0], r0, r1\n\tjump\t@.BB0_157\n.BB0_109:\n\tsub.s!\t@CPI0_70[0], r2, r3\n\tjump.eq\t@.BB0_222\n\tsub.s!\t@CPI0_71[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[20]\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tsub!\tstack-[20], r0, r1\n\tjump.eq\t@.BB0_229\n\tadd\t288, r0, r1\n\tst.1\t64, r1\n\tadd\t1, r0, r2\n\tadd\tr2, r0, stack-[23]\n\tsload\tr2, r2\n\tst.1\t128, r2\n\tadd\t2, r0, r2\n\tadd\tr2, r0, stack-[22]\n\tsload\tr2, r2\n\tst.1\t160, r2\n\tadd\t3, r0, r2\n\tadd\tr2, r0, stack-[21]\n\tsload\tr2, r2\n\tst.1\t192, r2\n\tadd\t320, r0, r3\n\tadd\t4, r0, r2\n\tadd\tr2, r0, stack-[18]\n\tsload\tr2, r2\n\tst.1\t288, r2\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_234\n\tadd\t@CPI0_20[0], r0, r3\n\tadd\t320, r0, r4\n\tadd\tr0, r0, r5\n.BB0_232:\n\tadd\tr4, r0, r6\n\tsload\tr3, r4\n\tst.1.inc\tr6, r4, r4\n\tadd\t1, r3, r3\n\tadd\t1, r5, r5\n\tsub!\tr5, r2, r7\n\tjump.lt\t@.BB0_232\n\tadd\t63, r6, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r3\n\tadd\t@CPI0_113[0], r3, r2\n\tsub.s!\t@CPI0_114[0], r2, r2\n\tjump.lt\t@.BB0_4\n.BB0_234:\n\tst.1\t64, r3\n\tst.1\t224, r1\n\tadd\t5, r0, r1\n\tadd\tr1, r0, stack-[17]\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t256, r1\n\tadd\tstack-[20], r0, r1\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tadd\tr1, r0, stack-[16]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\t160, r0, stack-[14]\n\tadd\t192, r0, stack-[15]\n\tadd\t256, r0, r3\n\tld\tr1, r4\n\tsload\tr4, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_236\n.BB0_244:\n\tadd\tr3, r0, stack-[13]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[19]\n\tsub.s!\t@CPI0_8[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[19], r0, r3\n\tadd\t160, r3, r1\n\tst.1\t64, r1\n\tadd\tstack-[23], r0, r1\n\tsload\tr1, r1\n\tst.1.inc\tr3, r1, r1\n\tadd\tstack-[22], r0, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t64, r3, r1\n\tadd\tstack-[21], r0, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\tstack-[18], r0, r1\n\tsload\tr1, r3\n\tld.1\t64, r1\n\tst.1.inc\tr1, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_248\n\tadd\t@CPI0_20[0], r0, r4\n\tadd\tr0, r0, r5\n.BB0_247:\n\tsload\tr4, r6\n\tst.1.inc\tr2, r6, r2\n\tadd\t1, r4, r4\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_247\n.BB0_248:\n\tsub\tr2, r1, r2\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, stack-[23]\n\tand\tstack-[23], r2, r3\n\tadd\tr3, r1, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.gt\t@.BB0_4\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r2\n\tadd\tstack-[19], r0, r3\n\tadd\t96, r3, r2\n\tst.1\tr2, r1\n\tadd\t128, r3, r1\n\tadd\tstack-[17], r0, r2\n\tsload\tr2, r2\n\tand!\t255, r2, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[20], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[16], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[22]\n\tsload\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_252\n.BB0_260:\n\tadd\tstack-[19], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, stack-[22]\n\tjump.ne\t@.BB0_261\n.BB0_266:\n\tadd\t6, r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r3\n\tadd\tstack-[22], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[13], r0, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_275\n\tsub!\tr3, r0, r4\n\tjump.ne\t@.BB0_271\n\tadd\tstack-[14], r0, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_283\n\tmul\tr3, r2, r4, r5\n\tdiv\tr4, r3, r5, r3\n\tadd\tr4, r1, r1\n\tsub!\tr1, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub!\tr5, r2, r2\n\tjump.eq\t@.BB0_270\n\tjump\t@.BB0_87\n.BB0_827:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[23]\n\tsub.s!\t@CPI0_9[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r9, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_4[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tadd\t4, r2, r4\n\tsub\tr1, r4, r2\n\tadd\t@CPI0_5[0], r0, r3\n\tsub.s!\t160, r2, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t@CPI0_5[0], r2, r2\n\tsub!\tr2, r0, r6\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI0_5[0], r2, r2\n\tadd.ne\tr5, r0, r3\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t288, r0, r2\n\tst.1\t64, r2\n\tptr.add\tr9, r4, r3\n\tld\tr3, r3\n\tst.1\t128, r3\n\tadd\t32, r4, r3\n\tptr.add\tr9, r3, r3\n\tld\tr3, r3\n\tst.1\t160, r3\n\tadd\t64, r4, r3\n\tptr.add\tr9, r3, r3\n\tld\tr3, r3\n\tst.1\t192, r3\n\tadd\t96, r4, r3\n\tptr.add\tr9, r3, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI0_4[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tadd\tr5, r4, r4\n\tadd\t31, r4, r5\n\tsub!\tr5, r1, r5\n\tjump.ge\t@.BB0_2\n\tptr.add\tr9, r4, r5\n\tld\tr5, r6\n\tsub.s!\t@CPI0_4[0], r6, r5\n\tjump.gt\t@.BB0_4\n\tshl.s\t5, r6, r5\n\tadd\t351, r5, r7\n\tsub.s\t32, r0, stack-[22]\n\tand\tstack-[22], r7, r7\n\tsub.s!\t@CPI0_4[0], r7, r8\n\tjump.gt\t@.BB0_4\n\tst.1\t64, r7\n\tst.1\t288, r6\n\tadd\t32, r4, r4\n\tadd\tr5, r4, r5\n\tsub!\tr5, r1, r1\n\tjump.gt\t@.BB0_2\n\tsub!\tr6, r0, r1\n\tjump.eq\t@.BB0_840\n.BB0_839:\n\tptr.add\tr9, r4, r1\n\tld\tr1, r1\n\tadd\t32, r2, r2\n\tst.1\tr2, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r5, r1\n\tjump.lt\t@.BB0_839\n.BB0_840:\n\tadd\t288, r0, r1\n\tst.1\t224, r1\n\tadd\t32, r3, r1\n\tptr.add\tr9, r1, r1\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tst.1\t256, r1\n\tcontext.caller\tr1\n\tand\t@CPI0_9[0], r1, r1\n\tadd\tr1, r0, stack-[21]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_845\n\tadd\tstack-[21], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_206\n.BB0_845:\n\tadd\tstack-[23], r0, r1\n\tand\t@CPI0_9[0], r1, r1\n\tadd\tr1, r0, stack-[18]\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tadd\tr1, r0, stack-[17]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r3\n\tld.1\t128, r1\n\tsstore\tr3, r1\n\tadd\t1, r3, r1\n\tld.1\t160, r2\n\tsstore\tr1, r2\n\tadd\tr3, r0, stack-[21]\n\tadd\t2, r3, r1\n\tld.1\t192, r2\n\tsstore\tr1, r2\n\tld.1\t224, r1\n\tadd\tr1, r0, stack-[20]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[23]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[21], r0, r1\n\tadd\t3, r1, r2\n\tsload\tr2, r3\n\tadd\tstack-[23], r0, r1\n\tadd\tr2, r0, stack-[19]\n\tsstore\tr2, r1\n\tadd\tr3, r0, stack-[16]\n\tsub!\tr3, r1, r1\n\tjump.le\t@.BB0_852\n\tadd\tstack-[19], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r2\n\tadd\tstack-[23], r2, r1\n\tadd\tstack-[16], r2, r2\n\tsub!\tr1, r2, r3\n\tjump.ge\t@.BB0_852\n.BB0_851:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_851\n.BB0_852:\n\tadd\tstack-[19], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[23], r0, r6\n\tsub!\tr6, r0, r2\n\tadd\tstack-[20], r0, r5\n\tjump.eq\t@.BB0_856\n\tadd\tr0, r0, r2\n.BB0_855:\n\tadd\tr2, r1, r3\n\tadd\t32, r5, r5\n\tld.1\tr5, r4\n\tsstore\tr3, r4\n\tadd\t1, r2, r2\n\tsub!\tr2, r6, r3\n\tjump.lt\t@.BB0_855\n.BB0_856:\n\tadd\tstack-[21], r0, r1\n\tadd\t4, r1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tld.1\t256, r3\n\tsub!\tr3, r0, r3\n\tor.ne\t1, r2, r2\n\tsstore\tr1, r2\n\tld.1\t224, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_4\n\tshl.s\t5, r1, r2\n\tadd\t63, r2, r3\n\tand\tstack-[22], r3, r3\n\tld.1\t64, r4\n\tadd\tr4, r3, r3\n\tadd\tr4, r0, stack-[23]\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_4[0], r3, r5\n\tjump.gt\t@.BB0_4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r3\n\tadd\tstack-[23], r0, r3\n\tst.1.inc\tr3, r1, r7\n\tand\t31, r2, r1\n\tshr.s!\t5, r2, r2\n\tjump.eq\t@.BB0_1224\n\tadd\tstack[@calldatasize], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tadd\tr0, r0, r4\n.BB0_861:\n\tshl.s\t5, r4, r5\n\tadd\tr7, r5, r6\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_861\n.BB0_1224:\n\tadd\tr7, r0, stack-[22]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_863\n.BB0_863:\n\tadd\tstack-[18], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[17], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[23], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[23]\n\tsub.s!\t@CPI0_4[0], r2, r2\n\tjump.gt\t@.BB0_4\n\tadd\t3, r1, r2\n\tsload\tr2, r3\n\tadd\tstack-[23], r0, r1\n\tadd\tr2, r0, stack-[21]\n\tsstore\tr2, r1\n\tadd\tr3, r0, stack-[20]\n\tsub!\tr3, r1, r1\n\tjump.le\t@.BB0_870\n\tadd\tstack-[21], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r2\n\tadd\tstack-[23], r2, r1\n\tadd\tstack-[20], r2, r2\n\tsub!\tr1, r2, r3\n\tjump.ge\t@.BB0_870\n.BB0_869:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_869\n.BB0_870:\n\tadd\tstack-[21], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[23], r0, r6\n\tsub!\tr6, r0, r2\n\tadd\tstack-[22], r0, r5\n\tjump.eq\t@.BB0_874\n\tadd\tr0, r0, r2\n.BB0_873:\n\tadd\tr2, r1, r3\n\tld.1.inc\tr5, r4, r5\n\tsstore\tr3, r4\n\tadd\t1, r2, r2\n\tsub!\tr2, r6, r3\n\tjump.lt\t@.BB0_873\n.BB0_874:\n\tld.1\t128, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_88\n\tld.1\t224, r1\n\tld.1\tr1, r2\n\tadd\t32784, r0, stack-[22]\n\tadd\tr0, r0, stack-[21]\n\tadd\tr0, r0, r4\n.BB0_878:\n\tsub!\tr2, r4, r2\n\tjump.le\t@.BB0_84\n\tadd\tr4, r0, stack-[23]\n\tshl.s\t5, r4, r2\n\tadd\t32, r2, stack-[19]\n\tadd\tstack-[19], r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[20]\n\tadd\tstack-[18], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[17], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\tstack-[22], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t3, r1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[23], r2, r2\n\tjump.le\t@.BB0_84\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\tstack-[22], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[23], r1, r1\n\tadd\tstack-[20], r0, r2\n\tsstore\tr1, r2\n\tld.1\t224, r1\n\tld.1\tr1, r2\n\tsub.s!\tstack-[23], r2, r3\n\tjump.le\t@.BB0_84\n\tadd\tstack-[19], r1, r3\n\tld.1\tr3, r3\n\tadd\tstack-[21], r3, stack-[21]\n\tsub!\tstack-[21], r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_87\n\tadd\tstack-[23], r0, r4\n\tadd\t1, r4, r4\n\tld.1\t128, r3\n\tsub!\tr4, r3, r3\n\tjump.lt\t@.BB0_878\n\tadd\tstack-[21], r0, r2\n\tsub.s!\t10000, r2, r2\n\tjump.ne\t@.BB0_88\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tadd\t96, r0, r4\n\tst.1\tr3, r4\n\tadd\tstack-[18], r0, r3\n\tst.1\tr2, r3\n\tadd\t96, r2, r3\n\tld.1\t128, r4\n\tst.1\tr3, r4\n\tadd\t128, r2, r3\n\tld.1\t160, r4\n\tst.1\tr3, r4\n\tadd\t160, r2, r3\n\tld.1\t192, r4\n\tst.1\tr3, r4\n\tadd\t192, r2, r3\n\tadd\t160, r0, r5\n\tld.1\t224, r4\n\tst.1\tr3, r5\n\tadd\t256, r2, r3\n\tld.1\tr4, r5\n\tst.1\tr3, r5\n\tadd\t288, r2, r3\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_887\n\tadd\tr0, r0, r6\n.BB0_886:\n\tadd\t32, r4, r4\n\tld.1\tr4, r7\n\tst.1.inc\tr3, r7, r3\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_886\n.BB0_887:\n\tsub\tr3, r2, r4\n\tadd\t64, r2, r5\n\tld.1\t256, r6\n\tst.1\tr5, r4\n\tsub!\tr6, r0, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t224, r2, r5\n\tst.1\tr5, r4\n\tld.1\tr1, r4\n\tst.1.inc\tr3, r4, r3\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_890\n\tadd\tr0, r0, r5\n.BB0_889:\n\tadd\t32, r1, r1\n\tld.1\tr1, r6\n\tst.1.inc\tr3, r6, r3\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_889\n.BB0_890:\n\tsub\tr3, r2, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_111[0], r0, r4\n\tjump\t@.BB0_1026\n.BB0_995:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_4[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r3\n\tadd\t@CPI0_5[0], r0, r4\n\tsub!\tr3, r1, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_5[0], r3, r3\n\tsub!\tr3, r0, r6\n\tadd.ge\tr0, r0, r4\n\tsub.s!\t@CPI0_5[0], r3, r3\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r2, r3\n\tptr.add\tr9, r3, r3\n\tld\tr3, r7\n\tsub.s!\t@CPI0_4[0], r7, r3\n\tjump.gt\t@.BB0_2\n\tadd\t36, r2, r8\n\tshl.s\t5, r7, r2\n\tadd\tr2, r8, r2\n\tsub!\tr2, r1, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r9, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_4[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r3\n\tadd\t@CPI0_5[0], r0, r4\n\tsub!\tr3, r1, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_5[0], r3, r3\n\tsub!\tr3, r0, r6\n\tadd.ge\tr0, r0, r4\n\tsub.s!\t@CPI0_5[0], r3, r3\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r2, stack-[16]\n\tptr.add.s\tstack-[16], r9, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[23]\n\tsub.s!\t@CPI0_4[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\t36, r2, r3\n\tadd\tstack-[23], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\tr2, r0, stack-[15]\n\tadd\tr3, r0, stack-[21]\n\tadd\tr2, r3, r2\n\tsub!\tr2, r1, r1\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr1\n\tand\t@CPI0_9[0], r1, r1\n\tadd\tr1, r0, stack-[22]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr7, r0, stack-[20]\n\tadd\tr8, r0, stack-[19]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_1009\n\tadd\tstack-[22], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_206\n.BB0_1009:\n\tadd\tstack-[23], r0, r2\n\tsub!\tstack-[20], r2, r1\n\tjump.ne\t@.BB0_910\n\tadd\tstack-[20], r0, r8\n\tsub!\tr8, r0, r1\n\tadd\tstack-[19], r0, r9\n\tjump.ne\t@.BB0_1011\n.BB0_1013:\n\tld.1\t64, r1\n\tadd\t64, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\t64, r1, r3\n\tst.1\tr3, r8\n\tadd\t96, r1, r3\n\tsub!\tr8, r0, r4\n\tjump.eq\t@.BB0_1020\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tadd\tr0, r0, r5\n.BB0_1019:\n\tptr.add\tr4, r9, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI0_9[0], r6, r7\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr3, r6, r3\n\tadd\t32, r9, r9\n\tadd\t1, r5, r5\n\tsub!\tr5, r8, r6\n\tjump.lt\t@.BB0_1019\n.BB0_1020:\n\tsub\tr3, r1, r4\n\tst.1\tr2, r4\n\tst.1.inc\tr3, r8, r2\n\tsub.s!\t@CPI0_107[0], r8, r3\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[15], r0, r4\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_1228\n\tadd\tstack-[16], r0, r5\n\tadd\t32, r5, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tadd\tr0, r0, r6\n.BB0_1023:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr5, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_1023\n.BB0_1228:\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_1025\n.BB0_1025:\n\tsub\tstack-[15], r1, r3\n\tadd\tr3, r2, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_108[0], r0, r4\n\tjump\t@.BB0_1026\n.BB0_987:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t19, r0, r1\n\tjump\t@.BB0_179\n.BB0_1037:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[3]\n\tand!\t@CPI0_9[0], r1, stack-[21]\n\tjump.eq\t@.BB0_229\n\tadd\t10, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_9[0], r1, r1\n\tjump.ne\t@.BB0_1050\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_671\n.BB0_1040:\n\tadd\tstack-[3], r0, r1\n\tnear_call\tr0, @modifier_notZeroAddress, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[5]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[13]\n\tsub.s!\t@CPI0_8[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[13], r0, r3\n\tadd\t160, r3, r1\n\tst.1\t64, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tsload\tr1, r1\n\tst.1.inc\tr3, r1, r1\n\tadd\t2, r0, r2\n\tadd\tr2, r0, stack-[11]\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t64, r3, r1\n\tadd\t3, r0, r2\n\tadd\tr2, r0, stack-[10]\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tsload\tr1, r3\n\tld.1\t64, r1\n\tst.1.inc\tr1, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_1044\n\tadd\t@CPI0_20[0], r0, r4\n\tadd\tr0, r0, r5\n.BB0_1043:\n\tsload\tr4, r6\n\tst.1.inc\tr2, r6, r2\n\tadd\t1, r4, r4\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_1043\n.BB0_1044:\n\tsub\tr2, r1, r2\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, stack-[17]\n\tand\tstack-[17], r2, r3\n\tadd\tr3, r1, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.gt\t@.BB0_4\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r2\n\tadd\tstack-[13], r0, r2\n\tadd\t96, r2, r3\n\tadd\tr3, r0, stack-[2]\n\tst.1\tr3, r1\n\tadd\t128, r2, r1\n\tadd\t5, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tsload\tr2, r2\n\tand!\t255, r2, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[23]\n\tsload\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_1096\n.BB0_1104:\n\tadd\t6, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[23]\n\tadd\t@CPI0_96[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_97[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_346\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tsub.s!\tstack-[23], r1, r1\n\tjump.le\t@.BB0_740\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_740\n\tadd\tr0, r0, stack-[23]\n\tadd\tr0, r0, stack-[6]\n\tjump\t@.BB0_1109\n.BB0_1154:\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[23], r0, r5\n.BB0_1155:\n\tadd\t1, r5, stack-[23]\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tsub!\tstack-[23], r1, r1\n\tjump.ge\t@.BB0_1108\n.BB0_1109:\n\tld.1\t64, r7\n\tsub.s!\t@CPI0_8[0], r7, r1\n\tjump.gt\t@.BB0_4\n\tadd\t160, r7, r1\n\tst.1\t64, r1\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r1\n\tst.1.inc\tr7, r1, r2\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r1\n\tadd\tr2, r0, stack-[19]\n\tst.1\tr2, r1\n\tadd\t64, r7, r2\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r1\n\tadd\tr2, r0, stack-[20]\n\tst.1\tr2, r1\n\tadd\tstack-[9], r0, r1\n\tsload\tr1, r3\n\tld.1\t64, r1\n\tst.1.inc\tr1, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_1113\n\tadd\t@CPI0_20[0], r0, r4\n\tadd\tr0, r0, r5\n.BB0_1112:\n\tsload\tr4, r6\n\tst.1.inc\tr2, r6, r2\n\tadd\t1, r4, r4\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_1112\n.BB0_1113:\n\tsub\tr2, r1, r2\n\tadd\t31, r2, r2\n\tand\tstack-[17], r2, r3\n\tadd\tr3, r1, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.gt\t@.BB0_4\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r2\n\tadd\t96, r7, r2\n\tst.1\tr2, r1\n\tadd\tr7, r0, stack-[22]\n\tadd\t128, r7, r2\n\tadd\tstack-[8], r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr2, r0, stack-[18]\n\tst.1\tr2, r1\n\tadd\tstack-[21], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r4\n\tsload\tr4, r1\n\tsub!\tr1, r0, r2\n\tadd\tstack-[22], r0, r3\n\tjump.eq\t@.BB0_1125\n\tld.1\t64, r3\n\tsub.s!\t@CPI0_8[0], r3, r2\n\tjump.gt\t@.BB0_4\n\tadd\t160, r3, r2\n\tst.1\t64, r2\n\tst.1.inc\tr3, r1, r2\n\tadd\t1, r4, r1\n\tsload\tr1, r1\n\tadd\tr2, r0, stack-[19]\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[22]\n\tadd\t64, r3, r2\n\tadd\t2, r4, r1\n\tsload\tr1, r1\n\tadd\tr2, r0, stack-[20]\n\tst.1\tr2, r1\n\tadd\tr4, r0, stack-[18]\n\tadd\t3, r4, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[16]\n\tadd\tr3, r0, stack-[14]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[15]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[14], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tstack-[15], r0, r4\n\tjump.eq\t@.BB0_1122\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB0_1121:\n\tsload\tr1, r3\n\tst.1.inc\tr4, r3, r4\n\tadd\t1, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r3\n\tjump.lt\t@.BB0_1121\n.BB0_1122:\n\tadd\tstack-[16], r0, r5\n\tsub\tr4, r5, r1\n\tadd\t31, r1, r1\n\tand\tstack-[17], r1, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tadd\tstack-[22], r0, r3\n\tadd\tstack-[18], r0, r4\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tadd\t96, r3, r1\n\tst.1\tr1, r5\n\tadd\t4, r4, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\t128, r3, r2\n\tadd\tr2, r0, stack-[18]\n\tst.1\tr2, r1\n.BB0_1125:\n\tld.1\tr3, r1\n\tsub.s!\tstack-[23], r1, r1\n\tjump.le\t@.BB0_336\n\tadd\tstack-[21], r0, r1\n\tst.1\t0, r1\n\tadd\t16, r0, r1\n\tadd\tr1, r0, stack-[22]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[23], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\tstack-[23], r0, r5\n\tjump.ne\t@.BB0_1155\n\tadd\tstack-[4], r0, r1\n\tsload\tr1, r1\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_1141\n\tadd\tstack-[20], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_1131\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_87\n\tadd\tstack-[19], r0, r2\n\tld.1\tr2, r3\n\tmul\tr3, r5, r2, r4\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_1139\n\tdiv\tr2, r3, r3, r4\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB0_87\n.BB0_1139:\n\tadd\tr2, r1, stack-[20]\n\tsub!\tstack-[20], r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_87\n\tadd\t@CPI0_96[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tjump\t@.BB0_1135\n.BB0_1141:\n\tadd\tstack-[18], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_1148\n\tadd\tstack-[20], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_1143\n\tadd\tr2, r1, stack-[20]\n\tsub!\tstack-[20], r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_87\n\tadd\t@CPI0_96[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tjump\t@.BB0_1135\n.BB0_1131:\n\tadd\t1, r5, r3\n\tadd\tstack-[19], r0, r2\n\tld.1\tr2, r4\n\tmul\tr4, r3, r2, r5\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_1133\n\tdiv\tr2, r4, r4, r5\n\tsub!\tr4, r3, r3\n\tjump.ne\t@.BB0_87\n.BB0_1133:\n\tadd\tr2, r1, stack-[20]\n\tsub!\tstack-[20], r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_87\n\tadd\t@CPI0_96[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n.BB0_1135:\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_97[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_346\n\tld\tr1, r1\n\tsub.s!\tstack-[20], r1, r1\n\tadd\tstack-[23], r0, r5\n\tjump.lt\t@.BB0_1155\n.BB0_1148:\n\tadd\tstack-[2], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tsub!\tr2, r5, r2\n\tjump.le\t@.BB0_84\n\tshl.s\t5, r5, r2\n\tadd\tr2, r1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r2\n\tmul\tstack-[5], r2, r1, r3\n\tsub!\tstack-[5], r0, r3\n\tjump.eq\t@.BB0_1151\n\tdiv.s\tstack-[5], r1, r3, r4\n\tsub!\tr3, r2, r2\n\tjump.ne\t@.BB0_87\n.BB0_1151:\n\tdiv.s\t10000, r1, r1, r2\n\tadd\tstack-[6], r1, stack-[6]\n\tsub!\tstack-[6], r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_87\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[22], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[23], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1154\n\tjump\t@.BB0_2\n.BB0_1143:\n\tadd\tstack-[19], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r1, stack-[20]\n\tsub!\tstack-[20], r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_87\n\tadd\t@CPI0_96[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tjump\t@.BB0_1135\n.BB0_547:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr1\n\tand!\t@CPI0_9[0], r1, r1\n\tjump.eq\t@.BB0_229\n\tadd\tr1, r0, stack-[23]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_553\n\tadd\tstack-[23], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_206\n.BB0_553:\n\tadd\t18, r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r10\n\tadd\t@CPI0_98[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tcontext.this\tr4\n\tst.1\tr1, r4\n\tcontext.gas_left\tr1\n\tand\t@CPI0_9[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr2, r0, stack-[21]\n\tadd\tr4, r0, stack-[20]\n\tjump.ne\t@.BB0_555\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_565\n.BB0_158:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t13, r0, r1\n.BB0_160:\n\tsload\tr1, r1\n\tjump\t@.BB0_157\n.BB0_284:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[23]\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r9, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[22]\n\tcontext.caller\tr1\n\tand\t@CPI0_9[0], r1, r1\n\tadd\tr1, r0, stack-[21]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_291\n\tadd\tstack-[21], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_206\n.BB0_291:\n\tsub!\tstack-[22], r0, r1\n\tjump.ne\t@.BB0_293\n.BB0_292:\n\tld.1\t64, r1\n\tadd\t@CPI0_134[0], r0, r2\n\tjump\t@.BB0_524\n.BB0_607:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_4[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tadd\t4, r2, r4\n\tsub\tr1, r4, r2\n\tadd\t@CPI0_5[0], r0, r3\n\tsub.s!\t160, r2, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t@CPI0_5[0], r2, r2\n\tsub!\tr2, r0, r6\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI0_5[0], r2, r2\n\tadd.ne\tr5, r0, r3\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t288, r0, r2\n\tst.1\t64, r2\n\tptr.add\tr9, r4, r3\n\tld\tr3, r3\n\tst.1\t128, r3\n\tadd\t32, r4, r3\n\tptr.add\tr9, r3, r3\n\tld\tr3, r3\n\tst.1\t160, r3\n\tadd\t64, r4, r3\n\tptr.add\tr9, r3, r3\n\tld\tr3, r3\n\tst.1\t192, r3\n\tadd\t96, r4, r3\n\tptr.add\tr9, r3, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI0_4[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tadd\tr5, r4, r4\n\tadd\t31, r4, r5\n\tsub!\tr5, r1, r5\n\tjump.ge\t@.BB0_2\n\tptr.add\tr9, r4, r5\n\tld\tr5, r6\n\tsub.s!\t@CPI0_4[0], r6, r5\n\tjump.gt\t@.BB0_4\n\tshl.s\t5, r6, r5\n\tadd\t351, r5, r7\n\tsub.s\t32, r0, stack-[23]\n\tand\tstack-[23], r7, r7\n\tsub.s!\t@CPI0_4[0], r7, r8\n\tjump.gt\t@.BB0_4\n\tst.1\t64, r7\n\tst.1\t288, r6\n\tadd\t32, r4, r4\n\tadd\tr5, r4, r5\n\tsub!\tr5, r1, r1\n\tjump.gt\t@.BB0_2\n\tsub!\tr6, r0, r1\n\tjump.eq\t@.BB0_619\n.BB0_618:\n\tptr.add\tr9, r4, r1\n\tld\tr1, r1\n\tadd\t32, r2, r2\n\tst.1\tr2, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r5, r1\n\tjump.lt\t@.BB0_618\n.BB0_619:\n\tadd\t288, r0, r1\n\tst.1\t224, r1\n\tadd\t32, r3, r1\n\tptr.add\tr9, r1, r1\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tst.1\t256, r1\n\tcontext.caller\tr1\n\tand\t@CPI0_9[0], r1, r1\n\tadd\tr1, r0, stack-[22]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_624\n\tadd\tstack-[22], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_206\n.BB0_624:\n\tld.1\t128, r1\n\tadd\t1, r0, r2\n\tsstore\tr2, r1\n\tadd\t2, r0, r1\n\tld.1\t160, r2\n\tsstore\tr1, r2\n\tadd\t3, r0, r1\n\tld.1\t192, r2\n\tsstore\tr1, r2\n\tld.1\t224, r2\n\tld.1\tr2, r3\n\tsub.s!\t@CPI0_4[0], r3, r1\n\tjump.gt\t@.BB0_4\n\tadd\t4, r0, r1\n\tsload\tr1, r5\n\tsstore\tr1, r3\n\tsub!\tr5, r3, r4\n\tjump.le\t@.BB0_629\n\tadd\t@CPI0_20[0], r3, r4\n\tadd\t@CPI0_20[0], r5, r5\n\tsub!\tr4, r5, r6\n\tjump.ge\t@.BB0_629\n.BB0_628:\n\tsstore\tr4, r0\n\tadd\t1, r4, r4\n\tsub!\tr4, r5, r6\n\tjump.lt\t@.BB0_628\n.BB0_629:\n\tst.1\t0, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_632\n\tadd\tr0, r0, r4\n\tadd\tr2, r0, r5\n.BB0_631:\n\tadd\t32, r5, r5\n\tadd\t@CPI0_20[0], r4, r6\n\tld.1\tr5, r7\n\tsstore\tr6, r7\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r6\n\tjump.lt\t@.BB0_631\n.BB0_632:\n\tadd\t5, r0, r3\n\tsload\tr3, r4\n\tsub.s\t256, r0, r5\n\tand\tr4, r5, r4\n\tld.1\t256, r5\n\tsub!\tr5, r0, r5\n\tor.ne\t1, r4, r4\n\tsstore\tr3, r4\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_4[0], r2, r3\n\tjump.gt\t@.BB0_4\n\tshl.s\t5, r2, r5\n\tadd\t63, r5, r3\n\tand\tstack-[23], r3, r4\n\tld.1\t64, r3\n\tadd\tr3, r4, r4\n\tsub!\tr4, r3, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_4[0], r4, r7\n\tjump.gt\t@.BB0_4\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r4\n\tst.1.inc\tr3, r2, r2\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB0_1213\n\tadd\tstack[@calldatasize], r0, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tadd\tr0, r0, r7\n.BB0_637:\n\tshl.s\t5, r7, r8\n\tadd\tr2, r8, r9\n\tptr.add\tr6, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_637\n.BB0_1213:\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB0_639\n.BB0_639:\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_4[0], r3, r4\n\tjump.gt\t@.BB0_4\n\tsload\tr1, r5\n\tsstore\tr1, r3\n\tsub!\tr5, r3, r4\n\tjump.le\t@.BB0_644\n\tadd\t@CPI0_20[0], r3, r4\n\tadd\t@CPI0_20[0], r5, r5\n\tsub!\tr4, r5, r6\n\tjump.ge\t@.BB0_644\n.BB0_643:\n\tsstore\tr4, r0\n\tadd\t1, r4, r4\n\tsub!\tr4, r5, r6\n\tjump.lt\t@.BB0_643\n.BB0_644:\n\tst.1\t0, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_646\n\tadd\tr0, r0, r4\n.BB0_648:\n\tld.1.inc\tr2, r5, r2\n\tadd\t@CPI0_20[0], r4, r6\n\tsstore\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_648\n.BB0_646:\n\tld.1\t128, r3\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_647\n.BB0_88:\n\tld.1\t64, r1\n\tadd\t@CPI0_121[0], r0, r2\n\tjump\t@.BB0_524\n.BB0_791:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tadd\t2, r0, r3\n\tsload\tr3, r3\n\tadd\t1, r0, r4\n\tsload\tr4, r4\n\tst.1\t128, r4\n\tst.1\t160, r3\n\tst.1\t192, r2\n\tand!\t255, r1, r1\n\tjump\t@.BB0_793\n.BB0_891:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r9, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[23]\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[22]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tnear_call\tr0, @fun_checkRole, @DEFAULT_UNWIND\n\tadd\tstack-[22], r0, r1\n\tadd\tstack-[23], r0, r2\n.BB0_221:\n\tnear_call\tr0, @fun_revokeRole, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1028:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[23]\n\tcontext.caller\tr1\n\tand\t@CPI0_9[0], r1, r1\n\tadd\tr1, r0, stack-[22]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_1034\n\tadd\tstack-[22], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_206\n.BB0_1034:\n\tadd\t14, r0, r1\n\tadd\tstack-[23], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_106[0], r0, r4\n\tjump\t@.BB0_1026\n.BB0_989:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t16, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[22]\n\tadd\tr0, r0, r1\n\tptr.add\tr9, r0, stack-[23]\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tptr.add\tstack-[23], r0, r2\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n.BB0_481:\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[22], r0, r2\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_157\n.BB0_1194:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\t4, r1, r2\n\tsload\tr2, r2\n\tadd\t2, r1, r3\n\tsload\tr3, r3\n\tadd\t1, r1, r4\n\tsload\tr4, r4\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tst.1\t160, r4\n\tst.1\t192, r3\n\tand!\t255, r2, r1\n.BB0_793:\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t224, r1\n\tadd\t@CPI0_87[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_171:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tnear_call\tr0, @modifier_notZeroAddress_37971, @DEFAULT_UNWIND\n\tjump\t@.BB0_283\n.BB0_370:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t9, r0, r1\n.BB0_179:\n\tsload\tr1, r1\n\tand\t@CPI0_9[0], r1, r1\n.BB0_157:\n\tst.1\t128, r1\n\tadd\t@CPI0_105[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_180:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[23]\n\tptr.add.s\t36, r9, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[22]\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[23], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[21]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[20]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_188\n\tld.1\t64, r1\n\tadd\t36, r1, r2\n\tadd\tstack-[21], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_139[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[20], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_102[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_405:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tadd\tr1, r0, r2\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tr2, r0, r1\n\tadd\tr1, r0, stack-[22]\n\tptr.add\tr9, r0, stack-[23]\n\tnear_call\tr0, @fun_notZeroAddress.4, @DEFAULT_UNWIND\n\tadd\tstack-[22], r0, r1\n\tst.1\t0, r1\n\tadd\t16, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[22]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tptr.add\tstack-[23], r0, r2\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[22], r0, r2\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n.BB0_369:\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_283\n.BB0_482:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r1\n\tsload\tr1, r1\n\tadd\t11, r0, r2\n\tsload\tr2, r2\n\tadd\t10, r0, r3\n\tsload\tr3, r3\n\tadd\t9, r0, r4\n\tsload\tr4, r4\n\tadd\t8, r0, r5\n\tsload\tr5, r5\n\tand\t@CPI0_9[0], r5, r5\n\tst.1\t128, r5\n\tand\t@CPI0_9[0], r4, r4\n\tst.1\t160, r4\n\tand\t@CPI0_9[0], r3, r3\n\tst.1\t192, r3\n\tand\t@CPI0_9[0], r2, r2\n\tst.1\t224, r2\n\tand\t@CPI0_9[0], r1, r1\n\tst.1\t256, r1\n\tadd\t@CPI0_129[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_601:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\t3, r1, r1\n\tnear_call\tr0, @copy_array_from_storage_to_memory_array_uint256_dyn, @DEFAULT_UNWIND\n\tadd\t32, r0, r2\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[23]\n\tst.1.inc\tr3, r2, r2\n\tnear_call\tr0, @abi_encode_array_uint256_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[23], r0, r4\n\tjump\t@.BB0_167\n.BB0_151:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tand\t@CPI0_140[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t@CPI0_141[0], r1, r2\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tsub.s!\t@CPI0_142[0], r1, r1\n\tor.eq\t1, r2, r2\n\tand\t1, r2, r1\n\tjump\t@.BB0_157\n.BB0_222:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tadd\t6, r0, r2\n.BB0_224:\n\tsload\tr2, r2\n\tst.1\t128, r2\n\tst.1\t160, r1\n\tadd\t@CPI0_109[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_161:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tadd\t32, r0, stack-[23]\n\tsub!\tr1, r0, r2\n\tadd\tstack-[23], r0, r2\n\tjump.eq\t@.BB0_166\n\tadd\t160, r0, r4\n\tadd\t@CPI0_20[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_164:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_164\n\tsub.s\t96, r5, r2\n.BB0_166:\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[22]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[21]\n\tadd\tstack-[23], r0, r1\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[22], r0, r1\n\tnear_call\tr0, @abi_encode_array_uint256_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[21], r0, r4\n.BB0_167:\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_295:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[19]\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tsub!\tstack-[19], r0, r1\n\tjump.eq\t@.BB0_229\n\tadd\t288, r0, r1\n\tst.1\t64, r1\n\tadd\t1, r0, r2\n\tadd\tr2, r0, stack-[9]\n\tsload\tr2, r2\n\tst.1\t128, r2\n\tadd\t2, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tsload\tr2, r2\n\tst.1\t160, r2\n\tadd\t3, r0, r2\n\tadd\tr2, r0, stack-[7]\n\tsload\tr2, r2\n\tst.1\t192, r2\n\tadd\t320, r0, r3\n\tadd\t4, r0, r2\n\tadd\tr2, r0, stack-[6]\n\tsload\tr2, r2\n\tst.1\t288, r2\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_303\n\tadd\t@CPI0_20[0], r0, r3\n\tadd\t320, r0, r4\n\tadd\tr0, r0, r5\n.BB0_301:\n\tadd\tr4, r0, r6\n\tsload\tr3, r4\n\tst.1.inc\tr6, r4, r4\n\tadd\t1, r3, r3\n\tadd\t1, r5, r5\n\tsub!\tr5, r2, r7\n\tjump.lt\t@.BB0_301\n\tadd\t63, r6, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r3\n\tadd\t@CPI0_113[0], r3, r2\n\tsub.s!\t@CPI0_114[0], r2, r2\n\tjump.lt\t@.BB0_4\n.BB0_303:\n\tst.1\t64, r3\n\tst.1\t224, r1\n\tadd\t5, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t256, r1\n\tadd\tstack-[19], r0, r1\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r3\n\tadd\t224, r0, stack-[1]\n\tld\tr1, r4\n\tsload\tr4, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_305\n.BB0_313:\n\tadd\tr3, r0, stack-[18]\n\tadd\tstack-[19], r0, r1\n\tnear_call\tr0, @modifier_notZeroAddress, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[2]\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, stack-[3]\n\tjump.ne\t@.BB0_314\n.BB0_315:\n\tld.1\t64, r1\n\tadd\tstack-[3], r0, r2\n\tjump\t@.BB0_213\n.BB0_662:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r3\n\tcontext.caller\tr4\n\tand!\t@CPI0_9[0], r4, r2\n\tjump.eq\t@.BB0_229\n\tadd\t10, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_9[0], r1, r1\n\tadd\tr2, r0, stack-[21]\n\tadd\tr3, r0, stack-[22]\n\tadd\tr4, r0, stack-[23]\n\tjump.ne\t@.BB0_672\n\tst.1\t0, r4\n\tadd\t17, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_666\n.BB0_671:\n\tld.1\t64, r1\n\tadd\t@CPI0_94[0], r0, r2\n\tjump\t@.BB0_524\n.BB0_794:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tnear_call\tr0, @modifier_notZeroAddress, @DEFAULT_UNWIND\n.BB0_283:\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_86[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_175:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_15[0], r0, r1\n\tjump\t@.BB0_157\n.BB0_372:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[23]\n\tcontext.caller\tr1\n\tand\t@CPI0_9[0], r1, r1\n\tadd\tr1, r0, stack-[22]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_378\n\tadd\tstack-[22], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_378\n.BB0_206:\n\tld.1\t64, r1\n\tadd\t@CPI0_138[0], r0, r2\n.BB0_524:\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n.BB0_720:\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_195:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t160, r1, r1\n\tjump.lt\t@.BB0_2\n\tadd\t288, r0, r1\n\tst.1\t64, r1\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t128, r1\n\tptr.add.s\t36, r9, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t160, r1\n\tptr.add.s\t68, r9, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t192, r1\n\tptr.add.s\t100, r9, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t224, r1\n\tptr.add.s\t132, r9, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t256, r1\n\tcontext.caller\tr1\n\tand\t@CPI0_9[0], r1, r1\n\tadd\tr1, r0, stack-[23]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_207\n\tadd\tstack-[23], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_206\n.BB0_207:\n\tld.1\t128, r1\n\tand!\t@CPI0_9[0], r1, r1\n\tadd\t8, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_21[0], r3, r3\n\tor\tr3, r1, r3\n\tsstore\tr2, r3\n\tld.1\t160, r2\n\tand\t@CPI0_9[0], r2, r2\n\tadd\t9, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_21[0], r4, r4\n\tor\tr4, r2, r2\n\tsstore\tr3, r2\n\tld.1\t192, r2\n\tand\t@CPI0_9[0], r2, r2\n\tadd\t10, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_21[0], r4, r4\n\tor\tr4, r2, r4\n\tsstore\tr3, r4\n\tld.1\t224, r3\n\tand\t@CPI0_9[0], r3, r3\n\tadd\t11, r0, r4\n\tsload\tr4, r5\n\tand\t@CPI0_21[0], r5, r5\n\tor\tr5, r3, r3\n\tsstore\tr4, r3\n\tld.1\t256, r3\n\tand\t@CPI0_9[0], r3, r3\n\tadd\t12, r0, r4\n\tsload\tr4, r5\n\tand\t@CPI0_21[0], r5, r5\n\tor\tr5, r3, r3\n\tsstore\tr4, r3\n\tjump.eq\t@.BB0_209\n\tadd\t18, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_21[0], r4, r4\n\tor\tr4, r1, r4\n\tsstore\tr3, r4\n.BB0_209:\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_211\n\tadd\t19, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_21[0], r4, r4\n\tor\tr4, r2, r2\n\tsstore\tr3, r2\n.BB0_211:\n\tld.1\t64, r2\n\tst.1.inc\tr2, r1, r1\n\tld.1\t160, r3\n\tand\t@CPI0_9[0], r3, r3\n\tst.1\tr1, r3\n\tld.1\t192, r1\n\tand\t@CPI0_9[0], r1, r1\n\tadd\t64, r2, r3\n\tst.1\tr3, r1\n\tld.1\t224, r1\n\tand\t@CPI0_9[0], r1, r1\n\tadd\t96, r2, r3\n\tst.1\tr3, r1\n\tld.1\t256, r1\n\tand\t@CPI0_9[0], r1, r1\n\tadd\t128, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r2, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_99[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_137[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tjump\t@.BB0_212\n.BB0_409:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r9, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[19]\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tsub!\tstack-[19], r0, r1\n\tjump.ne\t@.BB0_413\n.BB0_229:\n\tadd\t@CPI0_112[0], r0, r1\n.BB0_219:\n\tst.1\t128, r1\n\tadd\t@CPI0_135[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_378:\n\tadd\t13, r0, r1\n\tadd\tstack-[23], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_130[0], r0, r4\n.BB0_1026:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_212:\n\tld.1\t64, r1\n\tadd\t1, r0, r2\n.BB0_213:\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_86[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1050:\n\tadd\t19, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_88[0], r0, r1\n\tst.1\t128, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t132, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_9[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr2, r0, stack-[22]\n\tjump.ne\t@.BB0_1052\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1062\n.BB0_218:\n\tadd\t@CPI0_136[0], r0, r1\n\tjump\t@.BB0_219\n.BB0_672:\n\tadd\t19, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_88[0], r0, r1\n\tst.1\t128, r1\n\tst.1\t132, r4\n\tcontext.gas_left\tr1\n\tand\t@CPI0_9[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr2, r0, stack-[19]\n\tjump.ne\t@.BB0_674\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_684\n.BB0_413:\n\tadd\t288, r0, r1\n\tst.1\t64, r1\n\tadd\t1, r0, r2\n\tadd\tr2, r0, stack-[7]\n\tsload\tr2, r2\n\tst.1\t128, r2\n\tadd\t2, r0, r2\n\tadd\tr2, r0, stack-[6]\n\tsload\tr2, r2\n\tst.1\t160, r2\n\tadd\t3, r0, r2\n\tadd\tr2, r0, stack-[5]\n\tsload\tr2, r2\n\tst.1\t192, r2\n\tadd\t320, r0, r3\n\tadd\t4, r0, r2\n\tadd\tr2, r0, stack-[4]\n\tsload\tr2, r2\n\tst.1\t288, r2\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_417\n\tadd\t@CPI0_20[0], r0, r3\n\tadd\t320, r0, r4\n\tadd\tr0, r0, r5\n.BB0_415:\n\tadd\tr4, r0, r6\n\tsload\tr3, r4\n\tst.1.inc\tr6, r4, r4\n\tadd\t1, r3, r3\n\tadd\t1, r5, r5\n\tsub!\tr5, r2, r7\n\tjump.lt\t@.BB0_415\n\tadd\t63, r6, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r3\n\tadd\t@CPI0_113[0], r3, r2\n\tsub.s!\t@CPI0_114[0], r2, r2\n\tjump.lt\t@.BB0_4\n.BB0_417:\n\tst.1\t64, r3\n\tst.1\t224, r1\n\tadd\t5, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t256, r1\n\tadd\tstack-[19], r0, r1\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r3\n\tadd\t224, r0, stack-[1]\n\tld\tr1, r4\n\tsload\tr4, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_419\n.BB0_427:\n\tadd\tr3, r0, stack-[18]\n\tadd\tstack-[19], r0, r1\n\tnear_call\tr0, @modifier_notZeroAddress, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[8]\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, stack-[12]\n\tjump.ne\t@.BB0_428\n.BB0_429:\n\tld.1\t64, r1\n\tadd\tstack-[12], r0, r2\n\tjump\t@.BB0_213\n.BB0_492:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r10, r3\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_102[0], r1, r1\n\tadd\tr10, r0, stack-[22]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[22], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1206\n\tadd\tr0, r0, r7\n.BB0_494:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_494\n.BB0_1206:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_496\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_496:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_497\n.BB0_502:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr10, r0, r5\n\tadd\tr1, r10, r4\n\tsub!\tr4, r1, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr4, r0, stack-[22]\n\tsub.s!\t@CPI0_4[0], r4, r4\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tadd\tstack-[22], r0, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\tr5, r2\n\tsub!\tstack-[21], r2, r2\n\tjump.le\t@.BB0_508\n\tadd\t@CPI0_128[0], r0, r1\n.BB0_507:\n\tadd\tstack-[22], r0, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1052:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_89[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1238\n\tadd\tr0, r0, r7\n.BB0_1054:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1054\n.BB0_1238:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1056\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1056:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1057\n.BB0_1062:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r2\n\tadd\tr2, r0, stack-[23]\n\tst.1\t64, r2\n\tsub.s!\t32, r4, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_1065\n\tadd\t@CPI0_94[0], r0, r1\n\tadd\tstack-[23], r0, r2\n\tjump\t@.BB0_687\n.BB0_674:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_89[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1223\n\tadd\tr0, r0, r7\n.BB0_676:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_676\n.BB0_1223:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_678\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_678:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_679\n.BB0_684:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r2\n\tadd\tr2, r0, stack-[20]\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_689\n\tadd\t@CPI0_94[0], r0, r1\n\tadd\tstack-[20], r0, r2\n.BB0_687:\n\tst.1\tr2, r1\n.BB0_688:\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_555:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r10, r3\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_92[0], r1, r1\n\tadd\tr10, r0, stack-[22]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[22], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1212\n\tadd\tr0, r0, r7\n.BB0_557:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_557\n.BB0_1212:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_559\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_559:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_560\n.BB0_565:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr10, r0, r5\n\tadd\tr1, r10, r4\n\tsub!\tr4, r1, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr4, r0, stack-[22]\n\tsub.s!\t@CPI0_4[0], r4, r4\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tadd\tstack-[22], r0, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\tr5, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_569\n.BB0_570:\n\tadd\t1, r0, r1\n\tadd\tstack-[22], r0, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tor\t@CPI0_86[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_497:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1205\n\tadd\tr0, r0, r6\n.BB0_499:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_499\n.BB0_1205:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_501\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n\tjump\t@.BB0_501\n.BB0_293:\n\tadd\tstack-[23], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[22], r0, r3\n\tsstore\tr1, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\tstack-[23], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_133[0], r0, r4\n\tjump\t@.BB0_1026\n.BB0_1057:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1237\n\tadd\tr0, r0, r6\n.BB0_1059:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1059\n.BB0_1237:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1061\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1061:\n\tjump\t@.BB0_501\n.BB0_679:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1222\n\tadd\tr0, r0, r6\n.BB0_681:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_681\n.BB0_1222:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_683\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_683:\n\tjump\t@.BB0_501\n.BB0_1065:\n\tadd\t@CPI0_90[0], r0, r2\n\tadd\tstack-[23], r0, r5\n\tst.1\tr5, r2\n\tcontext.gas_left\tr4\n\tadd\tstack-[22], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_1067\n\tadd\tr5, r1, r2\n\tadd\tr2, r0, stack-[20]\n\tst.1\t64, r2\n.BB0_1078:\n\tadd\tstack-[23], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_1040\n\tadd\t@CPI0_91[0], r0, r2\n\tadd\tstack-[20], r0, r3\n\tst.1\tr3, r2\n\tor\t4, r3, r2\n\tadd\tstack-[3], r0, r3\n\tst.1\tr2, r3\n\tcontext.gas_left\tr2\n\tadd\tstack-[22], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_1082\n\tadd\tstack-[20], r1, r1\n\tst.1\t64, r1\n\tjump\t@.BB0_1093\n.BB0_236:\n\tadd\tr4, r0, stack-[19]\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI0_8[0], r2, r2\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[13], r0, r4\n\tadd\t160, r4, r2\n\tst.1\t64, r2\n\tst.1.inc\tr4, r1, r2\n\tadd\tstack-[19], r0, r3\n\tadd\t1, r3, r1\n\tsload\tr1, r1\n\tadd\tr2, r0, stack-[14]\n\tst.1\tr2, r1\n\tadd\t64, r4, r2\n\tadd\t2, r3, r1\n\tsload\tr1, r1\n\tadd\tr2, r0, stack-[15]\n\tst.1\tr2, r1\n\tadd\t3, r3, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\tr3, r0, stack-[10]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[11]\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[10], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tstack-[11], r0, r4\n\tjump.eq\t@.BB0_241\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB0_240:\n\tsload\tr1, r3\n\tst.1.inc\tr4, r3, r4\n\tadd\t1, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r3\n\tjump.lt\t@.BB0_240\n.BB0_241:\n\tsub.s\tstack-[12], r4, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tstack-[12], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tadd\tstack-[13], r0, r2\n\tadd\t96, r2, r1\n\tadd\tstack-[12], r0, r3\n\tst.1\tr1, r3\n\tadd\t128, r2, r3\n\tadd\tstack-[19], r0, r1\n\tadd\t4, r1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\tr3, r1\n\tjump\t@.BB0_244\n.BB0_808:\n\tadd\tr3, r0, stack-[23]\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[21]\n\tsub.s!\t@CPI0_8[0], r2, r2\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[21], r0, r3\n\tadd\t160, r3, r2\n\tst.1\t64, r2\n\tst.1.inc\tr3, r1, r1\n\tadd\tstack-[23], r0, r4\n\tadd\t1, r4, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t64, r3, r1\n\tadd\t2, r4, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t3, r4, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[22]\n\tadd\tr3, r0, stack-[18]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[19]\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[18], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tstack-[19], r0, r4\n\tjump.eq\t@.BB0_813\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB0_812:\n\tsload\tr1, r3\n\tst.1.inc\tr4, r3, r4\n\tadd\t1, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r3\n\tjump.lt\t@.BB0_812\n.BB0_813:\n\tsub.s\tstack-[22], r4, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tstack-[22], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tadd\tstack-[21], r0, r1\n\tadd\t96, r1, r2\n\tadd\tr2, r0, stack-[16]\n\tadd\tstack-[22], r0, r3\n\tst.1\tr2, r3\n\tadd\t128, r1, r1\n\tadd\tstack-[23], r0, r2\n\tadd\t4, r2, r2\n\tsload\tr2, r2\n\tand!\t255, r2, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tst.1\tr1, r2\n\tjump\t@.BB0_816\n.BB0_389:\n\tadd\tr4, r0, stack-[23]\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[20]\n\tsub.s!\t@CPI0_8[0], r2, r2\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[20], r0, r3\n\tadd\t160, r3, r2\n\tst.1\t64, r2\n\tst.1.inc\tr3, r1, r1\n\tadd\tstack-[23], r0, r4\n\tadd\t1, r4, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t64, r3, r1\n\tadd\t2, r4, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t3, r4, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[22]\n\tadd\tr3, r0, stack-[18]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[19]\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[18], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tstack-[19], r0, r4\n\tjump.eq\t@.BB0_394\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB0_393:\n\tsload\tr1, r3\n\tst.1.inc\tr4, r3, r4\n\tadd\t1, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r3\n\tjump.lt\t@.BB0_393\n.BB0_394:\n\tsub.s\tstack-[22], r4, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tstack-[22], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tadd\tstack-[20], r0, r3\n\tadd\t96, r3, r1\n\tadd\tstack-[22], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[23], r0, r1\n\tadd\t4, r1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\t128, r3, r2\n\tst.1\tr2, r1\n\tjump\t@.BB0_397\n.BB0_305:\n\tadd\tr4, r0, stack-[23]\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[18]\n\tsub.s!\t@CPI0_8[0], r2, r2\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[18], r0, r3\n\tadd\t160, r3, r2\n\tst.1\t64, r2\n\tst.1.inc\tr3, r1, r1\n\tadd\tstack-[23], r0, r4\n\tadd\t1, r4, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t64, r3, r1\n\tadd\t2, r4, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t3, r4, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[22]\n\tadd\tr3, r0, stack-[20]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[21]\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[20], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tstack-[21], r0, r4\n\tjump.eq\t@.BB0_310\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB0_309:\n\tsload\tr1, r3\n\tst.1.inc\tr4, r3, r4\n\tadd\t1, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r3\n\tjump.lt\t@.BB0_309\n.BB0_310:\n\tsub.s\tstack-[22], r4, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tstack-[22], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tadd\tstack-[18], r0, r3\n\tadd\t96, r3, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tstack-[22], r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r3, r1\n\tadd\tstack-[23], r0, r2\n\tadd\t4, r2, r2\n\tsload\tr2, r2\n\tand!\t255, r2, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tst.1\tr1, r2\n\tjump\t@.BB0_313\n.BB0_689:\n\tadd\t@CPI0_90[0], r0, r2\n\tadd\tstack-[20], r0, r5\n\tst.1\tr5, r2\n\tcontext.gas_left\tr4\n\tadd\tstack-[19], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_691\n\tadd\tr5, r1, r2\n\tadd\tr2, r0, stack-[18]\n\tst.1\t64, r2\n.BB0_702:\n\tadd\tstack-[20], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_704\n.BB0_666:\n\tadd\tstack-[23], r0, r1\n\tst.1\t0, r1\n\tadd\t16, r0, r1\n\tadd\tr1, r0, stack-[20]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[22], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_721\n\tsub.s!\t@CPI0_8[0], r2, r1\n\tjump.gt\t@.BB0_4\n\tadd\t160, r2, r1\n\tst.1\t64, r1\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\t2, r0, r3\n\tsload\tr3, r3\n\tst.1\tr1, r3\n\tadd\t64, r2, r1\n\tadd\t3, r0, r3\n\tsload\tr3, r3\n\tst.1\tr1, r3\n\tadd\t4, r0, r1\n\tsload\tr1, r4\n\tld.1\t64, r1\n\tst.1.inc\tr1, r4, r3\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_726\n\tadd\t@CPI0_20[0], r0, r5\n\tadd\tr0, r0, r6\n.BB0_725:\n\tsload\tr5, r7\n\tst.1.inc\tr3, r7, r3\n\tadd\t1, r5, r5\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_725\n.BB0_726:\n\tsub\tr3, r1, r3\n\tadd\t31, r3, r3\n\tsub.s\t32, r0, stack-[19]\n\tand\tstack-[19], r3, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_4[0], r3, r5\n\tjump.gt\t@.BB0_4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r3\n\tadd\t96, r2, r3\n\tadd\tr3, r0, stack-[18]\n\tst.1\tr3, r1\n\tadd\t128, r2, r1\n\tadd\t5, r0, r2\n\tsload\tr2, r2\n\tand!\t255, r2, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[23], r0, r1\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tsload\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_730\n.BB0_738:\n\tadd\t6, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[19]\n\tadd\t@CPI0_96[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_97[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_346\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\tstack-[19], r1, r1\n\tjump.le\t@.BB0_740\n\tadd\tstack-[23], r0, r1\n\tadd\tstack-[22], r0, r2\n\tnear_call\tr0, @fun_getVestingClaimable, @DEFAULT_UNWIND\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_743\n.BB0_742:\n\tld.1\t64, r1\n\tadd\t@CPI0_119[0], r0, r2\n\tjump\t@.BB0_524\n.BB0_419:\n\tadd\tr4, r0, stack-[23]\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[18]\n\tsub.s!\t@CPI0_8[0], r2, r2\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[18], r0, r3\n\tadd\t160, r3, r2\n\tst.1\t64, r2\n\tst.1.inc\tr3, r1, r1\n\tadd\tstack-[23], r0, r4\n\tadd\t1, r4, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t64, r3, r1\n\tadd\t2, r4, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t3, r4, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[22]\n\tadd\tr3, r0, stack-[20]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[21]\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[20], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tstack-[21], r0, r4\n\tjump.eq\t@.BB0_424\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB0_423:\n\tsload\tr1, r3\n\tst.1.inc\tr4, r3, r4\n\tadd\t1, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r3\n\tjump.lt\t@.BB0_423\n.BB0_424:\n\tsub.s\tstack-[22], r4, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tstack-[22], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tadd\tstack-[18], r0, r3\n\tadd\t96, r3, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tstack-[22], r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r3, r1\n\tadd\tstack-[23], r0, r2\n\tadd\t4, r2, r2\n\tsload\tr2, r2\n\tand!\t255, r2, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tst.1\tr1, r2\n\tjump\t@.BB0_427\n.BB0_560:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1211\n\tadd\tr0, r0, r6\n.BB0_562:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_562\n.BB0_1211:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_564\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_564:\n\tjump\t@.BB0_501\n.BB0_188:\n\tadd\tstack-[23], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[22], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_194\n\tadd\tstack-[23], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[22], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_18[0], r0, r4\n\tadd\tstack-[23], r0, r5\n\tadd\tstack-[22], r0, r6\n\tadd\tstack-[20], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_194:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_508:\n\tadd\t@CPI0_98[0], r0, r2\n\tadd\tstack-[22], r0, r5\n\tst.1\tr5, r2\n\tadd\t4, r5, r2\n\tadd\tstack-[23], r0, r4\n\tst.1\tr2, r4\n\tcontext.gas_left\tr2\n\tadd\tstack-[20], r0, r4\n\tsub.s!\t4, r4, r4\n\tjump.eq\t@.BB0_520\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_92[0], r1, r1\n\tadd\tstack-[20], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[22], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1204\n\tadd\tr0, r0, r7\n.BB0_511:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_511\n.BB0_1204:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_513\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[22], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_513:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_515\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[22], r0, r5\n.BB0_520:\n\tadd\tr1, r5, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[22], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\tstack-[21], r2, r2\n\tjump.ge\t@.BB0_525\n\tadd\t@CPI0_127[0], r0, r2\n\tjump\t@.BB0_524\n.BB0_817:\n\tadd\t16, r0, stack-[19]\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\t32784, r0, r2\n\tadd\tr0, r0, stack-[23]\n\tadd\tr0, r0, stack-[18]\n\tadd\tr2, r0, stack-[22]\n\tjump\t@.BB0_819\n.BB0_825:\n\tdiv.s\t10000, r1, r1, r2\n\tadd\tstack-[18], r1, stack-[18]\n\tsub!\tstack-[18], r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_87\n.BB0_826:\n\tadd\t1, r6, stack-[23]\n\tadd\tstack-[21], r0, r1\n\tld.1\tr1, r1\n\tsub!\tstack-[23], r1, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tr5, r0, r2\n\tjump.ge\t@.BB0_818\n.BB0_819:\n\tadd\tstack-[20], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[19], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[23], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\tstack-[22], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[22], r0, r5\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\tstack-[23], r0, r6\n\tjump.ne\t@.BB0_826\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tsub!\tr2, r6, r2\n\tjump.le\t@.BB0_84\n\tshl.s\t5, r6, r2\n\tadd\tr2, r1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r2\n\tmul\tstack-[17], r2, r1, r3\n\tsub!\tstack-[17], r0, r3\n\tjump.eq\t@.BB0_825\n\tdiv.s\tstack-[17], r1, r3, r4\n\tsub!\tr3, r2, r2\n\tjump.eq\t@.BB0_825\n\tjump\t@.BB0_87\n.BB0_314:\n\tadd\tstack-[19], r0, r1\n\tand\t@CPI0_9[0], r1, stack-[17]\n\tadd\t16, r0, stack-[21]\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\t32784, r0, stack-[22]\n\tadd\tr0, r0, stack-[23]\n\tadd\tr0, r0, stack-[3]\n\tjump\t@.BB0_316\n.BB0_363:\n\tdiv.s\t10000, r1, r1, r2\n\tadd\tstack-[3], r1, stack-[3]\n\tsub!\tstack-[3], r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_87\n.BB0_364:\n\tadd\tstack-[23], r0, r2\n\tadd\t1, r2, stack-[23]\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r1\n\tsub!\tstack-[23], r1, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tjump.ge\t@.BB0_315\n.BB0_316:\n\tadd\tstack-[19], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[21], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\tstack-[22], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[23], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\tstack-[22], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_364\n\tld.1\t64, r7\n\tsub.s!\t@CPI0_8[0], r7, r1\n\tjump.gt\t@.BB0_4\n\tadd\t160, r7, r1\n\tst.1\t64, r1\n\tadd\tstack-[9], r0, r1\n\tsload\tr1, r1\n\tst.1.inc\tr7, r1, r2\n\tadd\tstack-[8], r0, r1\n\tsload\tr1, r1\n\tadd\tr2, r0, stack-[15]\n\tst.1\tr2, r1\n\tadd\t64, r7, r2\n\tadd\tstack-[7], r0, r1\n\tsload\tr1, r1\n\tadd\tr2, r0, stack-[16]\n\tst.1\tr2, r1\n\tadd\tstack-[6], r0, r1\n\tsload\tr1, r3\n\tld.1\t64, r1\n\tst.1.inc\tr1, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_323\n\tadd\t@CPI0_20[0], r0, r4\n\tadd\tr0, r0, r5\n.BB0_322:\n\tsload\tr4, r6\n\tst.1.inc\tr2, r6, r2\n\tadd\t1, r4, r4\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_322\n.BB0_323:\n\tsub\tr2, r1, r2\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, stack-[13]\n\tand\tstack-[13], r2, r3\n\tadd\tr3, r1, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.gt\t@.BB0_4\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r2\n\tadd\t96, r7, r2\n\tst.1\tr2, r1\n\tadd\tr7, r0, stack-[20]\n\tadd\t128, r7, r2\n\tadd\tstack-[5], r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr2, r0, stack-[14]\n\tst.1\tr2, r1\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r4\n\tsload\tr4, r1\n\tsub!\tr1, r0, r2\n\tadd\tstack-[20], r0, r3\n\tjump.eq\t@.BB0_335\n\tld.1\t64, r3\n\tsub.s!\t@CPI0_8[0], r3, r2\n\tjump.gt\t@.BB0_4\n\tadd\t160, r3, r2\n\tst.1\t64, r2\n\tst.1.inc\tr3, r1, r2\n\tadd\t1, r4, r1\n\tsload\tr1, r1\n\tadd\tr2, r0, stack-[15]\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[20]\n\tadd\t64, r3, r2\n\tadd\t2, r4, r1\n\tsload\tr1, r1\n\tadd\tr2, r0, stack-[16]\n\tst.1\tr2, r1\n\tadd\tr4, r0, stack-[14]\n\tadd\t3, r4, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\tr3, r0, stack-[10]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[11]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[10], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tstack-[11], r0, r4\n\tjump.eq\t@.BB0_332\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB0_331:\n\tsload\tr1, r3\n\tst.1.inc\tr4, r3, r4\n\tadd\t1, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r3\n\tjump.lt\t@.BB0_331\n.BB0_332:\n\tadd\tstack-[12], r0, r5\n\tsub\tr4, r5, r1\n\tadd\t31, r1, r1\n\tand\tstack-[13], r1, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tadd\tstack-[20], r0, r3\n\tadd\tstack-[14], r0, r4\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tadd\t96, r3, r1\n\tst.1\tr1, r5\n\tadd\t4, r4, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\t128, r3, r2\n\tadd\tr2, r0, stack-[14]\n\tst.1\tr2, r1\n.BB0_335:\n\tld.1\tr3, r1\n\tsub.s!\tstack-[23], r1, r1\n\tjump.le\t@.BB0_336\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[21], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[23], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\t@CPI0_0[0], r0, r6\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_364\n\tadd\t6, r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[23], r0, r4\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_353\n\tadd\tstack-[16], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_342\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_87\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r3\n\tmul\tstack-[23], r3, r2, r4\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_350\n\tdiv\tr2, r3, r3, r4\n\tsub.s!\tstack-[23], r3, r3\n\tjump.ne\t@.BB0_87\n.BB0_350:\n\tadd\tr2, r1, stack-[20]\n\tsub!\tstack-[20], r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_87\n\tadd\t@CPI0_96[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tjump\t@.BB0_352\n.BB0_353:\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_360\n\tadd\tstack-[16], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_355\n\tadd\tr2, r1, stack-[20]\n\tsub!\tstack-[20], r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_87\n\tadd\t@CPI0_96[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tjump\t@.BB0_352\n.BB0_342:\n\tadd\t1, r4, r3\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r4\n\tmul\tr4, r3, r2, r5\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_344\n\tdiv\tr2, r4, r4, r5\n\tsub!\tr4, r3, r3\n\tjump.ne\t@.BB0_87\n.BB0_344:\n\tadd\tr2, r1, stack-[20]\n\tsub!\tstack-[20], r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_87\n\tadd\t@CPI0_96[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n.BB0_352:\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr6, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_97[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_346\n\tld\tr1, r1\n\tsub.s!\tstack-[20], r1, r1\n\tjump.lt\t@.BB0_364\n.BB0_360:\n\tadd\tstack-[1], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tadd\tstack-[23], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB0_84\n\tshl.s\t5, r3, r2\n\tadd\tr2, r1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r2\n\tmul\tstack-[2], r2, r1, r3\n\tsub!\tstack-[2], r0, r3\n\tjump.eq\t@.BB0_363\n\tdiv.s\tstack-[2], r1, r3, r4\n\tsub!\tr3, r2, r2\n\tjump.eq\t@.BB0_363\n\tjump\t@.BB0_87\n.BB0_355:\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r1, stack-[20]\n\tsub!\tstack-[20], r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_87\n\tadd\t@CPI0_96[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tjump\t@.BB0_352\n.BB0_428:\n\tadd\tstack-[19], r0, r1\n\tand\t@CPI0_9[0], r1, stack-[17]\n\tadd\t16, r0, stack-[21]\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\t32784, r0, stack-[22]\n\tadd\tr0, r0, stack-[23]\n\tadd\tr0, r0, stack-[12]\n\tjump\t@.BB0_430\n.BB0_475:\n\tdiv.s\t10000, r1, r1, r2\n\tadd\tstack-[12], r1, stack-[12]\n\tsub!\tstack-[12], r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_87\n.BB0_476:\n\tadd\tstack-[23], r0, r2\n\tadd\t1, r2, stack-[23]\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r1\n\tsub!\tstack-[23], r1, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tjump.ge\t@.BB0_429\n.BB0_430:\n\tadd\tstack-[19], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[21], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\tstack-[22], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[23], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\tstack-[22], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_476\n\tld.1\t64, r7\n\tsub.s!\t@CPI0_8[0], r7, r1\n\tjump.gt\t@.BB0_4\n\tadd\t160, r7, r1\n\tst.1\t64, r1\n\tadd\tstack-[7], r0, r1\n\tsload\tr1, r1\n\tst.1.inc\tr7, r1, r2\n\tadd\tstack-[6], r0, r1\n\tsload\tr1, r1\n\tadd\tr2, r0, stack-[15]\n\tst.1\tr2, r1\n\tadd\t64, r7, r2\n\tadd\tstack-[5], r0, r1\n\tsload\tr1, r1\n\tadd\tr2, r0, stack-[16]\n\tst.1\tr2, r1\n\tadd\tstack-[4], r0, r1\n\tsload\tr1, r3\n\tld.1\t64, r1\n\tst.1.inc\tr1, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_437\n\tadd\t@CPI0_20[0], r0, r4\n\tadd\tr0, r0, r5\n.BB0_436:\n\tsload\tr4, r6\n\tst.1.inc\tr2, r6, r2\n\tadd\t1, r4, r4\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_436\n.BB0_437:\n\tsub\tr2, r1, r2\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, stack-[13]\n\tand\tstack-[13], r2, r3\n\tadd\tr3, r1, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.gt\t@.BB0_4\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r2\n\tadd\t96, r7, r2\n\tst.1\tr2, r1\n\tadd\tr7, r0, stack-[20]\n\tadd\t128, r7, r2\n\tadd\tstack-[3], r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr2, r0, stack-[14]\n\tst.1\tr2, r1\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r4\n\tsload\tr4, r1\n\tsub!\tr1, r0, r2\n\tadd\tstack-[20], r0, r3\n\tjump.eq\t@.BB0_449\n\tld.1\t64, r3\n\tsub.s!\t@CPI0_8[0], r3, r2\n\tjump.gt\t@.BB0_4\n\tadd\t160, r3, r2\n\tst.1\t64, r2\n\tst.1.inc\tr3, r1, r2\n\tadd\t1, r4, r1\n\tsload\tr1, r1\n\tadd\tr2, r0, stack-[15]\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[20]\n\tadd\t64, r3, r2\n\tadd\t2, r4, r1\n\tsload\tr1, r1\n\tadd\tr2, r0, stack-[16]\n\tst.1\tr2, r1\n\tadd\tr4, r0, stack-[14]\n\tadd\t3, r4, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[11]\n\tadd\tr3, r0, stack-[9]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[10]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tstack-[10], r0, r4\n\tjump.eq\t@.BB0_446\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB0_445:\n\tsload\tr1, r3\n\tst.1.inc\tr4, r3, r4\n\tadd\t1, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r3\n\tjump.lt\t@.BB0_445\n.BB0_446:\n\tadd\tstack-[11], r0, r5\n\tsub\tr4, r5, r1\n\tadd\t31, r1, r1\n\tand\tstack-[13], r1, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tadd\tstack-[20], r0, r3\n\tadd\tstack-[14], r0, r4\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tadd\t96, r3, r1\n\tst.1\tr1, r5\n\tadd\t4, r4, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\t128, r3, r2\n\tadd\tr2, r0, stack-[14]\n\tst.1\tr2, r1\n.BB0_449:\n\tld.1\tr3, r1\n\tsub.s!\tstack-[23], r1, r1\n\tjump.le\t@.BB0_336\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[21], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[23], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\t@CPI0_0[0], r0, r6\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_453\n.BB0_472:\n\tadd\tstack-[1], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tadd\tstack-[23], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB0_84\n\tshl.s\t5, r3, r2\n\tadd\tr2, r1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r2\n\tmul\tstack-[8], r2, r1, r3\n\tsub!\tstack-[8], r0, r3\n\tjump.eq\t@.BB0_475\n\tdiv.s\tstack-[8], r1, r3, r4\n\tsub!\tr3, r2, r2\n\tjump.eq\t@.BB0_475\n\tjump\t@.BB0_87\n.BB0_453:\n\tadd\t6, r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[23], r0, r4\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_465\n\tadd\tstack-[16], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_455\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_87\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r3\n\tmul\tstack-[23], r3, r2, r4\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_463\n\tdiv\tr2, r3, r3, r4\n\tsub.s!\tstack-[23], r3, r3\n\tjump.ne\t@.BB0_87\n.BB0_463:\n\tadd\tr2, r1, stack-[20]\n\tsub!\tstack-[20], r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_87\n\tadd\t@CPI0_96[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tjump\t@.BB0_459\n.BB0_465:\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_476\n\tadd\tstack-[16], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_467\n\tadd\tr2, r1, stack-[20]\n\tsub!\tstack-[20], r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_87\n\tadd\t@CPI0_96[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tjump\t@.BB0_459\n.BB0_455:\n\tadd\t1, r4, r3\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r4\n\tmul\tr4, r3, r2, r5\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_457\n\tdiv\tr2, r4, r4, r5\n\tsub!\tr4, r3, r3\n\tjump.ne\t@.BB0_87\n.BB0_457:\n\tadd\tr2, r1, stack-[20]\n\tsub!\tstack-[20], r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_87\n\tadd\t@CPI0_96[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n.BB0_459:\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr6, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_97[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_346\n\tld\tr1, r1\n\tsub.s!\tstack-[20], r1, r1\n\tjump.ge\t@.BB0_476\n\tjump\t@.BB0_472\n.BB0_467:\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r1, stack-[20]\n\tsub!\tstack-[20], r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_87\n\tadd\t@CPI0_96[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tjump\t@.BB0_459\n.BB0_1067:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr1, r0, r4\n\tshl.s\t192, r4, r1\n\tshl.s\t64, r5, r3\n\tor\tr1, r3, r1\n\tor\t@CPI0_24[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[23], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1236\n\tadd\tr0, r0, r7\n.BB0_1069:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1069\n.BB0_1236:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1071\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1071:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1072\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[23], r1, r2\n\tadd\tr2, r0, stack-[20]\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tjump\t@.BB0_1078\n.BB0_691:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr1, r0, r4\n\tshl.s\t192, r4, r1\n\tshl.s\t64, r5, r3\n\tor\tr1, r3, r1\n\tor\t@CPI0_24[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[20], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1221\n\tadd\tr0, r0, r7\n.BB0_693:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_693\n.BB0_1221:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_695\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_695:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_696\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[20], r1, r2\n\tadd\tr2, r0, stack-[18]\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tjump\t@.BB0_702\n.BB0_569:\n\tadd\t@CPI0_98[0], r0, r2\n\tadd\tstack-[22], r0, r4\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tadd\tstack-[20], r0, r4\n\tst.1\tr2, r4\n\tcontext.gas_left\tr2\n\tadd\tstack-[21], r0, r4\n\tsub.s!\t4, r4, r4\n\tjump.eq\t@.BB0_582\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tadd\tstack-[22], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_92[0], r1, r1\n\tadd\tstack-[21], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[22], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1210\n\tadd\tr0, r0, r7\n.BB0_573:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_573\n.BB0_1210:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_575\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[22], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_575:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_577\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n.BB0_582:\n\tadd\tstack-[22], r1, r2\n\tadd\tr2, r0, stack-[20]\n\tsub.s!\t@CPI0_4[0], r2, r2\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[20], r0, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[22], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[20], r0, r5\n\tadd\t36, r5, r4\n\tst.1\tr4, r2\n\tadd\t@CPI0_101[0], r0, r2\n\tst.1\tr5, r2\n\tadd\t4, r5, r2\n\tadd\tstack-[23], r0, r4\n\tst.1\tr2, r4\n\tcontext.gas_left\tr2\n\tadd\tstack-[21], r0, r4\n\tsub.s!\t4, r4, r4\n\tjump.eq\t@.BB0_596\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tadd\tstack-[20], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_102[0], r1, r1\n\tadd\tstack-[21], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[20], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1208\n\tadd\tr0, r0, r7\n.BB0_587:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_587\n.BB0_1208:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_589\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[20], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_589:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_591\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n.BB0_596:\n\tadd\tstack-[20], r1, r1\n\tadd\tr1, r0, stack-[22]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[22], r0, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[20], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_570\n\tadd\t@CPI0_103[0], r0, r1\n\tjump\t@.BB0_507\n.BB0_1072:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1235\n\tadd\tr0, r0, r6\n.BB0_1074:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1074\n.BB0_1235:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1076\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1076:\n\tjump\t@.BB0_501\n.BB0_696:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1220\n\tadd\tr0, r0, r6\n.BB0_698:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_698\n.BB0_1220:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_700\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_700:\n\tjump\t@.BB0_501\n.BB0_721:\n\tadd\t@CPI0_115[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tjump\t@.BB0_688\n.BB0_515:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1203\n\tadd\tr0, r0, r6\n.BB0_517:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_517\n.BB0_1203:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_519\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_519:\n\tjump\t@.BB0_501\n.BB0_704:\n\tadd\t@CPI0_91[0], r0, r2\n\tadd\tstack-[18], r0, r3\n\tst.1\tr3, r2\n\tor\t4, r3, r2\n\tadd\tstack-[23], r0, r3\n\tst.1\tr2, r3\n\tcontext.gas_left\tr2\n\tadd\tstack-[19], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_706\n\tadd\tstack-[18], r1, r1\n\tst.1\t64, r1\n\tjump\t@.BB0_717\n.BB0_910:\n\tld.1\t64, r1\n\tadd\t@CPI0_110[0], r0, r2\n\tjump\t@.BB0_524\n.BB0_1096:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI0_8[0], r2, r2\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[13], r0, r3\n\tadd\t160, r3, r2\n\tst.1\t64, r2\n\tst.1.inc\tr3, r1, r1\n\tadd\tstack-[23], r0, r4\n\tadd\t1, r4, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t64, r3, r1\n\tadd\t2, r4, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t3, r4, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[22]\n\tadd\tr3, r0, stack-[19]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[20]\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[19], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tstack-[20], r0, r4\n\tjump.eq\t@.BB0_1101\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB0_1100:\n\tsload\tr1, r3\n\tst.1.inc\tr4, r3, r4\n\tadd\t1, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r3\n\tjump.lt\t@.BB0_1100\n.BB0_1101:\n\tsub.s\tstack-[22], r4, r1\n\tadd\t31, r1, r1\n\tand\tstack-[17], r1, r2\n\tadd\tstack-[22], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tadd\tstack-[13], r0, r1\n\tadd\t96, r1, r2\n\tadd\tr2, r0, stack-[2]\n\tadd\tstack-[22], r0, r3\n\tst.1\tr2, r3\n\tadd\t128, r1, r1\n\tadd\tstack-[23], r0, r2\n\tadd\t4, r2, r2\n\tsload\tr2, r2\n\tand!\t255, r2, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tst.1\tr1, r2\n\tjump\t@.BB0_1104\n.BB0_346:\n\trevert\n.BB0_1082:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tadd\tstack-[20], r0, r2\n\tadd\tr2, r0, stack-[20]\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_92[0], r1, r1\n\tadd\tstack-[22], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[20], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1234\n\tadd\tr0, r0, r7\n.BB0_1084:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1084\n.BB0_1234:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1086\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[20], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1086:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1087\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[20], r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n.BB0_1093:\n\tadd\tstack-[20], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_1040\n\tjump\t@.BB0_719\n.BB0_577:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1209\n\tadd\tr0, r0, r6\n.BB0_579:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_579\n.BB0_1209:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_581\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_581:\n\tjump\t@.BB0_501\n.BB0_706:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tadd\tstack-[18], r0, r2\n\tadd\tr2, r0, stack-[18]\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_92[0], r1, r1\n\tadd\tstack-[19], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[18], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1219\n\tadd\tr0, r0, r7\n.BB0_708:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_708\n.BB0_1219:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_710\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[18], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_710:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_711\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[18], r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n.BB0_717:\n\tadd\tstack-[18], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_666\n.BB0_719:\n\tadd\t@CPI0_93[0], r0, r2\n\tst.1\tr1, r2\n\tjump\t@.BB0_720\n.BB0_252:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[19]\n\tsub.s!\t@CPI0_8[0], r2, r2\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[19], r0, r3\n\tadd\t160, r3, r2\n\tst.1\t64, r2\n\tst.1.inc\tr3, r1, r1\n\tadd\tstack-[22], r0, r4\n\tadd\t1, r4, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t64, r3, r1\n\tadd\t2, r4, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t3, r4, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[21]\n\tadd\tr3, r0, stack-[17]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[18]\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[17], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tstack-[18], r0, r4\n\tjump.eq\t@.BB0_257\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB0_256:\n\tsload\tr1, r3\n\tst.1.inc\tr4, r3, r4\n\tadd\t1, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r3\n\tjump.lt\t@.BB0_256\n.BB0_257:\n\tsub.s\tstack-[21], r4, r1\n\tadd\t31, r1, r1\n\tand\tstack-[23], r1, r2\n\tadd\tstack-[21], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tadd\tstack-[19], r0, r2\n\tadd\t96, r2, r1\n\tadd\tstack-[21], r0, r3\n\tst.1\tr1, r3\n\tadd\tstack-[22], r0, r1\n\tadd\t4, r1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\t128, r2, r2\n\tst.1\tr2, r1\n\tjump\t@.BB0_260\n.BB0_336:\n\tld.1\t64, r1\n\tadd\t@CPI0_131[0], r0, r2\n\tjump\t@.BB0_524\n.BB0_525:\n\tadd\t14, r0, r3\n\tsload\tr3, r4\n\tadd\tstack-[21], r4, r2\n\tsub!\tr2, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.eq\t@.BB0_526\n.BB0_87:\n\tadd\t@CPI0_132[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB0_5\n.BB0_261:\n\tadd\t16, r0, stack-[18]\n\tadd\t32784, r0, stack-[21]\n\tadd\tr0, r0, stack-[23]\n\tadd\tr0, r0, stack-[22]\n.BB0_263:\n\tadd\tstack-[20], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[18], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\tstack-[21], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[23], r0, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tadd\tr2, r0, stack-[23]\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\tstack-[21], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[23], r0, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\tr2, r0, r1\n\tadd.eq\tstack-[22], r0, r1\n\tadd\tr1, r0, stack-[22]\n\tadd\t1, r2, stack-[23]\n\tadd\tstack-[19], r0, r1\n\tld.1\tr1, r1\n\tsub!\tstack-[23], r1, r1\n\tjump.lt\t@.BB0_263\n\tsub.s\t1, r0, r1\n\tsub!\tstack-[22], r1, r1\n\tjump.eq\t@.BB0_87\n\tjump\t@.BB0_266\n.BB0_1087:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1233\n\tadd\tr0, r0, r6\n.BB0_1089:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1089\n.BB0_1233:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1091\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1091:\n\tjump\t@.BB0_501\n.BB0_711:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1218\n\tadd\tr0, r0, r6\n.BB0_713:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_713\n.BB0_1218:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_715\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_715:\n\tjump\t@.BB0_501\n.BB0_526:\n\tsstore\tr3, r2\n\tadd\t64, r1, r3\n\tst.1\tr3, r2\n\tadd\t32, r1, r2\n\tadd\tstack-[21], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[23], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_123[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\tr3, r0, stack-[18]\n\tadd\t@CPI0_124[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r3\n\tadd\t68, r3, r1\n\tadd\tstack-[21], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\tstack-[19], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_125[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[22]\n\tadd\t4, r3, r1\n\tadd\tstack-[23], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[20], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_529\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_539\n.BB0_1011:\n\tadd\t17, r0, stack-[18]\n\tadd\t32784, r0, stack-[17]\n\tadd\tr0, r0, r4\n.BB0_1012:\n\tshl.s\t5, r4, r1\n\tadd\tstack-[21], r1, r3\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add\tr2, r3, r3\n\tld\tr3, r5\n\tsub!\tr5, r0, r3\n\tjump.eq\t@.BB0_292\n\tadd\tr1, r9, r1\n\tptr.add\tr2, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\tr5, r0, stack-[22]\n\tadd\tr4, r0, stack-[23]\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_37\n\tst.1\t0, r1\n\tadd\tstack-[18], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[20], r0, r8\n\tadd\tstack-[19], r0, r9\n\tadd\tstack-[23], r0, r4\n\tadd\tstack-[22], r0, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\t1, r4, r4\n\tsub!\tr4, r8, r1\n\tjump.lt\t@.BB0_1012\n\tjump\t@.BB0_1013\n.BB0_275:\n\tsub!\tr3, r0, r4\n\tjump.ne\t@.BB0_279\n\tadd\tstack-[14], r0, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_283\n\tmul\tr3, r2, r4, r5\n\tdiv\tr4, r3, r5, r3\n\tadd\tr4, r1, r1\n\tsub!\tr1, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub!\tr5, r2, r2\n\tjump.ne\t@.BB0_87\n.BB0_270:\n\tand!\t1, r3, r2\n\tjump.eq\t@.BB0_283\n\tjump\t@.BB0_87\n.BB0_591:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1207\n\tadd\tr0, r0, r6\n.BB0_593:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_593\n.BB0_1207:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_595\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_595:\n\tjump\t@.BB0_501\n.BB0_730:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[16]\n\tsub.s!\t@CPI0_8[0], r2, r2\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[16], r0, r4\n\tadd\t160, r4, r2\n\tst.1\t64, r2\n\tst.1.inc\tr4, r1, r1\n\tadd\tstack-[17], r0, r3\n\tadd\t1, r3, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t64, r4, r1\n\tadd\t2, r3, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t3, r3, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[15]\n\tadd\tr3, r0, stack-[14]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[18]\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[14], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tstack-[18], r0, r4\n\tjump.eq\t@.BB0_735\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB0_734:\n\tsload\tr1, r3\n\tst.1.inc\tr4, r3, r4\n\tadd\t1, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r3\n\tjump.lt\t@.BB0_734\n.BB0_735:\n\tsub.s\tstack-[15], r4, r1\n\tadd\t31, r1, r1\n\tand\tstack-[19], r1, r2\n\tadd\tstack-[15], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tadd\tstack-[16], r0, r2\n\tadd\t96, r2, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\tstack-[15], r0, r3\n\tst.1\tr1, r3\n\tadd\t128, r2, r1\n\tadd\tstack-[17], r0, r2\n\tadd\t4, r2, r2\n\tsload\tr2, r2\n\tand!\t255, r2, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tst.1\tr1, r2\n\tjump\t@.BB0_738\n.BB0_271:\n\tadd\tr1, r3, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_87\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r3\n\tsub!\tr3, r0, r1\n\tadd\tr2, r0, r1\n\tjump.eq\t@.BB0_283\n\tmul\tstack-[22], r3, r4, r1\n\tdiv\tr4, r3, r3, r1\n\tadd\tr4, r2, r1\n\tsub!\tr1, r4, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\tstack-[22], r3, r3\n\tjump.eq\t@.BB0_274\n\tjump\t@.BB0_87\n.BB0_279:\n\tadd\tr1, r3, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_87\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r3\n\tsub!\tr3, r0, r1\n\tadd\tr2, r0, r1\n\tjump.eq\t@.BB0_283\n\tmul\tstack-[22], r3, r4, r1\n\tdiv\tr4, r3, r3, r1\n\tadd\tr4, r2, r1\n\tsub!\tr1, r4, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\tstack-[22], r3, r3\n\tjump.ne\t@.BB0_87\n.BB0_274:\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_283\n\tjump\t@.BB0_87\n.BB0_529:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[22], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_126[0], r1, r1\n\tadd\tstack-[20], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[22], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1202\n\tadd\tr0, r0, r7\n.BB0_531:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_531\n.BB0_1202:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_533\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[22], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_533:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_534\n.BB0_539:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[22], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r4\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[22], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.lt\tr1, r0, r3\n\tshl.s\t64, r3, r3\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_545\n.BB0_544:\n\tadd\t@CPI0_103[0], r0, r2\n\tst.1\tr1, r2\n\tor\t@CPI0_24[0], r3, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_534:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1201\n\tadd\tr0, r0, r6\n.BB0_536:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_536\n.BB0_1201:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_538\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_538:\n.BB0_501:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_743:\n\tadd\tstack-[23], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[20], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[22], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[23], r0, r1\n\tnear_call\tr0, @modifier_notZeroAddress, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[20]\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tsub.s!\tstack-[22], r2, r2\n\tjump.le\t@.BB0_84\n\tsub!\tstack-[20], r0, r2\n\tjump.eq\t@.BB0_742\n\tadd\tstack-[22], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\tr2, r1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tmul\tstack-[20], r1, r4, r2\n\tadd\tr4, r0, stack-[19]\n\tdiv.s\tstack-[20], r4, r2, r3\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_87\n\tadd\tstack-[19], r0, r1\n\tsub.s!\t10000, r1, r1\n\tjump.lt\t@.BB0_742\n\tadd\t18, r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r3\n\tadd\t@CPI0_98[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[18]\n\tadd\t4, r3, r1\n\tcontext.this\tr3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_9[0], r2, r2\n\tadd\tr2, r0, stack-[16]\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_751\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_761\n.BB0_1108:\n\tsub!\tstack-[6], r0, r1\n\tjump.ne\t@.BB0_1156\n.BB0_740:\n\tld.1\t64, r1\n\tadd\t@CPI0_116[0], r0, r2\n\tjump\t@.BB0_524\n.BB0_647:\n\tld.1\t224, r2\n\tadd\t32, r2, r4\n\tld.1\tr2, r7\n\tadd\tr0, r0, r6\n\tadd\tr0, r0, r5\n.BB0_651:\n\tsub!\tr7, r6, r7\n\tjump.le\t@.BB0_84\n\tsload\tr1, r7\n\tsub!\tr6, r7, r7\n\tjump.ge\t@.BB0_84\n\tshl.s\t5, r6, r7\n\tadd\tr4, r7, r8\n\tld.1\tr8, r7\n\tst.1\t0, r1\n\tadd\t@CPI0_20[0], r6, r9\n\tsstore\tr9, r7\n\tld.1\tr2, r7\n\tsub!\tr7, r6, r9\n\tjump.le\t@.BB0_84\n\tld.1\tr8, r8\n\tadd\tr8, r5, r5\n\tsub!\tr5, r8, r8\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB0_87\n\tadd\t1, r6, r6\n\tsub!\tr6, r3, r8\n\tjump.lt\t@.BB0_651\n\tsub.s!\t10000, r5, r1\n\tjump.ne\t@.BB0_88\n\tld.1\t64, r1\n\tadd\t64, r0, r3\n\tst.1.inc\tr1, r3, r3\n\tadd\t64, r1, r4\n\tld.1\t128, r5\n\tst.1\tr4, r5\n\tadd\t96, r1, r4\n\tld.1\t160, r5\n\tst.1\tr4, r5\n\tadd\t128, r1, r4\n\tld.1\t192, r5\n\tst.1\tr4, r5\n\tadd\t160, r1, r4\n\tadd\t160, r0, r6\n\tld.1\t224, r5\n\tst.1\tr4, r6\n\tadd\t224, r1, r4\n\tld.1\tr5, r6\n\tst.1\tr4, r6\n\tadd\t256, r1, r4\n\tsub!\tr6, r0, r7\n\tjump.eq\t@.BB0_658\n\tadd\tr0, r0, r7\n.BB0_657:\n\tadd\t32, r5, r5\n\tld.1\tr5, r8\n\tst.1.inc\tr4, r8, r4\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_657\n.BB0_658:\n\tsub\tr4, r1, r5\n\tld.1\t256, r6\n\tst.1\tr3, r5\n\tsub!\tr6, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tadd\t192, r1, r5\n\tst.1\tr5, r3\n\tld.1\tr2, r5\n\tst.1.inc\tr4, r5, r3\n\tsub!\tr5, r0, r4\n\tjump.eq\t@.BB0_661\n\tadd\tr0, r0, r4\n.BB0_660:\n\tadd\t32, r2, r2\n\tld.1\tr2, r6\n\tst.1.inc\tr3, r6, r3\n\tadd\t1, r4, r4\n\tsub!\tr4, r5, r6\n\tjump.lt\t@.BB0_660\n.BB0_661:\n\tsub\tr3, r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_120[0], r0, r4\n\tjump\t@.BB0_1026\n.BB0_545:\n\tadd\tstack-[18], r0, r2\n.BB0_546:\n\tst.1\tr1, r2\n\tor\t@CPI0_86[0], r3, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1156:\n\tadd\t18, r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r3\n\tadd\t@CPI0_98[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[23]\n\tadd\t4, r3, r1\n\tcontext.this\tr3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_9[0], r2, r2\n\tadd\tr2, r0, stack-[22]\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_1158\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1168\n.BB0_1158:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[23], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_92[0], r1, r1\n\tadd\tstack-[22], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[23], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1232\n\tadd\tr0, r0, r7\n.BB0_1160:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1160\n.BB0_1232:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1162\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[23], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1162:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1163\n.BB0_1168:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[23], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[23], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\tstack-[6], r2, r2\n\tjump.ge\t@.BB0_1173\n.BB0_765:\n\tadd\t@CPI0_104[0], r0, r2\n\tjump\t@.BB0_524\n.BB0_1163:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1231\n\tadd\tr0, r0, r6\n.BB0_1165:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1165\n.BB0_1231:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1167\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1167:\n\tjump\t@.BB0_501\n.BB0_1173:\n\tadd\t13, r0, r2\n\tsload\tr2, r3\n\tsub.s!\tstack-[6], r3, r4\n\tjump.lt\t@.BB0_87\n\tadd\tstack-[6], r0, r4\n\tsub\tr3, r4, r3\n\tsstore\tr2, r3\n\tadd\t128, r1, r2\n\tadd\tstack-[1], r0, r5\n\tst.1\tr2, r5\n\tadd\t96, r1, r2\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\tstack-[5], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tst.1\tr2, r4\n\tadd\tstack-[3], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_99[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\tr3, r0, stack-[20]\n\tadd\t@CPI0_100[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r3\n\tadd\t36, r3, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_101[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[23]\n\tadd\t4, r3, r1\n\tadd\tstack-[21], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[22], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_1177\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1187\n.BB0_41:\n\tadd\t@CPI0_11[0], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_12[0], r0, r2\n\tsload\tr2, r6\n\tsstore\tr2, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_14[0], r0, r4\n\tadd\t@CPI0_11[0], r0, r5\n\tadd\t@CPI0_11[0], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t@CPI0_15[0], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r6\n\tadd\t@CPI0_11[0], r0, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\tr3, r0, stack-[20]\n\tadd\t@CPI0_14[0], r0, r4\n\tadd\t@CPI0_15[0], r0, r5\n\tadd\t@CPI0_11[0], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[21], r0, r1\n\tld.1\tr1, r1\n\tadd\t96, r1, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_9[0], r1, r1\n\tadd\tr1, r0, stack-[18]\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_48\n\tadd\tstack-[18], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tcontext.caller\tr7\n\tadd\t@CPI0_18[0], r0, r4\n\tadd\t@CPI0_11[0], r0, r5\n\tadd\tstack-[18], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_48:\n\tadd\tstack-[21], r0, r1\n\tld.1\tr1, r1\n\tadd\t128, r1, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_9[0], r1, r1\n\tadd\tr1, r0, stack-[18]\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_52\n\tadd\tstack-[18], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tcontext.caller\tr7\n\tadd\t@CPI0_18[0], r0, r4\n\tadd\t@CPI0_15[0], r0, r5\n\tadd\tstack-[18], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_52:\n\tadd\tstack-[23], r0, r1\n\tld.1\tr1, r1\n\tadd\t96, r1, r2\n\tld.1\tr2, r2\n\tld.1\tr2, r3\n\tsub!\tr3, r0, r4\n\tjump.ne\t@.BB0_54\n\tld.1\t64, r1\n\tadd\t@CPI0_25[0], r0, r2\n\tjump\t@.BB0_524\n.BB0_751:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[18], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_92[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[18], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1217\n\tadd\tr0, r0, r7\n.BB0_753:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_753\n.BB0_1217:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_755\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[18], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_755:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_756\n.BB0_761:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[18], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[19], r0, r2\n\tdiv.s\t10000, r2, stack-[19], r2\n\tadd\tstack-[18], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\tstack-[19], r2, r2\n\tjump.lt\t@.BB0_765\n\tadd\t13, r0, r2\n\tsload\tr2, r3\n\tsub.s!\tstack-[19], r3, r4\n\tjump.lt\t@.BB0_87\n\tadd\tstack-[19], r0, r5\n\tsub\tr3, r5, r3\n\tsstore\tr2, r3\n\tadd\t160, r1, r2\n\tadd\tstack-[17], r0, r4\n\tst.1\tr2, r4\n\tadd\t128, r1, r2\n\tst.1\tr2, r3\n\tadd\t96, r1, r2\n\tadd\tstack-[20], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tst.1\tr2, r5\n\tadd\t32, r1, r2\n\tadd\tstack-[22], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[23], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_117[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\tr3, r0, stack-[22]\n\tadd\t@CPI0_118[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r2\n\tadd\t36, r2, r1\n\tadd\tstack-[19], r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI0_101[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[23]\n\tadd\t4, r2, r1\n\tadd\tstack-[21], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_770\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_780\n.BB0_1177:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[23], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_102[0], r1, r1\n\tadd\tstack-[22], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[23], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1230\n\tadd\tr0, r0, r7\n.BB0_1179:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1179\n.BB0_1230:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1181\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[23], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1181:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1182\n.BB0_1187:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[23], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[23], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.lt\tr1, r0, r3\n\tshl.s\t64, r3, r3\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_1193\n\tjump\t@.BB0_544\n.BB0_756:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1216\n\tadd\tr0, r0, r6\n.BB0_758:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_758\n.BB0_1216:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_760\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_760:\n\tjump\t@.BB0_501\n.BB0_1182:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1229\n\tadd\tr0, r0, r6\n.BB0_1184:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1184\n.BB0_1229:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1186\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1186:\n\tjump\t@.BB0_501\n.BB0_1193:\n\tadd\tstack-[20], r0, r2\n\tjump\t@.BB0_546\n.BB0_770:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[23], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_102[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1215\n\tadd\tr0, r0, r7\n.BB0_772:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[23], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_772\n.BB0_1215:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_774\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[23], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_774:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_775\n.BB0_780:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[23], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[23], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.lt\tr1, r0, r3\n\tshl.s\t64, r3, r3\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_786\n\tjump\t@.BB0_544\n.BB0_775:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1214\n\tadd\tr0, r0, r6\n.BB0_777:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_777\n.BB0_1214:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_779\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_779:\n\tjump\t@.BB0_501\n.BB0_54:\n\tadd\t32, r1, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r5\n\tjump.ne\t@.BB0_56\n\tld.1\t64, r1\n\tadd\t@CPI0_23[0], r0, r2\n\tjump\t@.BB0_524\n.BB0_56:\n\tld.1\tr1, r5\n\tadd\t1, r0, r6\n\tsstore\tr6, r5\n\tadd\t2, r0, r5\n\tsstore\tr5, r4\n\tadd\t64, r1, r4\n\tld.1\tr4, r4\n\tadd\t3, r0, r5\n\tsstore\tr5, r4\n\tsub.s!\t@CPI0_4[0], r3, r4\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[20], r0, r5\n\tsload\tr5, r4\n\tsstore\tr5, r3\n\tsub!\tr3, r4, r5\n\tjump.ge\t@.BB0_60\n\tadd\t@CPI0_20[0], r4, r4\n\tadd\t@CPI0_20[0], r3, r5\n\tsub!\tr5, r4, r6\n\tjump.ge\t@.BB0_60\n.BB0_61:\n\tsstore\tr5, r0\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_61\n.BB0_60:\n\tadd\tstack-[20], r0, r4\n\tst.1\t0, r4\n\tadd\tr0, r0, r4\n.BB0_62:\n\tadd\t32, r2, r2\n\tadd\t@CPI0_20[0], r4, r5\n\tld.1\tr2, r6\n\tsstore\tr5, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_62\n\tadd\t5, r0, r2\n\tsload\tr2, r3\n\tsub.s\t256, r0, r4\n\tand\tr3, r4, r3\n\tadd\t128, r1, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tor.ne\t1, r3, r3\n\tsstore\tr2, r3\n\tadd\t18, r0, r2\n\tsload\tr2, r1\n\tand\t@CPI0_21[0], r1, r5\n\tadd\tstack-[21], r0, r1\n\tld.1\tr1, r1\n\tld.1.inc\tr1, r4, r3\n\tand\t@CPI0_9[0], r4, r4\n\tor\tr5, r4, r5\n\tsstore\tr2, r5\n\tadd\t64, r1, r2\n\tld.1\tr2, r2\n\tand!\t@CPI0_9[0], r2, r2\n\tjump.eq\t@.BB0_65\n\tadd\t19, r0, r5\n\tsload\tr5, r6\n\tand\t@CPI0_21[0], r6, r6\n\tor\tr6, r2, r6\n\tsstore\tr5, r6\n.BB0_65:\n\tadd\tstack-[19], r0, r5\n\tld.1\tr5, r5\n\tld.1.inc\tr5, r5, r6\n\tadd\t6, r0, r7\n\tsstore\tr7, r5\n\tld.1\tr6, r5\n\tadd\t7, r0, r6\n\tsstore\tr6, r5\n\tadd\t8, r0, r5\n\tsload\tr5, r6\n\tand\t@CPI0_21[0], r6, r6\n\tor\tr6, r4, r4\n\tsstore\tr5, r4\n\tld.1\tr3, r3\n\tand\t@CPI0_9[0], r3, r3\n\tadd\t9, r0, r4\n\tsload\tr4, r5\n\tand\t@CPI0_21[0], r5, r5\n\tor\tr5, r3, r3\n\tsstore\tr4, r3\n\tadd\t10, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_21[0], r4, r4\n\tor\tr4, r2, r2\n\tsstore\tr3, r2\n\tadd\t96, r1, r2\n\tld.1\tr2, r2\n\tand\t@CPI0_9[0], r2, r2\n\tadd\t11, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_21[0], r4, r4\n\tor\tr4, r2, r2\n\tsstore\tr3, r2\n\tadd\t128, r1, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_9[0], r1, r1\n\tadd\t12, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_21[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\tstack-[23], r0, r1\n\tld.1\tr1, r1\n\tadd\t96, r1, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_4\n\tshl.s\t5, r1, r4\n\tadd\t63, r4, r2\n\tand\tstack-[22], r2, r3\n\tld.1\t64, r2\n\tadd\tr2, r3, r3\n\tsub!\tr3, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_4[0], r3, r6\n\tjump.gt\t@.BB0_4\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r3\n\tst.1.inc\tr2, r1, r1\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_1239\n\tadd\tstack[@calldatasize], r0, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tadd\tr0, r0, r6\n.BB0_70:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr5, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_70\n.BB0_1239:\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_72\n.BB0_72:\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_4[0], r2, r3\n\tjump.gt\t@.BB0_4\n\tadd\tstack-[20], r0, r3\n\tsload\tr3, r4\n\tsstore\tr3, r2\n\tsub!\tr2, r4, r3\n\tjump.ge\t@.BB0_76\n\tadd\t@CPI0_20[0], r2, r3\n\tadd\t@CPI0_20[0], r4, r4\n\tsub!\tr3, r4, r5\n\tjump.ge\t@.BB0_76\n.BB0_78:\n\tsstore\tr3, r0\n\tadd\t1, r3, r3\n\tsub!\tr3, r4, r5\n\tjump.lt\t@.BB0_78\n.BB0_76:\n\tadd\tstack-[20], r0, r3\n\tst.1\t0, r3\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_79\n\tadd\tr0, r0, r3\n.BB0_80:\n\tld.1.inc\tr1, r4, r1\n\tadd\t@CPI0_20[0], r3, r5\n\tsstore\tr5, r4\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_80\n.BB0_79:\n\tadd\tstack-[23], r0, r1\n\tld.1\tr1, r3\n\tadd\tr0, r0, r1\n\tadd\tr0, r0, r2\n.BB0_81:\n\tadd\t96, r3, r3\n\tld.1\tr3, r3\n\tld.1\tr3, r4\n\tsub!\tr2, r4, r4\n\tjump.ge\t@.BB0_82\n\tadd\tstack-[20], r0, r4\n\tsload\tr4, r4\n\tsub!\tr2, r4, r4\n\tjump.ge\t@.BB0_84\n\tshl.s\t5, r2, r4\n\tadd\t32, r4, r4\n\tadd\tr4, r3, r3\n\tld.1\tr3, r3\n\tadd\tstack-[20], r0, r5\n\tst.1\t0, r5\n\tadd\t@CPI0_20[0], r2, r5\n\tsstore\tr5, r3\n\tadd\tstack-[23], r0, r3\n\tld.1\tr3, r3\n\tadd\t96, r3, r5\n\tld.1\tr5, r5\n\tld.1\tr5, r6\n\tsub!\tr6, r2, r6\n\tjump.le\t@.BB0_84\n\tadd\tr5, r4, r4\n\tadd\t1, r2, r2\n\tld.1\tr4, r4\n\tadd\tr4, r1, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.eq\t@.BB0_81\n\tjump\t@.BB0_87\n.BB0_84:\n\tadd\t@CPI0_132[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tjump\t@.BB0_5\n.BB0_786:\n\tadd\tstack-[22], r0, r2\n\tjump\t@.BB0_546\n.BB0_82:\n\tsub.s!\t10000, r1, r1\n\tjump.ne\t@.BB0_88\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_22[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nabi_encode_array_uint256_dyn:\n.func_begin1:\n\tadd\tr1, r0, r3\n\tld.1\tr3, r4\n\tst.1.inc\tr2, r4, r1\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r2\n.BB1_2:\n\tadd\t32, r3, r3\n\tld.1\tr3, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r4, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tret\n.func_end1:\n\nfinalize_allocation:\n.func_begin2:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI2_0[0], r1, r3\n\tjump.gt\t@.BB2_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB2_2\n\tst.1\t64, r1\n\tret\n.BB2_2:\n\tadd\t@CPI2_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfun_checkRole:\n.func_begin3:\n\tnop\tstack+=[2]\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI3_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tadd.ge\t@CPI3_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB3_4\n\tret\n.BB3_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_4:\n\tld.1\t64, r1\n\tadd\t36, r1, r2\n\tadd\tstack-[2], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[1], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_0[0], r0, r2\n\tsub.s!\t@CPI3_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfun_revokeRole:\n.func_begin4:\n\tnop\tstack+=[2]\n\tadd\tr2, r0, stack-[1]\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI4_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tand\t@CPI4_2[0], r2, r2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_0[0], r1, r2\n\tadd.ge\t@CPI4_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB4_4\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI4_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_0[0], r1, r2\n\tadd.ge\t@CPI4_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t@CPI4_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI4_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tcontext.caller\tr7\n\tadd\t@CPI4_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[1], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB4_1\n.BB4_4:\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\ncopy_array_from_storage_to_memory_array_uint256_dyn:\n.func_begin5:\n\tnop\tstack+=[3]\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\tr3, r0, stack-[1]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\t@CPI5_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tadd\tstack-[1], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tstack-[2], r0, r4\n\tjump.eq\t@.BB5_5\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB5_4:\n\tsload\tr1, r3\n\tst.1.inc\tr4, r3, r4\n\tadd\t1, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r3\n\tjump.lt\t@.BB5_4\n.BB5_5:\n\tadd\tstack-[3], r0, r1\n\tsub\tr4, r1, r2\n\tadd\t31, r2, r3\n\tsub.s\t32, r0, r2\n\tand\tr3, r2, r2\n\tadd\tr2, r1, r4\n\tsub!\tr4, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI5_2[0], r4, r3\n\tjump.gt\t@.BB5_7\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB5_7\n\tst.1\t64, r4\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_7:\n\tadd\t@CPI5_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nmodifier_notZeroAddress:\n.func_begin6:\n\tnop\tstack+=[8]\n\tld.1\t64, r2\n\tand!\t@CPI6_0[0], r1, stack-[8]\n\tjump.eq\t@.BB6_1\n\tsub.s!\t@CPI6_1[0], r2, r1\n\tjump.ge\t@.BB6_3\n\tadd\t160, r2, r1\n\tst.1\t64, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tsload\tr1, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\t2, r0, r3\n\tsload\tr3, r3\n\tst.1\tr1, r3\n\tadd\t64, r2, r1\n\tadd\t3, r0, r3\n\tsload\tr3, r3\n\tst.1\tr1, r3\n\tadd\t4, r0, r5\n\tsload\tr5, r4\n\tld.1\t64, r1\n\tst.1.inc\tr1, r4, r3\n\tst.1\t0, r5\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB6_8\n\tadd\t@CPI6_2[0], r0, r5\n\tadd\tr0, r0, r6\n.BB6_7:\n\tsload\tr5, r7\n\tst.1.inc\tr3, r7, r3\n\tadd\t1, r5, r5\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB6_7\n.BB6_8:\n\tsub\tr3, r1, r3\n\tadd\t31, r3, r3\n\tsub.s\t32, r0, stack-[7]\n\tand\tstack-[7], r3, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI6_3[0], r3, r5\n\tjump.gt\t@.BB6_3\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB6_3\n\tst.1\t64, r3\n\tadd\t96, r2, r3\n\tst.1\tr3, r1\n\tadd\t128, r2, r1\n\tadd\t5, r0, r2\n\tsload\tr2, r2\n\tand!\t255, r2, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI6_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI6_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_11\n\tld\tr1, r3\n\tsload\tr3, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB6_21\n\tld.1\t64, r4\n\tsub.s!\t@CPI6_6[0], r4, r2\n\tjump.gt\t@.BB6_3\n\tadd\t160, r4, r2\n\tst.1\t64, r2\n\tst.1.inc\tr4, r1, r1\n\tadd\t1, r3, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\tr4, r0, stack-[4]\n\tadd\t64, r4, r1\n\tadd\t2, r3, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\tr3, r0, stack-[5]\n\tadd\t3, r3, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\tr3, r0, stack-[1]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\t@CPI6_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI6_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_11\n\tadd\tstack-[1], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tstack-[2], r0, r4\n\tjump.eq\t@.BB6_18\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB6_17:\n\tsload\tr1, r3\n\tst.1.inc\tr4, r3, r4\n\tadd\t1, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r3\n\tjump.lt\t@.BB6_17\n.BB6_18:\n\tadd\tstack-[3], r0, r5\n\tsub\tr4, r5, r1\n\tadd\t31, r1, r1\n\tand\tstack-[7], r1, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI6_3[0], r1, r3\n\tadd\tstack-[5], r0, r3\n\tadd\tstack-[4], r0, r4\n\tjump.gt\t@.BB6_3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB6_3\n\tst.1\t64, r1\n\tadd\t96, r4, r1\n\tst.1\tr1, r5\n\tadd\t128, r4, r1\n\tadd\t4, r3, r2\n\tsload\tr2, r2\n\tand!\t255, r2, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tst.1\tr1, r2\n.BB6_21:\n\tadd\t7, r0, r1\n\tsload\tr1, r6\n\tadd\t10, r0, r2\n\tsload\tr2, r1\n\tand!\t@CPI6_0[0], r1, r1\n\tjump.eq\t@.BB6_23\n\tld.1\t64, r10\n\tadd\t19, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI6_0[0], r1, r5\n\tsub!\tr6, r0, r1\n\tjump.eq\t@.BB6_50\n\tadd\tr2, r0, stack-[5]\n\tadd\t@CPI6_8[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r5, r2\n\tadd\tr6, r0, stack-[7]\n\tjump.ne\t@.BB6_103\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB6_113\n.BB6_23:\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI6_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI6_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr6, r0, stack-[7]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_11\n\tld\tr1, r1\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB6_25\n\tsload\tr1, r6\n\tadd\t18, r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r10\n\tadd\t@CPI6_10[0], r0, r1\n\tst.1\tr10, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI6_0[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB6_28\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB6_38\n.BB6_50:\n\tadd\t@CPI6_12[0], r0, r1\n\tst.1\tr10, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r5, r2\n\tjump.ne\t@.BB6_52\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB6_62\n.BB6_103:\n\tadd\t@CPI6_4[0], r0, r2\n\tsub.s!\t@CPI6_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI6_4[0], r10, r3\n\tadd.lt\tr10, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI6_9[0], r1, r1\n\tadd\tr5, r0, r2\n\tadd\tr10, r0, stack-[4]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI6_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB6_139\n\tadd\tr0, r0, r7\n.BB6_105:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB6_105\n.BB6_139:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB6_107\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB6_107:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[7], r0, r6\n\tjump.eq\t@.BB6_108\n.BB6_113:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r10, r11\n\tsub!\tr11, r1, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI6_3[0], r11, r4\n\tjump.gt\t@.BB6_3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB6_3\n\tst.1\t64, r11\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB6_11\n\tld.1\tr10, r7\n\tadd\t18, r0, r2\n\tsload\tr2, r2\n\tadd\t@CPI6_10[0], r0, r4\n\tst.1\tr11, r4\n\tcontext.gas_left\tr4\n\tand\t@CPI6_0[0], r2, r2\n\tsub.s!\t4, r2, r5\n\tjump.eq\t@.BB6_128\n\tadd\tr7, r0, stack-[4]\n\tadd\t@CPI6_4[0], r0, r1\n\tsub.s!\t@CPI6_4[0], r4, r3\n\tadd.ge\tr1, r0, r4\n\tsub.s!\t@CPI6_4[0], r11, r3\n\tadd.lt\tr11, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r3\n\tor\tr3, r1, r1\n\tor\t@CPI6_11[0], r1, r1\n\tadd\tr11, r0, stack-[8]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r11\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI6_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB6_138\n\tadd\tr0, r0, r7\n.BB6_119:\n\tshl.s\t5, r7, r8\n\tadd\tr11, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB6_119\n.BB6_138:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB6_121\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr11, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB6_121:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_123\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[7], r0, r6\n\tadd\tstack-[4], r0, r7\n.BB6_128:\n\tadd\tr1, r11, r1\n\tsub.s!\t@CPI6_3[0], r1, r2\n\tjump.gt\t@.BB6_3\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB6_11\n\tld.1\tr11, r1\n\tsub.s!\t255, r1, r2\n\tjump.gt\t@.BB6_11\n\tsub.s!\t77, r1, r2\n\tadd\tstack-[6], r0, r4\n\tjump.gt\t@.BB6_43\n\tsub!\tr1, r0, r2\n\tadd\tstack-[5], r0, r3\n\tjump.eq\t@.BB6_135\n\tadd\t1, r0, r4\n.BB6_134:\n\tand!\t1, r1, r2\n\tadd\tr3, r0, r2\n\tadd.eq\t1, r0, r2\n\tmul\tr2, r4, r4, r2\n\tsub.s!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tmul\tr3, r3, r3, r2\n\tjump.gt\t@.BB6_134\n.BB6_135:\n\tdiv\tr7, r6, r2, r1\n\tmul\tr2, r4, r1, r3\n\tsub!\tr6, r7, r3\n\tjump.gt\t@.BB6_22\n\tdiv\tr1, r2, r2, r3\n\tsub!\tr2, r4, r2\n\tjump.eq\t@.BB6_22\n\tjump\t@.BB6_43\n.BB6_28:\n\tadd\tr6, r0, stack-[8]\n\tadd\t@CPI6_4[0], r0, r3\n\tsub.s!\t@CPI6_4[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI6_4[0], r10, r4\n\tadd.lt\tr10, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI6_11[0], r1, r1\n\tadd\tr10, r0, stack-[6]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI6_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB6_145\n\tadd\tr0, r0, r7\n.BB6_30:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB6_30\n.BB6_145:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB6_32\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB6_32:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[8], r0, r6\n\tjump.eq\t@.BB6_33\n.BB6_38:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI6_3[0], r1, r4\n\tjump.gt\t@.BB6_3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB6_3\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB6_11\n\tld.1\tr10, r1\n\tsub.s!\t255, r1, r2\n\tjump.gt\t@.BB6_11\n\tsub.s!\t77, r1, r2\n\tjump.gt\t@.BB6_43\n\tadd\t1, r0, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB6_47\n\tadd\t10, r0, r3\n\tadd\t1, r0, r2\n.BB6_46:\n\tand!\t1, r1, r4\n\tadd\tr3, r0, r4\n\tadd.eq\t1, r0, r4\n\tmul\tr4, r2, r2, r4\n\tsub.s!\t1, r1, r4\n\tshr.s\t1, r1, r1\n\tmul\tr3, r3, r3, r4\n\tjump.gt\t@.BB6_46\n.BB6_47:\n\tdiv\tr6, r5, r3, r1\n\tmul\tr3, r2, r1, r4\n\tsub!\tr5, r6, r4\n\tjump.gt\t@.BB6_22\n\tjump\t@.BB6_48\n.BB6_52:\n\tadd\t@CPI6_4[0], r0, r2\n\tsub.s!\t@CPI6_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI6_4[0], r10, r3\n\tadd.lt\tr10, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI6_11[0], r1, r1\n\tadd\tr5, r0, stack-[7]\n\tadd\tr5, r0, r2\n\tadd\tr10, r0, stack-[4]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI6_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB6_143\n\tadd\tr0, r0, r7\n.BB6_54:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB6_54\n.BB6_143:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB6_56\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB6_56:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[7], r0, r5\n\tjump.eq\t@.BB6_57\n.BB6_62:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r10, r11\n\tsub!\tr11, r1, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI6_3[0], r11, r4\n\tjump.gt\t@.BB6_3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB6_3\n\tst.1\t64, r11\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB6_11\n\tld.1\tr10, r6\n\tadd\t@CPI6_8[0], r0, r2\n\tst.1\tr11, r2\n\tadd\t4, r11, r2\n\tadd\tstack-[8], r0, r4\n\tst.1\tr2, r4\n\tcontext.gas_left\tr2\n\tsub.s!\t4, r5, r4\n\tadd\tr6, r0, stack-[7]\n\tjump.eq\t@.BB6_77\n\tadd\t@CPI6_4[0], r0, r1\n\tsub.s!\t@CPI6_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI6_4[0], r11, r3\n\tadd.lt\tr11, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI6_9[0], r1, r1\n\tadd\tr5, r0, r2\n\tadd\tr11, r0, stack-[8]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r11\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI6_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB6_142\n\tadd\tr0, r0, r7\n.BB6_68:\n\tshl.s\t5, r7, r8\n\tadd\tr11, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB6_68\n.BB6_142:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB6_70\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr11, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB6_70:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_72\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[7], r0, r6\n.BB6_77:\n\tadd\tr1, r11, r10\n\tsub.s!\t@CPI6_3[0], r10, r2\n\tjump.gt\t@.BB6_3\n\tst.1\t64, r10\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB6_11\n\tsub!\tr6, r0, r2\n\tjump.eq\t@.BB6_25\n\tld.1\tr11, r7\n\tadd\t18, r0, r2\n\tsload\tr2, r2\n\tadd\t@CPI6_10[0], r0, r4\n\tst.1\tr10, r4\n\tcontext.gas_left\tr4\n\tand\t@CPI6_0[0], r2, r2\n\tsub.s!\t4, r2, r5\n\tjump.eq\t@.BB6_92\n\tadd\tr7, r0, stack-[6]\n\tadd\t@CPI6_4[0], r0, r1\n\tsub.s!\t@CPI6_4[0], r4, r3\n\tadd.ge\tr1, r0, r4\n\tsub.s!\t@CPI6_4[0], r10, r3\n\tadd.lt\tr10, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r3\n\tor\tr3, r1, r1\n\tor\t@CPI6_11[0], r1, r1\n\tadd\tr10, r0, stack-[8]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI6_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB6_141\n\tadd\tr0, r0, r7\n.BB6_83:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB6_83\n.BB6_141:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB6_85\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB6_85:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_87\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[7], r0, r6\n\tadd\tstack-[6], r0, r7\n.BB6_92:\n\tadd\tr1, r10, r1\n\tsub.s!\t@CPI6_3[0], r1, r2\n\tjump.gt\t@.BB6_3\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB6_11\n\tld.1\tr10, r1\n\tsub.s!\t255, r1, r2\n\tjump.gt\t@.BB6_11\n\tsub.s!\t77, r1, r2\n\tjump.gt\t@.BB6_43\n\tadd\t1, r0, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB6_99\n\tadd\t10, r0, r3\n\tadd\t1, r0, r2\n.BB6_98:\n\tand!\t1, r1, r4\n\tadd\tr3, r0, r4\n\tadd.eq\t1, r0, r4\n\tmul\tr4, r2, r2, r4\n\tsub.s!\t1, r1, r4\n\tshr.s\t1, r1, r1\n\tmul\tr3, r3, r3, r4\n\tjump.gt\t@.BB6_98\n.BB6_99:\n\tdiv\tr7, r6, r3, r1\n\tmul\tr3, r2, r1, r4\n\tsub!\tr6, r7, r4\n\tjump.gt\t@.BB6_22\n.BB6_48:\n\tdiv\tr1, r3, r3, r4\n\tsub!\tr3, r2, r2\n\tjump.ne\t@.BB6_43\n.BB6_22:\n\tret\n.BB6_3:\n\tadd\t@CPI6_13[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tjump\t@.BB6_4\n.BB6_11:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_43:\n\tadd\t@CPI6_13[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB6_4\n.BB6_1:\n\tadd\t@CPI6_14[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t@CPI6_4[0], r0, r1\n\tsub.s!\t@CPI6_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI6_11[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_25:\n\tadd\t@CPI6_13[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n.BB6_4:\n\tst.1\t4, r1\n\tadd\t@CPI6_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_108:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB6_146\n\tadd\tr0, r0, r6\n.BB6_110:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB6_110\n.BB6_146:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB6_112\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB6_112:\n\tjump\t@.BB6_61\n.BB6_123:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB6_137\n\tadd\tr0, r0, r6\n.BB6_125:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB6_125\n.BB6_137:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB6_127\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB6_127:\n\tjump\t@.BB6_37\n.BB6_33:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB6_144\n\tadd\tr0, r0, r6\n.BB6_35:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB6_35\n.BB6_144:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB6_37\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n\tjump\t@.BB6_37\n.BB6_57:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB6_148\n\tadd\tr0, r0, r6\n.BB6_59:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB6_59\n.BB6_148:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB6_61\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n\tjump\t@.BB6_61\n.BB6_72:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB6_147\n\tadd\tr0, r0, r6\n.BB6_74:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB6_74\n.BB6_147:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB6_76\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB6_76:\n.BB6_61:\n\tadd\t@CPI6_4[0], r0, r1\n\tsub.s!\t@CPI6_4[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_87:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB6_140\n\tadd\tr0, r0, r6\n.BB6_89:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB6_89\n.BB6_140:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB6_91\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB6_91:\n.BB6_37:\n\tadd\t@CPI6_4[0], r0, r1\n\tsub.s!\t@CPI6_4[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nfun_calculateSaleTokenAmount:\n.func_begin7:\n\tnop\tstack+=[3]\n\tadd\tr2, r0, r5\n\tadd\tr1, r0, r6\n\tsub!\tr6, r0, r1\n\tjump.eq\t@.BB7_1\n\tadd\t18, r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r10\n\tadd\t@CPI7_0[0], r0, r1\n\tst.1\tr10, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI7_1[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB7_5\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB7_15\n.BB7_5:\n\tadd\tr6, r0, stack-[2]\n\tadd\tr5, r0, stack-[3]\n\tadd\t@CPI7_2[0], r0, r3\n\tsub.s!\t@CPI7_2[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI7_2[0], r10, r4\n\tadd.lt\tr10, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI7_3[0], r1, r1\n\tadd\tr10, r0, stack-[1]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI7_2[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB7_29\n\tadd\tr0, r0, r7\n.BB7_7:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB7_7\n.BB7_29:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB7_9\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB7_9:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[2], r0, r6\n\tjump.eq\t@.BB7_10\n.BB7_15:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI7_4[0], r1, r4\n\tjump.gt\t@.BB7_17\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB7_17\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB7_20\n\tld.1\tr10, r1\n\tsub.s!\t255, r1, r2\n\tjump.gt\t@.BB7_20\n\tsub.s!\t77, r1, r2\n\tjump.gt\t@.BB7_22\n\tadd\t1, r0, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB7_26\n\tadd\t10, r0, r3\n\tadd\t1, r0, r2\n.BB7_25:\n\tand!\t1, r1, r4\n\tadd\tr3, r0, r4\n\tadd.eq\t1, r0, r4\n\tmul\tr4, r2, r2, r4\n\tsub.s!\t1, r1, r4\n\tshr.s\t1, r1, r1\n\tmul\tr3, r3, r3, r4\n\tjump.gt\t@.BB7_25\n.BB7_26:\n\tdiv\tr5, r6, r3, r1\n\tmul\tr3, r2, r1, r4\n\tsub!\tr6, r5, r4\n\tjump.gt\t@.BB7_28\n\tdiv\tr1, r3, r3, r4\n\tsub!\tr3, r2, r2\n\tjump.ne\t@.BB7_22\n.BB7_28:\n\tret\n.BB7_20:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_22:\n\tadd\t@CPI7_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB7_2\n.BB7_1:\n\tadd\t@CPI7_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tjump\t@.BB7_2\n.BB7_17:\n\tadd\t@CPI7_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB7_2:\n\tst.1\t4, r1\n\tadd\t@CPI7_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_10:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB7_30\n\tadd\tr0, r0, r6\n.BB7_12:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB7_12\n.BB7_30:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB7_14\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB7_14:\n\tadd\t@CPI7_2[0], r0, r1\n\tsub.s!\t@CPI7_2[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nfun_getVestingClaimable:\n.func_begin8:\n\tnop\tstack+=[11]\n\tadd\tr2, r0, stack-[11]\n\tld.1\t64, r8\n\tsub.s!\t@CPI8_0[0], r8, r2\n\tjump.ge\t@.BB8_1\n\tadd\t160, r8, r2\n\tst.1\t64, r2\n\tadd\t1, r0, r2\n\tadd\tr2, r0, stack-[1]\n\tsload\tr2, r2\n\tst.1.inc\tr8, r2, r3\n\tadd\t2, r0, r2\n\tsload\tr2, r2\n\tadd\tr3, r0, stack-[7]\n\tst.1\tr3, r2\n\tadd\t64, r8, r3\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tadd\tr3, r0, stack-[8]\n\tst.1\tr3, r2\n\tadd\t4, r0, r2\n\tsload\tr2, r4\n\tld.1\t64, r2\n\tst.1.inc\tr2, r4, r3\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB8_6\n\tadd\t@CPI8_1[0], r0, r5\n\tadd\tr0, r0, r6\n.BB8_5:\n\tsload\tr5, r7\n\tst.1.inc\tr3, r7, r3\n\tadd\t1, r5, r5\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB8_5\n.BB8_6:\n\tsub\tr3, r2, r3\n\tadd\t31, r3, r3\n\tsub.s\t32, r0, stack-[5]\n\tand\tstack-[5], r3, r4\n\tadd\tr4, r2, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI8_2[0], r3, r5\n\tjump.gt\t@.BB8_1\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB8_1\n\tst.1\t64, r3\n\tadd\t96, r8, r3\n\tst.1\tr3, r2\n\tadd\tr8, r0, stack-[10]\n\tadd\t128, r8, r3\n\tadd\t5, r0, r2\n\tsload\tr2, r2\n\tand!\t255, r2, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\tr3, r0, stack-[6]\n\tst.1\tr3, r2\n\tand\t@CPI8_3[0], r1, r1\n\tadd\tr1, r0, stack-[9]\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_9\n\tld\tr1, r4\n\tsload\tr4, r1\n\tsub!\tr1, r0, r2\n\tadd\tstack-[10], r0, r3\n\tjump.eq\t@.BB8_21\n\tld.1\t64, r3\n\tsub.s!\t@CPI8_6[0], r3, r2\n\tjump.gt\t@.BB8_1\n\tadd\t160, r3, r2\n\tst.1\t64, r2\n\tst.1.inc\tr3, r1, r2\n\tadd\t1, r4, r1\n\tsload\tr1, r1\n\tadd\tr2, r0, stack-[7]\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[10]\n\tadd\t64, r3, r2\n\tadd\t2, r4, r1\n\tsload\tr1, r1\n\tadd\tr2, r0, stack-[8]\n\tst.1\tr2, r1\n\tadd\tr4, r0, stack-[6]\n\tadd\t3, r4, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[4]\n\tadd\tr3, r0, stack-[2]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r1\n\tadd\t@CPI8_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_9\n\tadd\tstack-[2], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tstack-[3], r0, r4\n\tjump.eq\t@.BB8_18\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB8_17:\n\tsload\tr1, r3\n\tst.1.inc\tr4, r3, r4\n\tadd\t1, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r3\n\tjump.lt\t@.BB8_17\n.BB8_18:\n\tadd\tstack-[4], r0, r5\n\tsub\tr4, r5, r1\n\tadd\t31, r1, r1\n\tand\tstack-[5], r1, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI8_2[0], r1, r3\n\tadd\tstack-[10], r0, r3\n\tadd\tstack-[6], r0, r4\n\tjump.gt\t@.BB8_1\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB8_1\n\tst.1\t64, r1\n\tadd\t96, r3, r1\n\tst.1\tr1, r5\n\tadd\t4, r4, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\t128, r3, r2\n\tadd\tr2, r0, stack-[6]\n\tst.1\tr2, r1\n.BB8_21:\n\tld.1\tr3, r1\n\tsub.s!\tstack-[11], r1, r1\n\tjump.le\t@.BB8_22\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\t16, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_4[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_4[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_9\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_4[0], r1, r2\n\tadd.ge\t@CPI8_4[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_9\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\tr0, r0, r2\n\tadd\tstack-[11], r0, r5\n\tjump.ne\t@.BB8_12\n\tadd\t6, r0, r1\n\tsload\tr1, r1\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB8_40\n\tadd\tstack-[8], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB8_28\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB8_30\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r3\n\tmul\tr3, r5, r2, r4\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB8_38\n\tdiv\tr2, r3, r3, r4\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB8_30\n.BB8_38:\n\tadd\tr2, r1, stack-[11]\n\tsub!\tstack-[11], r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB8_30\n\tadd\t@CPI8_10[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI8_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tjump\t@.BB8_33\n.BB8_40:\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r2\n\tadd\tstack-[1], r0, r2\n\tjump.ne\t@.BB8_12\n\tadd\tstack-[8], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB8_42\n\tadd\tr2, r1, stack-[11]\n\tsub!\tstack-[11], r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB8_30\n\tadd\t@CPI8_10[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI8_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tjump\t@.BB8_33\n.BB8_28:\n\tadd\t1, r5, r3\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r4\n\tmul\tr4, r3, r2, r5\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB8_31\n\tdiv\tr2, r4, r4, r5\n\tsub!\tr4, r3, r3\n\tjump.ne\t@.BB8_30\n.BB8_31:\n\tadd\tr2, r1, stack-[11]\n\tsub!\tstack-[11], r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB8_30\n\tadd\t@CPI8_10[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI8_4[0], r0, r1\n\tcontext.gas_left\tr2\n.BB8_33:\n\tsub.s!\t@CPI8_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_11[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_34\n\tld\tr1, r1\n\tsub.s!\tstack-[11], r1, r1\n\tadd\t0, r0, r2\n\tadd.ge\t1, r0, r2\n.BB8_12:\n\tand\t1, r2, r1\n\tret\n.BB8_42:\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r1, stack-[11]\n\tsub!\tstack-[11], r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB8_30\n\tadd\t@CPI8_10[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI8_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tjump\t@.BB8_33\n.BB8_9:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_1:\n\tadd\t@CPI8_12[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB8_2:\n\tst.1\t4, r1\n\tadd\t@CPI8_13[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_22:\n\tld.1\t64, r1\n\tadd\t@CPI8_8[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI8_4[0], r0, r2\n\tsub.s!\t@CPI8_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_9[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_30:\n\tadd\t@CPI8_12[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB8_2\n.BB8_34:\n\trevert\n.func_end8:\n\nmodifier_notZeroAddress_37971:\n.func_begin9:\n\tnop\tstack+=[7]\n\tld.1\t64, r7\n\tand!\t@CPI9_0[0], r1, stack-[3]\n\tjump.eq\t@.BB9_1\n\tsub.s!\t@CPI9_1[0], r7, r1\n\tjump.ge\t@.BB9_3\n\tadd\t160, r7, r1\n\tst.1\t64, r1\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tst.1.inc\tr7, r1, r1\n\tadd\t2, r0, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t64, r7, r1\n\tadd\t3, r0, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t4, r0, r1\n\tsload\tr1, r3\n\tld.1\t64, r1\n\tst.1.inc\tr1, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB9_8\n\tadd\t@CPI9_2[0], r0, r4\n\tadd\tr0, r0, r5\n.BB9_7:\n\tsload\tr4, r6\n\tst.1.inc\tr2, r6, r2\n\tadd\t1, r4, r4\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB9_7\n.BB9_8:\n\tsub\tr2, r1, r2\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, stack-[7]\n\tand\tstack-[7], r2, r3\n\tadd\tr3, r1, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI9_3[0], r2, r4\n\tjump.gt\t@.BB9_3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB9_3\n\tst.1\t64, r2\n\tadd\t96, r7, r2\n\tst.1\tr2, r1\n\tadd\tr7, r0, stack-[4]\n\tadd\t128, r7, r1\n\tadd\t5, r0, r2\n\tsload\tr2, r2\n\tand!\t255, r2, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI9_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_11\n\tld\tr1, r4\n\tsload\tr4, r1\n\tsub!\tr1, r0, r2\n\tadd\tstack-[4], r0, r3\n\tjump.eq\t@.BB9_21\n\tld.1\t64, r3\n\tsub.s!\t@CPI9_6[0], r3, r2\n\tjump.gt\t@.BB9_3\n\tadd\t160, r3, r2\n\tst.1\t64, r2\n\tst.1.inc\tr3, r1, r1\n\tadd\t1, r4, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\tr3, r0, stack-[4]\n\tadd\t64, r3, r1\n\tadd\t2, r4, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\tr4, r0, stack-[6]\n\tadd\t3, r4, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[5]\n\tadd\tr3, r0, stack-[1]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\t@CPI9_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI9_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_11\n\tadd\tstack-[1], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tstack-[2], r0, r4\n\tjump.eq\t@.BB9_18\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB9_17:\n\tsload\tr1, r3\n\tst.1.inc\tr4, r3, r4\n\tadd\t1, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r3\n\tjump.lt\t@.BB9_17\n.BB9_18:\n\tadd\tstack-[5], r0, r5\n\tsub\tr4, r5, r1\n\tadd\t31, r1, r1\n\tand\tstack-[7], r1, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI9_3[0], r1, r3\n\tadd\tstack-[4], r0, r3\n\tadd\tstack-[6], r0, r4\n\tjump.gt\t@.BB9_3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB9_3\n\tst.1\t64, r1\n\tadd\t96, r3, r1\n\tst.1\tr1, r5\n\tadd\t4, r4, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\t128, r3, r2\n\tst.1\tr2, r1\n.BB9_21:\n\tld.1\tr3, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, r5\n\tjump.eq\t@.BB9_28\n\tadd\t16, r0, stack-[2]\n\tadd\t@CPI9_4[0], r0, r4\n\tadd\t32784, r0, r2\n\tadd\tr0, r0, r1\n\tadd\tr0, r0, r5\n\tadd\tr3, r0, stack-[4]\n\tadd\tr2, r0, stack-[6]\n.BB9_24:\n\tadd\tr1, r0, stack-[7]\n\tadd\tr5, r0, stack-[5]\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_4[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_5[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_11\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_4[0], r1, r2\n\tadd.ge\t@CPI9_4[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_5[0], r1, r1\n\tadd\tstack-[6], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_11\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\tstack-[7], r0, r6\n\tadd\tr6, r0, r5\n\tadd.eq\tstack-[5], r0, r5\n\tadd\t1, r6, r6\n\tadd\tstack-[4], r0, r3\n\tld.1\tr3, r1\n\tsub!\tr6, r1, r1\n\tadd\t@CPI9_4[0], r0, r4\n\tadd\tstack-[6], r0, r2\n\tadd\tr6, r0, r1\n\tjump.lt\t@.BB9_24\n\tsub.s\t1, r0, r1\n\tsub!\tr5, r1, r1\n\tjump.eq\t@.BB9_27\n.BB9_28:\n\tadd\t1, r5, r1\n\tret\n.BB9_11:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_3:\n\tadd\t@CPI9_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB9_4:\n\tst.1\t4, r1\n\tadd\t@CPI9_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_1:\n\tadd\t@CPI9_10[0], r0, r1\n\tst.1\tr7, r1\n\tadd\t@CPI9_4[0], r0, r1\n\tsub.s!\t@CPI9_4[0], r7, r2\n\tadd.ge\tr1, r0, r7\n\tshl.s\t64, r7, r1\n\tor\t@CPI9_11[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_27:\n\tadd\t@CPI9_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB9_4\n.func_end9:\n\nfun_notZeroAddress.4:\n.func_begin10:\n\tand!\t@CPI10_0[0], r1, r1\n\tjump.eq\t@.BB10_1\n\tret\n.BB10_1:\n\tld.1\t64, r1\n\tadd\t@CPI10_1[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI10_2[0], r0, r2\n\tsub.s!\t@CPI10_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI10_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\n__cxa_throw:\n\trevert\n\n__sha3:\n.func_begin11:\n\tadd\t@CPI12_0[0], r0, r3\n\tsub.s!\t@CPI12_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI12_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_2\n\tld\tr1, r1\n\tret\n.BB12_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\n__farcall:\n.func_begin12:\n.tmp0:\n\tfar_call\tr1, r2, @.BB13_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB13_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end12:\n\n__staticcall:\n.func_begin13:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB14_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB14_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end13:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI3_0:\nCPI4_0:\nCPI5_0:\nCPI6_4:\nCPI7_2:\nCPI8_4:\nCPI9_4:\nCPI10_2:\nCPI12_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -18446744073709551457\nCPI0_2:\n\t.cell -18446744073709551489\nCPI0_3:\n\t.cell 8589934560\nCPI0_4:\nCPI2_0:\nCPI5_2:\nCPI6_3:\nCPI7_4:\nCPI8_2:\nCPI9_3:\n\t.cell 18446744073709551615\nCPI0_5:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_6:\n\t.cell 18446744073709551519\nCPI0_7:\n\t.cell 18446744073709551359\nCPI0_8:\nCPI6_6:\nCPI8_6:\nCPI9_6:\n\t.cell 18446744073709551455\nCPI0_9:\nCPI4_2:\nCPI6_0:\nCPI7_1:\nCPI8_3:\nCPI9_0:\nCPI10_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_10:\n\t.cell 18446744073709551551\nCPI0_11:\n\t.cell 44526186701075355232631374653616046072493505541712997730802846168811969624347\nCPI0_12:\n\t.cell 8413219402807569600188236340312512697289764467612919156476723688445633815682\nCPI0_13:\nCPI4_3:\nCPI12_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_14:\n\t.cell -30089899419605041018653467143256047862277360661533364420289869028242106941185\nCPI0_15:\n\t.cell -14680205516121397737035688839673284388258461471861438888035447495382811677630\nCPI0_16:\nCPI3_1:\nCPI4_1:\nCPI6_5:\nCPI8_5:\nCPI9_5:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_17:\n\t.cell 8413219402807569600188236340312512697289764467612919156476723688445633815681\nCPI0_18:\n\t.cell 21498167346302451094516930465084812798900530214793017313261708129848854408973\nCPI0_19:\n\t.cell 41951636634120538608643499135161621920062445191352822996721339533853370279351\nCPI0_20:\nCPI6_2:\nCPI8_1:\nCPI9_2:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI0_21:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_22:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_23:\n\t.cell 18457842087669267078745905534306278950895359806081545934687301794307636199424\nCPI0_24:\nCPI6_11:\nCPI7_3:\nCPI8_9:\nCPI9_11:\nCPI10_3:\n\t.cell 316912650057057350374175801344\nCPI0_25:\n\t.cell 17713933852887379431334077066978788449950929452687385889564686577376096681984\nCPI0_26:\n\t.cell 2458482847\nCPI0_27:\n\t.cell 3483430755\nCPI0_28:\n\t.cell 3835652148\nCPI0_29:\n\t.cell 3983427015\nCPI0_30:\n\t.cell 3983427016\nCPI0_31:\n\t.cell 4262297535\nCPI0_32:\n\t.cell 4268170204\nCPI0_33:\n\t.cell 3835652149\nCPI0_34:\n\t.cell 3887470205\nCPI0_35:\n\t.cell 3917865831\nCPI0_36:\n\t.cell 3673606703\nCPI0_37:\n\t.cell 3673606704\nCPI0_38:\n\t.cell 3810419417\nCPI0_39:\n\t.cell 3833642361\nCPI0_40:\n\t.cell 3483430756\nCPI0_41:\n\t.cell 3578229791\nCPI0_42:\n\t.cell 3639855517\nCPI0_43:\n\t.cell 2743049508\nCPI0_44:\n\t.cell 3119362980\nCPI0_45:\n\t.cell 3119362981\nCPI0_46:\n\t.cell 3210349657\nCPI0_47:\n\t.cell 3448118806\nCPI0_48:\n\t.cell 2743049509\nCPI0_49:\n\t.cell 2895623191\nCPI0_50:\n\t.cell 2906792647\nCPI0_51:\n\t.cell 2590523468\nCPI0_52:\n\t.cell 2590523469\nCPI0_53:\n\t.cell 2612237744\nCPI0_54:\n\t.cell 2719481311\nCPI0_55:\n\t.cell 2458482848\nCPI0_56:\n\t.cell 2567152833\nCPI0_57:\n\t.cell 1016069219\nCPI0_58:\n\t.cell 1673021290\nCPI0_59:\n\t.cell 2125556417\nCPI0_60:\n\t.cell 2125556418\nCPI0_61:\n\t.cell 2236129059\nCPI0_62:\n\t.cell 2446411860\nCPI0_63:\n\t.cell 1673021291\nCPI0_64:\n\t.cell 1967262873\nCPI0_65:\n\t.cell 2020295766\nCPI0_66:\n\t.cell 1357864265\nCPI0_67:\n\t.cell 1357864266\nCPI0_68:\n\t.cell 1410385787\nCPI0_69:\n\t.cell 1450811629\nCPI0_70:\n\t.cell 1016069220\nCPI0_71:\n\t.cell 1041253311\nCPI0_72:\n\t.cell 659401561\nCPI0_73:\n\t.cell 791671132\nCPI0_74:\n\t.cell 791671133\nCPI0_75:\n\t.cell 860531185\nCPI0_76:\n\t.cell 911641278\nCPI0_77:\n\t.cell 659401562\nCPI0_78:\n\t.cell 705350762\nCPI0_79:\n\t.cell 770580456\nCPI0_80:\n\t.cell 396847444\nCPI0_81:\n\t.cell 396847445\nCPI0_82:\n\t.cell 449309429\nCPI0_83:\n\t.cell 613063843\nCPI0_84:\n\t.cell 33540519\nCPI0_85:\n\t.cell 293077987\nCPI0_86:\n\t.cell 2535301200456458802993406410752\nCPI0_87:\n\t.cell 10141204804187018453408448249856\nCPI0_88:\nCPI6_8:\n\t.cell 42757517095836684177699744694294851048596585948213704327840912546326657368064\nCPI0_89:\n\t.cell 2852213852874699394802404818944\nCPI0_90:\n\t.cell -55294475062268888810449708231957100328174499445208908168568842847851244421120\nCPI0_91:\n\t.cell -21960446842487824301771124168671232642066040127636187161503052427765397585920\nCPI0_92:\nCPI2_2:\nCPI5_4:\nCPI6_9:\nCPI7_6:\nCPI8_13:\nCPI9_9:\n\t.cell 2852213850513516153367582212096\nCPI0_93:\n\t.cell -52231721109406334262607207492727464561914180946705116973186840625811965345792\nCPI0_94:\n\t.cell 21283588911705326978650385586543672921274388256083795886520406247046406733824\nCPI0_95:\nCPI5_1:\nCPI6_7:\nCPI8_7:\nCPI9_7:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_96:\nCPI8_10:\n\t.cell 54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI0_97:\nCPI8_11:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_98:\n\t.cell 50942633119752846454219349998365661925608737367104304655302372697894809501696\nCPI0_99:\n\t.cell 904625697166532776746648320380374280103671767876822908840556390028853379072\nCPI0_100:\n\t.cell 25168313922976433252091944259812427883803312058541637912071202144028462372761\nCPI0_101:\n\t.cell -39341301877480157781710804024396230103289065588583741745104145964028735258624\nCPI0_102:\nCPI3_3:\n\t.cell 5387515050969974956360988622848\nCPI0_103:\n\t.cell -3508710104340800156913118926601560156733032189280569764859821357034798841856\nCPI0_104:\n\t.cell -13458040419443566167286873524056966647539233469708205850837245536836683563008\nCPI0_105:\n\t.cell 2535301202817642044428229017600\nCPI0_106:\n\t.cell -50696070756924364336457020773993750528305083574001756615265651885173323938739\nCPI0_107:\n\t.cell 3618502788666131106986593281521497120414687020801267626233049500247285301247\nCPI0_108:\n\t.cell 55908258888439490687397009675392891158854217734222922831766150975722282773426\nCPI0_109:\n\t.cell 5070602403274100847421635428352\nCPI0_110:\n\t.cell 7064578547391780212955069395993335051440390471585047499103589149117526310912\nCPI0_111:\n\t.cell 27079733184221454463238631200638595617439815717499029994813055488757964621526\nCPI0_112:\nCPI6_14:\nCPI9_10:\nCPI10_1:\n\t.cell 28485175212064900027977973286507733033835135331909752320915715833089423835136\nCPI0_113:\n\t.cell -18446744073709551616\nCPI0_114:\n\t.cell -18446744073709551328\nCPI0_115:\n\t.cell 43023108993396065300191577388039376974252951904557843819093205078258881658880\nCPI0_116:\n\t.cell -50897748448144840704297601698292810988187272462655271645098620135817248505856\nCPI0_117:\n\t.cell 904625697166532776746648320380374280103671770412124109297015193022259789824\nCPI0_118:\n\t.cell 27822940089151954843608024642206261719987464311680602490870584180884847311892\nCPI0_119:\n\t.cell 16248971977152067745479714433021436077455247120517519583585427220407924031488\nCPI0_120:\n\t.cell 33693013161885644677980431125412459218531037896352218946635655249119418320981\nCPI0_121:\n\t.cell -10202982703721186133375481262231479815802809617355664836760162685795530964992\nCPI0_122:\n\t.cell -15656161302665159201809893145089448837013829615782376627744606809190320570368\nCPI0_123:\n\t.cell 904625697166532776746648320380374280103671762806220507927638784042040557568\nCPI0_124:\n\t.cell 27690304740222275876197276413067377121231704720816925732524763382694276764827\nCPI0_125:\n\t.cell 16156842317565293874272834530371880720966471053262404558597773956279093428224\nCPI0_126:\n\t.cell 7922816251426433759354395033600\nCPI0_127:\n\t.cell 25465983248866914152518254688923763934895802425912479872710970748905268969472\nCPI0_128:\n\t.cell 52311555011316887405769734636471207440343477953317721806580174560896384761856\nCPI0_129:\n\t.cell 12676506004643477256401854660608\nCPI0_130:\n\t.cell -3691399358947945946935316323288138532064039858770667728206970733144858434822\nCPI0_131:\nCPI8_8:\n\t.cell 47515529668615697930788456545084891623119947194867843879179380243836367273984\nCPI0_132:\nCPI2_1:\nCPI5_3:\nCPI6_13:\nCPI7_5:\nCPI8_12:\nCPI9_8:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_133:\n\t.cell 19021756705703614278380082202815266790040879293685513387952428146258063533466\nCPI0_134:\n\t.cell 55431984216324797314421127753074413780386124353061787513427566849720150130688\nCPI0_135:\n\t.cell 316912652418240591808998408192\nCPI0_136:\n\t.cell 46403934321121769725732295381905508642689279562898648152983186649040421912576\nCPI0_137:\n\t.cell -35166683617401630231218045947999870575166915245740028103726742767110884069767\nCPI0_138:\n\t.cell -52766874028753274426233363142178672704313577740706715646393811206488134254592\nCPI0_139:\nCPI3_2:\n\t.cell -13425406428480953669539741299640702691354761304596208544390623898567197065216\nCPI0_140:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_141:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI0_142:\n\t.cell 54909818011127210282586622383458683342160741266077104324147033802515469565952\nCPI4_4:\n\t.cell -4422201763333249725673726406278620787883548942654356884866643620688883542245\nCPI6_1:\nCPI8_0:\nCPI9_1:\n\t.cell 18446744073709551456\nCPI6_10:\nCPI7_0:\n\t.cell 22270923681254677845691103109158760375340177724800803888364822332811285364736\nCPI6_12:\n\t.cell 3068813793994823331450427633544775342686093266729934484939724842722215854080\n","bytecode":{"object":"00030000000000020017000000000002000000000901034f000200000009035500000000010900190000006001100270000009ed0010019d0000008003000039001500000003001d000000400030043f000009ed011001970000000102200190000003410000c13d000000040210008c0000037e0000413d000000000209043b000000e00220027000000a070320009c000003800000a13d00000a080320009c000003910000a13d00000a090320009c000004300000213d00000a110320009c000004790000213d00000a150320009c000006e20000613d00000a160320009c00000caf0000613d00000a170220009c0000037e0000c13d0000000002000416000000000202004b0000037e0000c13d000000040210008a000000400220008c0000037e0000413d0000000402900370000000000202043b000009f10320009c0000037e0000213d0000002303200039000009f204000041000000000513004b00000000050000190000000005048019000009f203300197000000000603004b0000000004008019000009f20330009c000000000405c019000000000304004b0000037e0000c13d0000000403200039000000000339034f000000000303043b000c00000003001d000009f10330009c0000037e0000213d000b00240020003d0000000c0200002900000005022002100000000b02200029000000000212004b0000037e0000213d0000002402900370000000000202043b001200000002001d000009f10220009c0000037e0000213d00000012020000290000002302200039000009f203000041000000000412004b00000000040000190000000004038019000009f202200197000000000502004b0000000003008019000009f20220009c000000000304c019000000000203004b0000037e0000c13d00000012020000290000000402200039000000000229034f000000000202043b001700000002001d000009f10220009c0000037e0000213d0000001202000029001600240020003d000000170200002900000005022002100000001602200029000000000112004b0000037e0000213d0000000001000411000009f601100197001500000001001d0000000000100435000009fe01000041000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff01100190000000870000c13d0000001501000029000000000010043500000a0001000041000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff0110019000000f120000613d00000017020000290000000c0120006b0000190a0000c13d0000000c0100006b00000fda0000613d000000c30100008a000e001200100072000009f206000041000d00000000001d0000000d0100002900000005021002100010000b0020002d00000002030003670000001001300360000000000101043b000009f60410009c0000037e0000213d000000000401004b000005cf0000613d001100160020002d0000001102300360000000000402043b00000012020000290000000002200079000000c30220008a000000000324004b00000000030000190000000003068019000009f202200197001700000004001d000009f204400197000000000524004b00000000050000190000000005064019000000000224013f000009f20220009c000000000503c019000000000205004b0000037e0000c13d00000000001004350000000f01000039000f00000001001d000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003927ae27a90000040f000009f20900004100000001022001900000037e0000613d000000170300002900000016023000290000000203000367000000000423034f000000000404043b000000000501043b000000000045041b0000002001200039000000000113034f000000000101043b0000000104500039000000000014041b0000004001200039000000000113034f000000000101043b001500000005001d0000000204500039000000000014041b001400600020003d0000001401300360000000000401043b000000000100003100000000052100490000001f0550008a000000000654004b00000000060000190000000006098019000009f205500197000009f207400197000000000857004b00000000080000190000000008094019000000000557013f000009f20550009c000000000806c019000000000508004b0000037e0000c13d0000000002240019000000000323034f000000000303043b001700000003001d000009f10330009c0000037e0000213d0000001703000029000000050330021000000000013100490000002003200039000000000213004b00000000020000190000000002092019000009f201100197001300000003001d000009f203300197000000000413004b00000000040000190000000004094019000000000113013f000009f20110009c000000000402c019000000000104004b0000037e0000c13d00000015010000290000000304100039000000000204041a0000001701000029000000000014041b000000000112004b000001160000a13d000900000002001d000a00000004001d00000000004004350000000001000414000009ed0210009c000009ed01008041000000c00110021000000a4c011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000201043b00000017012000290000000902200029000000000321004b0000000a04000029000001160000813d000000000001041b0000000101100039000000000321004b000001120000413d00000000004004350000000001000414000009ed0210009c000009ed01008041000000c00110021000000a4c011001c7000080100200003927ae27a90000040f0000000102200190000009f2090000410000037e0000613d0000000202000367000000000101043b0000001706000029000000000306004b0000001307000029000001300000613d00000000030000190000000004130019000000000572034f000000000505043b000000000054041b00000020077000390000000103300039000000000463004b000001280000413d00000014010000290000002001100039000000000112034f000000000101043b000000000301004b0000000003000019000000010300c039000000000331004b0000037e0000c13d00000015030000290000000403300039000000000403041a000001000500008a000000000454016f000000000114019f000000000013041b0000001101200360000000000301043b0000000001000031000000120410006a000000c30440008a000000000543004b00000000050000190000000005098019000009f204400197000009f206300197000000000746004b00000000070000190000000007094019000000000446013f000009f20440009c000000000705c019000000000407004b0000037e0000c13d00000016033000290000006004300039000000000442034f00000000053100490000001f0550008a000000000404043b000000000654004b00000000060000190000000006098019000009f205500197000009f207400197000000000857004b00000000080000190000000008094019000000000557013f000009f20550009c000000000806c019000000000508004b0000037e0000c13d0000000005340019000000000352034f000000000403043b000009f10340009c0000037e0000213d000000050340021000000000063100490000002005500039000000000765004b00000000070000190000000007092019000009f206600197000009f205500197000000000865004b00000000080000190000000008094019000000000565013f000009f20550009c000000000807c019000000000508004b0000037e0000c13d0000003f05300039000000200600008a000000000565016f000000400600043d0000000005560019001700000006001d000000000665004b00000000060000190000000106004039000009f10750009c000003470000213d0000000106600190000003470000c13d000000400050043f000000170500002900000000084504360000000504300272000001960000613d000000000112034f000000000500001900000005065002100000000007680019000000000661034f000000000606043b00000000006704350000000105500039000000000645004b0000018e0000413d001500000008001d0000001f01300190000001990000613d0000001001200360000000000101043b000009f60210009c0000037e0000213d00000000001004350000000f01000029000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b00000017020000290000000002020433001700000002001d000009f10220009c000003470000213d0000000304100039000000000204041a0000001701000029000000000014041b000000000112004b000001cb0000a13d001300000002001d001400000004001d00000000004004350000000001000414000009ed0210009c000009ed01008041000000c00110021000000a4c011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000201043b00000017012000290000001302200029000000000321004b0000001404000029000001cb0000813d000000000001041b0000000101100039000000000321004b000001c70000413d00000000004004350000000001000414000009ed0210009c000009ed01008041000000c00110021000000a4c011001c7000080100200003927ae27a90000040f0000000102200190000009f20c0000410000037e0000613d000000000101043b0000001706000029000000000206004b0000001505000029000001e20000613d000000000200001900000000031200190000000054050434000000000043041b0000000102200039000000000362004b000001dc0000413d00000000020000310000000e0420002900000002010003670000001103100360000000000303043b000000000543004b000000000500001900000000050c8019000009f204400197000009f206300197000000000746004b000000000700001900000000070c4019000000000446013f000009f20440009c000000000705c019000000000407004b0000037e0000c13d001500000000001d000000000a0000190000001604300029000000000541034f000000000505043b00000000065a004b000002a60000813d0000006003400039000000000331034f00000000054200490000001f0550008a000000000303043b000000000653004b000000000600001900000000060c8019000009f205500197000009f207300197000000000857004b000000000800001900000000080c4019000000000557013f000009f20550009c000000000806c019000000000508004b0000037e0000c13d0000000004430019000000000341034f000000000303043b000009f10530009c0000037e0000213d000000050530021000000000055200490000002002400039000000000452004b000000000400001900000000040c2019000009f205500197000009f206200197000000000756004b000000000700001900000000070c4019000000000556013f000009f20550009c000000000704c019000000000407004b0000037e0000c13d00000000033a004b0000206a0000813d00000010031003600013000500a002180000001302200029000000000121034f000000000101043b001400000001001d000000000103043b000009f60210009c0000037e0000213d00000000001004350000000f01000029000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003900170000000a001d27ae27a90000040f000000170300002900000001022001900000037e0000613d000000000101043b0000000301100039000000000201041a000000000232004b0000206a0000a13d00000000001004350000000001000414000009ed0210009c000009ed01008041000000c00110021000000a4c011001c7000080100200003927ae27a90000040f000000170a000029000009f20c00004100000001022001900000037e0000613d000000000101043b0000000001a100190000001402000029000000000021041b0000000002000031000000120120006a000000c30410008a00000002010003670000001103100360000000000303043b000000000543004b000000000500001900000000050c8019000009f204400197000009f206300197000000000746004b000000000700001900000000070c4019000000000446013f000009f20440009c000000000705c019000000000407004b0000037e0000c13d00000016043000290000006005400039000000000551034f00000000064200490000001f0660008a000000000505043b000000000765004b000000000700001900000000070c8019000009f206600197000009f208500197000000000968004b000000000900001900000000090c4019000000000668013f000009f20660009c000000000907c019000000000609004b0000037e0000c13d0000000005450019000000000451034f000000000404043b000009f10640009c0000037e0000213d000000050640021000000000066200490000002005500039000000000765004b000000000700001900000000070c2019000009f206600197000009f208500197000000000968004b000000000900001900000000090c4019000000000668013f000009f20660009c000000000907c019000000000609004b0000037e0000c13d00000000044a004b0000206a0000813d0000001304500029000000000441034f000000000404043b001500150040002d000000150440006b00000000040000190000000104004039000000010440019000001a470000c13d0000000e04200029000000000543004b000000000500001900000000050c8019000009f204400197000009f206300197000000000746004b000000000700001900000000070c4019000000000446013f000009f20440009c000000000705c019000000010aa00039000000000407004b000001f60000613d0000037e0000013d0000001506000029000027100660008c00000c9c0000c13d0000001006100360000000000606043b000009f60760009c0000037e0000213d000000120720006a000000c30770008a000000000873004b000000000800001900000000080c8019000009f207700197000009f203300197000000000973004b000000000900001900000000090c4019000000000373013f000009f20330009c000000000908c019000000000309004b0000037e0000c13d00000000034200490000001f0830008a0000006007400039000000000371034f000000000303043b000000000983004b000000000900001900000000090c8019000009f208800197000009f20a300197000000000b8a004b000000000b000019000000000b0c401900000000088a013f000009f20880009c000000000b09c01900000000080b004b0000037e0000c13d0000000008430019000000000381034f000000000403043b000009f10340009c0000037e0000213d000000050340021000000000023200490000002008800039000000000928004b000000000900001900000000090c2019000009f202200197000009f20a800197000000000b2a004b000000000b000019000000000b0c401900000000022a013f000009f20220009c000000000b09c01900000000020b004b0000037e0000c13d000000400200043d000000600920003900000000005904350000002005200039000000600900003900000000009504350000000000620435000000400570008a000000000551034f000000000505043b00000080062000390000000000560435000000200770008a000000000571034f000000000505043b000000c006200039000000a0090000390000000000960435000000a0062000390000000000560435000000000581034f00000100062000390000000000460435000001200820003900000a5806400198000003060000613d0000000009000019000000050a900210000000000ba80019000000000aa5034f000000000a0a043b0000000000ab04350000000109900039000000000a69004b000002fe0000413d000000000900004b000003080000613d0000004007700039000000000171034f000000000101043b000000000701004b0000000007000019000000010700c039000000000771004b0000037e0000c13d000000e007200039000000000017043500000000013800190000000007210049000000400820003900000000007804350000000001410436000000000406004b000003220000613d000000000400001900000005074002100000000008710019000000000775034f000000000707043b00000000007804350000000104400039000000000764004b0000031a0000413d000000000400004b000003240000613d00000000032300490000000001130019000009ed0320009c000009ed0400004100000000020480190000004002200210000009ed0310009c00000000010480190000006001100210000000000121019f0000000002000414000009ed0320009c0000000002048019000000c002200210000000000112019f000009fa011001c70000800d02000039000000010300003900000a5c0400004127ae27a40000040f0000000101200190000009f2060000410000037e0000613d0000000d020000290000000102200039000d00000002001d0000000c0120006c000000900000413d00000fda0000013d0000000002000416000000000202004b0000037e0000c13d000009ee02100041000009ef0220009c0000034d0000213d00000a710100004100000000001004350000004101000039000000040010043f00000a4901000041000027b0000104300000009f02100039000009f002200197000000400020043f0000001f0210018f00000005031002720000035c0000613d00000000040000190000000505400210000000000659034f000000000606043b000000800550003900000000006504350000000104400039000000000534004b000003540000413d000000000402004b0000036b0000613d0000000503300210000000000439034f00000003022002100000008003300039000000000503043300000000052501cf000000000525022f000000000404043b0000010002200089000000000424022f00000000022401cf000000000252019f0000000000230435000000200210008c0000037e0000413d000000800200043d000009f10320009c0000037e0000213d000000800410003900000080052000390000000001540049000009f203000041000001000610008c00000000060000190000000006034019000009f207100197000000000807004b000000000300a019000009f20770009c000000000306c019000000000303004b000005230000613d0000000001000019000027b00001043000000a260320009c000003ac0000213d00000a350320009c0000044b0000a13d00000a360320009c000004f20000213d00000a3a0320009c00000d4b0000613d00000a3b0120009c00000ede0000613d00000a3c0120009c0000037e0000c13d0000000001000416000000000101004b0000037e0000c13d000000080100003900000d5b0000013d00000a180320009c0000043d0000a13d00000a190320009c000004980000213d00000a1d0320009c00000bba0000613d00000a1e0320009c00000ea50000613d00000a1f0220009c0000037e0000c13d0000000002000416000000000202004b0000037e0000c13d000000040110008a000000200110008c0000037e0000413d0000000401900370000000000101043b000009f60210009c0000037e0000213d00000000001004350000001101000039000000200010043f0000004002000039000000000100001927ae278e0000040f00000b7f0000013d00000a270320009c000004620000a13d00000a280320009c000005080000213d00000a2c0320009c00000d570000613d00000a2d0320009c00000ee30000613d00000a2e0220009c0000037e0000c13d0000000002000416000000000202004b0000037e0000c13d000000040110008a000000200110008c0000037e0000413d0000000401900370000000000101043b001500000001001d000009f60110009c0000037e0000213d000000150100006b00000fc10000613d0000012001000039000000400010043f0000000102000039000000000202041a000000800020043f0000000202000039000000000202041a000000a00020043f0000000302000039000000000202041a000000c00020043f00000140030000390000000402000039000000000202041a000001200020043f000000000402004b000003e40000613d00000a0103000041000001400400003900000000050000190000000006040019000000000403041a000000000446043600000001033000390000000105500039000000000725004b000003d70000413d0000003f02600039000000200300008a000000000332016f00000a5e0230004100000a5f0220009c000003470000413d000000400030043f000000e00010043f0000000501000039000000000101041a000000ff011001900000000001000019000000010100c039000001000010043f000000150100002900000000001004350000000f01000039000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d0000008003000039000000000401043b000000000104041a000000000201004b0000128b0000c13d0000000001030433000000000101004b00000000010000190000042e0000613d001400000003001d001300100000003d001680100000003d001700000000001d000000150100002900000000001004350000001301000029000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000000160200002927ae27a90000040f00000001022001900000037e0000613d000000000101043b00000017020000290000000000200435000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000000160200002927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff011001900000042b0000c13d0000001703000029001700010030003d00000014020000290000000002020433000000170220006b000004070000413d000000000101004b0000000001000019000000010100c039000000010110018f00000ed60000013d00000a0a0320009c000004860000213d00000a0e0320009c000008b80000613d00000a0f0320009c00000cca0000613d00000a100120009c0000037e0000c13d0000000001000416000000000101004b0000037e0000c13d000000120100003900000d5b0000013d00000a200320009c000005d20000a13d00000a210320009c00000b3e0000613d00000a220320009c00000de90000613d00000a230120009c0000037e0000c13d0000000001000416000000000101004b0000037e0000c13d000000800000043f00000a5601000041000027af0001042e00000a3d0320009c0000061c0000a13d00000a3e0320009c00000b7b0000613d00000a3f0320009c00000e1f0000613d00000a400220009c0000037e0000c13d0000000002000416000000000202004b0000037e0000c13d000000040110008a000000200110008c0000037e0000413d0000000401900370000000000101043b0000000000100435000000200000043f0000004002000039000000000100001927ae278e0000040f000000010110003900000b7f0000013d00000a2f0320009c000006250000a13d00000a300320009c00000b810000613d00000a310320009c00000e490000613d00000a320220009c0000037e0000c13d0000000002000416000000000202004b0000037e0000c13d000000040110008a000000400110008c0000037e0000413d0000000401900370000000000101043b000009f60210009c0000037e0000213d0000002402900370000000000202043b27ae25720000040f000000000101004b00000dcd0000013d00000a120320009c000009630000613d00000a130320009c00000d0c0000613d00000a140120009c0000037e0000c13d0000000001000416000000000101004b0000037e0000c13d0000000e01000039000000000101041a0000000d0200003900000e1a0000013d00000a0b0320009c000009680000613d00000a0c0320009c00000d2b0000613d00000a0d0220009c0000037e0000c13d0000000002000416000000000202004b0000037e0000c13d000000040110008a000000400110008c0000037e0000413d0000000401900370000000000101043b0000002402900370000000000202043b27ae24d10000040f00000ed60000013d00000a1a0320009c00000c9f0000613d00000a1b0320009c00000ecb0000613d00000a1c0220009c0000037e0000c13d0000000002000416000000000202004b0000037e0000c13d000000040110008a000000200110008c0000037e0000413d0000000401900370000000000101043b001400000001001d000009f60110009c0000037e0000213d000000140100006b00000fc10000613d0000012001000039000000400010043f0000000102000039000000000202041a000000800020043f0000000202000039000000000202041a000000a00020043f0000000302000039000000000202041a000000c00020043f00000140030000390000000402000039000000000202041a000001200020043f000000000402004b000004cc0000613d00000a0103000041000001400400003900000000050000190000000006040019000000000403041a000000000446043600000001033000390000000105500039000000000725004b000004bf0000413d0000003f02600039000000200300008a000000000332016f00000a5e0230004100000a5f0220009c000003470000413d000000400030043f000000e00010043f0000000501000039000000000101041a000000ff011001900000000001000019000000010100c039000001000010043f000000140100002900000000001004350000000f01000039000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d001000e00000003d000000000301043b000000000103041a000000000201004b000012410000c13d000000140100002927ae21510000040f001100000001001d00000015010000290000000001010433000000000101004b001200000000001d000014b20000c13d000000400100043d000000120200002900000fdc0000013d00000a370320009c00000d600000613d00000a380320009c00000f1b0000613d00000a390220009c0000037e0000c13d0000000002000416000000000202004b0000037e0000c13d000000040110008a000000400110008c0000037e0000413d0000002401900370000000000101043b000009f60210009c0000037e0000213d0000000002000411000000000121004b00000ff20000c13d0000000401900370000000000101043b00000cc70000013d00000a290320009c00000dac0000613d00000a2a0320009c00000fb40000613d00000a2b0220009c0000037e0000c13d0000000002000416000000000202004b0000037e0000c13d000000040110008a000000400110008c0000037e0000413d0000002401900370000000000101043b001700000001001d000009f60110009c0000037e0000213d0000000401900370000000000101043b0000000000100435000000200000043f0000004002000039001600000002001d000000000100001927ae278e0000040f000000170200002900000d210000013d000000400300043d001700000003001d000009f30330009c000003470000213d00000017030000290000006003300039000000400030043f0000000006050433000009f10760009c0000037e0000213d00000000055600190000000006540049000009f207000041000000a00860008c00000000080000190000000008074019000009f206600197000000000906004b000000000700a019000009f20660009c000000000708c019000000000607004b0000037e0000c13d0000001706000029000009f40660009c000003470000213d00000017080000290000010006800039000000400060043f00000000760504340000000000630435000000000607043300000080078000390000000000670435000000a00680003900000040075000390000000007070433000000000076043500000060065000390000000006060433000009f10760009c0000037e0000213d00000000065600190000001f07600039000000000747004b0000037e0000813d0000000068060434000009f10780009c000003470000213d00000005098002100000003f079000390016002000000092000000160a70017f000000400700043d000000000aa70019000000000b7a004b000000000b000019000000010b004039000009f10ca0009c000003470000213d000000010bb00190000003470000c13d0000004000a0043f00000000008704350000000009690019000000000449004b0000037e0000213d000000000408004b0000056e0000613d0000000004070019000000200440003900000000680604340000000000840435000000000896004b000005690000413d0000001704000029000000c004400039000000000074043500000080045000390000000004040433000000000504004b0000000005000019000000010500c039000000000554004b0000037e0000c13d00000017050000290000000003350436001500000003001d000000e0035000390000000000430435000000200310008a000009f204000041000000a00530008c00000000050000190000000005044019000009f203300197000000000603004b000000000400a019000009f20330009c000000000405c019000000000304004b0000037e0000c13d000000400300043d000009f50430009c000003470000213d000000a004300039000000400040043f000000a0042000390000000004040433000009f60540009c0000037e0000213d0000000004430436000000c0052000390000000005050433000009f60650009c0000037e0000213d0000000000540435000000e0042000390000000004040433000009f60540009c0000037e0000213d0000004005300039000000000045043500000100042000390000000004040433000009f60540009c0000037e0000213d0000006005300039000000000045043500000120042000390000000004040433000009f60540009c0000037e0000213d0000008005300039000000000045043500000015040000290000000000340435000000400300008a000000000131016f000000c00110008c0000037e0000613d000000400100043d000009f70310009c000003470000213d0000004003100039000000400030043f00000140032000390000000003030433000000000331043600000160022000390000000002020433000000000023043500000017020000290000004002200039001300000002001d0000000000120435000000150100002900000000010104330000000023010434000009f603300198000005cf0000613d0000000002020433000009f602200198000005cf0000613d00000060021000390000000002020433000009f602200198000005cf0000613d00000080011000390000000001010433000009f60110019800001d7c0000c13d000000400100043d00000a5d0200004100000f140000013d00000a240320009c00000dd00000613d00000a250220009c0000037e0000c13d0000000002000416000000000202004b0000037e0000c13d000000040110008a000000200110008c0000037e0000413d0000000401900370000000000101043b001500000001001d0000000001000411001700000001001d000009f601100197001600000001001d0000000000100435000009fe01000041000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff01100190000006060000c13d0000001601000029000000000010043500000a0001000041000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff0110019000000f120000613d0000001201000039000000000201041a000000400a00043d00000a670100004100000000001a04350000000401a00039000000170300002900000000003104350000002401a000390000000003000410001300000003001d00000000003104350000000001000414000009f602200197000000040320008c001400000002001d000010520000c13d0000000103000031000000200130008c00000000040300190000002004008039000010820000013d00000a410320009c00000e020000613d00000a420120009c0000037e0000c13d0000000001000416000000000101004b0000037e0000c13d000009f80100004100000d5d0000013d00000a330320009c00000e140000613d00000a340220009c0000037e0000c13d0000000002000416000000000202004b0000037e0000c13d000000040110008a000000200110008c0000037e0000413d0000000401900370000000000101043b001400000001001d000009f60110009c0000037e0000213d000000140100006b00000fc10000613d0000012001000039000000400010043f0000000102000039001700000002001d000000000202041a000000800020043f0000000202000039001600000002001d000000000202041a000000a00020043f0000000302000039001500000002001d000000000202041a000000c00020043f00000140030000390000000402000039001200000002001d000000000202041a000001200020043f000000000402004b0000065b0000613d00000a0103000041000001400400003900000000050000190000000006040019000000000403041a000000000446043600000001033000390000000105500039000000000725004b0000064e0000413d0000003f02600039000000200300008a000000000332016f00000a5e0230004100000a5f0220009c000003470000413d000000400030043f000000e00010043f0000000501000039001100000001001d000000000101041a000000ff011001900000000001000019000000010100c039000001000010043f000000140100002900000000001004350000000f01000039001000000001001d000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000e00a00000003d000f00c00000003d0000010003000039000000000401043b000000000104041a000000000201004b000011f60000c13d000d00000003001d000000400100043d001300000001001d000009f50110009c000003470000213d0000001303000029000000a001300039000000400010043f0000001701000029000000000101041a00000000011304360000001602000029000000000202041a000000000021043500000040013000390000001502000029000000000202041a00000000002104350000001201000029000000000301041a000000400100043d0000000002310436000000000403004b0000069a0000613d00000a01040000410000000005000019000000000604041a000000000262043600000001044000390000000105500039000000000635004b000006940000413d00000000021200490000001f022000390017002000000092000000170320017f0000000002130019000000000332004b00000000030000190000000103004039000009f10420009c000003470000213d0000000103300190000003470000c13d000000400020043f00000013030000290000006002300039000000000012043500000080013000390000001102000029000000000202041a000000ff022001900000000002000019000000010200c0390000000000210435000000140100002900000000001004350000001001000029000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b001600000001001d000000000101041a000000000201004b000019f50000c13d00000013010000290000000001010433000000000101004b001600000000001d00001a4b0000c13d0000000601000039000000000101041a0000000f020000290000000003020433000000160200002900000001022000390000000d040000290000000004040433000000000404004b00001b0c0000c13d000000000403004b00001b820000c13d0000000e030000290000000003030433000000000403004b00000ed60000613d00000000542300a900000000353400d90000000001140019000000000341004b00000000030000190000000103004039000000000225004b00001b1a0000613d00001a470000013d0000000002000416000000000202004b0000037e0000c13d000000040210008a000000400220008c0000037e0000413d0000000402900370000000000202043b001700000002001d000009f60220009c0000037e0000213d0000002402900370000000000202043b000009f10320009c0000037e0000213d00000004042000390000000002410049000009f203000041000000a00520008c00000000050000190000000005034019000009f202200197000000000602004b000000000300a019000009f20220009c000000000305c019000000000203004b0000037e0000c13d0000012002000039000000400020043f000000000349034f000000000303043b000000800030043f0000002003400039000000000339034f000000000303043b000000a00030043f0000004003400039000000000339034f000000000303043b000000c00030043f0000006003400039000000000539034f000000000505043b000009f10650009c0000037e0000213d00000000044500190000001f05400039000000000515004b0000037e0000813d000000000549034f000000000605043b000009f10560009c000003470000213d00000005056002100000015f075000390016002000000092000000160770017f000009f10870009c000003470000213d000000400070043f000001200060043f00000020044000390000000005450019000000000115004b0000037e0000213d000000000106004b0000072d0000613d000000000149034f000000000101043b000000200220003900000000001204350000002004400039000000000154004b000007260000413d0000012001000039000000e00010043f0000002001300039000000000119034f000000000101043b000000000201004b0000000002000019000000010200c039000000000221004b0000037e0000c13d000001000010043f0000000001000411000009f601100197001500000001001d0000000000100435000009fe01000041000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff011001900000075e0000c13d0000001501000029000000000010043500000a0001000041000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff0110019000000f120000613d0000001701000029000009f601100197001200000001001d00000000001004350000000f01000039001100000001001d000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000301043b000000800100043d000000000013041b0000000101300039000000a00200043d000000000021041b001500000003001d0000000201300039000000c00200043d000000000021041b000000e00100043d001400000001001d0000000001010433001700000001001d000009f10110009c000003470000213d00000015010000290000000302100039000000000302041a0000001701000029001300000002001d000000000012041b001000000003001d000000000113004b0000079d0000a13d00000013010000290000000000100435000009ed010000410000000002000414000009ed0320009c0000000002018019000000c00120021000000a4c011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000201043b00000017012000290000001002200029000000000321004b0000079d0000813d000000000001041b0000000101100039000000000321004b000007990000413d00000013010000290000000000100435000009ed010000410000000002000414000009ed0320009c0000000002018019000000c00120021000000a4c011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b0000001706000029000000000206004b0000001405000029000007b60000613d0000000002000019000000000312001900000020055000390000000004050433000000000043041b0000000102200039000000000362004b000007af0000413d00000015010000290000000401100039000000000201041a000001000300008a000000000232016f000001000300043d000000000303004b000000010220c1bf000000000021041b000000e00100043d0000000001010433000009f10210009c000003470000213d00000005021002100000003f03200039000000160330017f000000400400043d0000000003340019001700000004001d000000000443004b00000000040000190000000104004039000009f10530009c000003470000213d0000000104400190000003470000c13d000000400030043f000000170300002900000000071304360000001f0120018f0000000502200272000007e10000613d00000000030000310000000203300367000000000400001900000005054002100000000006570019000000000553034f000000000505043b00000000005604350000000104400039000000000524004b000007d90000413d001600000007001d000000000101004b000007e40000613d000000120100002900000000001004350000001101000029000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b00000017020000290000000002020433001700000002001d000009f10220009c000003470000213d0000000302100039000000000302041a0000001701000029001500000002001d000000000012041b001400000003001d000000000113004b000008150000a13d00000015010000290000000000100435000009ed010000410000000002000414000009ed0320009c0000000002018019000000c00120021000000a4c011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000201043b00000017012000290000001402200029000000000321004b000008150000813d000000000001041b0000000101100039000000000321004b000008110000413d00000015010000290000000000100435000009ed010000410000000002000414000009ed0320009c0000000002018019000000c00120021000000a4c011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b0000001706000029000000000206004b00000016050000290000082d0000613d000000000200001900000000031200190000000054050434000000000043041b0000000102200039000000000362004b000008270000413d000000800100043d000000000101004b00000c9c0000613d000000e00100043d0000000002010433001680100000003d001500000000001d0000000004000019000000000242004b0000206a0000a13d001700000004001d0000000502400210001300200020003d00000013011000290000000001010433001400000001001d000000120100002900000000001004350000001101000029000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000000160200002927ae27a90000040f00000001022001900000037e0000613d000000000101043b0000000301100039000000000201041a000000170220006c0000206a0000a13d00000000001004350000000001000414000009ed0210009c000009ed01008041000000c00110021000000a4c011001c7000000160200002927ae27a90000040f00000001022001900000037e0000613d000000000101043b00000017011000290000001402000029000000000021041b000000e00100043d0000000002010433000000170320006c0000206a0000a13d00000013031000290000000003030433001500150030002d000000150330006b00000000030000190000000103004039000000010330019000001a470000c13d00000017040000290000000104400039000000800300043d000000000334004b000008350000413d0000001502000029000027100220008c00000c9c0000c13d000000400200043d000000200320003900000060040000390000000000430435000000120300002900000000003204350000006003200039000000800400043d00000000004304350000008003200039000000a00400043d0000000000430435000000a003200039000000c00400043d0000000000430435000000c003200039000000a005000039000000e00400043d00000000005304350000010003200039000000000504043300000000005304350000012003200039000000000605004b000008910000613d00000000060000190000002004400039000000000704043300000000037304360000000106600039000000000756004b0000088b0000413d00000000042300490000004005200039000001000600043d0000000000450435000000000406004b0000000004000019000000010400c039000000e005200039000000000045043500000000040104330000000003430436000000000504004b000008a50000613d00000000050000190000002001100039000000000601043300000000036304360000000105500039000000000645004b0000089f0000413d0000000001230049000009ed03000041000009ed0420009c00000000020380190000004002200210000009ed0410009c00000000010380190000006001100210000000000121019f0000000002000414000009ed0420009c0000000002038019000000c002200210000000000121019f000009fa011001c70000800d02000039000000010300003900000a5c0400004100000fd70000013d0000000002000416000000000202004b0000037e0000c13d000000040210008a000000400220008c0000037e0000413d0000000402900370000000000202043b000009f10320009c0000037e0000213d0000002303200039000009f204000041000000000513004b00000000050000190000000005048019000009f203300197000000000603004b0000000004008019000009f20330009c000000000405c019000000000304004b0000037e0000c13d0000000403200039000000000339034f000000000703043b000009f10370009c0000037e0000213d000000240820003900000005027002100000000002820019000000000212004b0000037e0000213d0000002402900370000000000202043b000009f10320009c0000037e0000213d0000002303200039000009f204000041000000000513004b00000000050000190000000005048019000009f203300197000000000603004b0000000004008019000009f20330009c000000000405c019000000000304004b0000037e0000c13d001000040020003d0000001003900360000000000303043b001700000003001d000009f10330009c0000037e0000213d000000240320003900000017020000290000000502200210000f00000002001d001500000003001d0000000002320019000000000112004b0000037e0000213d0000000001000411000009f601100197001600000001001d0000000000100435000009fe01000041000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c70000801002000039001400000007001d001300000008001d27ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff011001900000091e0000c13d0000001601000029000000000010043500000a0001000041000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff0110019000000f120000613d0000001702000029000000140120006b0000190a0000c13d0000001408000029000000000108004b000000130900002900001ae30000c13d000000400100043d00000040020000390000000002210436000000400310003900000000008304350000006003100039000000000408004b000009380000613d00000002040003670000000005000019000000000694034f000000000606043b000009f60760009c0000037e0000213d000000000363043600000020099000390000000105500039000000000685004b0000092f0000413d00000000041300490000000000420435000000000283043600000a580380009c0000037e0000213d0000000f040000290000001f0340018f00000005044002720000094d0000613d000000100500002900000020055000390000000205500367000000000600001900000005076002100000000008720019000000000775034f000000000707043b00000000007804350000000106600039000000000746004b000009450000413d000000000303004b0000094f0000613d0000000f031000690000000002230019000009ed03000041000009ed0410009c00000000010380190000004001100210000009ed0420009c00000000020380190000006002200210000000000112019f0000000002000414000009ed0420009c0000000002038019000000c002200210000000000112019f000009fa011001c70000800d02000039000000010300003900000a590400004100000fd70000013d0000000001000416000000000101004b0000037e0000c13d000000130100003900000d5b0000013d0000000001000416000000000101004b0000037e0000c13d0000000001000411000300000001001d001509f60010019c00000fc10000613d0000000a01000039000000000101041a000009f60110019800000fe30000c13d000000030100002900000000001004350000001101000039000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000000101004b00000ec80000613d000000030100002927ae21510000040f000500000001001d000000400100043d000d00000001001d000009f50110009c000003470000213d0000000d03000029000000a001300039000000400010043f0000000101000039000c00000001001d000000000101041a00000000011304360000000202000039000b00000002001d000000000202041a000000000021043500000040013000390000000302000039000a00000002001d000000000202041a00000000002104350000000401000039000900000001001d000000000301041a000000400100043d0000000002310436000000000403004b000009ab0000613d00000a01040000410000000005000019000000000604041a000000000262043600000001044000390000000105500039000000000635004b000009a50000413d00000000021200490000001f022000390011002000000092000000110320017f0000000002130019000000000332004b00000000030000190000000103004039000009f10420009c000003470000213d0000000103300190000003470000c13d000000400020043f0000000d020000290000006003200039000200000003001d000000000013043500000080012000390000000502000039000800000002001d000000000202041a000000ff022001900000000002000019000000010200c0390000000000210435000000030100002900000000001004350000000f01000039000700000001001d000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b001700000001001d000000000101041a000000000201004b0000190d0000c13d0000000601000039000400000001001d000000000101041a001700000001001d00000a4d010000410000000000100439000009ed010000410000000002000414000009ed0320009c0000000002018019000000c00120021000000a4e011001c70000800b0200003927ae27a90000040f0000000102200190000019550000613d000000000101043b000100000001001d000000170110006c00001c6a0000a13d0000000d010000290000000001010433000000000101004b00001c6a0000613d001700000000001d000600000000001d000009ff0000013d000000000101043b000000000201041a000001000300008a000000000232016f00000001022001bf000000000021041b0000001705000029001700010050003d0000000d010000290000000001010433000000170110006b00001c680000813d000000400700043d000009f50170009c000003470000213d000000a001700039000000400010043f0000000c01000029000000000101041a00000000021704360000000b01000029000000000101041a001300000002001d000000000012043500000040027000390000000a01000029000000000101041a001400000002001d00000000001204350000000901000029000000000301041a000000400100043d0000000002310436000000000403004b00000a1e0000613d00000a01040000410000000005000019000000000604041a000000000262043600000001044000390000000105500039000000000635004b00000a180000413d00000000021200490000001f02200039000000110320017f0000000002130019000000000332004b00000000030000190000000103004039000009f10420009c000003470000213d0000000103300190000003470000c13d000000400020043f00000060027000390000000000120435001600000007001d00000080027000390000000801000029000000000101041a000000ff011001900000000001000019000000010100c039001200000002001d0000000000120435000000150100002900000000001004350000000701000029000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000401043b000000000104041a000000000201004b000000160300002900000a8e0000613d000000400300043d000009f50230009c000003470000213d000000a002300039000000400020043f00000000021304360000000101400039000000000101041a001300000002001d0000000000120435001600000003001d00000040023000390000000201400039000000000101041a001400000002001d0000000000120435001200000004001d0000000301400039000000000301041a000000400200043d001000000002001d000e00000003001d0000000002320436000f00000002001d00000000001004350000000001000414000009ed0210009c000009ed01008041000000c00110021000000a4c011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d0000000e05000029000000000205004b0000000f0400002900000a750000613d000000000101043b0000000002000019000000000301041a000000000434043600000001011000390000000102200039000000000352004b00000a6f0000413d000000100500002900000000015400490000001f01100039000000110210017f0000000001520019000000000221004b00000000020000190000000102004039000009f10310009c00000016030000290000001204000029000003470000213d0000000102200190000003470000c13d000000400010043f000000600130003900000000005104350000000401400039000000000101041a000000ff011001900000000001000019000000010100c0390000008002300039001200000002001d00000000001204350000000001030433000000170110006c00001a3c0000a13d000000150100002900000000001004350000001001000039001600000001001d000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b00000017020000290000000000200435000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff011001900000001705000029000009fa0000c13d0000000401000029000000000101041a000000000205004b00000ad10000613d00000014020000290000000002020433000000000302004b00000ae30000613d0000000001120019000000000221004b00000000020000190000000102004039000000010220019000001a470000c13d0000001302000029000000000302043300000000425300a9000000000403004b00000ac70000613d00000000433200d9000000000353004b00001a470000c13d001400000012001d000000140120006b00000000010000190000000101004039000000010110019000001a470000c13d00000a4d010000410000000000100439000000000100041400000af50000013d00000012020000290000000002020433000000000202004b00000b010000c13d00000014020000290000000002020433000000000302004b00000b320000613d001400000012001d000000140120006b00000000010000190000000101004039000000010110019000001a470000c13d00000a4d010000410000000000100439000000000100041400000af50000013d00000001035000390000001302000029000000000402043300000000523400a9000000000504004b00000aec0000613d00000000544200d9000000000334004b00001a470000c13d001400000012001d000000140120006b00000000010000190000000101004039000000010110019000001a470000c13d00000a4d0100004100000000001004390000000001000414000009ed0210009c000009ed01008041000000c00110021000000a4e011001c70000800b0200003927ae27a90000040f0000000102200190000019550000613d000000000101043b000000140110006c0000001705000029000009fa0000413d000000020100002900000000010104330000000002010433000000000252004b0000206a0000a13d000000050250021000000000011200190000002001100039000000000201043300000005312000b9000000050300006b00000b100000613d00000005431000fa000000000223004b00001a470000c13d000027102110011a000600060010002d000000060110006b00000000010000190000000101004039000000010110019000001a470000c13d000000030100002900000000001004350000001601000029000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b00000017020000290000000000200435000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003927ae27a90000040f0000000102200190000009f30000c13d0000037e0000013d00000013020000290000000002020433001400000012001d000000140120006b00000000010000190000000101004039000000010110019000001a470000c13d00000a4d010000410000000000100439000000000100041400000af50000013d0000000001000416000000000101004b0000037e0000c13d0000000001000411000009f60110019800000fc10000613d001700000001001d0000000000100435000009fe01000041000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff0110019000000b680000c13d0000001701000029000000000010043500000a0001000041000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff0110019000000f120000613d0000001201000039000000000201041a000000400a00043d00000a4f0100004100000000001a04350000000401a00039000000000400041000000000004104350000000001000414000009f602200197000000040320008c001500000002001d001400000004001d0000110f0000c13d0000000103000031000000200130008c000000000403001900000020040080390000113f0000013d0000000001000416000000000101004b0000037e0000c13d0000000d01000039000000000101041a00000d5d0000013d0000000002000416000000000202004b0000037e0000c13d000000040110008a000000400110008c0000037e0000413d0000000401900370000000000101043b001700000001001d000009f60110009c0000037e0000213d0000002401900370000000000101043b001600000001001d0000000001000411000009f601100197001500000001001d0000000000100435000009fe01000041000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff0110019000000bb50000c13d0000001501000029000000000010043500000a0001000041000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff0110019000000f120000613d000000160100006b000011780000c13d000000400100043d00000a730200004100000f140000013d0000000002000416000000000202004b0000037e0000c13d000000040210008a000000200220008c0000037e0000413d0000000402900370000000000202043b000009f10320009c0000037e0000213d00000004042000390000000002410049000009f203000041000000a00520008c00000000050000190000000005034019000009f202200197000000000602004b000000000300a019000009f20220009c000000000305c019000000000203004b0000037e0000c13d0000012002000039000000400020043f000000000349034f000000000303043b000000800030043f0000002003400039000000000339034f000000000303043b000000a00030043f0000004003400039000000000339034f000000000303043b000000c00030043f0000006003400039000000000539034f000000000505043b000009f10650009c0000037e0000213d00000000044500190000001f05400039000000000515004b0000037e0000813d000000000549034f000000000605043b000009f10560009c000003470000213d00000005056002100000015f075000390017002000000092000000170770017f000009f10870009c000003470000213d000000400070043f000001200060043f00000020044000390000000005450019000000000115004b0000037e0000213d000000000106004b00000c000000613d000000000149034f000000000101043b000000200220003900000000001204350000002004400039000000000154004b00000bf90000413d0000012001000039000000e00010043f0000002001300039000000000119034f000000000101043b000000000201004b0000000002000019000000010200c039000000000221004b0000037e0000c13d000001000010043f0000000001000411000009f601100197001600000001001d0000000000100435000009fe01000041000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff0110019000000c310000c13d0000001601000029000000000010043500000a0001000041000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff0110019000000f120000613d000000800100043d0000000102000039000000000012041b0000000201000039000000a00200043d000000000021041b0000000301000039000000c00200043d000000000021041b000000e00200043d0000000003020433000009f10130009c000003470000213d0000000401000039000000000501041a000000000031041b000000000435004b00000c4b0000a13d00000a010430004100000a0105500041000000000654004b00000c4b0000813d000000000004041b0000000104400039000000000654004b00000c470000413d0000000000100435000000000403004b00000c570000613d00000000040000190000000005020019000000200550003900000a01064000410000000007050433000000000076041b0000000104400039000000000634004b00000c500000413d0000000503000039000000000403041a000001000500008a000000000454016f000001000500043d000000000505004b000000010440c1bf000000000043041b0000000002020433000009f10320009c000003470000213d00000005052002100000003f03500039000000170430017f000000400300043d0000000004430019000000000634004b00000000060000190000000106004039000009f10740009c000003470000213d0000000106600190000003470000c13d000000400040043f00000000022304360000001f0450018f000000050550027200000c7e0000613d00000000060000310000000206600367000000000700001900000005087002100000000009820019000000000886034f000000000808043b00000000008904350000000107700039000000000857004b00000c760000413d000000000404004b00000c800000613d0000000003030433000009f10430009c000003470000213d000000000501041a000000000031041b000000000435004b00000c8f0000a13d00000a010430004100000a0105500041000000000654004b00000c8f0000813d000000000004041b0000000104400039000000000654004b00000c8b0000413d0000000000100435000000000403004b00000c990000613d0000000004000019000000002502043400000a0106400041000000000056041b0000000104400039000000000534004b00000c930000413d000000800300043d000000000203004b00001c6d0000c13d000000400100043d00000a660200004100000f140000013d0000000001000416000000000101004b0000037e0000c13d0000000501000039000000000101041a0000000302000039000000000202041a0000000203000039000000000303041a0000000104000039000000000404041a000000800040043f000000a00030043f000000c00020043f000000ff0110019000000d460000013d0000000002000416000000000202004b0000037e0000c13d000000040110008a000000400110008c0000037e0000413d0000002401900370000000000101043b001700000001001d000009f60110009c0000037e0000213d0000000401900370000000000101043b001600000001001d0000000000100435000000200000043f0000004002000039000000000100001927ae278e0000040f0000000101100039000000000101041a27ae20970000040f0000001601000029000000170200002927ae20c90000040f0000000001000019000027af0001042e0000000002000416000000000202004b0000037e0000c13d000000040110008a000000200110008c0000037e0000413d0000000401900370000000000101043b001700000001001d0000000001000411000009f601100197001600000001001d0000000000100435000009fe01000041000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff0110019000000cf90000c13d0000001601000029000000000010043500000a0001000041000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff0110019000000f120000613d0000000e010000390000001702000029000000000021041b000000400100043d0000000000210435000009ed020000410000000003000414000009ed0430009c0000000003028019000009ed0410009c00000000010280190000004001100210000000c002300210000000000112019f00000a4c011001c70000800d02000039000000010300003900000a570400004100000fd70000013d0000000002000416000000000202004b0000037e0000c13d000000040110008a000000400110008c0000037e0000413d0000000401900370000000000101043b000009f60210009c0000037e0000213d00000000001004350000001001000039000000200010043f0000004002000039001600000002001d0000000001000019001700000009035327ae278e0000040f000000170200035f0000002402200370000000000202043b0000000000200435000000200010043f0000000001000019000000160200002927ae278e0000040f000000000101041a000000ff011001900000000001000019000000010100c03900000d5d0000013d0000000002000416000000000202004b0000037e0000c13d000000040110008a000000200110008c0000037e0000413d0000000401900370000000000101043b000009f60210009c0000037e0000213d00000000001004350000000f01000039000000200010043f0000004002000039000000000100001927ae278e0000040f0000000402100039000000000202041a0000000203100039000000000303041a0000000104100039000000000404041a000000000101041a000000800010043f000000a00040043f000000c00030043f000000ff012001900000000001000019000000010100c039000000e00010043f00000a4401000041000027af0001042e0000000002000416000000000202004b0000037e0000c13d000000040110008a000000200110008c0000037e0000413d0000000401900370000000000101043b000009f60210009c0000037e0000213d27ae26a50000040f00000ed60000013d0000000001000416000000000101004b0000037e0000c13d0000000901000039000000000101041a000009f601100197000000800010043f00000a5601000041000027af0001042e0000000002000416000000000202004b0000037e0000c13d000000040110008a000000400110008c0000037e0000413d0000000401900370000000000101043b001700000001001d0000002401900370000000000101043b001600000001001d000009f60110009c0000037e0000213d00000017010000290000000000100435000000200000043f000009ed030000410000000001000414000009ed0210009c0000000001038019000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b0000000101100039000000000101041a001500000001001d0000000000100435000000200000043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b0000000002000411001400000002001d0000000000200435000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff011001900000141a0000c13d000000400100043d00000024021000390000001503000029000000000032043500000a78020000410000000000210435000000040210003900000014030000290000000000320435000009ed02000041000009ed0310009c0000000001028019000000400110021000000a53011001c7000027b0000104300000000002000416000000000202004b0000037e0000c13d000000040110008a000000400110008c0000037e0000413d0000000401900370000000000101043b0000000002010019000009f60110009c0000037e0000213d0000000001020019001600000001001d001700000009035327ae27810000040f000000160100002900000000001004350000001001000039000000200010043f0000004002000039001600000002001d000000000100001927ae278e0000040f000000170200035f0000002402200370000000000202043b0000000000200435000000200010043f0000000001000019000000160200002927ae278e0000040f000000000101041a000000ff011001900000000001000019000000010100c03900000ed60000013d0000000001000416000000000101004b0000037e0000c13d0000000c01000039000000000101041a0000000b02000039000000000202041a0000000a03000039000000000303041a0000000904000039000000000404041a0000000805000039000000000505041a000009f605500197000000800050043f000009f604400197000000a00040043f000009f603300197000000c00030043f000009f602200197000000e00020043f000009f601100197000001000010043f00000a6e01000041000027af0001042e0000000002000416000000000202004b0000037e0000c13d000000040110008a000000200110008c0000037e0000413d0000000401900370000000000101043b000009f60210009c0000037e0000213d00000000001004350000000f01000039000000200010043f0000004002000039000000000100001927ae278e0000040f000000030110003927ae211c0000040f0000002002000039000000400300043d001700000003001d000000000223043627ae20770000040f000000170400002900000e3f0000013d0000000002000416000000000202004b0000037e0000c13d000000040110008a000000200110008c0000037e0000413d0000000401900370000000000101043b00000a7902100197000000000221004b0000037e0000c13d00000a7a0210009c0000000002000019000000010200603900000a7b0110009c00000001022061bf000000010120018f00000d5d0000013d0000000001000416000000000101004b0000037e0000c13d0000000701000039000000000101041a0000000602000039000000000202041a000000800020043f000000a00010043f00000a5a01000041000027af0001042e0000000001000416000000000101004b0000037e0000c13d0000000402000039000000000102041a000000800010043f0000000000200435001700200000003d000000000201004b000000170200002900000e350000613d000000a00400003900000a010200004100000000030000190000000005040019000000000402041a000000000445043600000001022000390000000103300039000000000613004b00000e2d0000413d000000600250008a0000008001000039001600000001001d27ae20840000040f000000400200043d001500000002001d00000017010000290000000002120436000000160100002927ae20770000040f00000015040000290000000001410049000009ed02000041000009ed0310009c0000000001028019000009ed0340009c000000000402801900000040024002100000006001100210000000000121019f000027af0001042e0000000002000416000000000202004b0000037e0000c13d000000040110008a000000200110008c0000037e0000413d0000000401900370000000000101043b001300000001001d000009f60110009c0000037e0000213d000000130100006b00000fc10000613d0000012001000039000000400010043f0000000102000039000900000002001d000000000202041a000000800020043f0000000202000039000800000002001d000000000202041a000000a00020043f0000000302000039000700000002001d000000000202041a000000c00020043f00000140030000390000000402000039000600000002001d000000000202041a000001200020043f000000000402004b00000e7b0000613d00000a0103000041000001400400003900000000050000190000000006040019000000000403041a000000000446043600000001033000390000000105500039000000000725004b00000e6e0000413d0000003f02600039000000200300008a000000000332016f00000a5e0230004100000a5f0220009c000003470000413d000000400030043f000000e00010043f0000000501000039000500000001001d000000000101041a000000ff011001900000000001000019000000010100c039000001000010043f000000130100002900000000001004350000000f01000039000400000001001d000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d0000008003000039000100e00000003d000000000401043b000000000104041a000000000201004b000012d40000c13d001200000003001d000000130100002927ae21510000040f000200000001001d00000012010000290000000001010433000000000101004b000300000000001d000014f60000c13d000000400100043d000000030200002900000fdc0000013d0000000002000416000000000202004b0000037e0000c13d000000040110008a000000200110008c0000037e0000413d0000000401900370000000000301043b0000000004000411000009f60240019800000fc10000613d0000000a01000039000000000101041a000009f601100198001500000002001d001600000003001d001700000004001d00000ff40000c13d00000000004004350000001101000039000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000000101004b000013310000c13d000000400100043d00000a4b0200004100000f140000013d0000000002000416000000000202004b0000037e0000c13d000000040110008a000000200110008c0000037e0000413d0000000401900370000000000101043b000009f60210009c0000037e0000213d27ae21510000040f000000400200043d0000000000120435000009ed01000041000009ed0320009c0000000002018019000000400120021000000a43011001c7000027af0001042e0000000001000416000000000101004b0000037e0000c13d000009fc0100004100000d5d0000013d0000000002000416000000000202004b0000037e0000c13d000000040110008a000000200110008c0000037e0000413d0000000401900370000000000101043b001700000001001d0000000001000411000009f601100197001600000001001d0000000000100435000009fe01000041000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff0110019000000fc50000c13d0000001601000029000000000010043500000a0001000041000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff0110019000000fc50000c13d000000400100043d00000a77020000410000000000210435000009ed02000041000009ed0310009c0000000001028019000000400110021000000a05011001c7000027b0000104300000000002000416000000000202004b0000037e0000c13d000000040110008a000000a00110008c0000037e0000413d0000012001000039000000400010043f0000000401900370000000000101043b000009f60210009c0000037e0000213d000000800010043f0000002401900370000000000101043b000009f60210009c0000037e0000213d000000a00010043f0000004401900370000000000101043b000009f60210009c0000037e0000213d000000c00010043f0000006401900370000000000101043b000009f60210009c0000037e0000213d000000e00010043f0000008401900370000000000101043b000009f60210009c0000037e0000213d000001000010043f0000000001000411000009f601100197001700000001001d0000000000100435000009fe01000041000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff0110019000000f620000c13d0000001701000029000000000010043500000a0001000041000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff0110019000000f120000613d000000800100043d000009f6011001980000000802000039000000000302041a00000a0203300197000000000313019f000000000032041b000000a00200043d000009f6022001970000000903000039000000000403041a00000a0204400197000000000224019f000000000023041b000000c00200043d000009f6022001970000000a03000039000000000403041a00000a0204400197000000000424019f000000000043041b000000e00300043d000009f6033001970000000b04000039000000000504041a00000a0205500197000000000335019f000000000034041b000001000300043d000009f6033001970000000c04000039000000000504041a00000a0205500197000000000335019f000000000034041b00000f8b0000613d0000001203000039000000000403041a00000a0204400197000000000414019f000000000043041b000000000302004b00000f920000613d0000001303000039000000000403041a00000a0204400197000000000224019f000000000023041b000000400200043d0000000001120436000000a00300043d000009f6033001970000000000310435000000c00100043d000009f60110019700000040032000390000000000130435000000e00100043d000009f60110019700000060032000390000000000130435000001000100043d000009f60110019700000080032000390000000000130435000009ed01000041000009ed0320009c00000000020180190000000003000414000009ed0430009c00000000030180190000004001200210000000c002300210000000000112019f00000a50011001c70000800d02000039000000010300003900000a760400004127ae27a40000040f00000001012001900000037e0000613d00000fda0000013d0000000002000416000000000202004b0000037e0000c13d000000040110008a000000200110008c0000037e0000413d0000000401900370000000000101043b001300000001001d000009f60110009c0000037e0000213d000000130100006b000010030000c13d00000a5d01000041000000800010043f00000a7401000041000027b0000104300000000d010000390000001702000029000000000021041b000000400100043d0000000000210435000009ed020000410000000003000414000009ed0430009c0000000003028019000009ed0410009c00000000010280190000004001100210000000c002300210000000000112019f00000a4c011001c70000800d02000039000000010300003900000a6f0400004127ae27a40000040f00000001012001900000037e0000613d000000400100043d00000001020000390000000000210435000009ed02000041000009ed0310009c0000000001028019000000400110021000000a43011001c7000027af0001042e0000001301000039000000000201041a00000a4501000041000000800010043f0000000301000029000000840010043f0000000001000414000009f602200197000000040320008c001600000002001d0000109e0000c13d0000000104000031000000200140008c0000002004008039000010c80000013d00000a750100004100000fc20000013d0000001301000039000000000201041a00000a4501000041000000800010043f000000840040043f0000000001000414000009f602200197000000040320008c001300000002001d000010d50000c13d0000000103000031000000200130008c00000000040300190000002004008039000010ff0000013d0000012001000039000000400010043f0000000102000039000700000002001d000000000202041a000000800020043f0000000202000039000600000002001d000000000202041a000000a00020043f0000000302000039000500000002001d000000000202041a000000c00020043f00000140030000390000000402000039000400000002001d000000000202041a000001200020043f000000000402004b000010280000613d00000a0103000041000001400400003900000000050000190000000006040019000000000403041a000000000446043600000001033000390000000105500039000000000725004b0000101b0000413d0000003f02600039000000200300008a000000000332016f00000a5e0230004100000a5f0220009c000003470000413d000000400030043f000000e00010043f0000000501000039000300000001001d000000000101041a000000ff011001900000000001000019000000010100c039000001000010043f000000130100002900000000001004350000000f01000039000200000001001d000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d0000008003000039000100e00000003d000000000401043b000000000104041a000000000201004b000013b30000c13d001200000003001d000000130100002927ae21510000040f000800000001001d00000012010000290000000001010433000000000101004b000c00000000001d000016490000c13d000000400100043d0000000c0200002900000fdc0000013d000009ed04000041000009ed0310009c0000000001048019000009ed03a0009c00000000040a40190000004003400210000000c001100210000000000131019f00000a53011001c700160000000a001d27ae27a90000040f000000160a00002900000000030100190000006003300270000009ed03300197000000200430008c000000000403001900000020040080390000001f0540018f0000000506400272000010700000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b000010680000413d000000000705004b0000107f0000613d0000000506600210000000000761034f00000000066a00190000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f00000001022001900000115b0000613d0000001f01400039000000600110018f00000000050a00190000000004a10019000000000214004b00000000020000190000000102004039001600000004001d000009f10440009c000003470000213d0000000102200190000003470000c13d0000001602000029000000400020043f000000200230008c0000037e0000413d0000000002050433000000150220006b000014690000a13d00000a6d0100004100000016030000290000000000130435000009ed01000041000009ed0230009c0000000003018019000000400130021000000a05011001c7000027b000010430000009ed04000041000009ed0310009c0000000001048019000000c00110021000000a46011001c727ae27a90000040f00000000030100190000006003300270000009ed03300197000000200430008c000000000403001900000020040080390000001f0540018f0000000506400272000010b60000613d00000000070000190000000508700210000000000981034f000000000909043b000000800880003900000000009804350000000107700039000000000867004b000010ae0000413d000000000705004b000010c50000613d0000000506600210000000000761034f00000003055002100000008006600039000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f00000001022001900000119c0000613d0000001f01400039000000600110018f00000080021001bf001700000002001d000000400020043f000000200240008c0000037e0000413d000000800200043d000000000202004b000011d60000c13d00000a4b0100004100000017020000290000110b0000013d000009ed04000041000009ed0310009c0000000001048019000000c00110021000000a46011001c727ae27a90000040f00000000030100190000006003300270000009ed03300197000000200430008c000000000403001900000020040080390000001f0540018f0000000506400272000010ed0000613d00000000070000190000000508700210000000000981034f000000000909043b000000800880003900000000009804350000000107700039000000000867004b000010e50000413d000000000705004b000010fc0000613d0000000506600210000000000761034f00000003055002100000008006600039000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0000000102200190000011b90000613d0000001f01400039000000600110018f00000080021001bf001400000002001d000000400020043f000000200230008c0000037e0000413d000000800200043d000000000202004b0000131e0000c13d00000a4b0100004100000014020000290000000000120435000000400120021000000a05011001c7000027b000010430000009ed04000041000009ed0310009c0000000001048019000009ed03a0009c00000000040a40190000004003400210000000c001100210000000000131019f00000a49011001c700160000000a001d27ae27a90000040f000000160a00002900000000030100190000006003300270000009ed03300197000000200430008c000000000403001900000020040080390000001f0540018f00000005064002720000112d0000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b000011250000413d000000000705004b0000113c0000613d0000000506600210000000000761034f00000000066a00190000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0000000102200190000013fd0000613d0000001f01400039000000600110018f00000000050a00190000000004a10019000000000214004b00000000020000190000000102004039001600000004001d000009f10440009c000003470000213d0000000102200190000003470000c13d0000001602000029000000400020043f000000200230008c0000037e0000413d0000000002050433000000000202004b000018070000c13d000000010100003900000016030000290000000000130435000009ed01000041000009ed0230009c0000000003018019000000400130021000000a43011001c7000027af0001042e000000400200043d0000001f0430018f0000000505300272000011680000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b000011600000413d000000000604004b00001c170000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f000000000015043500001c170000013d000000170100002900000000001004350000001101000039000000200010043f000009ed030000410000000001000414000009ed0210009c0000000001038019000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b0000001603000029000000000031041b000000400100043d00000020021000390000000000320435000000170200002900000000002104350000000002000414000009ed0320009c000009ed040000410000000002048019000009ed0310009c00000000010480190000004001100210000000c002200210000000000112019f000009fd011001c70000800d02000039000000010300003900000a720400004100000fd70000013d000000400200043d0000001f0430018f0000000505300272000011a90000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b000011a10000413d000000000604004b000011b80000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f000000000015043500001c170000013d000000400200043d0000001f0430018f0000000505300272000011c60000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b000011be0000413d000000000604004b000011d50000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f000000000015043500001c170000013d00000a47020000410000001705000029000000000025043500000000040004140000001602000029000000040320008c0000179d0000c13d0000000002150019001400000002001d000000400020043f00000017020000290000000002020433000000000302004b0000000003000019000000010300c039000000000332004b0000037e0000c13d000000000202004b000009850000613d00000a48020000410000001403000029000000000023043500000004023001bf0000000303000029000000000032043500000000020004140000001603000029000000040330008c000019560000c13d0000001401100029000000400010043f0000198c0000013d001300000004001d000000400200043d000d00000002001d000009f50220009c000003470000213d0000000d04000029000000a002400039000000400020043f000000000214043600000013030000290000000101300039000000000101041a000e00000002001d000000000012043500000040024000390000000201300039000000000101041a000f00000002001d00000000001204350000000301300039000000000301041a000000400200043d000c00000002001d000a00000003001d0000000002320436000b00000002001d0000000000100435000009ed010000410000000002000414000009ed0320009c0000000002018019000000c00120021000000a4c011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d0000000a05000029000000000205004b0000000b04000029000012270000613d000000000101043b0000000002000019000000000301041a000000000434043600000001011000390000000102200039000000000352004b000012210000413d0000000c0140006a0000001f01100039000000200200008a000000000221016f0000000c01200029000000000221004b00000000020000190000000102004039000009f10310009c000003470000213d0000000102200190000003470000c13d000000400010043f0000000d0200002900000060012000390000000c030000290000000000310435000000800320003900000013010000290000000401100039000000000101041a000000ff011001900000000001000019000000010100c03900000000001304350000067a0000013d001700000003001d000000400200043d001500000002001d000009f50220009c000003470000213d0000001503000029000000a002300039000000400020043f000000000113043600000017040000290000000102400039000000000202041a000000000021043500000040013000390000000202400039000000000202041a00000000002104350000000301400039000000000301041a000000400200043d001600000002001d001200000003001d0000000002320436001300000002001d0000000000100435000009ed010000410000000002000414000009ed0320009c0000000002018019000000c00120021000000a4c011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d0000001205000029000000000205004b0000001304000029000012700000613d000000000101043b0000000002000019000000000301041a000000000434043600000001011000390000000102200039000000000352004b0000126a0000413d000000160140006a0000001f01100039000000200200008a000000000221016f0000001601200029000000000221004b00000000020000190000000102004039000009f10310009c000003470000213d0000000102200190000003470000c13d000000400010043f00000015010000290000006002100039001000000002001d00000016030000290000000000320435000000800110003900000017020000290000000402200039000000000202041a000000ff022001900000000002000019000000010200c0390000000000210435000004e70000013d001700000004001d000000400200043d001400000002001d000009f50220009c000003470000213d0000001403000029000000a002300039000000400020043f000000000113043600000017040000290000000102400039000000000202041a000000000021043500000040013000390000000202400039000000000202041a00000000002104350000000301400039000000000301041a000000400200043d001600000002001d001200000003001d0000000002320436001300000002001d0000000000100435000009ed010000410000000002000414000009ed0320009c0000000002018019000000c00120021000000a4c011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d0000001205000029000000000205004b0000001304000029000012ba0000613d000000000101043b0000000002000019000000000301041a000000000434043600000001011000390000000102200039000000000352004b000012b40000413d000000160140006a0000001f01100039000000200200008a000000000221016f0000001601200029000000000221004b00000000020000190000000102004039000009f10310009c000003470000213d0000000102200190000003470000c13d000000400010043f000000140300002900000060013000390000001602000029000000000021043500000017010000290000000401100039000000000101041a000000ff011001900000000001000019000000010100c03900000080023000390000000000120435000003ff0000013d001700000004001d000000400200043d001200000002001d000009f50220009c000003470000213d0000001203000029000000a002300039000000400020043f000000000113043600000017040000290000000102400039000000000202041a000000000021043500000040013000390000000202400039000000000202041a00000000002104350000000301400039000000000301041a000000400200043d001600000002001d001400000003001d0000000002320436001500000002001d0000000000100435000009ed010000410000000002000414000009ed0320009c0000000002018019000000c00120021000000a4c011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d0000001405000029000000000205004b0000001504000029000013030000613d000000000101043b0000000002000019000000000301041a000000000434043600000001011000390000000102200039000000000352004b000012fd0000413d000000160140006a0000001f01100039000000200200008a000000000221016f0000001601200029000000000221004b00000000020000190000000102004039000009f10310009c000003470000213d0000000102200190000003470000c13d000000400010043f00000012030000290000006001300039000100000001001d00000016020000290000000000210435000000800130003900000017020000290000000402200039000000000202041a000000ff022001900000000002000019000000010200c039000000000021043500000e990000013d00000a47020000410000001405000029000000000025043500000000040004140000001302000029000000040320008c000017d20000c13d0000000002150019001200000002001d000000400020043f00000014020000290000000002020433000000000302004b0000000003000019000000010300c039000000000332004b0000037e0000c13d000000000202004b000018fd0000c13d000000170100002900000000001004350000001001000039001400000001001d000000200010043f000009ed030000410000000001000414000009ed0210009c0000000001038019000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b00000016020000290000000000200435000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000400200043d000000000101043b000000000101041a000000ff01100190000018da0000c13d000009f50120009c000003470000213d000000a001200039000000400010043f0000000101000039000000000101041a00000000011204360000000203000039000000000303041a000000000031043500000040012000390000000303000039000000000303041a00000000003104350000000401000039000000000401041a000000400100043d0000000003410436000000000504004b0000136e0000613d00000a01050000410000000006000019000000000705041a000000000373043600000001055000390000000106600039000000000746004b000013680000413d00000000031300490000001f033000390013002000000092000000130430017f0000000003140019000000000443004b00000000040000190000000104004039000009f10530009c000003470000213d0000000104400190000003470000c13d000000400030043f0000006003200039001200000003001d000000000013043500000080012000390000000502000039000000000202041a000000ff022001900000000002000019000000010200c0390000000000210435000000170100002900000000001004350000000f01000039000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b001100000001001d000000000101041a000000000201004b00001b3a0000c13d0000000601000039000000000101041a001300000001001d00000a4d010000410000000000100439000009ed010000410000000002000414000009ed0320009c0000000002018019000000c00120021000000a4e011001c70000800b0200003927ae27a90000040f0000000102200190000019550000613d000000000101043b001100000001001d000000130110006c00001c6a0000a13d0000001701000029000000160200002927ae25720000040f000000000101004b00001c1e0000c13d000000400100043d00000a640200004100000f140000013d001700000004001d000000400200043d001200000002001d000009f50220009c000003470000213d0000001203000029000000a002300039000000400020043f000000000113043600000017040000290000000102400039000000000202041a000000000021043500000040013000390000000202400039000000000202041a00000000002104350000000301400039000000000301041a000000400200043d001600000002001d001400000003001d0000000002320436001500000002001d0000000000100435000009ed010000410000000002000414000009ed0320009c0000000002018019000000c00120021000000a4c011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d0000001405000029000000000205004b0000001504000029000013e20000613d000000000101043b0000000002000019000000000301041a000000000434043600000001011000390000000102200039000000000352004b000013dc0000413d000000160140006a0000001f01100039000000200200008a000000000221016f0000001601200029000000000221004b00000000020000190000000102004039000009f10310009c000003470000213d0000000102200190000003470000c13d000000400010043f00000012030000290000006001300039000100000001001d00000016020000290000000000210435000000800130003900000017020000290000000402200039000000000202041a000000ff022001900000000002000019000000010200c0390000000000210435000010460000013d000000400200043d0000001f0430018f00000005053002720000140a0000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b000014020000413d000000000604004b000014190000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f000000000015043500001c170000013d00000017010000290000000000100435000000200000043f000009ed030000410000000001000414000009ed0210009c0000000001038019000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b00000016020000290000000000200435000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff01100190000014670000c13d00000017010000290000000000100435000000200000043f000009ed030000410000000001000414000009ed0210009c0000000001038019000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b00000016020000290000000000200435000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000201041a000001000300008a000000000232016f00000001022001bf000000000021041b000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fa011001c70000800d020000390000000403000039000009ff0400004100000017050000290000001606000029000000140700002927ae27a40000040f00000001012001900000037e0000613d0000000001000019000027af0001042e00000a4f020000410000001605000029000000000025043500000004025000390000001704000029000000000042043500000000020004140000001404000029000000040440008c000014a60000613d000009ed01000041000009ed0320009c0000000002018019000009ed0350009c00000000010540190000004001100210000000c002200210000000000112019f00000a49011001c7000000140200002927ae27a90000040f000000160a00002900000000030100190000006003300270000009ed03300197000000200430008c000000000403001900000020040080390000001f0540018f0000000506400272000014910000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b000014890000413d000000000705004b000014a00000613d0000000506600210000000000761034f00000016066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0000000102200190000018e00000613d0000001f01400039000000600110018f00000016050000290000000001510019000009f10210009c000003470000213d000000400010043f000000200230008c0000037e0000413d00000016020000290000000002020433000000150220006c00001a3f0000813d00000a6c0200004100000f140000013d001300100000003d000009ed030000410000801002000039001700000000001d001200000000001d001600000002001d000014c70000013d000027102110011a001200120010002d000000120110006b00000000010000190000000101004039000000010110019000001a470000c13d001700010060003d00000015010000290000000001010433000000170110006b000009ed030000410000000002050019000004ef0000813d000000140100002900000000001004350000001301000029000000200010043f0000000001000414000009ed0410009c0000000001038019000000c001100210000009fd011001c727ae27a90000040f00000001022001900000037e0000613d000000000101043b00000017020000290000000000200435000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000000160200002927ae27a90000040f00000001022001900000037e0000613d0000001605000029000000000101043b000000000101041a000000ff011001900000001706000029000014c00000c13d000000100100002900000000010104330000000002010433000000000262004b0000206a0000a13d000000050260021000000000011200190000002001100039000000000201043300000011312000b9000000110300006b000014b90000613d00000011431000fa000000000223004b000014b90000613d00001a470000013d0000001301000029001109f60010019b001500100000003d000009ed03000041001680100000003d001700000000001d000300000000001d0000150c0000013d000027102110011a000300030010002d000000030110006b00000000010000190000000101004039000000010110019000001a470000c13d0000001702000029001700010020003d00000012010000290000000001010433000000170110006b000009ed0300004100000ea20000813d000000130100002900000000001004350000001501000029000000200010043f0000000001000414000009ed0210009c0000000001038019000000c001100210000009fd011001c7000000160200002927ae27a90000040f00000001022001900000037e0000613d000000000101043b00000017020000290000000000200435000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000000160200002927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff01100190000015050000c13d000000400700043d000009f50170009c000003470000213d000000a001700039000000400010043f0000000901000029000000000101041a00000000021704360000000801000029000000000101041a000f00000002001d000000000012043500000040027000390000000701000029000000000101041a001000000002001d00000000001204350000000601000029000000000301041a000000400100043d0000000002310436000000000403004b000015490000613d00000a01040000410000000005000019000000000604041a000000000262043600000001044000390000000105500039000000000635004b000015430000413d00000000021200490000001f02200039000d0020000000920000000d0320017f0000000002130019000000000332004b00000000030000190000000103004039000009f10420009c000003470000213d0000000103300190000003470000c13d000000400020043f00000060027000390000000000120435001400000007001d00000080027000390000000501000029000000000101041a000000ff011001900000000001000019000000010100c039000e00000002001d0000000000120435000000110100002900000000001004350000000401000029000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000401043b000000000104041a000000000201004b0000001403000029000015ba0000613d000000400300043d000009f50230009c000003470000213d000000a002300039000000400020043f00000000021304360000000101400039000000000101041a000f00000002001d0000000000120435001400000003001d00000040023000390000000201400039000000000101041a001000000002001d0000000000120435000e00000004001d0000000301400039000000000301041a000000400200043d000c00000002001d000a00000003001d0000000002320436000b00000002001d00000000001004350000000001000414000009ed0210009c000009ed01008041000000c00110021000000a4c011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d0000000a05000029000000000205004b0000000b04000029000015a10000613d000000000101043b0000000002000019000000000301041a000000000434043600000001011000390000000102200039000000000352004b0000159b0000413d0000000c0500002900000000015400490000001f011000390000000d0210017f0000000001520019000000000221004b00000000020000190000000102004039000009f10310009c00000014030000290000000e04000029000003470000213d0000000102200190000003470000c13d000000400010043f000000600130003900000000005104350000000401400039000000000101041a000000ff011001900000000001000019000000010100c0390000008002300039000e00000002001d00000000001204350000000001030433000000170110006c00001a3c0000a13d000000110100002900000000001004350000001501000029000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b00000017020000290000000000200435000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000009ed06000041000000000101043b000000000101041a000000ff01100190000015050000c13d0000000601000039000000000101041a0000001704000029000000000204004b000015fd0000613d00000010020000290000000002020433000000000302004b0000160f0000613d0000000001120019000000000221004b00000000020000190000000102004039000000010220019000001a470000c13d0000000f02000029000000000302043300000017423000b9000000000403004b000015f30000613d00000000433200d9000000170330006c00001a470000c13d001400000012001d000000140120006b00000000010000190000000101004039000000010110019000001a470000c13d00000a4d0100004100000000001004390000000001000414000016210000013d0000000e020000290000000002020433000000000202004b0000162c0000c13d00000010020000290000000002020433000000000302004b0000163d0000613d001400000012001d000000140120006b00000000010000190000000101004039000000010110019000001a470000c13d00000a4d0100004100000000001004390000000001000414000016210000013d00000001034000390000000f02000029000000000402043300000000523400a9000000000504004b000016180000613d00000000544200d9000000000334004b00001a470000c13d001400000012001d000000140120006b00000000010000190000000101004039000000010110019000001a470000c13d00000a4d0100004100000000001004390000000001000414000009ed0210009c0000000001068019000000c00110021000000a4e011001c70000800b0200003927ae27a90000040f0000000102200190000019550000613d000000000101043b000000140110006c000015050000413d0000000101000029000000000101043300000000020104330000001703000029000000000232004b0000206a0000a13d000000050230021000000000011200190000002001100039000000000201043300000002312000b9000000020300006b000014fe0000613d00000002431000fa000000000223004b000014fe0000613d00001a470000013d0000000f020000290000000002020433001400000012001d000000140120006b00000000010000190000000101004039000000010110019000001a470000c13d00000a4d0100004100000000001004390000000001000414000016210000013d0000001301000029001109f60010019b001500100000003d000009ed03000041001680100000003d001700000000001d000c00000000001d0000165f0000013d000027102110011a000c000c0010002d0000000c0110006b00000000010000190000000101004039000000010110019000001a470000c13d0000001702000029001700010020003d00000012010000290000000001010433000000170110006b000009ed030000410000104f0000813d000000130100002900000000001004350000001501000029000000200010043f0000000001000414000009ed0210009c0000000001038019000000c001100210000009fd011001c7000000160200002927ae27a90000040f00000001022001900000037e0000613d000000000101043b00000017020000290000000000200435000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000000160200002927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff01100190000016580000c13d000000400700043d000009f50170009c000003470000213d000000a001700039000000400010043f0000000701000029000000000101041a00000000021704360000000601000029000000000101041a000f00000002001d000000000012043500000040027000390000000501000029000000000101041a001000000002001d00000000001204350000000401000029000000000301041a000000400100043d0000000002310436000000000403004b0000169c0000613d00000a01040000410000000005000019000000000604041a000000000262043600000001044000390000000105500039000000000635004b000016960000413d00000000021200490000001f02200039000d0020000000920000000d0320017f0000000002130019000000000332004b00000000030000190000000103004039000009f10420009c000003470000213d0000000103300190000003470000c13d000000400020043f00000060027000390000000000120435001400000007001d00000080027000390000000301000029000000000101041a000000ff011001900000000001000019000000010100c039000e00000002001d0000000000120435000000110100002900000000001004350000000201000029000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000401043b000000000104041a000000000201004b00000014030000290000170d0000613d000000400300043d000009f50230009c000003470000213d000000a002300039000000400020043f00000000021304360000000101400039000000000101041a000f00000002001d0000000000120435001400000003001d00000040023000390000000201400039000000000101041a001000000002001d0000000000120435000e00000004001d0000000301400039000000000301041a000000400200043d000b00000002001d000900000003001d0000000002320436000a00000002001d00000000001004350000000001000414000009ed0210009c000009ed01008041000000c00110021000000a4c011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d0000000905000029000000000205004b0000000a04000029000016f40000613d000000000101043b0000000002000019000000000301041a000000000434043600000001011000390000000102200039000000000352004b000016ee0000413d0000000b0500002900000000015400490000001f011000390000000d0210017f0000000001520019000000000221004b00000000020000190000000102004039000009f10310009c00000014030000290000000e04000029000003470000213d0000000102200190000003470000c13d000000400010043f000000600130003900000000005104350000000401400039000000000101041a000000ff011001900000000001000019000000010100c0390000008002300039000e00000002001d00000000001204350000000001030433000000170110006c00001a3c0000a13d000000110100002900000000001004350000001501000029000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b00000017020000290000000000200435000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000009ed06000041000000000101043b000000000101041a000000ff01100190000017400000613d0000000101000029000000000101043300000000020104330000001703000029000000000232004b0000206a0000a13d000000050230021000000000011200190000002001100039000000000201043300000008312000b9000000080300006b000016510000613d00000008431000fa000000000223004b000016510000613d00001a470000013d0000000601000039000000000101041a0000001704000029000000000204004b000017610000613d00000010020000290000000002020433000000000302004b000017730000613d0000000001120019000000000221004b00000000020000190000000102004039000000010220019000001a470000c13d0000000f02000029000000000302043300000017423000b9000000000403004b000017570000613d00000000433200d9000000170330006c00001a470000c13d001400000012001d000000140120006b00000000010000190000000101004039000000010110019000001a470000c13d00000a4d0100004100000000001004390000000001000414000017850000013d0000000e020000290000000002020433000000000202004b000016580000c13d00000010020000290000000002020433000000000302004b000017910000613d001400000012001d000000140120006b00000000010000190000000101004039000000010110019000001a470000c13d00000a4d0100004100000000001004390000000001000414000017850000013d00000001034000390000000f02000029000000000402043300000000523400a9000000000504004b0000177c0000613d00000000544200d9000000000334004b00001a470000c13d001400000012001d000000140120006b00000000010000190000000101004039000000010110019000001a470000c13d00000a4d0100004100000000001004390000000001000414000009ed0210009c0000000001068019000000c00110021000000a4e011001c70000800b0200003927ae27a90000040f0000000102200190000019550000613d000000000101043b000000140110006c000016580000813d0000172f0000013d0000000f020000290000000002020433001400000012001d000000140120006b00000000010000190000000101004039000000010110019000001a470000c13d00000a4d0100004100000000001004390000000001000414000017850000013d000009ed01000041000009ed0340009c0000000004018019000000c0014002100000004003500210000000000131019f00000a05011001c727ae27a90000040f000000170a00002900000000030100190000006003300270000009ed03300197000000200430008c000000000403001900000020040080390000001f0540018f0000000506400272000017b80000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b000017b00000413d000000000705004b000017c70000613d0000000506600210000000000761034f00000000066a00190000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0000000102200190000018a00000613d0000001f01400039000000600110018f0000001702100029001400000002001d000000400020043f000000200230008c0000037e0000413d000011e00000013d000009ed01000041000009ed0340009c0000000004018019000000c0014002100000004003500210000000000131019f00000a05011001c727ae27a90000040f000000140a00002900000000030100190000006003300270000009ed03300197000000200430008c000000000403001900000020040080390000001f0540018f0000000506400272000017ed0000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b000017e50000413d000000000705004b000017fc0000613d0000000506600210000000000761034f00000000066a00190000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0000000102200190000018bd0000613d0000001f01400039000000600110018f0000001402100029001200000002001d000000400020043f000000200230008c0000037e0000413d000013280000013d00000a4f020000410000001604000029000000000024043500000004024000390000001404000029000000000042043500000000020004140000001504000029000000040440008c000018440000613d000009ed01000041000009ed0320009c00000000020180190000001604000029000009ed0340009c00000000010440190000004001100210000000c002200210000000000112019f00000a49011001c7000000150200002927ae27a90000040f000000160a00002900000000030100190000006003300270000009ed03300197000000200430008c000000000403001900000020040080390000001f0540018f0000000506400272000018300000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b000018280000413d000000000705004b0000183f0000613d0000000506600210000000000761034f00000016066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0000000102200190000019960000613d0000001f01400039000000600110018f0000001602100029001400000002001d000009f10220009c000003470000213d0000001402000029000000400020043f000000200230008c0000037e0000413d0000001602000029000000000202043300000014050000290000002404500039000000000024043500000a5202000041000000000025043500000004025000390000001704000029000000000042043500000000020004140000001504000029000000040440008c0000188d0000613d000009ed01000041000009ed0320009c00000000020180190000001404000029000009ed0340009c00000000010440190000004001100210000000c002200210000000000112019f00000a53011001c7000000150200002927ae27a40000040f000000140a00002900000000030100190000006003300270000009ed03300197000000200430008c000000000403001900000020040080390000001f0540018f0000000506400272000018790000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b000018710000413d000000000705004b000018880000613d0000000506600210000000000761034f00000014066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f000000010220019000001b1d0000613d0000001f01400039000000600110018f0000001401100029001600000001001d000009f10110009c000003470000213d0000001601000029000000400010043f000000200130008c0000037e0000413d00000014010000290000000001010433000000000201004b0000000002000019000000010200c039000000000221004b0000037e0000c13d000000000101004b000011520000c13d00000a5401000041000010960000013d000000400200043d0000001f0430018f0000000505300272000018ad0000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b000018a50000413d000000000604004b000018bc0000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f000000000015043500001c170000013d000000400200043d0000001f0430018f0000000505300272000018ca0000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b000018c20000413d000000000604004b000018d90000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f000000000015043500001c170000013d00000a60010000410000000000120435000009ed01000041000009ed0320009c00000000020180190000110c0000013d000000400200043d0000001f0430018f0000000505300272000018ed0000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b000018e50000413d000000000604004b000018fc0000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f000000000015043500001c170000013d00000a48020000410000001203000029000000000023043500000004023001bf0000001703000029000000000032043500000000020004140000001303000029000000040330008c000019b30000c13d0000001201100029000000400010043f000019e90000013d000000400100043d00000a5b0200004100000f140000013d000000400200043d000d00000002001d000009f50220009c000003470000213d0000000d03000029000000a002300039000000400020043f000000000113043600000017040000290000000102400039000000000202041a000000000021043500000040013000390000000202400039000000000202041a00000000002104350000000301400039000000000301041a000000400200043d001600000002001d001300000003001d0000000002320436001400000002001d0000000000100435000009ed010000410000000002000414000009ed0320009c0000000002018019000000c00120021000000a4c011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d0000001305000029000000000205004b00000014040000290000193b0000613d000000000101043b0000000002000019000000000301041a000000000434043600000001011000390000000102200039000000000352004b000019350000413d000000160140006a0000001f01100039000000110210017f0000001601200029000000000221004b00000000020000190000000102004039000009f10310009c000003470000213d0000000102200190000003470000c13d000000400010043f0000000d010000290000006002100039000200000002001d00000016030000290000000000320435000000800110003900000017020000290000000402200039000000000202041a000000ff022001900000000002000019000000010200c0390000000000210435000009d80000013d000000000001042f000009ed01000041000009ed0320009c0000000002018019000000c0012002100000001402000029001400000002001d0000004002200210000000000112019f00000a49011001c7000000160200002927ae27a90000040f000000140a00002900000000030100190000006003300270000009ed03300197000000200430008c000000000403001900000020040080390000001f0540018f0000000506400272000019740000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b0000196c0000413d000000000705004b000019830000613d0000000506600210000000000761034f00000014066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f000000010220019000001a7a0000613d0000001f01400039000000600110018f0000001401100029000000400010043f000000200230008c0000037e0000413d00000014020000290000000002020433000000000302004b0000000003000019000000010300c039000000000332004b0000037e0000c13d000000000202004b000009850000613d000019f20000013d000000400200043d0000001f0430018f0000000505300272000019a30000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b0000199b0000413d000000000604004b000019b20000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f000000000015043500001c170000013d000009ed01000041000009ed0320009c0000000002018019000000c0012002100000001202000029001200000002001d0000004002200210000000000112019f00000a49011001c7000000130200002927ae27a90000040f000000120a00002900000000030100190000006003300270000009ed03300197000000200430008c000000000403001900000020040080390000001f0540018f0000000506400272000019d10000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b000019c90000413d000000000705004b000019e00000613d0000000506600210000000000761034f00000012066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f000000010220019000001a970000613d0000001f01400039000000600110018f0000001201100029000000400010043f000000200230008c0000037e0000413d00000012020000290000000002020433000000000302004b0000000003000019000000010300c039000000000332004b0000037e0000c13d000000000202004b000013310000613d00000a4a02000041000000000021043500000f180000013d000000400200043d001300000002001d000009f50220009c000003470000213d0000001303000029000000a002300039000000400020043f000000000113043600000016040000290000000102400039000000000202041a000000000021043500000040013000390000000202400039000000000202041a00000000002104350000000301400039000000000301041a000000400200043d001500000002001d001100000003001d0000000002320436001200000002001d0000000000100435000009ed010000410000000002000414000009ed0320009c0000000002018019000000c00120021000000a4c011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d0000001105000029000000000205004b000000120400002900001a230000613d000000000101043b0000000002000019000000000301041a000000000434043600000001011000390000000102200039000000000352004b00001a1d0000413d000000150140006a0000001f01100039000000170210017f0000001501200029000000000221004b00000000020000190000000102004039000009f10310009c000003470000213d0000000102200190000003470000c13d000000400010043f000000130200002900000060012000390000001503000029000000000031043500000016010000290000000401100039000000000101041a000000ff011001900000000001000019000000010100c03900000080022000390000000000120435000006c40000013d000000400100043d00000a700200004100000f140000013d0000000e03000039000000000403041a0000001502400029000000000442004b00000000040000190000000104004039000000010440019000001ab40000613d00000a7101000041000000000010043500000011010000390000034a0000013d001200100000003d001580100000003d001700000000001d001600000000001d000000140100002900000000001004350000001201000029000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000000150200002927ae27a90000040f000000010220019000000017020000290000037e0000613d000000000101043b0000000000200435000000200010043f0000000001000414001700000002001d000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000000150200002927ae27a90000040f000000010220019000000017020000290000037e0000613d000000000101043b000000000101041a000000ff0110019000000000010200190000001601006029001600000001001d001700010020003d00000013010000290000000001010433000000170110006b00001a4f0000413d000000010100008a000000160110006b00001a470000613d000006c90000013d000000400200043d0000001f0430018f000000050530027200001a870000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b00001a7f0000413d000000000604004b00001a960000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f000000000015043500001c170000013d000000400200043d0000001f0430018f000000050530027200001aa40000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b00001a9c0000413d000000000604004b00001ab30000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f000000000015043500001c170000013d000000000023041b0000004003100039000000000023043500000020021000390000001503000029000000000032043500000017020000290000000000210435000009ed020000410000000003000414000009ed0430009c0000000003028019000009ed0410009c00000000010280190000004001100210000000c002300210000000000112019f00000a68011001c70000800d020000390000000103000039001200000003001d00000a690400004127ae27a40000040f00000001012001900000037e0000613d000000400300043d00000044013000390000001502000029000000000021043500000024013000390000001302000029000000000021043500000a6a010000410000000000130435001600000003001d00000004013000390000001702000029000000000021043500000000010004140000001402000029000000040220008c00001bac0000c13d0000000103000031000000200130008c0000000004030019000000200400803900001bdd0000013d001200110000003d001180100000003d0000000004000019000000050140021000000015031000290000000202000367000000000332034f000000000503043b000000000305004b00000bb70000613d0000000001910019000000000112034f000000000101043b000009f60210009c0000037e0000213d001600000005001d001700000004001d000000000201004b000005cf0000613d00000000001004350000001201000029000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000000110200002927ae27a90000040f000000010220019000000014080000290000001309000029000000170400002900000016020000290000037e0000613d000000000101043b000000000021041b0000000104400039000000000184004b00001ae60000413d000009250000013d000000000403004b00001b960000c13d0000000e030000290000000003030433000000000403004b00000ed60000613d00000000542300a900000000353400d90000000001140019000000000341004b00000000030000190000000103004039000000000225004b00001a470000c13d000000010230019000000ed60000613d00001a470000013d000000400200043d0000001f0430018f000000050530027200001b2a0000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b00001b220000413d000000000604004b00001b390000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f000000000015043500001c170000013d000000400200043d001000000002001d000009f50220009c000003470000213d0000001004000029000000a002400039000000400020043f000000000114043600000011030000290000000102300039000000000202041a000000000021043500000040014000390000000202300039000000000202041a00000000002104350000000301300039000000000301041a000000400200043d000f00000002001d000e00000003001d0000000002320436001200000002001d0000000000100435000009ed010000410000000002000414000009ed0320009c0000000002018019000000c00120021000000a4c011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d0000000e05000029000000000205004b000000120400002900001b680000613d000000000101043b0000000002000019000000000301041a000000000434043600000001011000390000000102200039000000000352004b00001b620000413d0000000f0140006a0000001f01100039000000130210017f0000000f01200029000000000221004b00000000020000190000000102004039000009f10310009c000003470000213d0000000102200190000003470000c13d000000400010043f00000010020000290000006001200039001200000001001d0000000f030000290000000000310435000000800120003900000011020000290000000402200039000000000202041a000000ff022001900000000002000019000000010200c0390000000000210435000013980000013d0000000002310019000000000112004b00000000010000190000000101004039000000010110019000001a470000c13d0000000e010000290000000003010433000000000103004b000000000102001900000ed60000613d00000016143000b900000000133400d90000000001240019000000000241004b00000000020000190000000102004039000000160330006c00001ba90000613d00001a470000013d0000000002310019000000000112004b00000000010000190000000101004039000000010110019000001a470000c13d0000000e010000290000000003010433000000000103004b000000000102001900000ed60000613d00000016143000b900000000133400d90000000001240019000000000241004b00000000020000190000000102004039000000160330006c00001a470000c13d000000010220019000000ed60000613d00001a470000013d000009ed02000041000009ed0310009c00000000010280190000001604000029000009ed0340009c00000000020440190000004002200210000000c001100210000000000121019f00000a6b011001c7000000140200002927ae27a40000040f000000160a00002900000000030100190000006003300270000009ed03300197000000200430008c000000000403001900000020040080390000001f0540018f000000050640027200001bcb0000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b00001bc30000413d000000000705004b00001bda0000613d0000000506600210000000000761034f00000016066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f000000010220019000001bfb0000613d0000001f01400039000000600210018f0000001601200029000000000221004b00000000020000190000000102004039000009f10410009c000003470000213d0000000102200190000003470000c13d000000400010043f000000200230008c0000037e0000413d00000016020000290000000002020433000000000302004b0000000003000019000000010300c039000000000332004b0000037e0000c13d000009ed03000041000009ed0410009c00000000030140190000004003300210000000000202004b00001ccf0000c13d00000a5402000041000000000021043500000a05013001c7000027b000010430000000400200043d0000001f0430018f000000050530027200001c080000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b00001c000000413d000000000604004b00001c170000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f0000000000150435000009ed01000041000009ed0420009c000000000201801900000040012002100000006002300210000000000121019f000027b000010430000000170100002900000000001004350000001401000029000000200010043f000009ed030000410000000001000414000009ed0210009c0000000001038019000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b00000016020000290000000000200435000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000201041a000001000300008a000000000232016f00000001022001bf000000000021041b000000170100002927ae21510000040f001400000001001d000000120100002900000000010104330000000002010433000000160220006c0000206a0000a13d000000140200006b000013b00000613d0000001602000029000000050220021000000000011200190000002001100039000000000101043300000014241000b9001300000004001d00000014324000fa000000000112004b00001a470000c13d0000001301000029000027100110008c000013b00000413d0000001201000039000000000201041a000000400300043d00000a4f010000410000000000130435001200000003001d0000000401300039000000000300041000000000003104350000000001000414000009f602200197001000000002001d000000040220008c00001e2a0000c13d0000000104000031000000200140008c000000200400803900001e5b0000013d000000060100006b00001cd30000c13d000000400100043d00000a610200004100000f140000013d000000e00200043d0000002004200039000000000702043300000000060000190000000005000019000000000767004b0000206a0000a13d000000000701041a000000000776004b0000206a0000813d000000050760021000000000087400190000000007080433000000000010043500000a0109600041000000000079041b0000000007020433000000000967004b0000206a0000a13d00000000080804330000000005580019000000000885004b00000000080000190000000108004039000000010880019000001a470000c13d0000000106600039000000000836004b00001c720000413d000027100150008c00000c9c0000c13d000000400100043d000000400300003900000000033104360000004004100039000000800500043d00000000005404350000006004100039000000a00500043d00000000005404350000008004100039000000c00500043d0000000000540435000000a004100039000000a006000039000000e00500043d0000000000640435000000e004100039000000000605043300000000006404350000010004100039000000000706004b00001ca90000613d00000000070000190000002005500039000000000805043300000000048404360000000107700039000000000867004b00001ca30000413d0000000005140049000001000600043d0000000000530435000000000306004b0000000003000019000000010300c039000000c005100039000000000035043500000000050204330000000003540436000000000405004b00001cbc0000613d00000000040000190000002002200039000000000602043300000000036304360000000104400039000000000654004b00001cb60000413d0000000002130049000009ed03000041000009ed0410009c00000000010380190000004001100210000009ed0420009c00000000020380190000006002200210000000000112019f0000000002000414000009ed0420009c0000000002038019000000c002200210000000000121019f000009fa011001c70000800d02000039000000010300003900000a650400004100000fd70000013d0000001202000029000000000021043500000a43013001c7000027af0001042e0000001201000039000000000201041a000000400300043d00000a4f010000410000000000130435001700000003001d0000000401300039000000000300041000000000003104350000000001000414000009f602200197001600000002001d000000040220008c00001ce50000c13d0000000104000031000000200140008c000000200400803900001d160000013d000009ed02000041000009ed0310009c00000000010280190000001704000029000009ed0340009c00000000020440190000004002200210000000c001100210000000000121019f00000a49011001c7000000160200002927ae27a90000040f000000170a00002900000000030100190000006003300270000009ed03300197000000200430008c000000000403001900000020040080390000001f0540018f000000050640027200001d040000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b00001cfc0000413d000000000705004b00001d130000613d0000000506600210000000000761034f00000017066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f000000010220019000001d290000613d0000001f01400039000000600210018f0000001701200029000000000221004b00000000020000190000000102004039000009f10310009c000003470000213d0000000102200190000003470000c13d000000400010043f000000200240008c0000037e0000413d00000017020000290000000002020433000000060220006c00001d460000813d00000a550200004100000f140000013d000000400200043d0000001f0430018f000000050530027200001d360000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b00001d2e0000413d000000000604004b00001d450000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f000000000015043500001c170000013d0000000d02000039000000000302041a000000060430006c00001a470000413d00000006040000290000000003430049000000000032041b000000800210003900000001050000290000000000520435000000600210003900000000003204350000004002100039000000050300002900000000003204350000002002100039000000000042043500000003020000290000000000210435000009ed020000410000000003000414000009ed0430009c0000000003028019000009ed0410009c00000000010280190000004001100210000000c002300210000000000112019f00000a50011001c70000800d020000390000000103000039001400000003001d00000a510400004127ae27a40000040f00000001012001900000037e0000613d000000400300043d00000024013000390000000602000029000000000021043500000a52010000410000000000130435001700000003001d00000004013000390000001502000029000000000021043500000000010004140000001602000029000000040220008c00001ea70000c13d0000000104000031000000200140008c000000200400803900001ed80000013d000009f8010000410000000000100435000000200000043f000009f902000041000000000602041a000000000012041b000009ed030000410000000001000414000009ed0210009c0000000001038019000000c001100210000009fa011001c70000800d020000390000000403000039000009fb04000041000009f805000041000009f80700004127ae27a40000040f00000001012001900000037e0000613d000009fc0100004100000000001004350000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b0000000101100039000000000601041a000009f802000041000000000021041b000009ed030000410000000001000414000009ed0210009c0000000001038019000000c001100210000009fa011001c70000800d020000390000000403000039001400000003001d000009fb04000041000009fc05000041000009f80700004127ae27a40000040f00000001012001900000037e0000613d0000001501000029000000000101043300000060011000390000000001010433000009f601100197001200000001001d0000000000100435000009fe01000041000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff0110019000001de70000c13d00000012010000290000000000100435000009fe01000041000000200010043f000009ed030000410000000001000414000009ed0210009c0000000001038019000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000201041a000001000300008a000000000232016f00000001022001bf000000000021041b0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fa011001c70000800d0200003900000004030000390000000007000411000009ff04000041000009f805000041000000120600002927ae27a40000040f00000001012001900000037e0000613d0000001501000029000000000101043300000080011000390000000001010433000009f601100197001200000001001d000000000010043500000a0001000041000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000101041a000000ff0110019000001e200000c13d0000001201000029000000000010043500000a0001000041000000200010043f000009ed030000410000000001000414000009ed0210009c0000000001038019000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000037e0000613d000000000101043b000000000201041a000001000300008a000000000232016f00000001022001bf000000000021041b0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fa011001c70000800d0200003900000004030000390000000007000411000009ff04000041000009fc05000041000000120600002927ae27a40000040f00000001012001900000037e0000613d00000017010000290000000001010433000000600210003900000000020204330000000003020433000000000403004b00001f970000c13d000000400100043d00000a060200004100000f140000013d000009ed02000041000009ed0310009c00000000010280190000001204000029000009ed0340009c00000000020440190000004002200210000000c001100210000000000121019f00000a49011001c7000000100200002927ae27a90000040f000000120a00002900000000030100190000006003300270000009ed03300197000000200430008c000000000403001900000020040080390000001f0540018f000000050640027200001e490000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b00001e410000413d000000000705004b00001e580000613d0000000506600210000000000761034f00000012066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f000000010220019000001ef30000613d0000001f01400039000000600210018f0000001201200029000000000221004b00000000020000190000000102004039000009f10310009c000003470000213d0000000102200190000003470000c13d000000400010043f000000200240008c0000037e0000413d0000001302000029001327102020012200000012020000290000000002020433000000130220006c00001d270000413d0000000d02000039000000000302041a000000130430006c00001a470000413d00000013050000290000000003530049000000000032041b000000a00210003900000011040000290000000000420435000000800210003900000000003204350000006002100039000000140300002900000000003204350000004002100039000000000052043500000020021000390000001603000029000000000032043500000017020000290000000000210435000009ed020000410000000003000414000009ed0430009c0000000003028019000009ed0410009c00000000010280190000004001100210000000c002300210000000000112019f00000a62011001c70000800d020000390000000103000039001600000003001d00000a630400004127ae27a40000040f00000001012001900000037e0000613d000000400200043d00000024012000390000001303000029000000000031043500000a52010000410000000000120435001700000002001d00000004012000390000001502000029000000000021043500000000010004140000001002000029000000040220008c00001f2f0000c13d0000000104000031000000200140008c000000200400803900001f5f0000013d000009ed02000041000009ed0310009c00000000010280190000001704000029000009ed0340009c00000000020440190000004002200210000000c001100210000000000121019f00000a53011001c7000000160200002927ae27a40000040f000000170a00002900000000030100190000006003300270000009ed03300197000000200430008c000000000403001900000020040080390000001f0540018f000000050640027200001ec60000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b00001ebe0000413d000000000705004b00001ed50000613d0000000506600210000000000761034f00000017066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f000000010220019000001f100000613d0000001f01400039000000600210018f0000001701200029000000000221004b00000000020000190000000102004039000009f10310009c000003470000213d0000000102200190000003470000c13d000000400010043f000000200240008c0000037e0000413d00000017020000290000000002020433000000000302004b0000000003000019000000010300c039000000000332004b0000037e0000c13d000009ed03000041000009ed0410009c00000000030140190000004003300210000000000202004b00001f2d0000c13d00001bf70000013d000000400200043d0000001f0430018f000000050530027200001f000000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b00001ef80000413d000000000604004b00001f0f0000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f000000000015043500001c170000013d000000400200043d0000001f0430018f000000050530027200001f1d0000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b00001f150000413d000000000604004b00001f2c0000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f000000000015043500001c170000013d000000140200002900001cd00000013d000009ed02000041000009ed0310009c00000000010280190000001704000029000009ed0340009c00000000020440190000004002200210000000c001100210000000000121019f00000a53011001c7000000100200002927ae27a40000040f00000000030100190000006003300270000009ed03300197000000200430008c000000000403001900000020040080390000001f0540018f000000050640027200001f4d0000613d000000000700001900000005087002100000001709800029000000000881034f000000000808043b00000000008904350000000107700039000000000867004b00001f450000413d000000000705004b00001f5c0000613d0000000506600210000000000761034f00000017066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f000000010220019000001f7a0000613d0000001f01400039000000600210018f0000001701200029000000000221004b00000000020000190000000102004039000009f10310009c000003470000213d0000000102200190000003470000c13d000000400010043f000000200240008c0000037e0000413d00000017020000290000000002020433000000000302004b0000000003000019000000010300c039000000000332004b0000037e0000c13d000009ed03000041000009ed0410009c00000000030140190000004003300210000000000202004b0000206e0000c13d00001bf70000013d000000400200043d0000001f0430018f000000050530027200001f870000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b00001f7f0000413d000000000604004b00001f960000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f000000000015043500001c170000013d00000020041000390000000004040433000000000504004b00001f9e0000c13d000000400100043d00000a040200004100000f140000013d00000000050104330000000106000039000000000056041b0000000205000039000000000045041b000000400410003900000000040404330000000305000039000000000045041b000009f10430009c000003470000213d0000001405000029000000000405041a000000000035041b000000000543004b00001fb60000813d00000a010440004100000a0105300041000000000645004b00001fb60000813d000000000005041b0000000105500039000000000645004b00001fb20000413d000000140400002900000000004004350000000004000019000000200220003900000a01054000410000000006020433000000000065041b0000000104400039000000000534004b00001fb90000413d0000000502000039000000000302041a000001000400008a000000000343016f00000080011000390000000001010433000000000101004b000000010330c1bf000000000032041b0000001202000039000000000102041a00000a0205100197000000150100002900000000010104330000000034010434000009f604400197000000000545019f000000000052041b00000040021000390000000002020433000009f60220019800001fdb0000613d0000001305000039000000000605041a00000a0206600197000000000626019f000000000065041b0000001305000029000000000505043300000000650504340000000607000039000000000057041b00000000050604330000000706000039000000000056041b0000000805000039000000000605041a00000a0206600197000000000446019f000000000045041b0000000003030433000009f6033001970000000904000039000000000504041a00000a0205500197000000000335019f000000000034041b0000000a03000039000000000403041a00000a0204400197000000000224019f000000000023041b00000060021000390000000002020433000009f6022001970000000b03000039000000000403041a00000a0204400197000000000224019f000000000023041b00000080011000390000000001010433000009f6011001970000000c02000039000000000302041a00000a0203300197000000000113019f000000000012041b00000017010000290000000001010433000000600110003900000000010104330000000001010433000009f10210009c000003470000213d00000005041002100000003f02400039000000160320017f000000400200043d0000000003320019000000000523004b00000000050000190000000105004039000009f10630009c000003470000213d0000000105500190000003470000c13d000000400030043f00000000011204360000001f0340018f0000000504400272000020270000613d00000000050000310000000205500367000000000600001900000005076002100000000008710019000000000775034f000000000707043b00000000007804350000000106600039000000000746004b0000201f0000413d000000000303004b000020290000613d0000000002020433000009f10320009c000003470000213d0000001403000029000000000403041a000000000023041b000000000342004b000020390000813d00000a010320004100000a0104400041000000000543004b000020390000813d000000000003041b0000000103300039000000000543004b000020350000413d00000014030000290000000000300435000000000302004b000020440000613d0000000003000019000000001401043400000a0105300041000000000045041b0000000103300039000000000423004b0000203e0000413d0000001701000029000000000301043300000000010000190000000002000019000000600330003900000000030304330000000004030433000000000442004b000020700000813d0000001404000029000000000404041a000000000442004b0000206a0000813d00000005042002100000002004400039000000000334001900000000030304330000001405000029000000000050043500000a0105200041000000000035041b00000017030000290000000003030433000000600530003900000000050504330000000006050433000000000626004b0000206a0000a13d0000000004450019000000010220003900000000040404330000000001140019000000000441004b000000000400001900000001040040390000000104400190000020480000613d00001a470000013d00000a7101000041000000000010043500000032010000390000034a0000013d000000160200002900001cd00000013d000027100110008c00000c9c0000c13d00000020010000390000010000100443000001200000044300000a0301000041000027af0001042e000000000301001900000000040304330000000001420436000000000204004b000020830000613d00000000020000190000002003300039000000000503043300000000015104360000000102200039000000000542004b0000207d0000413d000000000001042d0000001f02200039000000200300008a000000000232016f0000000001120019000000000221004b00000000020000190000000102004039000009f10310009c000020910000213d0000000102200190000020910000c13d000000400010043f000000000001042d00000a710100004100000000001004350000004101000039000000040010043f00000a4901000041000027b0000104300002000000000002000200000001001d0000000000100435000000200000043f000009ed030000410000000001000414000009ed0210009c0000000001038019000000c001100210000009fd011001c7000080100200003927ae27a90000040f0000000102200190000020b80000613d000000000101043b0000000002000411000100000002001d0000000000200435000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003927ae27a90000040f0000000102200190000020b80000613d000000000101043b000000000101041a000000ff01100190000020ba0000613d000000000001042d0000000001000019000027b000010430000000400100043d00000024021000390000000203000029000000000032043500000a78020000410000000000210435000000040210003900000001030000290000000000320435000009ed02000041000009ed0310009c0000000001028019000000400110021000000a53011001c7000027b0000104300002000000000002000100000002001d000200000001001d0000000000100435000000200000043f000009ed030000410000000001000414000009ed0210009c0000000001038019000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000211a0000613d000000000101043b0000000102000029000009f602200197000100000002001d0000000000200435000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000211a0000613d000000000101043b000000000101041a000000ff01100190000021190000613d00000002010000290000000000100435000000200000043f000009ed030000410000000001000414000009ed0210009c0000000001038019000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000211a0000613d000000000101043b00000001020000290000000000200435000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000211a0000613d000000000101043b000000000201041a000001000300008a000000000232016f000000000021041b000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fa011001c70000800d020000390000000403000039000000000700041100000a7c040000410000000205000029000000010600002927ae27a40000040f00000001012001900000211a0000613d000000000001042d0000000001000019000027b0000104300003000000000002000000000301041a000000400200043d000300000002001d000100000003001d0000000002320436000200000002001d0000000000100435000009ed010000410000000002000414000009ed0320009c0000000002018019000000c00120021000000a4c011001c7000080100200003927ae27a90000040f0000000102200190000021490000613d0000000105000029000000000205004b00000002040000290000213a0000613d000000000101043b0000000002000019000000000301041a000000000434043600000001011000390000000102200039000000000352004b000021340000413d000000030100002900000000021400490000001f03200039000000200200008a000000000223016f0000000004120019000000000224004b00000000020000190000000102004039000009f10340009c0000214b0000213d00000001022001900000214b0000c13d000000400040043f000000000001042d0000000001000019000027b00001043000000a710100004100000000001004350000004101000039000000040010043f00000a4901000041000027b0000104300008000000000002000000400200043d000809f60010019c000024090000613d00000a7d0120009c000023ff0000813d000000a001200039000000400010043f0000000101000039000600000001001d000000000101041a00000000011204360000000203000039000000000303041a000000000031043500000040012000390000000303000039000000000303041a00000000003104350000000405000039000000000405041a000000400100043d00000000034104360000000000500435000000000504004b000021730000613d00000a01050000410000000006000019000000000705041a000000000373043600000001055000390000000106600039000000000746004b0000216d0000413d00000000031300490000001f033000390007002000000092000000070430017f0000000003140019000000000443004b00000000040000190000000104004039000009f10530009c000023ff0000213d0000000104400190000023ff0000c13d000000400030043f0000006003200039000000000013043500000080012000390000000502000039000000000202041a000000ff022001900000000002000019000000010200c0390000000000210435000000080100002900000000001004350000000f01000039000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f0000000102200190000024030000613d000000000301043b000000000103041a000000000201004b000021e00000613d000000400400043d000009f50240009c000023ff0000213d000000a002400039000000400020043f00000000011404360000000102300039000000000202041a0000000000210435000400000004001d00000040014000390000000202300039000000000202041a0000000000210435000500000003001d0000000301300039000000000301041a000000400200043d000300000002001d000100000003001d0000000002320436000200000002001d0000000000100435000009ed010000410000000002000414000009ed0320009c0000000002018019000000c00120021000000a4c011001c7000080100200003927ae27a90000040f0000000102200190000024030000613d0000000105000029000000000205004b0000000204000029000021c80000613d000000000101043b0000000002000019000000000301041a000000000434043600000001011000390000000102200039000000000352004b000021c20000413d000000030500002900000000015400490000001f01100039000000070210017f0000000001520019000000000221004b00000000020000190000000102004039000009f10310009c00000005030000290000000404000029000023ff0000213d0000000102200190000023ff0000c13d000000400010043f0000006001400039000000000051043500000080014000390000000402300039000000000202041a000000ff022001900000000002000019000000010200c03900000000002104350000000701000039000000000601041a0000000a02000039000000000102041a000009f601100198000021fb0000613d000000400a00043d0000001301000039000000000101041a000009f605100197000000000106004b0000221d0000613d000500000002001d00000a450100004100000000001a04350000000401a00039000000080200002900000000002104350000000001000414000000040250008c000700000006001d000022270000c13d0000000103000031000000200130008c00000000040300190000002004008039000022590000013d000000080100002900000000001004350000001101000039000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c70000801002000039000700000006001d27ae27a90000040f00000007050000290000000102200190000024030000613d000000000101043b000000000205004b000024110000613d000000000601041a0000001201000039000000000201041a000000400a00043d00000a7e0100004100000000001a04350000000001000414000009f602200197000000040320008c000022c40000c13d0000000103000031000000200130008c00000000040300190000002004008039000022f70000013d00000a7f0100004100000000001a04350000000001000414000000040250008c0000231b0000c13d0000000103000031000000200130008c000000000403001900000020040080390000234e0000013d000009ed02000041000009ed0310009c0000000001028019000009ed03a0009c00000000020a40190000004002200210000000c001100210000000000121019f00000a49011001c7000000000205001900040000000a001d27ae27a90000040f000000040a00002900000000030100190000006003300270000009ed03300197000000200430008c000000000403001900000020040080390000001f0540018f0000000506400272000022460000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b0000223e0000413d000000000705004b000022550000613d0000000506600210000000000761034f00000000066a00190000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f00000001022001900000000706000029000024170000613d0000001f01400039000000600110018f000000000ba1001900000000021b004b00000000020000190000000102004039000009f104b0009c000023ff0000213d0000000102200190000023ff0000c13d0000004000b0043f000000200230008c000024030000413d00000000070a04330000001202000039000000000202041a00000a7e0400004100000000004b04350000000004000414000009f602200197000000040520008c000022a40000613d000400000007001d000009ed01000041000009ed0340009c0000000004018019000009ed03b0009c00000000010b40190000004001100210000000c003400210000000000113019f00000a05011001c700080000000b001d27ae27a90000040f000000080b00002900000000030100190000006003300270000009ed03300197000000200430008c000000000403001900000020040080390000001f0540018f00000005064002720000228e0000613d0000000007000019000000050870021000000000098b0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b000022860000413d000000000705004b0000229d0000613d0000000506600210000000000761034f00000000066b00190000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0000000102200190000024340000613d0000001f01400039000000600110018f000000070600002900000004070000290000000001b10019000009f10210009c000023ff0000213d000000400010043f000000200130008c000024030000413d00000000010b0433000000ff0210008c000024030000213d0000004d0210008c0000000604000029000024050000213d000000000201004b0000000503000029000022bc0000613d000000010400003900000001021001900000000002030019000000010200603900000000244200a9000000010210008c000000010110027000000000233300a9000022b40000213d00000000126700d900000000314200a9000000000376004b000023fe0000213d00000000322100d9000000000242004b000023fe0000613d000024050000013d000800000006001d000009ed03000041000009ed0410009c0000000001038019000009ed04a0009c00000000030a40190000004003300210000000c001100210000000000131019f00000a05011001c700060000000a001d27ae27a90000040f000000060a00002900000000030100190000006003300270000009ed03300197000000200430008c000000000403001900000020040080390000001f0540018f0000000506400272000022e30000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b000022db0000413d000000000705004b000022f20000613d0000000506600210000000000761034f00000000066a00190000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f000000010220019000000007050000290000000806000029000024510000613d0000001f01400039000000600210018f0000000001a20019000000000221004b00000000020000190000000102004039000009f10410009c000023ff0000213d0000000102200190000023ff0000c13d000000400010043f000000200130008c000024030000413d00000000010a0433000000ff0210008c000024030000213d0000004d0210008c000024050000213d0000000102000039000000000301004b000023160000613d0000000a03000039000000010200003900000001041001900000000004030019000000010400603900000000422400a9000000010410008c000000010110027000000000433300a90000230e0000213d00000000135600d900000000412300a9000000000465004b000023fe0000213d000023fb0000013d000009ed02000041000009ed0310009c0000000001028019000009ed03a0009c00000000020a40190000004002200210000000c001100210000000000121019f00000a05011001c7000700000005001d000000000205001900040000000a001d27ae27a90000040f000000040a00002900000000030100190000006003300270000009ed03300197000000200430008c000000000403001900000020040080390000001f0540018f00000005064002720000233b0000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b000023330000413d000000000705004b0000234a0000613d0000000506600210000000000761034f00000000066a00190000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f000000010220019000000007050000290000246e0000613d0000001f01400039000000600110018f000000000ba1001900000000021b004b00000000020000190000000102004039000009f104b0009c000023ff0000213d0000000102200190000023ff0000c13d0000004000b0043f000000200230008c000024030000413d00000000060a043300000a450200004100000000002b04350000000402b00039000000080400002900000000004204350000000002000414000000040450008c000700000006001d000023990000613d000009ed01000041000009ed0320009c0000000002018019000009ed03b0009c00000000010b40190000004001100210000000c002200210000000000112019f00000a49011001c7000000000205001900080000000b001d27ae27a90000040f000000080b00002900000000030100190000006003300270000009ed03300197000000200430008c000000000403001900000020040080390000001f0540018f0000000506400272000023840000613d0000000007000019000000050870021000000000098b0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b0000237c0000413d000000000705004b000023930000613d0000000506600210000000000761034f00000000066b00190000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f00000001022001900000248b0000613d0000001f01400039000000600110018f0000000706000029000000000ab10019000009f102a0009c000023ff0000213d0000004000a0043f000000200230008c000024030000413d000000000206004b000024110000613d00000000070b04330000001202000039000000000202041a00000a7e0400004100000000004a04350000000004000414000009f602200197000000040520008c000023df0000613d000600000007001d000009ed01000041000009ed0340009c0000000004018019000009ed03a0009c00000000010a40190000004001100210000000c003400210000000000113019f00000a05011001c700080000000a001d27ae27a90000040f000000080a00002900000000030100190000006003300270000009ed03300197000000200430008c000000000403001900000020040080390000001f0540018f0000000506400272000023c90000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b000023c10000413d000000000705004b000023d80000613d0000000506600210000000000761034f00000000066a00190000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0000000102200190000024ae0000613d0000001f01400039000000600110018f000000070600002900000006070000290000000001a10019000009f10210009c000023ff0000213d000000400010043f000000200130008c000024030000413d00000000010a0433000000ff0210008c000024030000213d0000004d0210008c000024050000213d0000000102000039000000000301004b000023f70000613d0000000a03000039000000010200003900000001041001900000000004030019000000010400603900000000422400a9000000010410008c000000010110027000000000433300a9000023ef0000213d00000000136700d900000000412300a9000000000476004b000023fe0000213d00000000433100d9000000000223004b000024050000c13d000000000001042d00000a710100004100000000001004350000004101000039000024140000013d0000000001000019000027b00001043000000a710100004100000000001004350000001101000039000024140000013d00000a5d010000410000000000120435000009ed01000041000009ed0320009c0000000002018019000000400120021000000a05011001c7000027b00001043000000a710100004100000000001004350000001201000039000000040010043f00000a4901000041000027b000010430000000400200043d0000001f0430018f0000000505300272000024240000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b0000241c0000413d000000000604004b000024330000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f0000000000150435000024a70000013d000000400200043d0000001f0430018f0000000505300272000024410000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b000024390000413d000000000604004b000024500000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f0000000000150435000024ca0000013d000000400200043d0000001f0430018f00000005053002720000245e0000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b000024560000413d000000000604004b000024ca0000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f0000000000150435000024ca0000013d000000400200043d0000001f0430018f00000005053002720000247b0000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b000024730000413d000000000604004b000024a70000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f0000000000150435000024a70000013d000000400200043d0000001f0430018f0000000505300272000024980000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b000024900000413d000000000604004b000024a70000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f0000000000150435000009ed01000041000009ed0420009c000000000201801900000040012002100000006002300210000000000112019f000027b000010430000000400200043d0000001f0430018f0000000505300272000024bb0000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b000024b30000413d000000000604004b000024ca0000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f0000000000150435000009ed01000041000009ed0420009c000000000201801900000040012002100000006002300210000000000121019f000027b000010430000300000000000200000000050200190000000006010019000000000106004b000025450000613d0000001201000039000000000201041a000000400a00043d00000a7e0100004100000000001a04350000000001000414000009f602200197000000040320008c000024e40000c13d0000000103000031000000200130008c00000000040300190000002004008039000025180000013d000200000006001d000300000005001d000009ed03000041000009ed0410009c0000000001038019000009ed04a0009c00000000030a40190000004003300210000000c001100210000000000131019f00000a05011001c700010000000a001d27ae27a90000040f000000010a00002900000000030100190000006003300270000009ed03300197000000200430008c000000000403001900000020040080390000001f0540018f0000000506400272000025040000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b000024fc0000413d000000000705004b000025130000613d0000000506600210000000000761034f00000000066a00190000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0000000102200190000000030500002900000002060000290000254f0000613d0000001f01400039000000600210018f0000000001a20019000000000221004b00000000020000190000000102004039000009f10410009c000025490000213d0000000102200190000025490000c13d000000400010043f000000200130008c0000253f0000413d00000000010a0433000000ff0210008c0000253f0000213d0000004d0210008c000025410000213d0000000102000039000000000301004b000025370000613d0000000a03000039000000010200003900000001041001900000000004030019000000010400603900000000422400a9000000010410008c000000010110027000000000433300a90000252f0000213d00000000136500d900000000412300a9000000000456004b0000253e0000213d00000000433100d9000000000223004b000025410000c13d000000000001042d0000000001000019000027b00001043000000a7101000041000000000010043500000011010000390000254c0000013d00000a7101000041000000000010043500000012010000390000254c0000013d00000a710100004100000000001004350000004101000039000000040010043f00000a4901000041000027b000010430000000400200043d0000001f0430018f00000005053002720000255c0000613d000000000600001900000005076002100000000008720019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b000025540000413d000000000604004b0000256b0000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f0000000000150435000009ed01000041000009ed0420009c000000000201801900000040012002100000006002300210000000000112019f000027b000010430000b000000000002000b00000002001d000000400800043d00000a7d0280009c000026910000813d000000a002800039000000400020043f0000000102000039000100000002001d000000000202041a00000000032804360000000202000039000000000202041a000700000003001d000000000023043500000040038000390000000302000039000000000202041a000800000003001d00000000002304350000000402000039000000000402041a000000400200043d0000000003420436000000000504004b000025940000613d00000a01050000410000000006000019000000000705041a000000000373043600000001055000390000000106600039000000000746004b0000258e0000413d00000000032300490000001f033000390005002000000092000000050430017f0000000003240019000000000443004b00000000040000190000000104004039000009f10530009c000026910000213d0000000104400190000026910000c13d000000400030043f00000060038000390000000000230435000a00000008001d00000080038000390000000502000039000000000202041a000000ff022001900000000002000019000000010200c039000600000003001d0000000000230435000009f601100197000900000001001d00000000001004350000000f01000039000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000268f0000613d000000000401043b000000000104041a000000000201004b0000000a03000029000026080000613d000000400300043d000009f50230009c000026910000213d000000a002300039000000400020043f00000000021304360000000101400039000000000101041a000700000002001d0000000000120435000a00000003001d00000040023000390000000201400039000000000101041a000800000002001d0000000000120435000600000004001d0000000301400039000000000301041a000000400200043d000400000002001d000200000003001d0000000002320436000300000002001d0000000000100435000009ed010000410000000002000414000009ed0320009c0000000002018019000000c00120021000000a4c011001c7000080100200003927ae27a90000040f00000001022001900000268f0000613d0000000205000029000000000205004b0000000304000029000025ef0000613d000000000101043b0000000002000019000000000301041a000000000434043600000001011000390000000102200039000000000352004b000025e90000413d000000040500002900000000015400490000001f01100039000000050210017f0000000001520019000000000221004b00000000020000190000000102004039000009f10310009c0000000a030000290000000604000029000026910000213d0000000102200190000026910000c13d000000400010043f000000600130003900000000005104350000000401400039000000000101041a000000ff011001900000000001000019000000010100c0390000008002300039000600000002001d000000000012043500000000010304330000000b0110006c000026970000a13d000000090100002900000000001004350000001001000039000000200010043f000009ed030000410000000001000414000009ed0210009c0000000001038019000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000268f0000613d000000000101043b0000000b020000290000000000200435000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000268f0000613d000000000101043b000000000101041a000000ff0110019000000000020000190000000b05000029000026800000c13d0000000601000039000000000101041a000000000205004b0000264d0000613d00000008020000290000000002020433000000000302004b000026610000613d0000000001120019000000000221004b000000000200001900000001020040390000000102200190000026a00000c13d0000000702000029000000000302043300000000425300a9000000000403004b000026420000613d00000000433200d9000000000353004b000026a00000c13d000b00000012001d0000000b0120006b000000000100001900000001010040390000000101100190000026a00000c13d00000a4d010000410000000000100439000009ed010000410000000002000414000026740000013d00000006020000290000000002020433000000000202004b0000000102000029000026800000c13d00000008020000290000000002020433000000000302004b000026820000613d000b00000012001d0000000b0120006b000000000100001900000001010040390000000101100190000026a00000c13d00000a4d010000410000000000100439000009ed010000410000000002000414000026740000013d00000001035000390000000702000029000000000402043300000000523400a9000000000504004b0000266a0000613d00000000544200d9000000000334004b000026a00000c13d000b00000012001d0000000b0120006b000000000100001900000001010040390000000101100190000026a00000c13d00000a4d010000410000000000100439000009ed010000410000000002000414000009ed0320009c0000000002018019000000c00120021000000a4e011001c70000800b0200003927ae27a90000040f0000000102200190000026a40000613d000000000101043b0000000b0110006c00000000020000190000000102008039000000010120018f000000000001042d00000007020000290000000002020433000b00000012001d0000000b0120006b000000000100001900000001010040390000000101100190000026a00000c13d00000a4d010000410000000000100439000009ed010000410000000002000414000026740000013d0000000001000019000027b00001043000000a710100004100000000001004350000004101000039000000040010043f00000a4901000041000027b000010430000000400100043d00000a70020000410000000000210435000009ed02000041000009ed0310009c0000000001028019000000400110021000000a05011001c7000027b00001043000000a710100004100000000001004350000001101000039000026940000013d000000000001042f0007000000000002000000400700043d000309f60010019c000027750000613d00000a7d0170009c0000276f0000813d000000a001700039000000400010043f0000000101000039000000000101041a00000000011704360000000202000039000000000202041a000000000021043500000040017000390000000302000039000000000202041a00000000002104350000000401000039000000000301041a000000400100043d0000000002310436000000000403004b000026c50000613d00000a01040000410000000005000019000000000604041a000000000262043600000001044000390000000105500039000000000635004b000026bf0000413d00000000021200490000001f022000390007002000000092000000070320017f0000000002130019000000000332004b00000000030000190000000103004039000009f10420009c0000276f0000213d00000001033001900000276f0000c13d000000400020043f00000060027000390000000000120435000400000007001d00000080017000390000000502000039000000000202041a000000ff022001900000000002000019000000010200c0390000000000210435000000030100002900000000001004350000000f01000039000000200010043f000009ed010000410000000002000414000009ed0320009c0000000002018019000000c001200210000009fd011001c7000080100200003927ae27a90000040f00000001022001900000276d0000613d000000000401043b000000000104041a000000000201004b0000000403000029000027340000613d000000400300043d000009f50230009c0000276f0000213d000000a002300039000000400020043f00000000011304360000000102400039000000000202041a0000000000210435000400000003001d00000040013000390000000202400039000000000202041a0000000000210435000600000004001d0000000301400039000000000301041a000000400200043d000500000002001d000100000003001d0000000002320436000200000002001d0000000000100435000009ed010000410000000002000414000009ed0320009c0000000002018019000000c00120021000000a4c011001c7000080100200003927ae27a90000040f00000001022001900000276d0000613d0000000105000029000000000205004b00000002040000290000271c0000613d000000000101043b0000000002000019000000000301041a000000000434043600000001011000390000000102200039000000000352004b000027160000413d000000050500002900000000015400490000001f01100039000000070210017f0000000001520019000000000221004b00000000020000190000000102004039000009f10310009c000000040300002900000006040000290000276f0000213d00000001022001900000276f0000c13d000000400010043f000000600130003900000000005104350000000401400039000000000101041a000000ff011001900000000001000019000000010100c039000000800230003900000000001204350000000001030433000000000101004b00000000050000190000276b0000613d000200100000003d000009ed04000041000080100200003900000000010000190000000005000019000400000003001d000600000002001d000700000001001d000500000005001d000000030100002900000000001004350000000201000029000000200010043f0000000001000414000009ed0310009c0000000001048019000000c001100210000009fd011001c727ae27a90000040f00000001022001900000276d0000613d000000000101043b00000007020000290000000000200435000000200010043f0000000001000414000009ed0210009c000009ed01008041000000c001100210000009fd011001c7000000060200002927ae27a90000040f00000001022001900000276d0000613d000000000101043b000000000101041a000000ff01100190000000070600002900000000050600190000000505006029000000010660003900000004030000290000000001030433000000000116004b000009ed04000041000000060200002900000000010600190000273f0000413d000000010100008a000000000115004b0000277d0000613d0000000101500039000000000001042d0000000001000019000027b00001043000000a710100004100000000001004350000004101000039000000040010043f00000a4901000041000027b00001043000000a5d010000410000000000170435000009ed01000041000009ed0270009c0000000007018019000000400170021000000a05011001c7000027b00001043000000a710100004100000000001004350000001101000039000027720000013d000009f601100198000027840000613d000000000001042d000000400100043d00000a5d020000410000000000210435000009ed02000041000009ed0310009c0000000001028019000000400110021000000a05011001c7000027b000010430000000000001042f000009ed03000041000009ed0410009c00000000010380190000004001100210000009ed0420009c00000000020380190000006002200210000000000112019f0000000002000414000009ed0420009c0000000002038019000000c002200210000000000112019f000009fa011001c7000080100200003927ae27a90000040f0000000102200190000027a20000613d000000000101043b000000000001042d0000000001000019000027b000010430000027a7002104210000000102000039000000000001042d0000000002000019000000000001042d000027ac002104230000000102000039000000000001042d0000000002000019000000000001042d000027ae00000432000027af0001042e000027b00001043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000009fffffffffffffffffffffffffffffffffffffffffffffffff000000000000007f00000000000000000000000000000000000000000000000000000001ffffffe0000000000000000000000000000000000000000000000000ffffffffffffffff8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffff9f000000000000000000000000000000000000000000000000fffffffffffffeff000000000000000000000000000000000000000000000000ffffffffffffff5f000000000000000000000000ffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000ffffffffffffffbf6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b1299b6a38f4cd1a4aadffdac39262d30244a01098753e138ed68abcfd87ee4820200000000000000000000000000000000000000000000000000000000000000bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ffdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4202000000000000000000000000000000000000400000000000000000000000001299b6a38f4cd1a4aadffdac39262d30244a01098753e138ed68abcfd87ee4812f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d5cbfc8ee58ca47855df7bcf648dd304ddb6b932f9b87878bdf6318d7ec7ee5b78a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19bffffffffffffffffffffffff0000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000028cec4b60000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000002729bb3400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009289789f00000000000000000000000000000000000000000000000000000000cfa0ef6300000000000000000000000000000000000000000000000000000000e49f683400000000000000000000000000000000000000000000000000000000ed6e45c700000000000000000000000000000000000000000000000000000000ed6e45c800000000000000000000000000000000000000000000000000000000fe0d7fbf00000000000000000000000000000000000000000000000000000000fe671bdc00000000000000000000000000000000000000000000000000000000e49f683500000000000000000000000000000000000000000000000000000000e7b6167d00000000000000000000000000000000000000000000000000000000e985e36700000000000000000000000000000000000000000000000000000000daf6ca2f00000000000000000000000000000000000000000000000000000000daf6ca3000000000000000000000000000000000000000000000000000000000e31e62d900000000000000000000000000000000000000000000000000000000e480bd7900000000000000000000000000000000000000000000000000000000cfa0ef6400000000000000000000000000000000000000000000000000000000d547741f00000000000000000000000000000000000000000000000000000000d8f3c99d00000000000000000000000000000000000000000000000000000000a37f9d2400000000000000000000000000000000000000000000000000000000b9edb3a400000000000000000000000000000000000000000000000000000000b9edb3a500000000000000000000000000000000000000000000000000000000bf5a0c5900000000000000000000000000000000000000000000000000000000cd861e1600000000000000000000000000000000000000000000000000000000a37f9d2500000000000000000000000000000000000000000000000000000000ac97b41700000000000000000000000000000000000000000000000000000000ad4222c7000000000000000000000000000000000000000000000000000000009a68404c000000000000000000000000000000000000000000000000000000009a68404d000000000000000000000000000000000000000000000000000000009bb395b000000000000000000000000000000000000000000000000000000000a217fddf00000000000000000000000000000000000000000000000000000000928978a0000000000000000000000000000000000000000000000000000000009903a4c1000000000000000000000000000000000000000000000000000000003c8ffc630000000000000000000000000000000000000000000000000000000063b8476a000000000000000000000000000000000000000000000000000000007eb16ac1000000000000000000000000000000000000000000000000000000007eb16ac20000000000000000000000000000000000000000000000000000000085489f230000000000000000000000000000000000000000000000000000000091d148540000000000000000000000000000000000000000000000000000000063b8476b0000000000000000000000000000000000000000000000000000000075420c9900000000000000000000000000000000000000000000000000000000786b44560000000000000000000000000000000000000000000000000000000050ef5d490000000000000000000000000000000000000000000000000000000050ef5d4a000000000000000000000000000000000000000000000000000000005410c77b000000000000000000000000000000000000000000000000000000005679a0ed000000000000000000000000000000000000000000000000000000003c8ffc64000000000000000000000000000000000000000000000000000000003e1043bf00000000000000000000000000000000000000000000000000000000274dab59000000000000000000000000000000000000000000000000000000002f2ff15c000000000000000000000000000000000000000000000000000000002f2ff15d00000000000000000000000000000000000000000000000000000000334aa9f10000000000000000000000000000000000000000000000000000000036568abe00000000000000000000000000000000000000000000000000000000274dab5a000000000000000000000000000000000000000000000000000000002a0acc6a000000000000000000000000000000000000000000000000000000002dee1fe80000000000000000000000000000000000000000000000000000000017a769540000000000000000000000000000000000000000000000000000000017a76955000000000000000000000000000000000000000000000000000000001ac7eaf500000000000000000000000000000000000000000000000000000000248a9ca30000000000000000000000000000000000000000000000000000000001ffc9a700000000000000000000000000000000000000000000000000000000117803e3000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000800000008000000000000000005e87e5a600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002400000080000000000000000085c06faa00000000000000000000000000000000000000000000000000000000cf72d3db0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000240000000000000000000000008c85e4bc000000000000000000000000000000000000000000000000000000002f0e159d000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000020000000000000000000000000796b89b91644bc98cd93958e4c9038275d622183e25ac5af08cc6b5d95539132020000020000000000000000000000000000000400000000000000000000000070a082310000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000a000000000000000000000000037a4c2c80e2c1b068fbe7ab8e6153e26f6abf47b430cb36b03f6c39b2db35799a9059cbb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044000000000000000000000000f83e23f500000000000000000000000000000000000000000000000000000000e23f04e10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000008000000000000000008feb0a7153cadea0dc333f048b85018294754240c350d2b2c10a4c0b8ccac44d07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7b9af4016ea794462793972f3d17adc8c498aac9f3baf41022e8469fa8f76bb200000000000000000000000000000000000000400000008000000000000000000f9e68e6000000000000000000000000000000000000000000000000000000003bde95f8dbdfe169f6663dd0f17dd76cfe84cca069d48fcda8275c0ef25646d63efa09af00000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff00000000000001205f1e377d000000000000000000000000000000000000000000000000000000008f78e5300000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000c00000000000000000000000003d8339dd16c2311bf6ab491c826f9ecd3fe1858e58fe77f10c63eb2b03fdbc1423ec979c000000000000000000000000000000000000000000000000000000004a7d91d48d7631fbad39b1025ee81e57e99a3babe757f2a29b9fd407349d0855e971510200000000000000000000000000000000000000000000000000000000dd62ed3e0000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000600000000000000000000000003d3828369183a98b7c1119e7cea475fa7365971789c1ba8451f5b30d7f3c149b23b872dd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064000000000000000000000000384d3c590000000000000000000000000000000000000000000000000000000073a74a780000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0000000800000000000000000f7d6bdf3ee749ac722ba01e58fd4c87234b2948c0d9b5a0232d6be227c8be2fa690cd635000000000000000000000000000000000000000000000000000000004e487b71000000000000000000000000000000000000000000000000000000002a0deec9b25e9145e93f5ac49843d67610cc09e31d9010fdaa4bf410888a259a7a8d64280000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000008000000000000000006697b23200000000000000000000000000000000000000000000000000000000b2405cc84542f567f9b670db7d7ec04b9907b651cddfdfcd11f8474cb8f16e798b5701f700000000000000000000000000000000000000000000000000000000e2517d3f00000000000000000000000000000000000000000000000000000000ffffffff0000000000000000000000000000000000000000000000000000000001ffc9a7000000000000000000000000000000000000000000000000000000007965db0b00000000000000000000000000000000000000000000000000000000f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b000000000000000000000000000000000000000000000000ffffffffffffff60313ce5670000000000000000000000000000000000000000000000000000000006c8e31600000000000000000000000000000000000000000000000000000000cef2d4b50023e35a9b82e66a2e788e5eb9cfec32136790b16af0abdc0d63d429"},"methodIdentifiers":{"ADMIN()":"2a0acc6a","DEFAULT_ADMIN_ROLE()":"a217fddf","OWNER()":"117803e3","addSaleToken(uint256)":"9903a4c1","calculateSaleTokenAmount(uint256,uint256)":"fe671bdc","claimAllUnlockedVestings()":"ed6e45c8","claimVesting(uint256)":"ac97b417","customVestings(address)":"fe0d7fbf","defaultVesting()":"b9edb3a5","emergencyOnly()":"9a68404d","getAnyVestingClaimed(address)":"786b4456","getCustomVestingPercentages(address)":"9bb395b0","getDefaultVestingPercentages()":"1ac7eaf5","getFactoryContractAddress()":"63b8476b","getNextUnlockDate(address)":"3e1043bf","getRoleAdmin(bytes32)":"248a9ca3","getSaleTokenAddress()":"2dee1fe8","getTotalVestingAmount()":"17a76955","getUserLockedTokenAmount(address)":"85489f23","getUserNextVestingIndex(address)":"274dab5a","getUserTotalVestingAmount(address)":"bf5a0c59","getUserUnclaimedTokenAmount(address)":"cd861e16","getUserUnlockedTokenAmount(address)":"5410c77b","getVestingClaimable(address,uint256)":"5679a0ed","getVestingClaimed(address,uint256)":"7eb16ac2","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","investmentAmounts(address)":"ad4222c7","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","saleContract()":"daf6ca30","saleToken()":"e985e367","setCustomVesting(address,(uint256,uint256,uint256,uint256[],bool))":"cfa0ef64","setCustomVestings(address[],(uint256,uint256,uint256,uint256[],bool)[])":"d8f3c99d","setDefaultVesting((uint256,uint256,uint256,uint256[],bool))":"a37f9d25","setTotalSaleTokenAmount(uint256)":"e7b6167d","setTotalVestingAmount(uint256)":"75420c99","setUserInvestmentAmount(address,uint256)":"50ef5d4a","setUserInvestmentAmounts(address[],uint256[])":"e49f6835","setVestingAddresses((address,address,address,address,address))":"334aa9f1","supportsInterface(bytes4)":"01ffc9a7","vestingAddresses()":"928978a0","vestingClaimed(address,uint256)":"e31e62d9","vestingSettings()":"3c8ffc64","vestingStatistics()":"e480bd79"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 1:\"@openzeppelin/contracts/access/IAccessControl.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 6:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 7:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\", 8:\"contracts/core/DappadVesting.sol\"\nobject \"DappadVesting_3487\" {\n    code {\n        {\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"DappadVesting_3487\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            let offset := mload(memoryDataOffset)\n            if gt(offset, sub(shl(64, 1), 1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            let _2 := add(memoryDataOffset, offset)\n            let _3 := sub(_1, _2)\n            if slt(_3, 0x0100)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            let memPtr := mload(64)\n            let newFreePtr := add(memPtr, 0x60)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            let offset_1 := mload(_2)\n            if gt(offset_1, sub(shl(64, 1), 1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            let _4 := add(_2, offset_1)\n            if slt(sub(_1, _4), 0xa0)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            let value := allocate_memory_9855()\n            mstore(value, mload(_4))\n            mstore(add(value, 32), mload(add(_4, 32)))\n            mstore(add(value, 64), mload(add(_4, 64)))\n            let offset_2 := mload(add(_4, 0x60))\n            if gt(offset_2, sub(shl(64, 1), 1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            let _5 := add(_4, offset_2)\n            if iszero(slt(add(_5, 0x1f), _1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            let _6 := mload(_5)\n            let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_6))\n            let dst_1 := dst\n            mstore(dst, _6)\n            dst := add(dst, 32)\n            let srcEnd := add(add(_5, shl(5, _6)), 32)\n            if gt(srcEnd, _1)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            let src := add(_5, 32)\n            for { } lt(src, srcEnd) { src := add(src, 32) }\n            {\n                mstore(dst, mload(src))\n                dst := add(dst, 32)\n            }\n            mstore(add(value, 0x60), dst_1)\n            let value_1 := mload(add(_4, 128))\n            if iszero(eq(value_1, iszero(iszero(value_1))))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            mstore(add(value, 128), value_1)\n            mstore(memPtr, value)\n            if slt(add(_3, not(31)), 0xa0)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            let value_2 := allocate_memory_9855()\n            mstore(value_2, abi_decode_address_fromMemory(add(_2, 32)))\n            mstore(add(value_2, 32), abi_decode_address_fromMemory(add(_2, 64)))\n            mstore(add(value_2, 64), abi_decode_address_fromMemory(add(_2, 0x60)))\n            mstore(add(value_2, 0x60), abi_decode_address_fromMemory(add(_2, 128)))\n            mstore(add(value_2, 128), abi_decode_address_fromMemory(add(_2, 0xa0)))\n            mstore(add(memPtr, 32), value_2)\n            if slt(add(_3, not(191)), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            let memPtr_1 := mload(64)\n            let newFreePtr_1 := add(memPtr_1, 64)\n            if or(gt(newFreePtr_1, sub(shl(64, 1), 1)), lt(newFreePtr_1, memPtr_1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr_1)\n            mstore(memPtr_1, mload(add(_2, 192)))\n            mstore(add(memPtr_1, 32), mload(add(_2, 224)))\n            mstore(add(memPtr, 64), memPtr_1)\n            /// @src 8:3824:3832  \"_address\"\n            fun_notZeroAddress(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(mload(/** @src 8:2009:2039  \"vestingParams.vestingAddresses\" */ mload(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ add(memPtr, 32))), sub(shl(160, 1), 1)))\n            /// @src 8:3824:3832  \"_address\"\n            fun_notZeroAddress(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(mload(/** @src 8:2082:2135  \"vestingParams.vestingAddresses.factoryContractAddress\" */ add(/** @src 8:2082:2112  \"vestingParams.vestingAddresses\" */ mload(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ add(memPtr, 32)), 32)), sub(shl(160, 1), 1)))\n            /// @src 8:3824:3832  \"_address\"\n            fun_notZeroAddress(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(mload(/** @src 8:2161:2204  \"vestingParams.vestingAddresses.ownerAddress\" */ add(/** @src 8:2161:2191  \"vestingParams.vestingAddresses\" */ mload(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ add(memPtr, 32)), 0x60)), sub(shl(160, 1), 1)))\n            /// @src 8:3824:3832  \"_address\"\n            fun_notZeroAddress(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(mload(/** @src 8:2230:2273  \"vestingParams.vestingAddresses.adminAddress\" */ add(/** @src 8:2230:2260  \"vestingParams.vestingAddresses\" */ mload(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ add(memPtr, 32)), 128)), sub(shl(160, 1), 1)))\n            /// @src 8:335:353  \"keccak256(\\\"OWNER\\\")\"\n            let _7 := 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 8:335:353  \"keccak256(\\\"OWNER\\\")\" */ _7)\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            mstore(32, /** @src -1:-1:-1 */ 0)\n            /// @src 0:3901:3923  \"_roles[role].adminRole\"\n            let _8 := add(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 64), /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            let _9 := sload(_8)\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(_8, /** @src 8:335:353  \"keccak256(\\\"OWNER\\\")\" */ _7)\n            /// @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\"\n            let _10 := 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff\n            log4(/** @src -1:-1:-1 */ 0, 0, /** @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\" */ _10, /** @src 8:335:353  \"keccak256(\\\"OWNER\\\")\" */ _7, /** @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\" */ _9, /** @src 8:335:353  \"keccak256(\\\"OWNER\\\")\" */ _7)\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            let _11 := 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ _11)\n            /// @src 0:3901:3923  \"_roles[role].adminRole\"\n            let _12 := add(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 64), /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            let _13 := sload(_12)\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(_12, /** @src 8:335:353  \"keccak256(\\\"OWNER\\\")\" */ _7)\n            /// @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\"\n            log4(/** @src -1:-1:-1 */ 0, 0, /** @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\" */ _10, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ _11, /** @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\" */ _13, /** @src 8:335:353  \"keccak256(\\\"OWNER\\\")\" */ _7)\n            /// @src 8:2365:2427  \"_grantRole(OWNER, vestingParams.vestingAddresses.ownerAddress)\"\n            pop(fun_grantRole_9860(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(mload(/** @src 8:2383:2426  \"vestingParams.vestingAddresses.ownerAddress\" */ add(/** @src 8:2383:2413  \"vestingParams.vestingAddresses\" */ mload(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ add(memPtr, 32)), 0x60)), sub(shl(160, 1), 1))))\n            /// @src 8:2437:2499  \"_grantRole(ADMIN, vestingParams.vestingAddresses.adminAddress)\"\n            pop(fun_grantRole(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(mload(/** @src 8:2455:2498  \"vestingParams.vestingAddresses.adminAddress\" */ add(/** @src 8:2455:2485  \"vestingParams.vestingAddresses\" */ mload(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ add(memPtr, 32)), 128)), sub(shl(160, 1), 1))))\n            /// @src 8:2518:2626  \"if (vestingParams.defaultVesting.vestingPercentages.length == 0) revert Errors.EmptyVestingPercentageError()\"\n            if /** @src 8:2522:2581  \"vestingParams.defaultVesting.vestingPercentages.length == 0\" */ iszero(/** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ mload(/** @src 8:2522:2569  \"vestingParams.defaultVesting.vestingPercentages\" */ mload(add(/** @src 8:2522:2550  \"vestingParams.defaultVesting\" */ mload(memPtr), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x60))))\n            /// @src 8:2518:2626  \"if (vestingParams.defaultVesting.vestingPercentages.length == 0) revert Errors.EmptyVestingPercentageError()\"\n            {\n                /// @src 8:2590:2626  \"Errors.EmptyVestingPercentageError()\"\n                let _14 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                /// @src 8:2590:2626  \"Errors.EmptyVestingPercentageError()\"\n                mstore(_14, shl(226, 0x09ca6ecd))\n                revert(_14, 4)\n            }\n            /// @src 8:2636:2734  \"if (vestingParams.defaultVesting.vestingDuration <= 0) revert Errors.InvalidVestingDurationError()\"\n            if /** @src 8:2640:2689  \"vestingParams.defaultVesting.vestingDuration <= 0\" */ iszero(/** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ mload(/** @src 8:2640:2684  \"vestingParams.defaultVesting.vestingDuration\" */ add(/** @src 8:2640:2668  \"vestingParams.defaultVesting\" */ mload(memPtr), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32)))\n            /// @src 8:2636:2734  \"if (vestingParams.defaultVesting.vestingDuration <= 0) revert Errors.InvalidVestingDurationError()\"\n            {\n                /// @src 8:2698:2734  \"Errors.InvalidVestingDurationError()\"\n                let _15 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                /// @src 8:2698:2734  \"Errors.InvalidVestingDurationError()\"\n                mstore(_15, shl(225, 0x1467625b))\n                revert(_15, 4)\n            }\n            /// @src 8:2762:2790  \"vestingParams.defaultVesting\"\n            let _16 := mload(memPtr)\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ mload(_16))\n            sstore(2, mload(add(_16, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32)))\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(3, mload(add(_16, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 64)))\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            let _17 := mload(add(_16, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x60))\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            let length := mload(_17)\n            if gt(length, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(64, 1), 1))\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            {\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 4, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x24)\n            }\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            if gt(length, 18446744073709551616)\n            {\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 4, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x24)\n            }\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            let oldLen := sload(4)\n            sstore(4, length)\n            if lt(length, oldLen)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 4)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32)\n                /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                let start := add(data, length)\n                for { }\n                lt(start, add(data, oldLen))\n                {\n                    start := add(start, /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n                }\n                /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            let srcPtr := add(_17, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32)\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 4)\n            let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32)\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            for { }\n            lt(i, length)\n            {\n                i := add(i, /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n            }\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            {\n                let _18 := mload(srcPtr)\n                srcPtr := add(srcPtr, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32)\n                /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                sstore(add(data_1, i), _18)\n            }\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            let _19 := iszero(iszero(/** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ mload(add(_16, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 128))))\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            let value_3 := and(sload(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 5), /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ not(255))\n            sstore(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 5, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ or(value_3, and(_19, 255)))\n            /// @src 8:2828:2858  \"vestingParams.vestingAddresses\"\n            let _mpos := mload(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ add(memPtr, 32))\n            let cleaned := and(mload(/** @src 8:2828:2875  \"vestingParams.vestingAddresses.saleTokenAddress\" */ _mpos), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1))\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            let _20 := not(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1))\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(/** @src 8:2801:2876  \"saleToken = IERC20Extented(vestingParams.vestingAddresses.saleTokenAddress)\" */ 0x12, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ or(and(sload(/** @src 8:2801:2876  \"saleToken = IERC20Extented(vestingParams.vestingAddresses.saleTokenAddress)\" */ 0x12), /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ _20), cleaned))\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            let cleaned_1 := and(mload(/** @src 8:2891:2941  \"vestingParams.vestingAddresses.saleContractAddress\" */ add(_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 64)), sub(shl(160, 1), 1))\n            /// @src 8:2887:3060  \"if (vestingParams.vestingAddresses.saleContractAddress != address(0)) {...\"\n            if /** @src 8:2891:2955  \"vestingParams.vestingAddresses.saleContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ cleaned_1))\n            /// @src 8:2887:3060  \"if (vestingParams.vestingAddresses.saleContractAddress != address(0)) {...\"\n            {\n                /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                sstore(/** @src 8:2971:3049  \"saleContract = IDappadSale(vestingParams.vestingAddresses.saleContractAddress)\" */ 0x13, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ or(and(sload(/** @src 8:2971:3049  \"saleContract = IDappadSale(vestingParams.vestingAddresses.saleContractAddress)\" */ 0x13), /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ _20), cleaned_1))\n            }\n            /// @src 8:3088:3117  \"vestingParams.vestingSettings\"\n            let _21 := mload(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ add(memPtr, 64))\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(/** @src 8:3070:3117  \"vestingSettings = vestingParams.vestingSettings\" */ 0x06, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ mload(_21))\n            sstore(7, mload(add(_21, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32)))\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(/** @src 8:3136:3185  \"vestingAddresses = vestingParams.vestingAddresses\" */ 0x08, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ or(and(sload(/** @src 8:3136:3185  \"vestingAddresses = vestingParams.vestingAddresses\" */ 0x08), /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ _20), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ cleaned))\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(9, or(and(sload(9), _20), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(mload(/** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ add(_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32)), sub(shl(160, 1), 1))))\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(10, or(and(sload(10), _20), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ cleaned_1))\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(11, or(and(sload(11), _20), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(mload(/** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ add(_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x60)), sub(shl(160, 1), 1))))\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            sstore(12, or(and(sload(12), _20), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(mload(/** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ add(_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 128)), sub(shl(160, 1), 1))))\n            /// @src 8:3196:3230  \"uint256 totalVestingPercentage = 0\"\n            let var_totalVestingPercentage := /** @src -1:-1:-1 */ 0\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            let length_1 := mload(/** @src 8:3291:3338  \"vestingParams.defaultVesting.vestingPercentages\" */ mload(add(/** @src 8:3291:3319  \"vestingParams.defaultVesting\" */ mload(memPtr), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x60)))\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            let memPtr_2 := allocate_memory(array_allocation_size_array_uint256_dyn(length_1))\n            mstore(memPtr_2, length_1)\n            let dataSize := array_allocation_size_array_uint256_dyn(length_1)\n            let dataStart := add(memPtr_2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32)\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            calldatacopy(dataStart, calldatasize(), add(dataSize, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ not(31)))\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            let length_2 := mload(memPtr_2)\n            if gt(length_2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(64, 1), 1))\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            {\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 4, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x24)\n            }\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            if gt(length_2, 18446744073709551616)\n            {\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 4, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x24)\n            }\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            let oldLen_1 := sload(4)\n            sstore(4, length_2)\n            if lt(length_2, oldLen_1)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 4)\n                let data_2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32)\n                /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                let _22 := add(data_2, oldLen_1)\n                let start_1 := add(data_2, length_2)\n                for { }\n                lt(start_1, _22)\n                {\n                    start_1 := add(start_1, /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n                }\n                /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            let srcPtr_1 := dataStart\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 4)\n            let data_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32)\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            let i_1 := /** @src -1:-1:-1 */ 0\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            for { }\n            lt(i_1, length_2)\n            {\n                i_1 := add(i_1, /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n            }\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            {\n                let _23 := mload(srcPtr_1)\n                srcPtr_1 := add(srcPtr_1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32)\n                /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                sstore(add(data_3, i_1), _23)\n            }\n            /// @src 8:3369:3382  \"uint256 i = 0\"\n            let var_i := /** @src -1:-1:-1 */ 0\n            /// @src 8:3365:3653  \"for(uint256 i = 0; i < vestingParams.defaultVesting.vestingPercentages.length; i++) {...\"\n            for { }\n            /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1\n            /// @src 8:3369:3382  \"uint256 i = 0\"\n            {\n                /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                if eq(var_i, not(0))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 0x24)\n                }\n                /// @src 8:3444:3447  \"i++\"\n                var_i := /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ add(var_i, /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n            }\n            /// @src 8:3444:3447  \"i++\"\n            {\n                /// @src 8:3388:3435  \"vestingParams.defaultVesting.vestingPercentages\"\n                let _mpos_1 := mload(add(/** @src 8:3388:3416  \"vestingParams.defaultVesting\" */ mload(memPtr), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x60))\n                /// @src 8:3384:3442  \"i < vestingParams.defaultVesting.vestingPercentages.length\"\n                if iszero(lt(var_i, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ mload(/** @src 8:3388:3442  \"vestingParams.defaultVesting.vestingPercentages.length\" */ _mpos_1)))\n                /// @src 8:3384:3442  \"i < vestingParams.defaultVesting.vestingPercentages.length\"\n                { break }\n                /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                let _24 := mload(/** @src 8:3502:3552  \"vestingParams.defaultVesting.vestingPercentages[i]\" */ memory_array_index_access_uint256_dyn(_mpos_1, var_i))\n                /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                if iszero(lt(var_i, sload(4)))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    mstore(4, 0x32)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 4)\n                sstore(add(keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32), /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ var_i), _24)\n                let sum := add(var_totalVestingPercentage, mload(/** @src 8:3592:3642  \"vestingParams.defaultVesting.vestingPercentages[i]\" */ memory_array_index_access_uint256_dyn(/** @src 8:3592:3639  \"vestingParams.defaultVesting.vestingPercentages\" */ mload(add(/** @src 8:3592:3620  \"vestingParams.defaultVesting\" */ mload(memPtr), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x60)), /** @src 8:3592:3642  \"vestingParams.defaultVesting.vestingPercentages[i]\" */ var_i)))\n                /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                if gt(var_totalVestingPercentage, sum)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 0x24)\n                }\n                /// @src 8:3566:3642  \"totalVestingPercentage += vestingParams.defaultVesting.vestingPercentages[i]\"\n                var_totalVestingPercentage := sum\n            }\n            /// @src 8:3663:3743  \"if (totalVestingPercentage != 10000) revert Errors.TotalVestingPercentageError()\"\n            if /** @src 8:3667:3698  \"totalVestingPercentage != 10000\" */ iszero(eq(var_totalVestingPercentage, /** @src 8:3693:3698  \"10000\" */ 0x2710))\n            /// @src 8:3663:3743  \"if (totalVestingPercentage != 10000) revert Errors.TotalVestingPercentageError()\"\n            {\n                /// @src 8:3707:3743  \"Errors.TotalVestingPercentageError()\"\n                let _25 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                /// @src 8:3707:3743  \"Errors.TotalVestingPercentageError()\"\n                mstore(_25, shl(225, 0x74b8a881))\n                revert(_25, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 4)\n            }\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            let _26 := mload(64)\n            let _27 := datasize(\"DappadVesting_3487_deployed\")\n            codecopy(_26, dataoffset(\"DappadVesting_3487_deployed\"), _27)\n            return(_26, _27)\n        }\n        function allocate_memory_9855() -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, 0xa0)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function array_allocation_size_array_uint256_dyn(length) -> size\n        {\n            if gt(length, sub(shl(64, 1), 1))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            size := add(shl(5, length), 0x20)\n        }\n        function abi_decode_address_fromMemory(offset) -> value\n        {\n            value := mload(offset)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        }\n        /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n        function memory_array_index_access_uint256_dyn(baseRef, index) -> addr\n        {\n            if iszero(lt(index, mload(baseRef)))\n            {\n                mstore(0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                mstore(4, 0x32)\n                revert(0, 0x24)\n            }\n            addr := add(add(baseRef, shl(5, index)), 32)\n        }\n        /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n        function fun_grantRole_9860(var_account) -> var_\n        {\n            /// @src 8:335:353  \"keccak256(\\\"OWNER\\\")\"\n            let _1 := 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b\n            /// @src 0:2954:2960  \"_roles\"\n            let _2 := 0x00\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:335:353  \"keccak256(\\\"OWNER\\\")\" */ _1)\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _2)\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            let _3 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n            let _4 := and(var_account, sub(shl(160, 1), 1))\n            mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4)\n            mstore(0x20, _3)\n            /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)), 0xff))\n            case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                /// @src 0:6466:6478  \"return false\"\n                var_ := /** @src 0:2954:2960  \"_roles\" */ _2\n                /// @src 0:6466:6478  \"return false\"\n                leave\n            }\n            default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:335:353  \"keccak256(\\\"OWNER\\\")\" */ _1)\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _2)\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                let _5 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4)\n                mstore(0x20, _5)\n                let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 0:2954:2960  \"_roles\" */ _2, _2, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 8:335:353  \"keccak256(\\\"OWNER\\\")\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4, /** @src 4:735:745  \"msg.sender\" */ caller())\n                /// @src 0:6424:6435  \"return true\"\n                var_ := /** @src 0:6347:6351  \"true\" */ 0x01\n                /// @src 0:6424:6435  \"return true\"\n                leave\n            }\n        }\n        /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n        function fun_grantRole(var_account) -> var\n        {\n            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n            let _1 := 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n            /// @src 0:2954:2960  \"_roles\"\n            let _2 := 0x00\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ _1)\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _2)\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            let _3 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n            let _4 := and(var_account, sub(shl(160, 1), 1))\n            mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4)\n            mstore(0x20, _3)\n            /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)), 0xff))\n            case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                /// @src 0:6466:6478  \"return false\"\n                var := /** @src 0:2954:2960  \"_roles\" */ _2\n                /// @src 0:6466:6478  \"return false\"\n                leave\n            }\n            default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ _1)\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _2)\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                let _5 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4)\n                mstore(0x20, _5)\n                let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 0:2954:2960  \"_roles\" */ _2, _2, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4, /** @src 4:735:745  \"msg.sender\" */ caller())\n                /// @src 0:6424:6435  \"return true\"\n                var := /** @src 0:6347:6351  \"true\" */ 0x01\n                /// @src 0:6424:6435  \"return true\"\n                leave\n            }\n        }\n        /// @ast-id 3415 @src 8:21889:22023  \"function _notZeroAddress(address _address) internal pure {...\"\n        function fun_notZeroAddress(var_address)\n        {\n            /// @src 8:21956:22016  \"if (_address == address(0)) revert Errors.ZeroAddressError()\"\n            if /** @src 8:21960:21982  \"_address == address(0)\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(/** @src 8:21960:21982  \"_address == address(0)\" */ var_address, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1)))\n            /// @src 8:21956:22016  \"if (_address == address(0)) revert Errors.ZeroAddressError()\"\n            {\n                /// @src 8:21991:22016  \"Errors.ZeroAddressError()\"\n                let _1 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                /// @src 8:21991:22016  \"Errors.ZeroAddressError()\"\n                mstore(_1, shl(224, 0x3efa09af))\n                revert(_1, 4)\n            }\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 6:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 8:\"contracts/core/DappadVesting.sol\"\n    object \"DappadVesting_3487_deployed\" {\n        code {\n            {\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _2 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _2)) { revert(0, 0) }\n                        /// @src 0:2673:2760  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        let expr := /** @src 0:2673:2720  \"interfaceId == type(IAccessControl).interfaceId\" */ eq(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _2, /** @src 0:2688:2720  \"type(IAccessControl).interfaceId\" */ shl(224, 0x7965db0b))\n                        /// @src 0:2673:2760  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 6:861:901  \"interfaceId == type(IERC165).interfaceId\" */ eq(_2, /** @src 6:876:901  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                        }\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(_1, iszero(iszero(expr)))\n                        return(_1, 32)\n                    }\n                    case 0x117803e3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos := mload(64)\n                        mstore(memPos, /** @src 8:335:353  \"keccak256(\\\"OWNER\\\")\" */ 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        return(memPos, 32)\n                    }\n                    case 0x17a76955 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _3 := sload(/** @src 8:21576:21593  \"vestingStatistics\" */ 0x0d)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, _3)\n                        return(memPos_1, 32)\n                    }\n                    case 0x1ac7eaf5 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let pos := mload(64)\n                        let pos_1 := pos\n                        let length := sload(4)\n                        mstore(pos, length)\n                        let _4 := 0x20\n                        pos := add(pos, _4)\n                        mstore(0, 4)\n                        let srcPtr := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, 1) }\n                        {\n                            mstore(pos, sload(srcPtr))\n                            pos := add(pos, _4)\n                            srcPtr := add(srcPtr, 1)\n                        }\n                        finalize_allocation(pos_1, sub(pos, pos_1))\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, _4)\n                        return(memPos_2, sub(abi_encode_array_uint256_dyn(pos_1, add(memPos_2, _4)), memPos_2))\n                    }\n                    case 0x248a9ca3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, 0)\n                        let _5 := sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ keccak256(0, 64), 1))\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, _5)\n                        return(memPos_3, 32)\n                    }\n                    case 0x274dab5a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        /// @src 8:20707:20714  \"uint256\"\n                        let var := modifier_notZeroAddress_37971(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ abi_decode_address())\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, var)\n                        return(memPos_4, 32)\n                    }\n                    case 0x2a0acc6a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        return(memPos_5, 32)\n                    }\n                    case 0x2dee1fe8 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let cleaned := and(sload(/** @src 8:21705:21721  \"vestingAddresses\" */ 0x08), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1))\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, cleaned)\n                        return(memPos_6, 32)\n                    }\n                    case 0x2f2ff15d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_1 := calldataload(4)\n                        let value1 := abi_decode_address_37972()\n                        mstore(0, value_1)\n                        mstore(32, 0)\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ keccak256(0, 64), 1)))\n                        /// @src 0:4330:4355  \"_grantRole(role, account)\"\n                        pop(fun_grantRole(value_1, value1))\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x334aa9f1 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 160) { revert(0, 0) }\n                        let memPtr := mload(64)\n                        finalize_allocation_37973(memPtr)\n                        mstore(memPtr, abi_decode_address())\n                        let _6 := abi_decode_address_37972()\n                        let _7 := add(memPtr, 32)\n                        mstore(_7, _6)\n                        let value_2 := calldataload(68)\n                        let _8 := sub(shl(160, 1), 1)\n                        if iszero(eq(value_2, and(value_2, _8))) { revert(0, 0) }\n                        let _9 := add(memPtr, 64)\n                        mstore(_9, value_2)\n                        let value_3 := calldataload(100)\n                        if iszero(eq(value_3, and(value_3, _8))) { revert(0, 0) }\n                        let _10 := add(memPtr, 96)\n                        mstore(_10, value_3)\n                        let value_4 := calldataload(132)\n                        if iszero(eq(value_4, and(value_4, _8))) { revert(0, 0) }\n                        let _11 := add(memPtr, 128)\n                        mstore(_11, value_4)\n                        /// @src 8:4020:4028  \"_address\"\n                        fun_onlyOwnerOrAdmin(/** @src 8:13218:13228  \"msg.sender\" */ caller())\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let cleaned_1 := and(mload(memPtr), _8)\n                        let _12 := shl(160, 0xffffffffffffffffffffffff)\n                        sstore(/** @src 8:13255:13293  \"vestingAddresses = newVestingAddresses\" */ 0x08, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ or(and(sload(/** @src 8:13255:13293  \"vestingAddresses = newVestingAddresses\" */ 0x08), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _12), cleaned_1))\n                        sstore(9, or(and(sload(9), _12), and(mload(_7), _8)))\n                        let cleaned_2 := and(mload(_9), _8)\n                        sstore(10, or(and(sload(10), _12), cleaned_2))\n                        sstore(11, or(and(sload(11), _12), and(mload(_10), _8)))\n                        sstore(12, or(and(sload(12), _12), and(mload(_11), _8)))\n                        /// @src 8:13304:13449  \"if (newVestingAddresses.saleTokenAddress != address(0)) {...\"\n                        if /** @src 8:13308:13358  \"newVestingAddresses.saleTokenAddress != address(0)\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ cleaned_1))\n                        /// @src 8:13304:13449  \"if (newVestingAddresses.saleTokenAddress != address(0)) {...\"\n                        {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            sstore(/** @src 8:13374:13438  \"saleToken = IERC20Extented(newVestingAddresses.saleTokenAddress)\" */ 0x12, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ or(and(sload(/** @src 8:13374:13438  \"saleToken = IERC20Extented(newVestingAddresses.saleTokenAddress)\" */ 0x12), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _12), cleaned_1))\n                        }\n                        /// @src 8:13459:13610  \"if (newVestingAddresses.saleContractAddress != address(0)) {...\"\n                        if /** @src 8:13463:13516  \"newVestingAddresses.saleContractAddress != address(0)\" */ iszero(iszero(cleaned_2))\n                        /// @src 8:13459:13610  \"if (newVestingAddresses.saleContractAddress != address(0)) {...\"\n                        {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            sstore(/** @src 8:13532:13599  \"saleContract = IDappadSale(newVestingAddresses.saleContractAddress)\" */ 0x13, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ or(and(sload(/** @src 8:13532:13599  \"saleContract = IDappadSale(newVestingAddresses.saleContractAddress)\" */ 0x13), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _12), cleaned_2))\n                        }\n                        /// @src 8:13625:13669  \"VestingAddressesUpdated(newVestingAddresses)\"\n                        let _13 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                        mstore(_13, cleaned_1)\n                        mstore(add(_13, 32), and(mload(_7), _8))\n                        mstore(add(_13, 64), and(mload(_9), _8))\n                        mstore(add(_13, 96), and(mload(_10), _8))\n                        mstore(add(_13, 128), and(mload(_11), _8))\n                        /// @src 8:13625:13669  \"VestingAddressesUpdated(newVestingAddresses)\"\n                        log1(_13, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 160, /** @src 8:13625:13669  \"VestingAddressesUpdated(newVestingAddresses)\" */ 0xb2405cc84542f567f9b670db7d7ec04b9907b651cddfdfcd11f8474cb8f16e79)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, 1)\n                        return(memPos_7, 32)\n                    }\n                    case 0x36568abe {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1_1 := abi_decode_address_37972()\n                        /// @src 0:5417:5519  \"if (callerConfirmation != _msgSender()) {...\"\n                        if /** @src 0:5421:5455  \"callerConfirmation != _msgSender()\" */ iszero(eq(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(/** @src 0:5421:5455  \"callerConfirmation != _msgSender()\" */ value1_1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 4:735:745  \"msg.sender\" */ caller()))\n                        /// @src 0:5417:5519  \"if (callerConfirmation != _msgSender()) {...\"\n                        {\n                            /// @src 0:5478:5508  \"AccessControlBadConfirmation()\"\n                            let _14 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 0:5478:5508  \"AccessControlBadConfirmation()\"\n                            mstore(_14, shl(225, 0x334bd919))\n                            revert(_14, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                        }\n                        /// @src 0:5529:5566  \"_revokeRole(role, callerConfirmation)\"\n                        pop(fun_revokeRole(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ calldataload(4), /** @src 0:5529:5566  \"_revokeRole(role, callerConfirmation)\" */ value1_1))\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x3c8ffc64 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _15 := sload(/** @src 8:466:519  \"IDappadVesting.VestingSettings public vestingSettings\" */ 6)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _16 := sload(/** @src 8:466:519  \"IDappadVesting.VestingSettings public vestingSettings\" */ 7)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, _15)\n                        mstore(add(memPos_8, 32), _16)\n                        return(memPos_8, 64)\n                    }\n                    case 0x3e1043bf {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0 := abi_decode_address()\n                        /// @src 8:3824:3832  \"_address\"\n                        fun_notZeroAddress(value0)\n                        /// @src 8:3843:3844  \"_\"\n                        let _17 := fun_getNextUnlockDate_inner(value0)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, _17)\n                        return(memPos_9, 32)\n                    }\n                    case 0x50ef5d4a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_1 := abi_decode_address()\n                        let value_5 := calldataload(36)\n                        /// @src 8:4020:4028  \"_address\"\n                        fun_onlyOwnerOrAdmin(/** @src 8:9104:9114  \"msg.sender\" */ caller())\n                        /// @src 8:9141:9192  \"if (amount == 0) revert Errors.InvalidAmountError()\"\n                        if /** @src 8:9145:9156  \"amount == 0\" */ iszero(value_5)\n                        /// @src 8:9141:9192  \"if (amount == 0) revert Errors.InvalidAmountError()\"\n                        {\n                            /// @src 8:9165:9192  \"Errors.InvalidAmountError()\"\n                            let _18 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:9165:9192  \"Errors.InvalidAmountError()\"\n                            mstore(_18, shl(227, 0x0f51ac85))\n                            revert(_18, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                        }\n                        mstore(0, and(value0_1, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 8:9203:9220  \"investmentAmounts\" */ 0x11)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        sstore(keccak256(0, 64), value_5)\n                        /// @src 8:9258:9306  \"UserInvestmentAmountUpdated(userAddress, amount)\"\n                        let _19 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                        /// @src 8:9258:9306  \"UserInvestmentAmountUpdated(userAddress, amount)\"\n                        log1(_19, sub(abi_encode_address_uint256(_19, value0_1, value_5), _19), 0x2a0deec9b25e9145e93f5ac49843d67610cc09e31d9010fdaa4bf410888a259a)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, 1)\n                        return(memPos_10, 32)\n                    }\n                    case 0x5410c77b {\n                        if callvalue() { revert(0, 0) }\n                        let _20 := 32\n                        if slt(add(calldatasize(), not(3)), _20) { revert(0, 0) }\n                        let value0_2 := abi_decode_address()\n                        /// @src 8:3824:3832  \"_address\"\n                        fun_notZeroAddress(value0_2)\n                        /// @src 8:18809:18870  \"IDappadVesting.Vesting memory currentVesting = defaultVesting\"\n                        let var_currentVesting_mpos := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting_37989()\n                        let _21 := and(value0_2, sub(shl(160, 1), 1))\n                        mstore(0, _21)\n                        mstore(_20, /** @src 8:18885:18899  \"customVestings\" */ 0x0f)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let dataSlot := keccak256(0, 64)\n                        /// @src 8:18881:19000  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                        if /** @src 8:18885:18929  \"customVestings[userAddress].vestingCount > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(dataSlot)))\n                        /// @src 8:18881:19000  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                        {\n                            /// @src 8:18945:18989  \"currentVesting = customVestings[userAddress]\"\n                            var_currentVesting_mpos := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting(dataSlot)\n                        }\n                        /// @src 8:19018:19049  \"uint256 unlockedTokenAmount = 0\"\n                        let var_unlockedTokenAmount := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                        /// @src 8:19092:19130  \"getUserTotalVestingAmount(userAddress)\"\n                        let expr_1 := /** @src 8:13809:13816  \"uint256\" */ modifier_notZeroAddress(/** @src 8:19092:19130  \"getUserTotalVestingAmount(userAddress)\" */ value0_2)\n                        /// @src 8:19146:19159  \"uint256 i = 0\"\n                        let var_i := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                        /// @src 8:19141:19426  \"for (uint256 i = 0; i < currentVesting.vestingCount; i++) {...\"\n                        for { }\n                        /** @src 8:18856:18870  \"defaultVesting\" */ 0x01\n                        /// @src 8:19146:19159  \"uint256 i = 0\"\n                        {\n                            /// @src 8:19194:19197  \"i++\"\n                            var_i := increment_uint256(var_i)\n                        }\n                        {\n                            /// @src 8:19161:19192  \"i < currentVesting.vestingCount\"\n                            if iszero(lt(var_i, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:19165:19192  \"currentVesting.vestingCount\" */ var_currentVesting_mpos)))\n                            /// @src 8:19161:19192  \"i < currentVesting.vestingCount\"\n                            { break }\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            mstore(0, _21)\n                            mstore(_20, /** @src 8:19218:19232  \"vestingClaimed\" */ 0x10)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let dataSlot_1 := keccak256(0, 64)\n                            mstore(0, var_i)\n                            mstore(_20, dataSlot_1)\n                            /// @src 8:19217:19287  \"!vestingClaimed[userAddress][i] && getVestingClaimable(userAddress, i)\"\n                            let expr_2 := /** @src 8:19217:19248  \"!vestingClaimed[userAddress][i]\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(0, 64)), 0xff))\n                            /// @src 8:19217:19287  \"!vestingClaimed[userAddress][i] && getVestingClaimable(userAddress, i)\"\n                            if expr_2\n                            {\n                                expr_2 := /** @src 8:19252:19287  \"getVestingClaimable(userAddress, i)\" */ fun_getVestingClaimable(value0_2, var_i)\n                            }\n                            /// @src 8:19213:19416  \"if (!vestingClaimed[userAddress][i] && getVestingClaimable(userAddress, i)) {...\"\n                            if expr_2\n                            {\n                                /// @src 8:19307:19401  \"unlockedTokenAmount += (userTotalVestingAmount * currentVesting.vestingPercentages[i]) / 10000\"\n                                var_unlockedTokenAmount := checked_add_uint256(var_unlockedTokenAmount, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ div(/** @src 8:19331:19392  \"userTotalVestingAmount * currentVesting.vestingPercentages[i]\" */ checked_mul_uint256(expr_1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:19356:19392  \"currentVesting.vestingPercentages[i]\" */ memory_array_index_access_uint256_dyn(/** @src 8:19356:19389  \"currentVesting.vestingPercentages\" */ mload(add(var_currentVesting_mpos, 96)), /** @src 8:19356:19392  \"currentVesting.vestingPercentages[i]\" */ var_i))), /** @src 8:19396:19401  \"10000\" */ 0x2710))\n                            }\n                        }\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let memPos_11 := mload(64)\n                        mstore(memPos_11, var_unlockedTokenAmount)\n                        return(memPos_11, _20)\n                    }\n                    case 0x5679a0ed {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_3 := abi_decode_address()\n                        let ret := fun_getVestingClaimable(value0_3, calldataload(36))\n                        let memPos_12 := mload(64)\n                        mstore(memPos_12, iszero(iszero(ret)))\n                        return(memPos_12, 32)\n                    }\n                    case 0x63b8476b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let cleaned_3 := and(sload(/** @src 8:21837:21876  \"vestingAddresses.factoryContractAddress\" */ 9), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1))\n                        let memPos_13 := mload(64)\n                        mstore(memPos_13, cleaned_3)\n                        return(memPos_13, 32)\n                    }\n                    case 0x75420c99 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_6 := calldataload(4)\n                        /// @src 8:4020:4028  \"_address\"\n                        fun_onlyOwnerOrAdmin(/** @src 8:12937:12947  \"msg.sender\" */ caller())\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        sstore(/** @src 8:12974:12991  \"vestingStatistics\" */ 0x0d, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ value_6)\n                        /// @src 8:13035:13068  \"TotalVestingAmountUpdated(amount)\"\n                        let _22 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                        mstore(_22, value_6)\n                        /// @src 8:13035:13068  \"TotalVestingAmountUpdated(amount)\"\n                        log1(_22, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32, /** @src 8:13035:13068  \"TotalVestingAmountUpdated(amount)\" */ 0xf7d6bdf3ee749ac722ba01e58fd4c87234b2948c0d9b5a0232d6be227c8be2fa)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let memPos_14 := mload(64)\n                        mstore(memPos_14, 1)\n                        return(memPos_14, 32)\n                    }\n                    case 0x786b4456 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0_4 := abi_decode_address()\n                        /// @src 8:3824:3832  \"_address\"\n                        fun_notZeroAddress(value0_4)\n                        /// @src 8:3843:3844  \"_\"\n                        let _23 := fun_getAnyVestingClaimed_inner(value0_4)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let memPos_15 := mload(64)\n                        mstore(memPos_15, iszero(iszero(_23)))\n                        return(memPos_15, 32)\n                    }\n                    case 0x7eb16ac2 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_5 := abi_decode_address()\n                        /// @src 8:3824:3832  \"_address\"\n                        fun_notZeroAddress(value0_5)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(0, and(value0_5, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 8:17076:17090  \"vestingClaimed\" */ 0x10)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let dataSlot_2 := keccak256(0, 64)\n                        mstore(0, calldataload(36))\n                        mstore(32, dataSlot_2)\n                        let value_7 := and(sload(keccak256(0, 64)), 0xff)\n                        let memPos_16 := mload(64)\n                        mstore(memPos_16, iszero(iszero(value_7)))\n                        return(memPos_16, 32)\n                    }\n                    case 0x85489f23 {\n                        if callvalue() { revert(0, 0) }\n                        let _24 := 32\n                        if slt(add(calldatasize(), not(3)), _24) { revert(0, 0) }\n                        let value0_6 := abi_decode_address()\n                        /// @src 8:3824:3832  \"_address\"\n                        fun_notZeroAddress(value0_6)\n                        /// @src 8:18021:18082  \"IDappadVesting.Vesting memory currentVesting = defaultVesting\"\n                        let var_currentVesting_mpos_1 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting_37989()\n                        let _25 := and(value0_6, sub(shl(160, 1), 1))\n                        mstore(0, _25)\n                        mstore(_24, /** @src 8:18097:18111  \"customVestings\" */ 0x0f)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let dataSlot_3 := keccak256(0, 64)\n                        /// @src 8:18093:18212  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                        if /** @src 8:18097:18141  \"customVestings[userAddress].vestingCount > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(dataSlot_3)))\n                        /// @src 8:18093:18212  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                        {\n                            /// @src 8:18157:18201  \"currentVesting = customVestings[userAddress]\"\n                            var_currentVesting_mpos_1 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting(dataSlot_3)\n                        }\n                        /// @src 8:18230:18259  \"uint256 lockedTokenAmount = 0\"\n                        let var_lockedTokenAmount := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                        /// @src 8:18302:18340  \"getUserTotalVestingAmount(userAddress)\"\n                        let expr_3 := /** @src 8:13809:13816  \"uint256\" */ modifier_notZeroAddress(/** @src 8:18302:18340  \"getUserTotalVestingAmount(userAddress)\" */ value0_6)\n                        /// @src 8:18356:18369  \"uint256 i = 0\"\n                        let var_i_1 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                        /// @src 8:18351:18635  \"for (uint256 i = 0; i < currentVesting.vestingCount; i++) {...\"\n                        for { }\n                        /** @src 8:18068:18082  \"defaultVesting\" */ 0x01\n                        /// @src 8:18356:18369  \"uint256 i = 0\"\n                        {\n                            /// @src 8:18404:18407  \"i++\"\n                            var_i_1 := increment_uint256(var_i_1)\n                        }\n                        {\n                            /// @src 8:18371:18402  \"i < currentVesting.vestingCount\"\n                            if iszero(lt(var_i_1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:18375:18402  \"currentVesting.vestingCount\" */ var_currentVesting_mpos_1)))\n                            /// @src 8:18371:18402  \"i < currentVesting.vestingCount\"\n                            { break }\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            mstore(0, _25)\n                            mstore(_24, /** @src 8:18428:18442  \"vestingClaimed\" */ 0x10)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let dataSlot_4 := keccak256(0, 64)\n                            mstore(0, var_i_1)\n                            mstore(_24, dataSlot_4)\n                            /// @src 8:18427:18498  \"!vestingClaimed[userAddress][i] && !getVestingClaimable(userAddress, i)\"\n                            let expr_4 := /** @src 8:18427:18458  \"!vestingClaimed[userAddress][i]\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(0, 64)), 0xff))\n                            /// @src 8:18427:18498  \"!vestingClaimed[userAddress][i] && !getVestingClaimable(userAddress, i)\"\n                            if expr_4\n                            {\n                                expr_4 := /** @src 8:18462:18498  \"!getVestingClaimable(userAddress, i)\" */ iszero(/** @src 8:18463:18498  \"getVestingClaimable(userAddress, i)\" */ fun_getVestingClaimable(value0_6, var_i_1))\n                            }\n                            /// @src 8:18423:18625  \"if (!vestingClaimed[userAddress][i] && !getVestingClaimable(userAddress, i)) {...\"\n                            if expr_4\n                            {\n                                /// @src 8:18518:18610  \"lockedTokenAmount += (userTotalVestingAmount * currentVesting.vestingPercentages[i]) / 10000\"\n                                var_lockedTokenAmount := checked_add_uint256(var_lockedTokenAmount, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ div(/** @src 8:18540:18601  \"userTotalVestingAmount * currentVesting.vestingPercentages[i]\" */ checked_mul_uint256(expr_3, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:18565:18601  \"currentVesting.vestingPercentages[i]\" */ memory_array_index_access_uint256_dyn(/** @src 8:18565:18598  \"currentVesting.vestingPercentages\" */ mload(add(var_currentVesting_mpos_1, 96)), /** @src 8:18565:18601  \"currentVesting.vestingPercentages[i]\" */ var_i_1))), /** @src 8:18605:18610  \"10000\" */ 0x2710))\n                            }\n                        }\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let memPos_17 := mload(64)\n                        mstore(memPos_17, var_lockedTokenAmount)\n                        return(memPos_17, _24)\n                    }\n                    case 0x91d14854 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1_2 := abi_decode_address_37972()\n                        mstore(0, calldataload(4))\n                        mstore(32, 0)\n                        let _26 := keccak256(0, 64)\n                        mstore(0, and(value1_2, sub(shl(160, 1), 1)))\n                        mstore(32, _26)\n                        let value_8 := and(sload(keccak256(0, 64)), 0xff)\n                        let memPos_18 := mload(64)\n                        mstore(memPos_18, iszero(iszero(value_8)))\n                        return(memPos_18, 32)\n                    }\n                    case 0x928978a0 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _27 := sub(shl(160, 1), 1)\n                        let cleaned_4 := and(sload(/** @src 8:525:580  \"IDappadVesting.VestingAddresses public vestingAddresses\" */ 8), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _27)\n                        let cleaned_5 := and(sload(/** @src 8:525:580  \"IDappadVesting.VestingAddresses public vestingAddresses\" */ 9), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _27)\n                        let cleaned_6 := and(sload(/** @src 8:525:580  \"IDappadVesting.VestingAddresses public vestingAddresses\" */ 10), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _27)\n                        let cleaned_7 := and(sload(/** @src 8:525:580  \"IDappadVesting.VestingAddresses public vestingAddresses\" */ 11), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _27)\n                        let cleaned_8 := and(sload(/** @src 8:525:580  \"IDappadVesting.VestingAddresses public vestingAddresses\" */ 12), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _27)\n                        let memPos_19 := mload(64)\n                        mstore(memPos_19, cleaned_4)\n                        mstore(add(memPos_19, 32), cleaned_5)\n                        mstore(add(memPos_19, 64), cleaned_6)\n                        mstore(add(memPos_19, 96), cleaned_7)\n                        mstore(add(memPos_19, 128), cleaned_8)\n                        return(memPos_19, 160)\n                    }\n                    case 0x9903a4c1 {\n                        if callvalue() { revert(0, 0) }\n                        let _28 := 32\n                        if slt(add(calldatasize(), not(3)), _28) { revert(0, 0) }\n                        let value_9 := calldataload(4)\n                        /// @src 8:4020:4028  \"_address\"\n                        fun_onlyOwnerOrAdmin(/** @src 8:8474:8484  \"msg.sender\" */ caller())\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let cleaned_9 := and(sload(/** @src 8:8505:8514  \"saleToken\" */ 0x12), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1))\n                        /// @src 8:22479:22522  \"token.allowance(userAddress, address(this))\"\n                        let _29 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                        /// @src 8:22479:22522  \"token.allowance(userAddress, address(this))\"\n                        mstore(_29, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(225, 0x6eb1769f))\n                        mstore(/** @src 8:22479:22522  \"token.allowance(userAddress, address(this))\" */ add(_29, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:8474:8484  \"msg.sender\" */ caller())\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(add(/** @src 8:22479:22522  \"token.allowance(userAddress, address(this))\" */ _29, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36), /** @src 8:22516:22520  \"this\" */ address())\n                        /// @src 8:22479:22522  \"token.allowance(userAddress, address(this))\"\n                        let _30 := staticcall(gas(), cleaned_9, _29, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 68, /** @src 8:22479:22522  \"token.allowance(userAddress, address(this))\" */ _29, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _28)\n                        /// @src 8:22479:22522  \"token.allowance(userAddress, address(this))\"\n                        if iszero(_30)\n                        {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let pos_2 := mload(64)\n                            returndatacopy(pos_2, 0, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 8:22479:22522  \"token.allowance(userAddress, address(this))\"\n                        let expr_5 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                        /// @src 8:22479:22522  \"token.allowance(userAddress, address(this))\"\n                        if _30\n                        {\n                            let _31 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _28\n                            /// @src 8:22479:22522  \"token.allowance(userAddress, address(this))\"\n                            if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _28, /** @src 8:22479:22522  \"token.allowance(userAddress, address(this))\" */ returndatasize()) { _31 := returndatasize() }\n                            finalize_allocation(_29, _31)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            if slt(sub(/** @src 8:22479:22522  \"token.allowance(userAddress, address(this))\" */ add(_29, _31), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _29), _28) { revert(0, 0) }\n                            /// @src 8:22479:22522  \"token.allowance(userAddress, address(this))\"\n                            expr_5 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_29)\n                        }\n                        /// @src 8:22532:22601  \"if(amount > userAllowance) revert Errors.InsufficientAllowanceError()\"\n                        if /** @src 8:22535:22557  \"amount > userAllowance\" */ gt(value_9, expr_5)\n                        /// @src 8:22532:22601  \"if(amount > userAllowance) revert Errors.InsufficientAllowanceError()\"\n                        {\n                            /// @src 8:22566:22601  \"Errors.InsufficientAllowanceError()\"\n                            let _32 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:22566:22601  \"Errors.InsufficientAllowanceError()\"\n                            mstore(_32, shl(227, 0x0e74e94f))\n                            revert(_32, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:8565:8596  \"saleToken.balanceOf(msg.sender)\"\n                        let _33 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                        /// @src 8:8565:8596  \"saleToken.balanceOf(msg.sender)\"\n                        mstore(_33, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 8:8565:8596  \"saleToken.balanceOf(msg.sender)\" */ add(_33, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:8474:8484  \"msg.sender\" */ caller())\n                        /// @src 8:8565:8596  \"saleToken.balanceOf(msg.sender)\"\n                        let _34 := staticcall(gas(), cleaned_9, _33, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36, /** @src 8:8565:8596  \"saleToken.balanceOf(msg.sender)\" */ _33, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _28)\n                        /// @src 8:8565:8596  \"saleToken.balanceOf(msg.sender)\"\n                        if iszero(_34)\n                        {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let pos_3 := mload(64)\n                            returndatacopy(pos_3, 0, returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 8:8565:8596  \"saleToken.balanceOf(msg.sender)\"\n                        let expr_6 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                        /// @src 8:8565:8596  \"saleToken.balanceOf(msg.sender)\"\n                        if _34\n                        {\n                            let _35 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _28\n                            /// @src 8:8565:8596  \"saleToken.balanceOf(msg.sender)\"\n                            if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _28, /** @src 8:8565:8596  \"saleToken.balanceOf(msg.sender)\" */ returndatasize()) { _35 := returndatasize() }\n                            finalize_allocation(_33, _35)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            if slt(sub(/** @src 8:8565:8596  \"saleToken.balanceOf(msg.sender)\" */ add(_33, _35), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _33), _28) { revert(0, 0) }\n                            /// @src 8:8565:8596  \"saleToken.balanceOf(msg.sender)\"\n                            expr_6 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_33)\n                        }\n                        /// @src 8:8561:8647  \"if (saleToken.balanceOf(msg.sender) < amount) revert Errors.InsufficientBalanceError()\"\n                        if /** @src 8:8565:8605  \"saleToken.balanceOf(msg.sender) < amount\" */ lt(expr_6, value_9)\n                        /// @src 8:8561:8647  \"if (saleToken.balanceOf(msg.sender) < amount) revert Errors.InsufficientBalanceError()\"\n                        {\n                            /// @src 8:8614:8647  \"Errors.InsufficientBalanceError()\"\n                            let _36 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:8614:8647  \"Errors.InsufficientBalanceError()\"\n                            mstore(_36, shl(224, 0x384d3c59))\n                            revert(_36, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:8658:8706  \"vestingStatistics.totalSaleTokenAmount += amount\"\n                        let _37 := checked_add_uint256(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(/** @src 8:8658:8696  \"vestingStatistics.totalSaleTokenAmount\" */ 14), /** @src 8:8658:8706  \"vestingStatistics.totalSaleTokenAmount += amount\" */ value_9)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        sstore(/** @src 8:8658:8696  \"vestingStatistics.totalSaleTokenAmount\" */ 14, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _37)\n                        /// @src 8:8722:8796  \"SaleTokenAdded(msg.sender, amount, vestingStatistics.totalSaleTokenAmount)\"\n                        let _38 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                        mstore(_38, /** @src 8:8474:8484  \"msg.sender\" */ caller())\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(add(_38, _28), value_9)\n                        mstore(add(_38, 64), _37)\n                        /// @src 8:8722:8796  \"SaleTokenAdded(msg.sender, amount, vestingStatistics.totalSaleTokenAmount)\"\n                        log1(_38, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 96, /** @src 8:8722:8796  \"SaleTokenAdded(msg.sender, amount, vestingStatistics.totalSaleTokenAmount)\" */ 0x3d3828369183a98b7c1119e7cea475fa7365971789c1ba8451f5b30d7f3c149b)\n                        /// @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\"\n                        let _39 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                        /// @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\"\n                        mstore(_39, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x23b872dd))\n                        mstore(/** @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\" */ add(_39, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:8474:8484  \"msg.sender\" */ caller())\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(add(/** @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\" */ _39, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36), /** @src 8:22516:22520  \"this\" */ address())\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(add(/** @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\" */ _39, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 68), value_9)\n                        /// @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\"\n                        let _40 := call(gas(), cleaned_9, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0, /** @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\" */ _39, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 100, /** @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\" */ _39, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _28)\n                        /// @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\"\n                        if iszero(_40)\n                        {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let pos_4 := mload(64)\n                            returndatacopy(pos_4, 0, returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        /// @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\"\n                        let expr_7 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                        /// @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\"\n                        if _40\n                        {\n                            let _41 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _28\n                            /// @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\"\n                            if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _28, /** @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\" */ returndatasize()) { _41 := returndatasize() }\n                            finalize_allocation(_39, _41)\n                            expr_7 := abi_decode_bool_fromMemory(_39, add(_39, _41))\n                        }\n                        /// @src 8:8904:8973  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                        if /** @src 8:8908:8931  \"!successfullyTransfered\" */ iszero(expr_7)\n                        /// @src 8:8904:8973  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                        {\n                            /// @src 8:8940:8973  \"Errors.TokenTransferFailedError()\"\n                            let _42 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:8940:8973  \"Errors.TokenTransferFailedError()\"\n                            mstore(_42, shl(224, 0xf83e23f5))\n                            revert(_42, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                        }\n                        let memPos_20 := mload(64)\n                        mstore(memPos_20, 1)\n                        return(memPos_20, _28)\n                    }\n                    case 0x9a68404d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 8:3824:3832  \"_address\"\n                        fun_notZeroAddress(/** @src 8:8062:8072  \"msg.sender\" */ caller())\n                        /// @src 8:4020:4028  \"_address\"\n                        fun_onlyOwnerOrAdmin(/** @src 8:8062:8072  \"msg.sender\" */ caller())\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let cleaned_10 := and(sload(/** @src 8:8131:8140  \"saleToken\" */ 0x12), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1))\n                        /// @src 8:8131:8165  \"saleToken.balanceOf(address(this))\"\n                        let _43 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                        let _44 := shl(224, 0x70a08231)\n                        /// @src 8:8131:8165  \"saleToken.balanceOf(address(this))\"\n                        mstore(_43, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _44)\n                        mstore(/** @src 8:8131:8165  \"saleToken.balanceOf(address(this))\" */ add(_43, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:8159:8163  \"this\" */ address())\n                        /// @src 8:8131:8165  \"saleToken.balanceOf(address(this))\"\n                        let _45 := 32\n                        let _46 := staticcall(gas(), cleaned_10, _43, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36, /** @src 8:8131:8165  \"saleToken.balanceOf(address(this))\" */ _43, _45)\n                        if iszero(_46)\n                        {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let pos_5 := mload(64)\n                            returndatacopy(pos_5, 0, returndatasize())\n                            revert(pos_5, returndatasize())\n                        }\n                        /// @src 8:8131:8165  \"saleToken.balanceOf(address(this))\"\n                        let expr_8 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                        /// @src 8:8131:8165  \"saleToken.balanceOf(address(this))\"\n                        if _46\n                        {\n                            let _47 := _45\n                            if gt(_45, returndatasize()) { _47 := returndatasize() }\n                            finalize_allocation(_43, _47)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            if slt(sub(/** @src 8:8131:8165  \"saleToken.balanceOf(address(this))\" */ add(_43, _47), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _43), /** @src 8:8131:8165  \"saleToken.balanceOf(address(this))\" */ _45)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            { revert(0, 0) }\n                            /// @src 8:8131:8165  \"saleToken.balanceOf(address(this))\"\n                            expr_8 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_43)\n                        }\n                        /// @src 8:8128:8375  \"if(saleToken.balanceOf(address(this)) > 0) {...\"\n                        if /** @src 8:8131:8169  \"saleToken.balanceOf(address(this)) > 0\" */ iszero(iszero(expr_8))\n                        /// @src 8:8128:8375  \"if(saleToken.balanceOf(address(this)) > 0) {...\"\n                        {\n                            /// @src 8:8246:8280  \"saleToken.balanceOf(address(this))\"\n                            let _48 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:8246:8280  \"saleToken.balanceOf(address(this))\"\n                            mstore(_48, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _44)\n                            mstore(/** @src 8:8246:8280  \"saleToken.balanceOf(address(this))\" */ add(_48, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:8159:8163  \"this\" */ address())\n                            /// @src 8:8246:8280  \"saleToken.balanceOf(address(this))\"\n                            let _49 := staticcall(gas(), cleaned_10, _48, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36, /** @src 8:8246:8280  \"saleToken.balanceOf(address(this))\" */ _48, /** @src 8:8131:8165  \"saleToken.balanceOf(address(this))\" */ _45)\n                            /// @src 8:8246:8280  \"saleToken.balanceOf(address(this))\"\n                            if iszero(_49)\n                            {\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let pos_6 := mload(64)\n                                returndatacopy(pos_6, 0, returndatasize())\n                                revert(pos_6, returndatasize())\n                            }\n                            /// @src 8:8246:8280  \"saleToken.balanceOf(address(this))\"\n                            let expr_9 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                            /// @src 8:8246:8280  \"saleToken.balanceOf(address(this))\"\n                            if _49\n                            {\n                                let _50 := /** @src 8:8131:8165  \"saleToken.balanceOf(address(this))\" */ _45\n                                /// @src 8:8246:8280  \"saleToken.balanceOf(address(this))\"\n                                if gt(/** @src 8:8131:8165  \"saleToken.balanceOf(address(this))\" */ _45, /** @src 8:8246:8280  \"saleToken.balanceOf(address(this))\" */ returndatasize()) { _50 := returndatasize() }\n                                finalize_allocation(_48, _50)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                if slt(sub(/** @src 8:8246:8280  \"saleToken.balanceOf(address(this))\" */ add(_48, _50), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _48), /** @src 8:8131:8165  \"saleToken.balanceOf(address(this))\" */ _45)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                { revert(0, 0) }\n                                /// @src 8:8246:8280  \"saleToken.balanceOf(address(this))\"\n                                expr_9 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_48)\n                            }\n                            /// @src 8:8215:8281  \"saleToken.transfer(msg.sender, saleToken.balanceOf(address(this)))\"\n                            let _51 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:8215:8281  \"saleToken.transfer(msg.sender, saleToken.balanceOf(address(this)))\"\n                            mstore(_51, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0xa9059cbb))\n                            /// @src 8:8215:8281  \"saleToken.transfer(msg.sender, saleToken.balanceOf(address(this)))\"\n                            let _52 := call(gas(), cleaned_10, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0, /** @src 8:8215:8281  \"saleToken.transfer(msg.sender, saleToken.balanceOf(address(this)))\" */ _51, sub(abi_encode_address_uint256(add(_51, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:8062:8072  \"msg.sender\" */ caller(), /** @src 8:8215:8281  \"saleToken.transfer(msg.sender, saleToken.balanceOf(address(this)))\" */ expr_9), _51), _51, /** @src 8:8131:8165  \"saleToken.balanceOf(address(this))\" */ _45)\n                            /// @src 8:8215:8281  \"saleToken.transfer(msg.sender, saleToken.balanceOf(address(this)))\"\n                            if iszero(_52)\n                            {\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let pos_7 := mload(64)\n                                returndatacopy(pos_7, 0, returndatasize())\n                                revert(pos_7, returndatasize())\n                            }\n                            /// @src 8:8215:8281  \"saleToken.transfer(msg.sender, saleToken.balanceOf(address(this)))\"\n                            let expr_10 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                            /// @src 8:8215:8281  \"saleToken.transfer(msg.sender, saleToken.balanceOf(address(this)))\"\n                            if _52\n                            {\n                                let _53 := /** @src 8:8131:8165  \"saleToken.balanceOf(address(this))\" */ _45\n                                /// @src 8:8215:8281  \"saleToken.transfer(msg.sender, saleToken.balanceOf(address(this)))\"\n                                if gt(/** @src 8:8131:8165  \"saleToken.balanceOf(address(this))\" */ _45, /** @src 8:8215:8281  \"saleToken.transfer(msg.sender, saleToken.balanceOf(address(this)))\" */ returndatasize()) { _53 := returndatasize() }\n                                finalize_allocation(_51, _53)\n                                expr_10 := abi_decode_bool_fromMemory(_51, add(_51, _53))\n                            }\n                            /// @src 8:8295:8364  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                            if /** @src 8:8299:8322  \"!successfullyTransfered\" */ iszero(expr_10)\n                            /// @src 8:8295:8364  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                            {\n                                /// @src 8:8331:8364  \"Errors.TokenTransferFailedError()\"\n                                let _54 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                /// @src 8:8331:8364  \"Errors.TokenTransferFailedError()\"\n                                mstore(_54, /** @src 8:8940:8973  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                                /// @src 8:8331:8364  \"Errors.TokenTransferFailedError()\"\n                                revert(_54, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                            }\n                        }\n                        let memPos_21 := mload(64)\n                        mstore(memPos_21, /** @src 8:8393:8397  \"true\" */ 0x01)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        return(memPos_21, /** @src 8:8131:8165  \"saleToken.balanceOf(address(this))\" */ _45)\n                    }\n                    case /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x9bb395b0 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 8:21435:21449  \"customVestings\" */ 0x0f)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let converted := copy_array_from_storage_to_memory_array_uint256_dyn(/** @src 8:21435:21481  \"customVestings[userAddress].vestingPercentages\" */ add(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ keccak256(0, 64), /** @src 8:21435:21481  \"customVestings[userAddress].vestingPercentages\" */ 3))\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let memPos_22 := mload(64)\n                        mstore(memPos_22, 32)\n                        return(memPos_22, sub(abi_encode_array_uint256_dyn(converted, add(memPos_22, 32)), memPos_22))\n                    }\n                    case 0xa217fddf {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_23 := mload(64)\n                        mstore(memPos_23, 0)\n                        return(memPos_23, 32)\n                    }\n                    case 0xa37f9d25 {\n                        if callvalue() { revert(0, 0) }\n                        let _55 := 32\n                        if slt(add(calldatasize(), not(3)), _55) { revert(0, 0) }\n                        let offset := calldataload(4)\n                        let _56 := 0xffffffffffffffff\n                        if gt(offset, _56) { revert(0, 0) }\n                        let value0_7 := abi_decode_struct_Vesting(add(4, offset), calldatasize())\n                        /// @src 8:4020:4028  \"_address\"\n                        fun_onlyOwnerOrAdmin(/** @src 8:10066:10076  \"msg.sender\" */ caller())\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _57 := mload(value0_7)\n                        /// @src 8:10103:10127  \"defaultVesting = vesting\"\n                        let _58 := 0x01\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        sstore(/** @src 8:10103:10127  \"defaultVesting = vesting\" */ _58, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _57)\n                        sstore(2, mload(add(value0_7, _55)))\n                        sstore(3, mload(add(value0_7, 64)))\n                        let _59 := add(value0_7, 96)\n                        let _60 := mload(_59)\n                        let length_1 := mload(_60)\n                        if gt(length_1, _56)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        resize_array_array_uint256_dyn_storage_38000(length_1)\n                        let srcPtr_1 := add(_60, _55)\n                        mstore(0, 4)\n                        let i_1 := 0\n                        for { }\n                        lt(i_1, length_1)\n                        {\n                            i_1 := add(i_1, /** @src 8:10103:10127  \"defaultVesting = vesting\" */ _58)\n                        }\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        {\n                            let _61 := mload(srcPtr_1)\n                            srcPtr_1 := add(srcPtr_1, _55)\n                            sstore(add(62514009886607029107290561805838585334079798074568712924583230797734656856475, i_1), _61)\n                        }\n                        let _62 := iszero(iszero(mload(add(value0_7, 128))))\n                        let value_10 := and(sload(5), not(255))\n                        sstore(5, or(value_10, and(_62, 255)))\n                        /// @src 8:10138:10172  \"uint256 totalVestingPercentage = 0\"\n                        let var_totalVestingPercentage := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                        /// @src 8:10219:10267  \"new uint256[](vesting.vestingPercentages.length)\"\n                        let _63 := allocate_and_zero_memory_array_array_uint256_dyn(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:10233:10259  \"vesting.vestingPercentages\" */ mload(_59)))\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let length_2 := mload(_63)\n                        if gt(length_2, _56)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        resize_array_array_uint256_dyn_storage_38000(length_2)\n                        let srcPtr_2 := add(_63, _55)\n                        mstore(0, 4)\n                        let i_2 := 0\n                        for { }\n                        lt(i_2, length_2)\n                        {\n                            i_2 := add(i_2, /** @src 8:10103:10127  \"defaultVesting = vesting\" */ _58)\n                        }\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        {\n                            let itemValue := mload(srcPtr_2)\n                            srcPtr_2 := add(srcPtr_2, _55)\n                            sstore(add(62514009886607029107290561805838585334079798074568712924583230797734656856475, i_2), itemValue)\n                        }\n                        /// @src 8:10282:10295  \"uint256 i = 0\"\n                        let var_i_2 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                        /// @src 8:10277:10490  \"for (uint256 i = 0; i < vesting.vestingCount; i++) {...\"\n                        for { }\n                        /** @src 8:10103:10127  \"defaultVesting = vesting\" */ _58\n                        /// @src 8:10282:10295  \"uint256 i = 0\"\n                        {\n                            /// @src 8:10323:10326  \"i++\"\n                            var_i_2 := increment_uint256(var_i_2)\n                        }\n                        {\n                            /// @src 8:10297:10321  \"i < vesting.vestingCount\"\n                            if iszero(lt(var_i_2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:10301:10321  \"vesting.vestingCount\" */ value0_7)))\n                            /// @src 8:10297:10321  \"i < vesting.vestingCount\"\n                            { break }\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let _64 := mload(/** @src 8:10381:10410  \"vesting.vestingPercentages[i]\" */ memory_array_index_access_uint256_dyn(/** @src 8:10381:10407  \"vesting.vestingPercentages\" */ mload(_59), /** @src 8:10381:10410  \"vesting.vestingPercentages[i]\" */ var_i_2))\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            if iszero(lt(var_i_2, sload(4)))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x32)\n                                revert(0, 0x24)\n                            }\n                            mstore(0, 4)\n                            sstore(add(62514009886607029107290561805838585334079798074568712924583230797734656856475, var_i_2), _64)\n                            /// @src 8:10424:10479  \"totalVestingPercentage += vesting.vestingPercentages[i]\"\n                            var_totalVestingPercentage := checked_add_uint256(var_totalVestingPercentage, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:10450:10479  \"vesting.vestingPercentages[i]\" */ memory_array_index_access_uint256_dyn(/** @src 8:10450:10476  \"vesting.vestingPercentages\" */ mload(_59), /** @src 8:10450:10479  \"vesting.vestingPercentages[i]\" */ var_i_2)))\n                        }\n                        /// @src 8:10500:10580  \"if (totalVestingPercentage != 10000) revert Errors.TotalVestingPercentageError()\"\n                        if /** @src 8:10504:10535  \"totalVestingPercentage != 10000\" */ iszero(eq(var_totalVestingPercentage, /** @src 8:10530:10535  \"10000\" */ 0x2710))\n                        /// @src 8:10500:10580  \"if (totalVestingPercentage != 10000) revert Errors.TotalVestingPercentageError()\"\n                        {\n                            /// @src 8:10544:10580  \"Errors.TotalVestingPercentageError()\"\n                            let _65 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:10544:10580  \"Errors.TotalVestingPercentageError()\"\n                            mstore(_65, shl(225, 0x74b8a881))\n                            revert(_65, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:10627:10653  \"vesting.vestingPercentages\"\n                        let _mpos := mload(_59)\n                        /// @src 8:10596:10654  \"DefaultVestingUpdated(vesting, vesting.vestingPercentages)\"\n                        let _66 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                        mstore(_66, 64)\n                        let tail := abi_encode_struct_Vesting(value0_7, add(_66, 64))\n                        mstore(add(_66, _55), sub(tail, _66))\n                        /// @src 8:10596:10654  \"DefaultVestingUpdated(vesting, vesting.vestingPercentages)\"\n                        log1(_66, sub(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ abi_encode_array_uint256_dyn(_mpos, tail), /** @src 8:10596:10654  \"DefaultVestingUpdated(vesting, vesting.vestingPercentages)\" */ _66), 0x4a7d91d48d7631fbad39b1025ee81e57e99a3babe757f2a29b9fd407349d0855)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let memPos_24 := mload(64)\n                        mstore(memPos_24, /** @src 8:10103:10127  \"defaultVesting = vesting\" */ _58)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        return(memPos_24, _55)\n                    }\n                    case 0xac97b417 {\n                        if callvalue() { revert(0, 0) }\n                        let _67 := 32\n                        if slt(add(calldatasize(), not(3)), _67) { revert(0, 0) }\n                        let value_11 := calldataload(4)\n                        /// @src 8:3824:3832  \"_address\"\n                        fun_notZeroAddress(/** @src 8:4289:4299  \"msg.sender\" */ caller())\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _68 := sub(shl(160, 1), 1)\n                        /// @src 8:4326:4770  \"if(vestingAddresses.saleContractAddress != address(0)) {...\"\n                        switch /** @src 8:4329:4379  \"vestingAddresses.saleContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(/** @src 8:4329:4365  \"vestingAddresses.saleContractAddress\" */ 10), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _68)))\n                        case /** @src 8:4326:4770  \"if(vestingAddresses.saleContractAddress != address(0)) {...\" */ 0 {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            mstore(0, /** @src 8:4289:4299  \"msg.sender\" */ caller())\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            mstore(_67, /** @src 8:4689:4706  \"investmentAmounts\" */ 0x11)\n                            /// @src 8:4685:4759  \"if (investmentAmounts[msg.sender] == 0) revert Errors.NotJoinedSaleError()\"\n                            if /** @src 8:4689:4723  \"investmentAmounts[msg.sender] == 0\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(keccak256(0, 64)))\n                            /// @src 8:4685:4759  \"if (investmentAmounts[msg.sender] == 0) revert Errors.NotJoinedSaleError()\"\n                            {\n                                /// @src 8:4732:4759  \"Errors.NotJoinedSaleError()\"\n                                let _69 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                /// @src 8:4732:4759  \"Errors.NotJoinedSaleError()\"\n                                mstore(_69, shl(224, 0x2f0e159d))\n                                revert(_69, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                            }\n                        }\n                        default /// @src 8:4326:4770  \"if(vestingAddresses.saleContractAddress != address(0)) {...\"\n                        {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let cleaned_11 := and(sload(/** @src 8:4399:4411  \"saleContract\" */ 0x13), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _68)\n                            /// @src 8:4399:4447  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                            let _70 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:4399:4447  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                            mstore(_70, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(225, 0x2f43f2d3))\n                            mstore(/** @src 8:4399:4447  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ add(_70, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:4289:4299  \"msg.sender\" */ caller())\n                            /// @src 8:4399:4447  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                            let _71 := staticcall(gas(), cleaned_11, _70, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36, /** @src 8:4399:4447  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ _70, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67)\n                            /// @src 8:4399:4447  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                            if iszero(_71)\n                            {\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let pos_8 := mload(64)\n                                returndatacopy(pos_8, 0, returndatasize())\n                                revert(pos_8, returndatasize())\n                            }\n                            /// @src 8:4399:4447  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                            let expr_11 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                            /// @src 8:4399:4447  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                            if _71\n                            {\n                                let _72 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67\n                                /// @src 8:4399:4447  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                                if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67, /** @src 8:4399:4447  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ returndatasize()) { _72 := returndatasize() }\n                                finalize_allocation(_70, _72)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                if slt(sub(/** @src 8:4399:4447  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ add(_70, _72), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _70), _67) { revert(0, 0) }\n                                /// @src 8:4399:4447  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                                expr_11 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_70)\n                            }\n                            /// @src 8:4395:4488  \"if (saleContract.getUserInvestmentAmount(msg.sender) == 0) revert Errors.NotJoinedSaleError()\"\n                            if /** @src 8:4399:4452  \"saleContract.getUserInvestmentAmount(msg.sender) == 0\" */ iszero(expr_11)\n                            /// @src 8:4395:4488  \"if (saleContract.getUserInvestmentAmount(msg.sender) == 0) revert Errors.NotJoinedSaleError()\"\n                            {\n                                /// @src 8:4461:4488  \"Errors.NotJoinedSaleError()\"\n                                let _73 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                /// @src 8:4461:4488  \"Errors.NotJoinedSaleError()\"\n                                mstore(_73, /** @src 8:4732:4759  \"Errors.NotJoinedSaleError()\" */ shl(224, 0x2f0e159d))\n                                /// @src 8:4461:4488  \"Errors.NotJoinedSaleError()\"\n                                revert(_73, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                            }\n                            /// @src 8:4507:4538  \"saleContract.getRefundEnabled()\"\n                            let _74 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:4507:4538  \"saleContract.getRefundEnabled()\"\n                            mstore(_74, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(225, 0x42e037d5))\n                            /// @src 8:4507:4538  \"saleContract.getRefundEnabled()\"\n                            let _75 := staticcall(gas(), cleaned_11, _74, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4, /** @src 8:4507:4538  \"saleContract.getRefundEnabled()\" */ _74, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67)\n                            /// @src 8:4507:4538  \"saleContract.getRefundEnabled()\"\n                            if iszero(_75)\n                            {\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let pos_9 := mload(64)\n                                returndatacopy(pos_9, 0, returndatasize())\n                                revert(pos_9, returndatasize())\n                            }\n                            /// @src 8:4507:4538  \"saleContract.getRefundEnabled()\"\n                            let expr_12 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                            /// @src 8:4507:4538  \"saleContract.getRefundEnabled()\"\n                            if _75\n                            {\n                                let _76 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67\n                                /// @src 8:4507:4538  \"saleContract.getRefundEnabled()\"\n                                if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67, /** @src 8:4507:4538  \"saleContract.getRefundEnabled()\" */ returndatasize()) { _76 := returndatasize() }\n                                finalize_allocation(_74, _76)\n                                expr_12 := abi_decode_bool_fromMemory(_74, add(_74, _76))\n                            }\n                            /// @src 8:4503:4655  \"if (saleContract.getRefundEnabled()) {...\"\n                            if expr_12\n                            {\n                                /// @src 8:4562:4602  \"saleContract.getUserRefunded(msg.sender)\"\n                                let _77 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                /// @src 8:4562:4602  \"saleContract.getUserRefunded(msg.sender)\"\n                                mstore(_77, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0xcf72d3db))\n                                mstore(/** @src 8:4562:4602  \"saleContract.getUserRefunded(msg.sender)\" */ add(_77, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:4289:4299  \"msg.sender\" */ caller())\n                                /// @src 8:4562:4602  \"saleContract.getUserRefunded(msg.sender)\"\n                                let _78 := staticcall(gas(), cleaned_11, _77, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36, /** @src 8:4562:4602  \"saleContract.getUserRefunded(msg.sender)\" */ _77, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67)\n                                /// @src 8:4562:4602  \"saleContract.getUserRefunded(msg.sender)\"\n                                if iszero(_78)\n                                {\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    let pos_10 := mload(64)\n                                    returndatacopy(pos_10, 0, returndatasize())\n                                    revert(pos_10, returndatasize())\n                                }\n                                /// @src 8:4562:4602  \"saleContract.getUserRefunded(msg.sender)\"\n                                let expr_13 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                /// @src 8:4562:4602  \"saleContract.getUserRefunded(msg.sender)\"\n                                if _78\n                                {\n                                    let _79 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67\n                                    /// @src 8:4562:4602  \"saleContract.getUserRefunded(msg.sender)\"\n                                    if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67, /** @src 8:4562:4602  \"saleContract.getUserRefunded(msg.sender)\" */ returndatasize()) { _79 := returndatasize() }\n                                    finalize_allocation(_77, _79)\n                                    expr_13 := abi_decode_bool_fromMemory(_77, add(_77, _79))\n                                }\n                                /// @src 8:4558:4640  \"if (saleContract.getUserRefunded(msg.sender)) revert Errors.AlreadyRefundedError()\"\n                                if expr_13\n                                {\n                                    /// @src 8:4611:4640  \"Errors.AlreadyRefundedError()\"\n                                    let _80 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:4611:4640  \"Errors.AlreadyRefundedError()\"\n                                    mstore(_80, shl(226, 0x2321792f))\n                                    revert(_80, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                }\n                            }\n                        }\n                        mstore(0, /** @src 8:4289:4299  \"msg.sender\" */ caller())\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(_67, /** @src 8:4784:4798  \"vestingClaimed\" */ 0x10)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let dataSlot_5 := keccak256(0, 64)\n                        mstore(0, value_11)\n                        mstore(_67, dataSlot_5)\n                        /// @src 8:4780:4861  \"if (vestingClaimed[msg.sender][vestingIndex]) revert Errors.AlreadyClaimedError()\"\n                        if /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(0, 64)), 0xff)\n                        /// @src 8:4780:4861  \"if (vestingClaimed[msg.sender][vestingIndex]) revert Errors.AlreadyClaimedError()\"\n                        {\n                            /// @src 8:4833:4861  \"Errors.AlreadyClaimedError()\"\n                            let _81 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:4833:4861  \"Errors.AlreadyClaimedError()\"\n                            mstore(_81, shl(224, 0x5f1e377d))\n                            revert(_81, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:4872:4933  \"IDappadVesting.Vesting memory currentVesting = defaultVesting\"\n                        let var_currentVesting_mpos_2 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting_37989()\n                        mstore(0, /** @src 8:4289:4299  \"msg.sender\" */ caller())\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(_67, /** @src 8:4948:4962  \"customVestings\" */ 0x0f)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let dataSlot_6 := keccak256(0, 64)\n                        /// @src 8:4944:5061  \"if (customVestings[msg.sender].vestingCount > 0) {...\"\n                        if /** @src 8:4948:4991  \"customVestings[msg.sender].vestingCount > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(dataSlot_6)))\n                        /// @src 8:4944:5061  \"if (customVestings[msg.sender].vestingCount > 0) {...\"\n                        {\n                            /// @src 8:5007:5050  \"currentVesting = customVestings[msg.sender]\"\n                            var_currentVesting_mpos_2 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting(dataSlot_6)\n                        }\n                        /// @src 8:5071:5162  \"if (block.timestamp <= vestingSettings.startDate) revert Errors.VestingsNotClaimableError()\"\n                        if /** @src 8:5075:5119  \"block.timestamp <= vestingSettings.startDate\" */ iszero(gt(/** @src 8:5075:5090  \"block.timestamp\" */ timestamp(), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(/** @src 8:5094:5109  \"vestingSettings\" */ 0x06)))\n                        /// @src 8:5071:5162  \"if (block.timestamp <= vestingSettings.startDate) revert Errors.VestingsNotClaimableError()\"\n                        {\n                            /// @src 8:5128:5162  \"Errors.VestingsNotClaimableError()\"\n                            let _82 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:5128:5162  \"Errors.VestingsNotClaimableError()\"\n                            mstore(_82, shl(228, 0x08f78e53))\n                            revert(_82, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:5253:5309  \"if (!claimable) revert Errors.VestingNotClaimableError()\"\n                        if /** @src 8:5257:5267  \"!claimable\" */ iszero(/** @src 8:5198:5243  \"getVestingClaimable(msg.sender, vestingIndex)\" */ fun_getVestingClaimable(/** @src 8:4289:4299  \"msg.sender\" */ caller(), /** @src 8:5198:5243  \"getVestingClaimable(msg.sender, vestingIndex)\" */ value_11))\n                        /// @src 8:5253:5309  \"if (!claimable) revert Errors.VestingNotClaimableError()\"\n                        {\n                            /// @src 8:5276:5309  \"Errors.VestingNotClaimableError()\"\n                            let _83 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:5276:5309  \"Errors.VestingNotClaimableError()\"\n                            mstore(_83, shl(226, 0x08fb25e7))\n                            revert(_83, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                        }\n                        mstore(0, /** @src 8:4289:4299  \"msg.sender\" */ caller())\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(_67, /** @src 8:4784:4798  \"vestingClaimed\" */ 0x10)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let dataSlot_7 := keccak256(0, 64)\n                        mstore(0, value_11)\n                        mstore(_67, dataSlot_7)\n                        let dataSlot_8 := keccak256(0, 64)\n                        sstore(dataSlot_8, or(and(sload(dataSlot_8), not(255)), 1))\n                        /// @src 8:5404:5441  \"getUserTotalVestingAmount(msg.sender)\"\n                        let expr_14 := /** @src 8:13809:13816  \"uint256\" */ modifier_notZeroAddress(/** @src 8:4289:4299  \"msg.sender\" */ caller())\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let r := div(/** @src 8:5474:5539  \"saleTokenAmount * currentVesting.vestingPercentages[vestingIndex]\" */ checked_mul_uint256(expr_14, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:5492:5539  \"currentVesting.vestingPercentages[vestingIndex]\" */ memory_array_index_access_uint256_dyn(/** @src 8:5492:5525  \"currentVesting.vestingPercentages\" */ mload(add(var_currentVesting_mpos_2, 96)), /** @src 8:5492:5539  \"currentVesting.vestingPercentages[vestingIndex]\" */ value_11))), /** @src 8:5543:5548  \"10000\" */ 0x2710)\n                        /// @src 8:5559:5620  \"if(claimAmount == 0) revert Errors.VestingNotClaimableError()\"\n                        if /** @src 8:5562:5578  \"claimAmount == 0\" */ iszero(r)\n                        /// @src 8:5559:5620  \"if(claimAmount == 0) revert Errors.VestingNotClaimableError()\"\n                        {\n                            /// @src 8:5587:5620  \"Errors.VestingNotClaimableError()\"\n                            let _84 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:5587:5620  \"Errors.VestingNotClaimableError()\"\n                            mstore(_84, /** @src 8:5276:5309  \"Errors.VestingNotClaimableError()\" */ shl(226, 0x08fb25e7))\n                            /// @src 8:5587:5620  \"Errors.VestingNotClaimableError()\"\n                            revert(_84, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                        }\n                        let cleaned_12 := and(sload(/** @src 8:5635:5644  \"saleToken\" */ 0x12), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _68)\n                        /// @src 8:5635:5669  \"saleToken.balanceOf(address(this))\"\n                        let _85 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                        /// @src 8:5635:5669  \"saleToken.balanceOf(address(this))\"\n                        mstore(_85, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 8:5635:5669  \"saleToken.balanceOf(address(this))\" */ add(_85, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:5663:5667  \"this\" */ address())\n                        /// @src 8:5635:5669  \"saleToken.balanceOf(address(this))\"\n                        let _86 := staticcall(gas(), cleaned_12, _85, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36, /** @src 8:5635:5669  \"saleToken.balanceOf(address(this))\" */ _85, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67)\n                        /// @src 8:5635:5669  \"saleToken.balanceOf(address(this))\"\n                        if iszero(_86)\n                        {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let pos_11 := mload(64)\n                            returndatacopy(pos_11, 0, returndatasize())\n                            revert(pos_11, returndatasize())\n                        }\n                        /// @src 8:5635:5669  \"saleToken.balanceOf(address(this))\"\n                        let expr_15 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                        /// @src 8:5635:5669  \"saleToken.balanceOf(address(this))\"\n                        if _86\n                        {\n                            let _87 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67\n                            /// @src 8:5635:5669  \"saleToken.balanceOf(address(this))\"\n                            if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67, /** @src 8:5635:5669  \"saleToken.balanceOf(address(this))\" */ returndatasize()) { _87 := returndatasize() }\n                            finalize_allocation(_85, _87)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            if slt(sub(/** @src 8:5635:5669  \"saleToken.balanceOf(address(this))\" */ add(_85, _87), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _85), _67) { revert(0, 0) }\n                            /// @src 8:5635:5669  \"saleToken.balanceOf(address(this))\"\n                            expr_15 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_85)\n                        }\n                        /// @src 8:5631:5733  \"if (saleToken.balanceOf(address(this)) < claimAmount) revert Errors.InsufficientContractBalanceError()\"\n                        if /** @src 8:5635:5683  \"saleToken.balanceOf(address(this)) < claimAmount\" */ lt(expr_15, r)\n                        /// @src 8:5631:5733  \"if (saleToken.balanceOf(address(this)) < claimAmount) revert Errors.InsufficientContractBalanceError()\"\n                        {\n                            /// @src 8:5692:5733  \"Errors.InsufficientContractBalanceError()\"\n                            let _88 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:5692:5733  \"Errors.InsufficientContractBalanceError()\"\n                            mstore(_88, shl(224, 0xe23f04e1))\n                            revert(_88, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:5744:5795  \"vestingStatistics.totalVestingAmount -= claimAmount\"\n                        let _89 := checked_sub_uint256(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(/** @src 8:5744:5761  \"vestingStatistics\" */ 0x0d), /** @src 8:5744:5795  \"vestingStatistics.totalVestingAmount -= claimAmount\" */ r)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        sstore(/** @src 8:5744:5761  \"vestingStatistics\" */ 0x0d, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _89)\n                        /// @src 8:5811:5940  \"UserClaimedVesting(msg.sender, vestingIndex, claimAmount, saleTokenAmount, vestingStatistics.totalVestingAmount, block.timestamp)\"\n                        let _90 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                        mstore(_90, /** @src 8:4289:4299  \"msg.sender\" */ caller())\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(add(_90, _67), value_11)\n                        mstore(add(_90, 64), r)\n                        mstore(add(_90, /** @src 8:5492:5525  \"currentVesting.vestingPercentages\" */ 96), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ expr_14)\n                        mstore(add(_90, 128), _89)\n                        mstore(add(_90, 160), /** @src 8:5075:5090  \"block.timestamp\" */ timestamp())\n                        /// @src 8:5811:5940  \"UserClaimedVesting(msg.sender, vestingIndex, claimAmount, saleTokenAmount, vestingStatistics.totalVestingAmount, block.timestamp)\"\n                        log1(_90, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 192, /** @src 8:5811:5940  \"UserClaimedVesting(msg.sender, vestingIndex, claimAmount, saleTokenAmount, vestingStatistics.totalVestingAmount, block.timestamp)\" */ 0x3d8339dd16c2311bf6ab491c826f9ecd3fe1858e58fe77f10c63eb2b03fdbc14)\n                        /// @src 8:5981:6024  \"saleToken.transfer(msg.sender, claimAmount)\"\n                        let _91 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                        /// @src 8:5981:6024  \"saleToken.transfer(msg.sender, claimAmount)\"\n                        mstore(_91, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0xa9059cbb))\n                        /// @src 8:5981:6024  \"saleToken.transfer(msg.sender, claimAmount)\"\n                        let _92 := call(gas(), cleaned_12, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0, /** @src 8:5981:6024  \"saleToken.transfer(msg.sender, claimAmount)\" */ _91, sub(abi_encode_address_uint256(add(_91, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:4289:4299  \"msg.sender\" */ caller(), /** @src 8:5981:6024  \"saleToken.transfer(msg.sender, claimAmount)\" */ r), _91), _91, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67)\n                        /// @src 8:5981:6024  \"saleToken.transfer(msg.sender, claimAmount)\"\n                        if iszero(_92)\n                        {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let pos_12 := mload(64)\n                            returndatacopy(pos_12, 0, returndatasize())\n                            revert(pos_12, returndatasize())\n                        }\n                        /// @src 8:5981:6024  \"saleToken.transfer(msg.sender, claimAmount)\"\n                        let expr_16 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                        /// @src 8:5981:6024  \"saleToken.transfer(msg.sender, claimAmount)\"\n                        if _92\n                        {\n                            let _93 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67\n                            /// @src 8:5981:6024  \"saleToken.transfer(msg.sender, claimAmount)\"\n                            if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67, /** @src 8:5981:6024  \"saleToken.transfer(msg.sender, claimAmount)\" */ returndatasize()) { _93 := returndatasize() }\n                            finalize_allocation(_91, _93)\n                            expr_16 := abi_decode_bool_fromMemory(_91, add(_91, _93))\n                        }\n                        /// @src 8:6034:6103  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                        if /** @src 8:6038:6061  \"!successfullyTransfered\" */ iszero(expr_16)\n                        /// @src 8:6034:6103  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                        {\n                            /// @src 8:6070:6103  \"Errors.TokenTransferFailedError()\"\n                            let _94 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:6070:6103  \"Errors.TokenTransferFailedError()\"\n                            mstore(_94, /** @src 8:8940:8973  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                            /// @src 8:6070:6103  \"Errors.TokenTransferFailedError()\"\n                            revert(_94, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                        }\n                        let memPos_25 := mload(64)\n                        mstore(memPos_25, 1)\n                        return(memPos_25, _67)\n                    }\n                    case 0xad4222c7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 8:792:844  \"mapping(address => uint256) public investmentAmounts\" */ 17)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _95 := sload(keccak256(0, 64))\n                        let memPos_26 := mload(64)\n                        mstore(memPos_26, _95)\n                        return(memPos_26, 32)\n                    }\n                    case 0xb9edb3a5 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _96 := sload(/** @src 8:416:460  \"IDappadVesting.Vesting public defaultVesting\" */ 1)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _97 := sload(/** @src 8:416:460  \"IDappadVesting.Vesting public defaultVesting\" */ 2)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _98 := sload(/** @src 8:416:460  \"IDappadVesting.Vesting public defaultVesting\" */ 3)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let value_12 := and(sload(/** @src 8:416:460  \"IDappadVesting.Vesting public defaultVesting\" */ 5), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0xff)\n                        let memPos_27 := mload(64)\n                        return(memPos_27, sub(abi_encode_uint256_uint256_uint256_bool(memPos_27, _96, _97, _98, value_12), memPos_27))\n                    }\n                    case 0xbf5a0c59 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        /// @src 8:13809:13816  \"uint256\"\n                        let var_1 := modifier_notZeroAddress(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ abi_decode_address())\n                        let memPos_28 := mload(64)\n                        mstore(memPos_28, var_1)\n                        return(memPos_28, 32)\n                    }\n                    case 0xcd861e16 {\n                        if callvalue() { revert(0, 0) }\n                        let _99 := 32\n                        if slt(add(calldatasize(), not(3)), _99) { revert(0, 0) }\n                        let value0_8 := abi_decode_address()\n                        /// @src 8:3824:3832  \"_address\"\n                        fun_notZeroAddress(value0_8)\n                        /// @src 8:17258:17319  \"IDappadVesting.Vesting memory currentVesting = defaultVesting\"\n                        let var_currentVesting_mpos_3 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting_37989()\n                        let _100 := and(value0_8, sub(shl(160, 1), 1))\n                        mstore(0, _100)\n                        mstore(_99, /** @src 8:17334:17348  \"customVestings\" */ 0x0f)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let dataSlot_9 := keccak256(0, 64)\n                        /// @src 8:17330:17449  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                        if /** @src 8:17334:17378  \"customVestings[userAddress].vestingCount > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(dataSlot_9)))\n                        /// @src 8:17330:17449  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                        {\n                            /// @src 8:17394:17438  \"currentVesting = customVestings[userAddress]\"\n                            var_currentVesting_mpos_3 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting(dataSlot_9)\n                        }\n                        /// @src 8:17467:17499  \"uint256 unclaimedTokenAmount = 0\"\n                        let var_unclaimedTokenAmount := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                        /// @src 8:17542:17580  \"getUserTotalVestingAmount(userAddress)\"\n                        let expr_17 := /** @src 8:13809:13816  \"uint256\" */ modifier_notZeroAddress(/** @src 8:17542:17580  \"getUserTotalVestingAmount(userAddress)\" */ value0_8)\n                        /// @src 8:17596:17609  \"uint256 i = 0\"\n                        let var_i_3 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                        /// @src 8:17591:17838  \"for (uint256 i = 0; i < currentVesting.vestingCount; i++) {...\"\n                        for { }\n                        /** @src 8:17305:17319  \"defaultVesting\" */ 0x01\n                        /// @src 8:17596:17609  \"uint256 i = 0\"\n                        {\n                            /// @src 8:17644:17647  \"i++\"\n                            var_i_3 := increment_uint256(var_i_3)\n                        }\n                        {\n                            /// @src 8:17611:17642  \"i < currentVesting.vestingCount\"\n                            if iszero(lt(var_i_3, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:17615:17642  \"currentVesting.vestingCount\" */ var_currentVesting_mpos_3)))\n                            /// @src 8:17611:17642  \"i < currentVesting.vestingCount\"\n                            { break }\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            mstore(0, _100)\n                            mstore(_99, /** @src 8:17668:17682  \"vestingClaimed\" */ 0x10)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let dataSlot_10 := keccak256(0, 64)\n                            mstore(0, var_i_3)\n                            mstore(_99, dataSlot_10)\n                            /// @src 8:17663:17828  \"if (!vestingClaimed[userAddress][i]) {...\"\n                            if /** @src 8:17667:17698  \"!vestingClaimed[userAddress][i]\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(0, 64)), 0xff))\n                            /// @src 8:17663:17828  \"if (!vestingClaimed[userAddress][i]) {...\"\n                            {\n                                /// @src 8:17718:17813  \"unclaimedTokenAmount += (userTotalVestingAmount * currentVesting.vestingPercentages[i]) / 10000\"\n                                var_unclaimedTokenAmount := checked_add_uint256(var_unclaimedTokenAmount, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ div(/** @src 8:17743:17804  \"userTotalVestingAmount * currentVesting.vestingPercentages[i]\" */ checked_mul_uint256(expr_17, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:17768:17804  \"currentVesting.vestingPercentages[i]\" */ memory_array_index_access_uint256_dyn(/** @src 8:17768:17801  \"currentVesting.vestingPercentages\" */ mload(add(var_currentVesting_mpos_3, 96)), /** @src 8:17768:17804  \"currentVesting.vestingPercentages[i]\" */ var_i_3))), /** @src 8:17808:17813  \"10000\" */ 0x2710))\n                            }\n                        }\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let memPos_29 := mload(64)\n                        mstore(memPos_29, var_unclaimedTokenAmount)\n                        return(memPos_29, _99)\n                    }\n                    case 0xcfa0ef64 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_9 := abi_decode_address()\n                        let offset_1 := calldataload(36)\n                        let _101 := 0xffffffffffffffff\n                        if gt(offset_1, _101) { revert(0, 0) }\n                        let value1_3 := abi_decode_struct_Vesting(add(4, offset_1), calldatasize())\n                        /// @src 8:4020:4028  \"_address\"\n                        fun_onlyOwnerOrAdmin(/** @src 8:10801:10811  \"msg.sender\" */ caller())\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _102 := and(value0_9, sub(shl(160, 1), 1))\n                        mstore(0, _102)\n                        /// @src 8:10838:10852  \"customVestings\"\n                        let _103 := 0x0f\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _104 := 32\n                        mstore(_104, /** @src 8:10838:10852  \"customVestings\" */ _103)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let dataSlot_11 := keccak256(0, 64)\n                        sstore(dataSlot_11, mload(value1_3))\n                        let _105 := 1\n                        sstore(add(dataSlot_11, _105), mload(add(value1_3, _104)))\n                        sstore(add(dataSlot_11, 2), mload(add(value1_3, 64)))\n                        let _106 := 3\n                        let memberSlot := add(dataSlot_11, _106)\n                        let _107 := add(value1_3, 96)\n                        let _108 := mload(_107)\n                        let length_3 := mload(_108)\n                        if gt(length_3, _101)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        resize_array_array_uint256_dyn_storage(memberSlot, length_3)\n                        let srcPtr_3 := add(_108, _104)\n                        mstore(0, memberSlot)\n                        let data := keccak256(0, _104)\n                        let i_3 := 0\n                        for { } lt(i_3, length_3) { i_3 := add(i_3, _105) }\n                        {\n                            let _109 := mload(srcPtr_3)\n                            srcPtr_3 := add(srcPtr_3, _104)\n                            sstore(add(data, i_3), _109)\n                        }\n                        update_storage_value_offsett_bool_to_bool(add(dataSlot_11, 4), iszero(iszero(mload(add(value1_3, 128)))))\n                        /// @src 8:10886:10920  \"uint256 totalVestingPercentage = 0\"\n                        let var_totalVestingPercentage_1 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                        /// @src 8:10980:11028  \"new uint256[](vesting.vestingPercentages.length)\"\n                        let _110 := allocate_and_zero_memory_array_array_uint256_dyn(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:10994:11020  \"vesting.vestingPercentages\" */ mload(_107)))\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(0, _102)\n                        mstore(_104, /** @src 8:10838:10852  \"customVestings\" */ _103)\n                        /// @src 8:10931:10977  \"customVestings[userAddress].vestingPercentages\"\n                        let _111 := add(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ keccak256(0, 64), _106)\n                        let length_4 := mload(_110)\n                        if gt(length_4, _101)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        resize_array_array_uint256_dyn_storage(_111, length_4)\n                        let srcPtr_4 := add(_110, _104)\n                        mstore(0, _111)\n                        let data_1 := keccak256(0, _104)\n                        let i_4 := 0\n                        for { } lt(i_4, length_4) { i_4 := add(i_4, _105) }\n                        {\n                            let itemValue_1 := mload(srcPtr_4)\n                            srcPtr_4 := add(srcPtr_4, _104)\n                            sstore(add(data_1, i_4), itemValue_1)\n                        }\n                        /// @src 8:11043:11056  \"uint256 i = 0\"\n                        let var_i_4 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                        /// @src 8:11038:11264  \"for (uint256 i = 0; i < vesting.vestingCount; i++) {...\"\n                        for { }\n                        /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _105\n                        /// @src 8:11043:11056  \"uint256 i = 0\"\n                        {\n                            /// @src 8:11084:11087  \"i++\"\n                            var_i_4 := increment_uint256(var_i_4)\n                        }\n                        {\n                            /// @src 8:11058:11082  \"i < vesting.vestingCount\"\n                            if iszero(lt(var_i_4, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:11062:11082  \"vesting.vestingCount\" */ value1_3)))\n                            /// @src 8:11058:11082  \"i < vesting.vestingCount\"\n                            { break }\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let _112 := mload(/** @src 8:11155:11184  \"vesting.vestingPercentages[i]\" */ memory_array_index_access_uint256_dyn(/** @src 8:11155:11181  \"vesting.vestingPercentages\" */ mload(_107), /** @src 8:11155:11184  \"vesting.vestingPercentages[i]\" */ var_i_4))\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            mstore(0, _102)\n                            mstore(_104, /** @src 8:10838:10852  \"customVestings\" */ _103)\n                            /// @src 8:11103:11152  \"customVestings[userAddress].vestingPercentages[i]\"\n                            let _113, _114 := storage_array_index_access_uint256_dyn(/** @src 8:11103:11149  \"customVestings[userAddress].vestingPercentages\" */ add(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ keccak256(0, 64), _106), /** @src 8:11103:11152  \"customVestings[userAddress].vestingPercentages[i]\" */ var_i_4)\n                            /// @src 8:11103:11184  \"customVestings[userAddress].vestingPercentages[i] = vesting.vestingPercentages[i]\"\n                            update_storage_value_uint256_to_uint256(_113, _114, _112)\n                            /// @src 8:11198:11253  \"totalVestingPercentage += vesting.vestingPercentages[i]\"\n                            var_totalVestingPercentage_1 := checked_add_uint256(var_totalVestingPercentage_1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:11224:11253  \"vesting.vestingPercentages[i]\" */ memory_array_index_access_uint256_dyn(/** @src 8:11224:11250  \"vesting.vestingPercentages\" */ mload(_107), /** @src 8:11224:11253  \"vesting.vestingPercentages[i]\" */ var_i_4)))\n                        }\n                        /// @src 8:11274:11354  \"if (totalVestingPercentage != 10000) revert Errors.TotalVestingPercentageError()\"\n                        if /** @src 8:11278:11309  \"totalVestingPercentage != 10000\" */ iszero(eq(var_totalVestingPercentage_1, /** @src 8:11304:11309  \"10000\" */ 0x2710))\n                        /// @src 8:11274:11354  \"if (totalVestingPercentage != 10000) revert Errors.TotalVestingPercentageError()\"\n                        {\n                            /// @src 8:11318:11354  \"Errors.TotalVestingPercentageError()\"\n                            let _115 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:11318:11354  \"Errors.TotalVestingPercentageError()\"\n                            mstore(_115, /** @src 8:10544:10580  \"Errors.TotalVestingPercentageError()\" */ shl(225, 0x74b8a881))\n                            /// @src 8:11318:11354  \"Errors.TotalVestingPercentageError()\"\n                            revert(_115, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:11413:11439  \"vesting.vestingPercentages\"\n                        let _mpos_1 := mload(_107)\n                        /// @src 8:11370:11440  \"CustomVestingUpdated(userAddress, vesting, vesting.vestingPercentages)\"\n                        let _116 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                        mstore(_116, _102)\n                        mstore(add(_116, _104), 96)\n                        let tail_1 := abi_encode_struct_Vesting(value1_3, add(_116, 96))\n                        mstore(add(_116, 64), sub(tail_1, _116))\n                        /// @src 8:11370:11440  \"CustomVestingUpdated(userAddress, vesting, vesting.vestingPercentages)\"\n                        log1(_116, sub(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ abi_encode_array_uint256_dyn(_mpos_1, tail_1), /** @src 8:11370:11440  \"CustomVestingUpdated(userAddress, vesting, vesting.vestingPercentages)\" */ _116), 0x3bde95f8dbdfe169f6663dd0f17dd76cfe84cca069d48fcda8275c0ef25646d6)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let memPos_30 := mload(64)\n                        mstore(memPos_30, _105)\n                        return(memPos_30, _104)\n                    }\n                    case 0xd547741f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_13 := calldataload(4)\n                        let value1_4 := abi_decode_address_37972()\n                        mstore(0, value_13)\n                        mstore(32, 0)\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ keccak256(0, 64), 1)))\n                        /// @src 0:4747:4773  \"_revokeRole(role, account)\"\n                        pop(fun_revokeRole(value_13, value1_4))\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0xd8f3c99d {\n                        if callvalue() { revert(0, 0) }\n                        let param, param_1, param_2, param_3 := abi_decode_array_address_dyn_calldatat_array_struct_Vesting_calldata_dyn_calldata(calldatasize())\n                        /// @src 8:4020:4028  \"_address\"\n                        fun_onlyOwnerOrAdmin(/** @src 8:11606:11616  \"msg.sender\" */ caller())\n                        /// @src 8:11643:11729  \"if (userAddresses.length != vestings.length) revert Errors.ArraysLengthMismatchError()\"\n                        if /** @src 8:11647:11686  \"userAddresses.length != vestings.length\" */ iszero(eq(param_1, param_3))\n                        /// @src 8:11643:11729  \"if (userAddresses.length != vestings.length) revert Errors.ArraysLengthMismatchError()\"\n                        {\n                            /// @src 8:11695:11729  \"Errors.ArraysLengthMismatchError()\"\n                            let _117 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:11695:11729  \"Errors.ArraysLengthMismatchError()\"\n                            mstore(_117, shl(225, 0x07cf3473))\n                            revert(_117, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:11745:11758  \"uint256 i = 0\"\n                        let var_i_5 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                        /// @src 8:11740:12581  \"for (uint256 i = 0; i < userAddresses.length; i++) {...\"\n                        for { }\n                        /** @src 8:11760:11784  \"i < userAddresses.length\" */ lt(var_i_5, param_1)\n                        /// @src 8:11745:11758  \"uint256 i = 0\"\n                        {\n                            /// @src 8:11786:11789  \"i++\"\n                            var_i_5 := increment_uint256(var_i_5)\n                        }\n                        {\n                            /// @src 8:11805:11873  \"if (userAddresses[i] == address(0)) revert Errors.ZeroAddressError()\"\n                            if /** @src 8:11809:11839  \"userAddresses[i] == address(0)\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(/** @src 8:11809:11825  \"userAddresses[i]\" */ read_from_calldatat_address(calldata_array_index_access_uint256_dyn_calldata(param, param_1, var_i_5)), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                            /// @src 8:11805:11873  \"if (userAddresses[i] == address(0)) revert Errors.ZeroAddressError()\"\n                            {\n                                /// @src 8:11848:11873  \"Errors.ZeroAddressError()\"\n                                let _118 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                /// @src 8:11848:11873  \"Errors.ZeroAddressError()\"\n                                mstore(_118, shl(224, 0x3efa09af))\n                                revert(_118, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                            }\n                            /// @src 8:11923:11934  \"vestings[i]\"\n                            let _119 := calldata_array_index_access_struct_Vesting_calldata_dyn_calldata(param_2, param_3, var_i_5)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            mstore(0, and(/** @src 8:11903:11919  \"userAddresses[i]\" */ read_from_calldatat_address(calldata_array_index_access_uint256_dyn_calldata(param, param_1, var_i_5)), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 8:11888:11902  \"customVestings\" */ 0x0f)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let dataSlot_12 := keccak256(0, 64)\n                            sstore(dataSlot_12, calldataload(_119))\n                            sstore(add(dataSlot_12, 1), calldataload(add(_119, 0x20)))\n                            sstore(add(dataSlot_12, 2), calldataload(add(_119, 64)))\n                            let memberSlot_1 := add(dataSlot_12, 3)\n                            let memberValue, memberValue_1 := access_calldata_tail_array_uint256_dyn_calldata(_119, add(_119, 96))\n                            if gt(memberValue_1, 0xffffffffffffffff)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            resize_array_array_uint256_dyn_storage(memberSlot_1, memberValue_1)\n                            let srcPtr_5 := memberValue\n                            mstore(0, memberSlot_1)\n                            let data_2 := keccak256(0, 0x20)\n                            let i_5 := 0\n                            for { } lt(i_5, memberValue_1) { i_5 := add(i_5, 1) }\n                            {\n                                let itemValue_2 := calldataload(srcPtr_5)\n                                srcPtr_5 := add(srcPtr_5, 0x20)\n                                sstore(add(data_2, i_5), itemValue_2)\n                            }\n                            if iszero(eq(calldataload(add(_119, 128)), iszero(iszero(calldataload(add(_119, 128)))))) { revert(0, 0) }\n                            update_storage_value_offsett_bool_to_bool(add(dataSlot_12, 4), calldataload(add(_119, 128)))\n                            /// @src 8:11949:11983  \"uint256 totalVestingPercentage = 0\"\n                            let var_totalVestingPercentage_2 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                            /// @src 8:12066:12077  \"vestings[i]\"\n                            let expr_offset := calldata_array_index_access_struct_Vesting_calldata_dyn_calldata(param_2, param_3, var_i_5)\n                            /// @src 8:12066:12096  \"vestings[i].vestingPercentages\"\n                            let expr_offset_1, expr_length := access_calldata_tail_array_uint256_dyn_calldata(expr_offset, add(expr_offset, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 96))\n                            /// @src 8:12052:12104  \"new uint256[](vestings[i].vestingPercentages.length)\"\n                            let _120 := allocate_and_zero_memory_array_array_uint256_dyn(/** @src 8:12066:12103  \"vestings[i].vestingPercentages.length\" */ expr_length)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            mstore(0, and(/** @src 8:12013:12029  \"userAddresses[i]\" */ read_from_calldatat_address(calldata_array_index_access_uint256_dyn_calldata(param, param_1, var_i_5)), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 8:11888:11902  \"customVestings\" */ 0x0f)\n                            /// @src 8:11998:12049  \"customVestings[userAddresses[i]].vestingPercentages\"\n                            let _121 := add(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ keccak256(0, 64), 3)\n                            let length_5 := mload(_120)\n                            if gt(length_5, 0xffffffffffffffff)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            resize_array_array_uint256_dyn_storage(_121, length_5)\n                            let srcPtr_6 := add(_120, 0x20)\n                            mstore(0, _121)\n                            let data_3 := keccak256(0, 0x20)\n                            let i_6 := 0\n                            for { } lt(i_6, length_5) { i_6 := add(i_6, 1) }\n                            {\n                                let itemValue_3 := mload(srcPtr_6)\n                                srcPtr_6 := add(srcPtr_6, 0x20)\n                                sstore(add(data_3, i_6), itemValue_3)\n                            }\n                            /// @src 8:12123:12136  \"uint256 j = 0\"\n                            let var_j := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                            /// @src 8:12118:12373  \"for (uint256 j = 0; j < vestings[i].vestingCount; j++) {...\"\n                            for { }\n                            /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 1\n                            /// @src 8:12123:12136  \"uint256 j = 0\"\n                            {\n                                /// @src 8:12168:12171  \"j++\"\n                                var_j := increment_uint256(var_j)\n                            }\n                            {\n                                /// @src 8:12138:12166  \"j < vestings[i].vestingCount\"\n                                if iszero(lt(var_j, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ calldataload(/** @src 8:12142:12153  \"vestings[i]\" */ calldata_array_index_access_struct_Vesting_calldata_dyn_calldata(param_2, param_3, var_i_5))))\n                                /// @src 8:12138:12166  \"j < vestings[i].vestingCount\"\n                                { break }\n                                /// @src 8:12248:12259  \"vestings[i]\"\n                                let expr_offset_2 := calldata_array_index_access_struct_Vesting_calldata_dyn_calldata(param_2, param_3, var_i_5)\n                                /// @src 8:12248:12278  \"vestings[i].vestingPercentages\"\n                                let expr_offset_3, expr_length_1 := access_calldata_tail_array_uint256_dyn_calldata(expr_offset_2, add(expr_offset_2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 96))\n                                let value_14 := calldataload(/** @src 8:12248:12281  \"vestings[i].vestingPercentages[j]\" */ calldata_array_index_access_uint256_dyn_calldata(expr_offset_3, expr_length_1, var_j))\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                mstore(0, and(/** @src 8:12206:12222  \"userAddresses[i]\" */ read_from_calldatat_address(calldata_array_index_access_uint256_dyn_calldata(param, param_1, var_i_5)), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                                mstore(0x20, /** @src 8:11888:11902  \"customVestings\" */ 0x0f)\n                                /// @src 8:12191:12245  \"customVestings[userAddresses[i]].vestingPercentages[j]\"\n                                let _122, _123 := storage_array_index_access_uint256_dyn(/** @src 8:12191:12242  \"customVestings[userAddresses[i]].vestingPercentages\" */ add(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ keccak256(0, 64), 3), /** @src 8:12191:12245  \"customVestings[userAddresses[i]].vestingPercentages[j]\" */ var_j)\n                                /// @src 8:12191:12281  \"customVestings[userAddresses[i]].vestingPercentages[j] = vestings[i].vestingPercentages[j]\"\n                                update_storage_value_uint256_to_uint256(_122, _123, value_14)\n                                /// @src 8:12325:12336  \"vestings[i]\"\n                                let expr_offset_4 := calldata_array_index_access_struct_Vesting_calldata_dyn_calldata(param_2, param_3, var_i_5)\n                                /// @src 8:12325:12355  \"vestings[i].vestingPercentages\"\n                                let expr_offset_5, expr_length_2 := access_calldata_tail_array_uint256_dyn_calldata(expr_offset_4, add(expr_offset_4, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 96))\n                                /// @src 8:12299:12358  \"totalVestingPercentage += vestings[i].vestingPercentages[j]\"\n                                var_totalVestingPercentage_2 := checked_add_uint256(var_totalVestingPercentage_2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ calldataload(/** @src 8:12325:12358  \"vestings[i].vestingPercentages[j]\" */ calldata_array_index_access_uint256_dyn_calldata(expr_offset_5, expr_length_2, var_j)))\n                            }\n                            /// @src 8:12387:12467  \"if (totalVestingPercentage != 10000) revert Errors.TotalVestingPercentageError()\"\n                            if /** @src 8:12391:12422  \"totalVestingPercentage != 10000\" */ iszero(eq(var_totalVestingPercentage_2, /** @src 8:12417:12422  \"10000\" */ 0x2710))\n                            /// @src 8:12387:12467  \"if (totalVestingPercentage != 10000) revert Errors.TotalVestingPercentageError()\"\n                            {\n                                /// @src 8:12431:12467  \"Errors.TotalVestingPercentageError()\"\n                                let _124 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                /// @src 8:12431:12467  \"Errors.TotalVestingPercentageError()\"\n                                mstore(_124, /** @src 8:10544:10580  \"Errors.TotalVestingPercentageError()\" */ shl(225, 0x74b8a881))\n                                /// @src 8:12431:12467  \"Errors.TotalVestingPercentageError()\"\n                                revert(_124, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                            }\n                            /// @src 8:12508:12524  \"userAddresses[i]\"\n                            let expr_18 := read_from_calldatat_address(calldata_array_index_access_uint256_dyn_calldata(param, param_1, var_i_5))\n                            /// @src 8:12526:12537  \"vestings[i]\"\n                            let expr_offset_6 := calldata_array_index_access_struct_Vesting_calldata_dyn_calldata(param_2, param_3, var_i_5)\n                            /// @src 8:12539:12550  \"vestings[i]\"\n                            let expr_offset_7 := calldata_array_index_access_struct_Vesting_calldata_dyn_calldata(param_2, param_3, var_i_5)\n                            /// @src 8:12539:12569  \"vestings[i].vestingPercentages\"\n                            let expr_offset_8, expr_length_3 := access_calldata_tail_array_uint256_dyn_calldata(expr_offset_7, add(expr_offset_7, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 96))\n                            /// @src 8:12487:12570  \"CustomVestingUpdated(userAddresses[i], vestings[i], vestings[i].vestingPercentages)\"\n                            let _125 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            mstore(_125, and(expr_18, sub(shl(160, 1), 1)))\n                            mstore(add(_125, 0x20), 96)\n                            mstore(add(_125, 96), calldataload(expr_offset_6))\n                            mstore(add(_125, 128), calldataload(add(expr_offset_6, 0x20)))\n                            let _126 := 0xa0\n                            mstore(add(_125, _126), calldataload(add(expr_offset_6, 64)))\n                            let rel_offset_of_tail := calldataload(add(expr_offset_6, 96))\n                            if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), expr_offset_6), not(30)))) { revert(0, 0) }\n                            let value_15 := add(rel_offset_of_tail, expr_offset_6)\n                            let length_6 := calldataload(value_15)\n                            let value_16 := add(value_15, 0x20)\n                            if gt(length_6, 0xffffffffffffffff) { revert(0, 0) }\n                            if sgt(value_16, sub(calldatasize(), shl(5, length_6))) { revert(0, 0) }\n                            mstore(add(_125, 192), _126)\n                            let tail_2 := abi_encode_array_uint256_dyn_calldata(value_16, length_6, add(_125, 256))\n                            mstore(add(_125, 224), iszero(iszero(abi_decode_bool(add(expr_offset_6, 128)))))\n                            mstore(add(_125, 64), sub(tail_2, _125))\n                            /// @src 8:12487:12570  \"CustomVestingUpdated(userAddresses[i], vestings[i], vestings[i].vestingPercentages)\"\n                            log1(_125, sub(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ abi_encode_array_uint256_dyn_calldata(expr_offset_8, expr_length_3, tail_2), /** @src 8:12487:12570  \"CustomVestingUpdated(userAddresses[i], vestings[i], vestings[i].vestingPercentages)\" */ _125), 0x3bde95f8dbdfe169f6663dd0f17dd76cfe84cca069d48fcda8275c0ef25646d6)\n                        }\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let memPos_31 := mload(64)\n                        mstore(memPos_31, 1)\n                        return(memPos_31, 0x20)\n                    }\n                    case 0xdaf6ca30 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_17 := and(sload(/** @src 8:888:919  \"IDappadSale public saleContract\" */ 19), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1))\n                        let memPos_32 := mload(64)\n                        mstore(memPos_32, value_17)\n                        return(memPos_32, 32)\n                    }\n                    case 0xe31e62d9 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 8:720:786  \"mapping(address => mapping(uint256 => bool)) public vestingClaimed\" */ 16)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let dataSlot_13 := keccak256(0, 64)\n                        mstore(0, calldataload(36))\n                        mstore(32, dataSlot_13)\n                        let value_18 := and(sload(keccak256(0, 64)), 0xff)\n                        let memPos_33 := mload(64)\n                        mstore(memPos_33, iszero(iszero(value_18)))\n                        return(memPos_33, 32)\n                    }\n                    case 0xe480bd79 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _127 := sload(/** @src 8:586:643  \"IDappadVesting.VestingStatistics public vestingStatistics\" */ 13)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _128 := sload(/** @src 8:586:643  \"IDappadVesting.VestingStatistics public vestingStatistics\" */ 14)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let memPos_34 := mload(64)\n                        mstore(memPos_34, _127)\n                        mstore(add(memPos_34, 32), _128)\n                        return(memPos_34, 64)\n                    }\n                    case 0xe49f6835 {\n                        if callvalue() { revert(0, 0) }\n                        let param_4, param_5, param_6, param_7 := abi_decode_array_address_dyn_calldatat_array_struct_Vesting_calldata_dyn_calldata(calldatasize())\n                        /// @src 8:4020:4028  \"_address\"\n                        fun_onlyOwnerOrAdmin(/** @src 8:9463:9473  \"msg.sender\" */ caller())\n                        /// @src 8:9500:9585  \"if (userAddresses.length != amounts.length) revert Errors.ArraysLengthMismatchError()\"\n                        if /** @src 8:9504:9542  \"userAddresses.length != amounts.length\" */ iszero(eq(param_5, param_7))\n                        /// @src 8:9500:9585  \"if (userAddresses.length != amounts.length) revert Errors.ArraysLengthMismatchError()\"\n                        {\n                            /// @src 8:9551:9585  \"Errors.ArraysLengthMismatchError()\"\n                            let _129 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:9551:9585  \"Errors.ArraysLengthMismatchError()\"\n                            mstore(_129, /** @src 8:11695:11729  \"Errors.ArraysLengthMismatchError()\" */ shl(225, 0x07cf3473))\n                            /// @src 8:9551:9585  \"Errors.ArraysLengthMismatchError()\"\n                            revert(_129, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:9601:9614  \"uint256 i = 0\"\n                        let var_i_6 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                        /// @src 8:9596:9872  \"for (uint256 i = 0; i < userAddresses.length; i++) {...\"\n                        for { }\n                        /** @src 8:9616:9640  \"i < userAddresses.length\" */ lt(var_i_6, param_5)\n                        /// @src 8:9601:9614  \"uint256 i = 0\"\n                        {\n                            /// @src 8:9642:9645  \"i++\"\n                            var_i_6 := increment_uint256(var_i_6)\n                        }\n                        {\n                            /// @src 8:9661:9716  \"if (amounts[i] == 0) revert Errors.InvalidAmountError()\"\n                            if /** @src 8:9665:9680  \"amounts[i] == 0\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ calldataload(/** @src 8:9665:9675  \"amounts[i]\" */ calldata_array_index_access_uint256_dyn_calldata(param_6, param_7, var_i_6)))\n                            /// @src 8:9661:9716  \"if (amounts[i] == 0) revert Errors.InvalidAmountError()\"\n                            {\n                                /// @src 8:9689:9716  \"Errors.InvalidAmountError()\"\n                                let _130 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                /// @src 8:9689:9716  \"Errors.InvalidAmountError()\"\n                                mstore(_130, /** @src 8:9165:9192  \"Errors.InvalidAmountError()\" */ shl(227, 0x0f51ac85))\n                                /// @src 8:9689:9716  \"Errors.InvalidAmountError()\"\n                                revert(_130, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                            }\n                            let _131 := sub(shl(160, 1), 1)\n                            /// @src 8:9730:9798  \"if (userAddresses[i] == address(0)) revert Errors.ZeroAddressError()\"\n                            if /** @src 8:9734:9764  \"userAddresses[i] == address(0)\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(/** @src 8:9734:9750  \"userAddresses[i]\" */ read_from_calldatat_address(calldata_array_index_access_uint256_dyn_calldata(param_4, param_5, var_i_6)), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _131))\n                            /// @src 8:9730:9798  \"if (userAddresses[i] == address(0)) revert Errors.ZeroAddressError()\"\n                            {\n                                /// @src 8:9773:9798  \"Errors.ZeroAddressError()\"\n                                let _132 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                /// @src 8:9773:9798  \"Errors.ZeroAddressError()\"\n                                mstore(_132, /** @src 8:11848:11873  \"Errors.ZeroAddressError()\" */ shl(224, 0x3efa09af))\n                                /// @src 8:9773:9798  \"Errors.ZeroAddressError()\"\n                                revert(_132, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                            }\n                            let value_19 := calldataload(/** @src 8:9851:9861  \"amounts[i]\" */ calldata_array_index_access_uint256_dyn_calldata(param_6, param_7, var_i_6))\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            mstore(0, and(/** @src 8:9831:9847  \"userAddresses[i]\" */ read_from_calldatat_address(calldata_array_index_access_uint256_dyn_calldata(param_4, param_5, var_i_6)), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _131))\n                            mstore(0x20, /** @src 8:9813:9830  \"investmentAmounts\" */ 0x11)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            sstore(keccak256(0, 64), value_19)\n                        }\n                        /// @src 8:9887:9939  \"UserInvestmentAmountsUpdated(userAddresses, amounts)\"\n                        let _133 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                        let tail_3 := add(_133, 64)\n                        mstore(_133, 64)\n                        let pos_13 := tail_3\n                        mstore(tail_3, param_5)\n                        pos_13 := add(_133, 96)\n                        let srcPtr_7 := param_4\n                        let i_7 := 0\n                        for { } lt(i_7, param_5) { i_7 := add(i_7, 1) }\n                        {\n                            let value_20 := calldataload(srcPtr_7)\n                            let _134 := and(value_20, sub(shl(160, 1), 1))\n                            if iszero(eq(value_20, _134)) { revert(0, 0) }\n                            mstore(pos_13, _134)\n                            let _135 := 0x20\n                            pos_13 := add(pos_13, _135)\n                            srcPtr_7 := add(srcPtr_7, _135)\n                        }\n                        mstore(add(_133, 0x20), sub(pos_13, _133))\n                        /// @src 8:9887:9939  \"UserInvestmentAmountsUpdated(userAddresses, amounts)\"\n                        log1(_133, sub(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ abi_encode_array_uint256_dyn_calldata(param_6, param_7, pos_13), /** @src 8:9887:9939  \"UserInvestmentAmountsUpdated(userAddresses, amounts)\" */ _133), 0x7b9af4016ea794462793972f3d17adc8c498aac9f3baf41022e8469fa8f76bb2)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let memPos_35 := mload(64)\n                        mstore(memPos_35, 1)\n                        return(memPos_35, 0x20)\n                    }\n                    case 0xe7b6167d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_21 := calldataload(4)\n                        /// @src 8:4020:4028  \"_address\"\n                        fun_onlyOwnerOrAdmin(/** @src 8:12694:12704  \"msg.sender\" */ caller())\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        sstore(/** @src 8:12731:12769  \"vestingStatistics.totalSaleTokenAmount\" */ 14, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ value_21)\n                        /// @src 8:12794:12829  \"TotalSaleTokenAmountUpdated(amount)\"\n                        let _136 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                        mstore(_136, value_21)\n                        /// @src 8:12794:12829  \"TotalSaleTokenAmountUpdated(amount)\"\n                        log1(_136, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32, /** @src 8:12794:12829  \"TotalSaleTokenAmountUpdated(amount)\" */ 0x8feb0a7153cadea0dc333f048b85018294754240c350d2b2c10a4c0b8ccac44d)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let memPos_36 := mload(64)\n                        mstore(memPos_36, 1)\n                        return(memPos_36, 32)\n                    }\n                    case 0xe985e367 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_22 := and(sload(/** @src 8:851:882  \"IERC20Extented public saleToken\" */ 18), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1))\n                        let memPos_37 := mload(64)\n                        mstore(memPos_37, value_22)\n                        return(memPos_37, 32)\n                    }\n                    case 0xed6e45c8 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 8:3824:3832  \"_address\"\n                        fun_notZeroAddress(/** @src 8:6198:6208  \"msg.sender\" */ caller())\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _137 := sub(shl(160, 1), 1)\n                        /// @src 8:6235:6679  \"if(vestingAddresses.saleContractAddress != address(0)) {...\"\n                        switch /** @src 8:6238:6288  \"vestingAddresses.saleContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(/** @src 8:6238:6274  \"vestingAddresses.saleContractAddress\" */ 10), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _137)))\n                        case /** @src 8:6235:6679  \"if(vestingAddresses.saleContractAddress != address(0)) {...\" */ 0 {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            mstore(0, /** @src 8:6198:6208  \"msg.sender\" */ caller())\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            mstore(0x20, /** @src 8:6598:6615  \"investmentAmounts\" */ 0x11)\n                            /// @src 8:6594:6668  \"if (investmentAmounts[msg.sender] == 0) revert Errors.NotJoinedSaleError()\"\n                            if /** @src 8:6598:6632  \"investmentAmounts[msg.sender] == 0\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(keccak256(0, 64)))\n                            /// @src 8:6594:6668  \"if (investmentAmounts[msg.sender] == 0) revert Errors.NotJoinedSaleError()\"\n                            {\n                                /// @src 8:6641:6668  \"Errors.NotJoinedSaleError()\"\n                                let _138 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                /// @src 8:6641:6668  \"Errors.NotJoinedSaleError()\"\n                                mstore(_138, /** @src 8:4732:4759  \"Errors.NotJoinedSaleError()\" */ shl(224, 0x2f0e159d))\n                                /// @src 8:6641:6668  \"Errors.NotJoinedSaleError()\"\n                                revert(_138, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                            }\n                        }\n                        default /// @src 8:6235:6679  \"if(vestingAddresses.saleContractAddress != address(0)) {...\"\n                        {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let cleaned_13 := and(sload(/** @src 8:6308:6320  \"saleContract\" */ 0x13), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _137)\n                            /// @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                            let _139 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                            mstore(_139, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(225, 0x2f43f2d3))\n                            mstore(/** @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ add(_139, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:6198:6208  \"msg.sender\" */ caller())\n                            /// @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                            let _140 := 32\n                            let _141 := staticcall(gas(), cleaned_13, _139, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36, /** @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ _139, _140)\n                            if iszero(_141)\n                            {\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let pos_14 := mload(64)\n                                returndatacopy(pos_14, 0, returndatasize())\n                                revert(pos_14, returndatasize())\n                            }\n                            /// @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                            let expr_19 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                            /// @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                            if _141\n                            {\n                                let _142 := _140\n                                if gt(_140, returndatasize()) { _142 := returndatasize() }\n                                finalize_allocation(_139, _142)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                if slt(sub(/** @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ add(_139, _142), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _139), /** @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ _140)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                { revert(0, 0) }\n                                /// @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                                expr_19 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_139)\n                            }\n                            /// @src 8:6304:6397  \"if (saleContract.getUserInvestmentAmount(msg.sender) == 0) revert Errors.NotJoinedSaleError()\"\n                            if /** @src 8:6308:6361  \"saleContract.getUserInvestmentAmount(msg.sender) == 0\" */ iszero(expr_19)\n                            /// @src 8:6304:6397  \"if (saleContract.getUserInvestmentAmount(msg.sender) == 0) revert Errors.NotJoinedSaleError()\"\n                            {\n                                /// @src 8:6370:6397  \"Errors.NotJoinedSaleError()\"\n                                let _143 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                /// @src 8:6370:6397  \"Errors.NotJoinedSaleError()\"\n                                mstore(_143, /** @src 8:4732:4759  \"Errors.NotJoinedSaleError()\" */ shl(224, 0x2f0e159d))\n                                /// @src 8:6370:6397  \"Errors.NotJoinedSaleError()\"\n                                revert(_143, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                            }\n                            /// @src 8:6416:6447  \"saleContract.getRefundEnabled()\"\n                            let _144 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:6416:6447  \"saleContract.getRefundEnabled()\"\n                            mstore(_144, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(225, 0x42e037d5))\n                            /// @src 8:6416:6447  \"saleContract.getRefundEnabled()\"\n                            let _145 := staticcall(gas(), cleaned_13, _144, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4, /** @src 8:6416:6447  \"saleContract.getRefundEnabled()\" */ _144, /** @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ _140)\n                            /// @src 8:6416:6447  \"saleContract.getRefundEnabled()\"\n                            if iszero(_145)\n                            {\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let pos_15 := mload(64)\n                                returndatacopy(pos_15, 0, returndatasize())\n                                revert(pos_15, returndatasize())\n                            }\n                            /// @src 8:6416:6447  \"saleContract.getRefundEnabled()\"\n                            let expr_20 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                            /// @src 8:6416:6447  \"saleContract.getRefundEnabled()\"\n                            if _145\n                            {\n                                let _146 := /** @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ _140\n                                /// @src 8:6416:6447  \"saleContract.getRefundEnabled()\"\n                                if gt(/** @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ _140, /** @src 8:6416:6447  \"saleContract.getRefundEnabled()\" */ returndatasize()) { _146 := returndatasize() }\n                                finalize_allocation(_144, _146)\n                                expr_20 := abi_decode_bool_fromMemory(_144, add(_144, _146))\n                            }\n                            /// @src 8:6412:6564  \"if (saleContract.getRefundEnabled()) {...\"\n                            if expr_20\n                            {\n                                /// @src 8:6471:6511  \"saleContract.getUserRefunded(msg.sender)\"\n                                let _147 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                /// @src 8:6471:6511  \"saleContract.getUserRefunded(msg.sender)\"\n                                mstore(_147, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0xcf72d3db))\n                                mstore(/** @src 8:6471:6511  \"saleContract.getUserRefunded(msg.sender)\" */ add(_147, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:6198:6208  \"msg.sender\" */ caller())\n                                /// @src 8:6471:6511  \"saleContract.getUserRefunded(msg.sender)\"\n                                let _148 := staticcall(gas(), cleaned_13, _147, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36, /** @src 8:6471:6511  \"saleContract.getUserRefunded(msg.sender)\" */ _147, /** @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ _140)\n                                /// @src 8:6471:6511  \"saleContract.getUserRefunded(msg.sender)\"\n                                if iszero(_148)\n                                {\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    let pos_16 := mload(64)\n                                    returndatacopy(pos_16, 0, returndatasize())\n                                    revert(pos_16, returndatasize())\n                                }\n                                /// @src 8:6471:6511  \"saleContract.getUserRefunded(msg.sender)\"\n                                let expr_21 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                /// @src 8:6471:6511  \"saleContract.getUserRefunded(msg.sender)\"\n                                if _148\n                                {\n                                    let _149 := /** @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ _140\n                                    /// @src 8:6471:6511  \"saleContract.getUserRefunded(msg.sender)\"\n                                    if gt(/** @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ _140, /** @src 8:6471:6511  \"saleContract.getUserRefunded(msg.sender)\" */ returndatasize()) { _149 := returndatasize() }\n                                    finalize_allocation(_147, _149)\n                                    expr_21 := abi_decode_bool_fromMemory(_147, add(_147, _149))\n                                }\n                                /// @src 8:6467:6549  \"if (saleContract.getUserRefunded(msg.sender)) revert Errors.AlreadyRefundedError()\"\n                                if expr_21\n                                {\n                                    /// @src 8:6520:6549  \"Errors.AlreadyRefundedError()\"\n                                    let _150 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:6520:6549  \"Errors.AlreadyRefundedError()\"\n                                    mstore(_150, /** @src 8:4611:4640  \"Errors.AlreadyRefundedError()\" */ shl(226, 0x2321792f))\n                                    /// @src 8:6520:6549  \"Errors.AlreadyRefundedError()\"\n                                    revert(_150, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                }\n                            }\n                        }\n                        /// @src 8:6715:6752  \"getUserTotalVestingAmount(msg.sender)\"\n                        let expr_22 := /** @src 8:13809:13816  \"uint256\" */ modifier_notZeroAddress(/** @src 8:6198:6208  \"msg.sender\" */ caller())\n                        /// @src 8:6762:6785  \"uint256 claimAmount = 0\"\n                        let var_claimAmount := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                        /// @src 8:6796:6857  \"IDappadVesting.Vesting memory currentVesting = defaultVesting\"\n                        let var_currentVesting_mpos_4 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting_37989()\n                        mstore(0, /** @src 8:6198:6208  \"msg.sender\" */ caller())\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _151 := 0x20\n                        mstore(_151, /** @src 8:6872:6886  \"customVestings\" */ 0x0f)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let dataSlot_14 := keccak256(0, 64)\n                        /// @src 8:6868:6985  \"if (customVestings[msg.sender].vestingCount > 0) {...\"\n                        if /** @src 8:6872:6915  \"customVestings[msg.sender].vestingCount > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(dataSlot_14)))\n                        /// @src 8:6868:6985  \"if (customVestings[msg.sender].vestingCount > 0) {...\"\n                        {\n                            /// @src 8:6931:6974  \"currentVesting = customVestings[msg.sender]\"\n                            var_currentVesting_mpos_4 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting(dataSlot_14)\n                        }\n                        /// @src 8:6995:7086  \"if (block.timestamp <= vestingSettings.startDate) revert Errors.VestingsNotClaimableError()\"\n                        if /** @src 8:6999:7043  \"block.timestamp <= vestingSettings.startDate\" */ iszero(gt(/** @src 8:6999:7014  \"block.timestamp\" */ timestamp(), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(/** @src 8:7018:7033  \"vestingSettings\" */ 0x06)))\n                        /// @src 8:6995:7086  \"if (block.timestamp <= vestingSettings.startDate) revert Errors.VestingsNotClaimableError()\"\n                        {\n                            /// @src 8:7052:7086  \"Errors.VestingsNotClaimableError()\"\n                            let _152 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:7052:7086  \"Errors.VestingsNotClaimableError()\"\n                            mstore(_152, /** @src 8:5128:5162  \"Errors.VestingsNotClaimableError()\" */ shl(228, 0x08f78e53))\n                            /// @src 8:7052:7086  \"Errors.VestingsNotClaimableError()\"\n                            revert(_152, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:7102:7115  \"uint256 i = 0\"\n                        let var_i_7 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                        /// @src 8:7097:7425  \"for (uint256 i = 0; i < currentVesting.vestingCount; i++) {...\"\n                        for { }\n                        /** @src 8:6843:6857  \"defaultVesting\" */ 0x01\n                        /// @src 8:7102:7115  \"uint256 i = 0\"\n                        {\n                            /// @src 8:7150:7153  \"i++\"\n                            var_i_7 := increment_uint256(var_i_7)\n                        }\n                        {\n                            /// @src 8:7117:7148  \"i < currentVesting.vestingCount\"\n                            if iszero(lt(var_i_7, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:7121:7148  \"currentVesting.vestingCount\" */ var_currentVesting_mpos_4)))\n                            /// @src 8:7117:7148  \"i < currentVesting.vestingCount\"\n                            { break }\n                            /// @src 8:7234:7415  \"if (claimable) {...\"\n                            if /** @src 8:7186:7220  \"getVestingClaimable(msg.sender, i)\" */ fun_getVestingClaimable(/** @src 8:6198:6208  \"msg.sender\" */ caller(), /** @src 8:7186:7220  \"getVestingClaimable(msg.sender, i)\" */ var_i_7)\n                            /// @src 8:7234:7415  \"if (claimable) {...\"\n                            {\n                                /// @src 8:7267:7346  \"claimAmount += (saleTokenAmount * currentVesting.vestingPercentages[i]) / 10000\"\n                                var_claimAmount := checked_add_uint256(var_claimAmount, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ div(/** @src 8:7283:7337  \"saleTokenAmount * currentVesting.vestingPercentages[i]\" */ checked_mul_uint256(expr_22, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:7301:7337  \"currentVesting.vestingPercentages[i]\" */ memory_array_index_access_uint256_dyn(/** @src 8:7301:7334  \"currentVesting.vestingPercentages\" */ mload(add(var_currentVesting_mpos_4, 96)), /** @src 8:7301:7337  \"currentVesting.vestingPercentages[i]\" */ var_i_7))), /** @src 8:7341:7346  \"10000\" */ 0x2710))\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                mstore(0, /** @src 8:6198:6208  \"msg.sender\" */ caller())\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                mstore(_151, /** @src 8:7364:7378  \"vestingClaimed\" */ 0x10)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let dataSlot_15 := keccak256(0, 64)\n                                mstore(0, var_i_7)\n                                mstore(_151, dataSlot_15)\n                                let dataSlot_16 := keccak256(0, 64)\n                                sstore(dataSlot_16, or(and(sload(dataSlot_16), not(255)), /** @src 8:6843:6857  \"defaultVesting\" */ 0x01))\n                            }\n                        }\n                        /// @src 8:7435:7497  \"if(claimAmount == 0) revert Errors.VestingsNotClaimableError()\"\n                        if /** @src 8:7438:7454  \"claimAmount == 0\" */ iszero(var_claimAmount)\n                        /// @src 8:7435:7497  \"if(claimAmount == 0) revert Errors.VestingsNotClaimableError()\"\n                        {\n                            /// @src 8:7463:7497  \"Errors.VestingsNotClaimableError()\"\n                            let _153 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:7463:7497  \"Errors.VestingsNotClaimableError()\"\n                            mstore(_153, /** @src 8:5128:5162  \"Errors.VestingsNotClaimableError()\" */ shl(228, 0x08f78e53))\n                            /// @src 8:7463:7497  \"Errors.VestingsNotClaimableError()\"\n                            revert(_153, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                        }\n                        let cleaned_14 := and(sload(/** @src 8:7512:7521  \"saleToken\" */ 0x12), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _137)\n                        /// @src 8:7512:7546  \"saleToken.balanceOf(address(this))\"\n                        let _154 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                        /// @src 8:7512:7546  \"saleToken.balanceOf(address(this))\"\n                        mstore(_154, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 8:7512:7546  \"saleToken.balanceOf(address(this))\" */ add(_154, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:7540:7544  \"this\" */ address())\n                        /// @src 8:7512:7546  \"saleToken.balanceOf(address(this))\"\n                        let _155 := staticcall(gas(), cleaned_14, _154, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36, /** @src 8:7512:7546  \"saleToken.balanceOf(address(this))\" */ _154, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _151)\n                        /// @src 8:7512:7546  \"saleToken.balanceOf(address(this))\"\n                        if iszero(_155)\n                        {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let pos_17 := mload(64)\n                            returndatacopy(pos_17, 0, returndatasize())\n                            revert(pos_17, returndatasize())\n                        }\n                        /// @src 8:7512:7546  \"saleToken.balanceOf(address(this))\"\n                        let expr_23 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                        /// @src 8:7512:7546  \"saleToken.balanceOf(address(this))\"\n                        if _155\n                        {\n                            let _156 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _151\n                            /// @src 8:7512:7546  \"saleToken.balanceOf(address(this))\"\n                            if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _151, /** @src 8:7512:7546  \"saleToken.balanceOf(address(this))\" */ returndatasize()) { _156 := returndatasize() }\n                            finalize_allocation(_154, _156)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            if slt(sub(/** @src 8:7512:7546  \"saleToken.balanceOf(address(this))\" */ add(_154, _156), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _154), _151) { revert(0, 0) }\n                            /// @src 8:7512:7546  \"saleToken.balanceOf(address(this))\"\n                            expr_23 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_154)\n                        }\n                        /// @src 8:7508:7610  \"if (saleToken.balanceOf(address(this)) < claimAmount) revert Errors.InsufficientContractBalanceError()\"\n                        if /** @src 8:7512:7560  \"saleToken.balanceOf(address(this)) < claimAmount\" */ lt(expr_23, var_claimAmount)\n                        /// @src 8:7508:7610  \"if (saleToken.balanceOf(address(this)) < claimAmount) revert Errors.InsufficientContractBalanceError()\"\n                        {\n                            /// @src 8:7569:7610  \"Errors.InsufficientContractBalanceError()\"\n                            let _157 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:7569:7610  \"Errors.InsufficientContractBalanceError()\"\n                            mstore(_157, /** @src 8:5692:5733  \"Errors.InsufficientContractBalanceError()\" */ shl(224, 0xe23f04e1))\n                            /// @src 8:7569:7610  \"Errors.InsufficientContractBalanceError()\"\n                            revert(_157, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                        }\n                        /// @src 8:7621:7672  \"vestingStatistics.totalVestingAmount -= claimAmount\"\n                        let _158 := checked_sub_uint256(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(/** @src 8:7621:7638  \"vestingStatistics\" */ 0x0d), /** @src 8:7621:7672  \"vestingStatistics.totalVestingAmount -= claimAmount\" */ var_claimAmount)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        sstore(/** @src 8:7621:7638  \"vestingStatistics\" */ 0x0d, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _158)\n                        /// @src 8:7688:7815  \"UserClaimedAllUnlockedVestings(msg.sender, claimAmount, saleTokenAmount, vestingStatistics.totalVestingAmount, block.timestamp)\"\n                        let _159 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                        mstore(_159, /** @src 8:6198:6208  \"msg.sender\" */ caller())\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(add(_159, _151), var_claimAmount)\n                        mstore(add(_159, 64), expr_22)\n                        mstore(add(_159, 96), _158)\n                        mstore(add(_159, 128), /** @src 8:6999:7014  \"block.timestamp\" */ timestamp())\n                        /// @src 8:7688:7815  \"UserClaimedAllUnlockedVestings(msg.sender, claimAmount, saleTokenAmount, vestingStatistics.totalVestingAmount, block.timestamp)\"\n                        log1(_159, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 160, /** @src 8:7688:7815  \"UserClaimedAllUnlockedVestings(msg.sender, claimAmount, saleTokenAmount, vestingStatistics.totalVestingAmount, block.timestamp)\" */ 0x37a4c2c80e2c1b068fbe7ab8e6153e26f6abf47b430cb36b03f6c39b2db35799)\n                        /// @src 8:7856:7899  \"saleToken.transfer(msg.sender, claimAmount)\"\n                        let _160 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                        /// @src 8:7856:7899  \"saleToken.transfer(msg.sender, claimAmount)\"\n                        mstore(_160, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0xa9059cbb))\n                        /// @src 8:7856:7899  \"saleToken.transfer(msg.sender, claimAmount)\"\n                        let _161 := call(gas(), cleaned_14, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0, /** @src 8:7856:7899  \"saleToken.transfer(msg.sender, claimAmount)\" */ _160, sub(abi_encode_address_uint256(add(_160, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:6198:6208  \"msg.sender\" */ caller(), /** @src 8:7856:7899  \"saleToken.transfer(msg.sender, claimAmount)\" */ var_claimAmount), _160), _160, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _151)\n                        /// @src 8:7856:7899  \"saleToken.transfer(msg.sender, claimAmount)\"\n                        if iszero(_161)\n                        {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let pos_18 := mload(64)\n                            returndatacopy(pos_18, 0, returndatasize())\n                            revert(pos_18, returndatasize())\n                        }\n                        /// @src 8:7856:7899  \"saleToken.transfer(msg.sender, claimAmount)\"\n                        let expr_24 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                        /// @src 8:7856:7899  \"saleToken.transfer(msg.sender, claimAmount)\"\n                        if _161\n                        {\n                            let _162 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _151\n                            /// @src 8:7856:7899  \"saleToken.transfer(msg.sender, claimAmount)\"\n                            if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _151, /** @src 8:7856:7899  \"saleToken.transfer(msg.sender, claimAmount)\" */ returndatasize()) { _162 := returndatasize() }\n                            finalize_allocation(_160, _162)\n                            expr_24 := abi_decode_bool_fromMemory(_160, add(_160, _162))\n                        }\n                        /// @src 8:7909:7978  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                        if /** @src 8:7913:7936  \"!successfullyTransfered\" */ iszero(expr_24)\n                        /// @src 8:7909:7978  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                        {\n                            /// @src 8:7945:7978  \"Errors.TokenTransferFailedError()\"\n                            let _163 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:7945:7978  \"Errors.TokenTransferFailedError()\"\n                            mstore(_163, /** @src 8:8940:8973  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                            /// @src 8:7945:7978  \"Errors.TokenTransferFailedError()\"\n                            revert(_163, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                        }\n                        let memPos_38 := mload(64)\n                        mstore(memPos_38, /** @src 8:6843:6857  \"defaultVesting\" */ 0x01)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        return(memPos_38, _151)\n                    }\n                    case 0xfe0d7fbf {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 8:650:714  \"mapping(address => IDappadVesting.Vesting) public customVestings\" */ 15)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let dataSlot_17 := keccak256(0, 64)\n                        let _164 := sload(/** @src 8:650:714  \"mapping(address => IDappadVesting.Vesting) public customVestings\" */ dataSlot_17)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _165 := sload(/** @src 8:650:714  \"mapping(address => IDappadVesting.Vesting) public customVestings\" */ add(dataSlot_17, 1))\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _166 := sload(/** @src 8:650:714  \"mapping(address => IDappadVesting.Vesting) public customVestings\" */ add(dataSlot_17, 2))\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let value_23 := and(sload(/** @src 8:650:714  \"mapping(address => IDappadVesting.Vesting) public customVestings\" */ add(dataSlot_17, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)), 0xff)\n                        let memPos_39 := mload(64)\n                        return(memPos_39, sub(abi_encode_uint256_uint256_uint256_bool(memPos_39, _164, _165, _166, value_23), memPos_39))\n                    }\n                    case 0xfe671bdc {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let ret_1 := fun_calculateSaleTokenAmount(calldataload(4), calldataload(36))\n                        let memPos_40 := mload(64)\n                        mstore(memPos_40, ret_1)\n                        return(memPos_40, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_array_uint256_dyn(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, _1)\n                let srcPtr := add(value, _1)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, mload(srcPtr))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                end := pos\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_37972() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function finalize_allocation_37973(memPtr)\n            {\n                let newFreePtr := add(memPtr, 160)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_array_uint256_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n            function abi_decode_bool(offset) -> value\n            {\n                value := calldataload(offset)\n                if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n            }\n            function abi_decode_struct_Vesting(headStart, end) -> value\n            {\n                if slt(sub(end, headStart), 0xa0) { revert(0, 0) }\n                let memPtr := mload(64)\n                finalize_allocation_37973(memPtr)\n                value := memPtr\n                mstore(memPtr, calldataload(headStart))\n                let _1 := 32\n                mstore(add(memPtr, _1), calldataload(add(headStart, _1)))\n                mstore(add(memPtr, 64), calldataload(add(headStart, 64)))\n                let offset := calldataload(add(headStart, 96))\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                let _2 := add(headStart, offset)\n                if iszero(slt(add(_2, 0x1f), end))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                let _3 := calldataload(_2)\n                let _4 := array_allocation_size_array_uint256_dyn(_3)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _4)\n                let dst := memPtr_1\n                mstore(memPtr_1, _3)\n                dst := add(memPtr_1, _1)\n                let srcEnd := add(add(_2, shl(5, _3)), _1)\n                if gt(srcEnd, end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                let src := add(_2, _1)\n                for { } lt(src, srcEnd) { src := add(src, _1) }\n                {\n                    mstore(dst, calldataload(src))\n                    dst := add(dst, _1)\n                }\n                mstore(add(memPtr, 96), memPtr_1)\n                mstore(add(memPtr, 128), abi_decode_bool(add(headStart, 128)))\n            }\n            function abi_encode_uint256_uint256_uint256_bool(headStart, value0, value1, value2, value3) -> tail\n            {\n                tail := add(headStart, 128)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), iszero(iszero(value3)))\n            }\n            function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n            }\n            function abi_decode_array_address_dyn_calldatat_array_struct_Vesting_calldata_dyn_calldata(dataEnd) -> value0, value1, value2, value3\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let offset := calldataload(4)\n                let _1 := 0xffffffffffffffff\n                if gt(offset, _1) { revert(0, 0) }\n                let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(4, offset), dataEnd)\n                value0 := value0_1\n                value1 := value1_1\n                let offset_1 := calldataload(36)\n                if gt(offset_1, _1) { revert(0, 0) }\n                let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(4, offset_1), dataEnd)\n                value2 := value2_1\n                value3 := value3_1\n            }\n            /// @ast-id 93 @src 0:3199:3302  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun_checkRole(var_role)\n            {\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x00)\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                let _1 := keccak256(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                mstore(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 4:735:745  \"msg.sender\" */ caller())\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                mstore(0x20, _1)\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                if /** @src 0:3519:3542  \"!hasRole(role, account)\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)), 0xff))\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    let _2 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(0x40)\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(_2, shl(224, 0xe2517d3f))\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    mstore(/** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ add(_2, 4), /** @src 4:735:745  \"msg.sender\" */ caller())\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    mstore(add(/** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36), var_role)\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(_2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 68)\n                }\n            }\n            function update_storage_value_offsett_bool_to_bool(slot, value)\n            {\n                let value_1 := and(sload(slot), not(255))\n                sstore(slot, or(value_1, and(iszero(iszero(value)), 255)))\n            }\n            /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_grantRole(var_role, var_account) -> var\n            {\n                /// @src 0:2954:2960  \"_roles\"\n                let _1 := 0x00\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                let _2 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                let _3 := and(var_account, sub(shl(160, 1), 1))\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3)\n                mstore(0x20, _2)\n                /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)), 0xff))\n                case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:6466:6478  \"return false\"\n                    var := /** @src 0:2954:2960  \"_roles\" */ _1\n                    /// @src 0:6466:6478  \"return false\"\n                    leave\n                }\n                default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ var_role)\n                    mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let _4 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3)\n                    mstore(0x20, _4)\n                    let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                    sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                    /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 0:2954:2960  \"_roles\" */ _1, _1, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, var_role, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3, /** @src 4:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:6424:6435  \"return true\"\n                    var := /** @src 0:6347:6351  \"true\" */ 0x01\n                    /// @src 0:6424:6435  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 294 @src 0:6730:7047  \"function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_revokeRole(var_role, var_account) -> var\n            {\n                /// @src 0:2954:2960  \"_roles\"\n                let _1 := 0x00\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                let _2 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                let _3 := and(var_account, sub(shl(160, 1), 1))\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3)\n                mstore(0x20, _2)\n                /// @src 0:6824:7041  \"if (hasRole(role, account)) {...\"\n                switch /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)), 0xff)\n                case /** @src 0:6824:7041  \"if (hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:7018:7030  \"return false\"\n                    var := /** @src 0:2954:2960  \"_roles\" */ _1\n                    /// @src 0:7018:7030  \"return false\"\n                    leave\n                }\n                default /// @src 0:6824:7041  \"if (hasRole(role, account)) {...\"\n                {\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ var_role)\n                    mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let _4 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3)\n                    mstore(0x20, _4)\n                    let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                    sstore(dataSlot, and(sload(dataSlot), not(255)))\n                    /// @src 0:6922:6962  \"RoleRevoked(role, account, _msgSender())\"\n                    log4(/** @src 0:2954:2960  \"_roles\" */ _1, _1, /** @src 0:6922:6962  \"RoleRevoked(role, account, _msgSender())\" */ 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b, var_role, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3, /** @src 4:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:6976:6987  \"return true\"\n                    var := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 1\n                    /// @src 0:6976:6987  \"return true\"\n                    leave\n                }\n            }\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, iszero(iszero(value))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                value0 := value\n            }\n            function copy_array_from_storage_to_memory_array_uint256_dyn(slot) -> memPtr\n            {\n                memPtr := mload(64)\n                let pos := memPtr\n                let length := sload(slot)\n                mstore(memPtr, length)\n                let _1 := 0x20\n                pos := add(memPtr, _1)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ slot)\n                let srcPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _1)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, sload(srcPtr))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, 1)\n                }\n                finalize_allocation(memPtr, sub(pos, memPtr))\n            }\n            function read_from_storage_reference_type_struct_Vesting_37989() -> value\n            {\n                let memPtr := mload(64)\n                finalize_allocation_37973(memPtr)\n                value := memPtr\n                /// @src 8:18856:18870  \"defaultVesting\"\n                let _1 := 0x01\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                mstore(memPtr, sload(/** @src 8:18856:18870  \"defaultVesting\" */ _1))\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                let _2 := sload(2)\n                let _3 := 32\n                mstore(add(memPtr, _3), _2)\n                mstore(add(memPtr, 64), sload(3))\n                let pos := mload(64)\n                let pos_1 := pos\n                let length := sload(4)\n                mstore(pos, length)\n                pos := add(pos, _3)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                let srcPtr := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                for { }\n                lt(i, length)\n                {\n                    i := add(i, /** @src 8:18856:18870  \"defaultVesting\" */ _1)\n                }\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                {\n                    mstore(pos, sload(srcPtr))\n                    pos := add(pos, _3)\n                    srcPtr := add(srcPtr, /** @src 8:18856:18870  \"defaultVesting\" */ _1)\n                }\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                finalize_allocation(pos_1, sub(pos, pos_1))\n                mstore(add(memPtr, 96), pos_1)\n                mstore(add(memPtr, 128), iszero(iszero(and(sload(5), 0xff))))\n            }\n            function read_from_storage_reference_type_struct_Vesting(slot) -> value\n            {\n                let memPtr := mload(64)\n                finalize_allocation_37973(memPtr)\n                value := memPtr\n                mstore(memPtr, sload(slot))\n                mstore(add(memPtr, 32), sload(add(slot, 1)))\n                mstore(add(memPtr, 64), sload(add(slot, 2)))\n                mstore(add(memPtr, 96), copy_array_from_storage_to_memory_array_uint256_dyn(add(slot, 3)))\n                mstore(add(memPtr, 128), iszero(iszero(and(sload(add(slot, 4)), 0xff))))\n            }\n            function memory_array_index_access_uint256_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            function checked_mul_uint256(x, y) -> product\n            {\n                product := mul(x, y)\n                if iszero(or(iszero(x), eq(y, div(product, x))))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function calldata_array_index_access_uint256_dyn_calldata(base_ref, length, index) -> addr\n            {\n                if iszero(lt(index, length))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(base_ref, shl(5, index))\n            }\n            function read_from_calldatat_address(ptr) -> returnValue\n            {\n                let value := calldataload(ptr)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                returnValue := value\n            }\n            function abi_encode_array_uint256_dyn_calldata(start, length, pos) -> end\n            {\n                mstore(pos, length)\n                if gt(length, sub(shl(251, 1), 1))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                let length_1 := shl(5, length)\n                calldatacopy(add(pos, 0x20), start, length_1)\n                end := add(add(pos, length_1), 0x20)\n            }\n            function update_storage_value_uint256_to_uint256(slot, offset, value)\n            {\n                let _1 := sload(slot)\n                let shiftBits := shl(3, offset)\n                sstore(slot, or(and(_1, not(shl(shiftBits, not(0)))), shl(shiftBits, value)))\n            }\n            function resize_array_array_uint256_dyn_storage_38000(newLen)\n            {\n                if gt(newLen, 18446744073709551616)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                let oldLen := sload(4)\n                sstore(4, newLen)\n                if lt(newLen, oldLen)\n                {\n                    /// @src -1:-1:-1\n                    let _1 := 0\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                    let _2 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                    let _3 := add(_2, oldLen)\n                    let start := add(_2, newLen)\n                    for { } lt(start, _3) { start := add(start, 1) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ _1)\n                    }\n                }\n            }\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            function resize_array_array_uint256_dyn_storage(array, newLen)\n            {\n                if gt(newLen, 18446744073709551616)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                let oldLen := sload(array)\n                sstore(array, newLen)\n                if lt(newLen, oldLen)\n                {\n                    /// @src -1:-1:-1\n                    let _1 := 0\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ array)\n                    let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x20)\n                    let _2 := add(data, oldLen)\n                    let start := add(data, newLen)\n                    for { } lt(start, _2) { start := add(start, 1) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ _1)\n                    }\n                }\n            }\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            function allocate_and_zero_memory_array_array_uint256_dyn(length) -> memPtr\n            {\n                let _1 := array_allocation_size_array_uint256_dyn(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_array_uint256_dyn(length), not(31)))\n            }\n            function storage_array_index_access_uint256_dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ array)\n                slot := add(keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x20), index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n            function abi_encode_struct_Vesting(value, pos) -> end\n            {\n                let tail := add(pos, 0xa0)\n                mstore(pos, mload(value))\n                let _1 := 0x20\n                mstore(add(pos, _1), mload(add(value, _1)))\n                mstore(add(pos, 0x40), mload(add(value, 0x40)))\n                let memberValue0 := mload(add(value, 0x60))\n                mstore(add(pos, 0x60), 0xa0)\n                let pos_1 := tail\n                let length := mload(memberValue0)\n                mstore(tail, length)\n                pos_1 := add(pos, 192)\n                let srcPtr := add(memberValue0, _1)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos_1, mload(srcPtr))\n                    pos_1 := add(pos_1, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                mstore(add(pos, 0x80), iszero(iszero(mload(add(value, 0x80)))))\n                end := pos_1\n            }\n            function calldata_array_index_access_struct_Vesting_calldata_dyn_calldata(base_ref, length, index) -> addr\n            {\n                if iszero(lt(index, length))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                let rel_offset_of_tail := calldataload(add(base_ref, shl(5, index)))\n                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(158))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                addr := add(base_ref, rel_offset_of_tail)\n            }\n            function access_calldata_tail_array_uint256_dyn_calldata(base_ref, ptr_to_tail) -> addr, length\n            {\n                let rel_offset_of_tail := calldataload(ptr_to_tail)\n                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                let addr_1 := add(base_ref, rel_offset_of_tail)\n                length := calldataload(addr_1)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                addr := add(addr_1, 0x20)\n                if sgt(addr, sub(calldatasize(), shl(5, length))) { revert(0, 0) }\n            }\n            /// @ast-id 1492 @src 8:3756:3851  \"modifier notZeroAddress(address _address) {...\"\n            function modifier_notZeroAddress(var_userAddress) -> _1\n            {\n                /// @src 8:3824:3832  \"_address\"\n                fun_notZeroAddress(var_userAddress)\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                pop(read_from_storage_reference_type_struct_Vesting_37989())\n                let _2 := sub(shl(160, 1), 1)\n                let _3 := and(var_userAddress, _2)\n                let _4 := 0\n                mstore(_4, _3)\n                let _5 := 0x20\n                mstore(_5, /** @src 8:13904:13918  \"customVestings\" */ 0x0f)\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                let _6 := 0x40\n                let dataSlot := keccak256(_4, _6)\n                /// @src 8:13900:14019  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                if /** @src 8:13904:13948  \"customVestings[userAddress].vestingCount > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(dataSlot)))\n                /// @src 8:13900:14019  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                {\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    pop(read_from_storage_reference_type_struct_Vesting(dataSlot))\n                }\n                /// @src 8:14029:14063  \"uint256 userTotalVestingAmount = 0\"\n                let var_userTotalVestingAmount := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4\n                /// @src 8:14074:14676  \"if (vestingAddresses.saleContractAddress != address(0)) {...\"\n                switch /** @src 8:14078:14128  \"vestingAddresses.saleContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(/** @src 8:14078:14114  \"vestingAddresses.saleContractAddress\" */ 10), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _2)))\n                case /** @src 8:14074:14676  \"if (vestingAddresses.saleContractAddress != address(0)) {...\" */ 0 {\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let _7 := sload(/** @src 8:14602:14632  \"vestingSettings.saleTokenPrice\" */ 7)\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    mstore(_4, _3)\n                    mstore(_5, /** @src 8:14634:14651  \"investmentAmounts\" */ 0x11)\n                    /// @src 8:14552:14665  \"userTotalVestingAmount = calculateSaleTokenAmount(vestingSettings.saleTokenPrice, investmentAmounts[userAddress])\"\n                    var_userTotalVestingAmount := /** @src 8:14577:14665  \"calculateSaleTokenAmount(vestingSettings.saleTokenPrice, investmentAmounts[userAddress])\" */ fun_calculateSaleTokenAmount(_7, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(keccak256(_4, _6)))\n                }\n                default /// @src 8:14074:14676  \"if (vestingAddresses.saleContractAddress != address(0)) {...\"\n                {\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let _8 := sload(/** @src 8:14148:14178  \"vestingSettings.saleTokenPrice\" */ 7)\n                    /// @src 8:14144:14522  \"if (vestingSettings.saleTokenPrice > 0) {...\"\n                    switch /** @src 8:14148:14182  \"vestingSettings.saleTokenPrice > 0\" */ iszero(iszero(_8))\n                    case /** @src 8:14144:14522  \"if (vestingSettings.saleTokenPrice > 0) {...\" */ 0 {\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let cleaned := and(sload(/** @src 8:14423:14435  \"saleContract\" */ 0x13), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _2)\n                        /// @src 8:14423:14455  \"saleContract.getSaleTokenPrice()\"\n                        let _9 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_6)\n                        /// @src 8:14423:14455  \"saleContract.getSaleTokenPrice()\"\n                        mstore(_9, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(225, 0x0364718b))\n                        /// @src 8:14423:14455  \"saleContract.getSaleTokenPrice()\"\n                        let _10 := staticcall(gas(), cleaned, _9, 4, _9, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _5)\n                        /// @src 8:14423:14455  \"saleContract.getSaleTokenPrice()\"\n                        if iszero(_10)\n                        {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let pos := mload(_6)\n                            returndatacopy(pos, _4, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 8:14423:14455  \"saleContract.getSaleTokenPrice()\"\n                        let expr := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4\n                        /// @src 8:14423:14455  \"saleContract.getSaleTokenPrice()\"\n                        if _10\n                        {\n                            let _11 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _5\n                            /// @src 8:14423:14455  \"saleContract.getSaleTokenPrice()\"\n                            if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _5, /** @src 8:14423:14455  \"saleContract.getSaleTokenPrice()\" */ returndatasize()) { _11 := returndatasize() }\n                            finalize_allocation(_9, _11)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            if slt(sub(/** @src 8:14423:14455  \"saleContract.getSaleTokenPrice()\" */ add(_9, _11), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _9), _5) { revert(_4, _4) }\n                            /// @src 8:14423:14455  \"saleContract.getSaleTokenPrice()\"\n                            expr := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_9)\n                        }\n                        /// @src 8:14457:14506  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                        let _12 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_6)\n                        /// @src 8:14457:14506  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                        mstore(_12, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(225, 0x2f43f2d3))\n                        mstore(/** @src 8:14457:14506  \"saleContract.getUserInvestmentAmount(userAddress)\" */ add(_12, /** @src 8:14423:14455  \"saleContract.getSaleTokenPrice()\" */ 4), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3)\n                        /// @src 8:14457:14506  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                        let _13 := staticcall(gas(), cleaned, _12, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36, /** @src 8:14457:14506  \"saleContract.getUserInvestmentAmount(userAddress)\" */ _12, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _5)\n                        /// @src 8:14457:14506  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                        if iszero(_13)\n                        {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let pos_1 := mload(_6)\n                            returndatacopy(pos_1, _4, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 8:14457:14506  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                        let expr_1 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4\n                        /// @src 8:14457:14506  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                        if _13\n                        {\n                            let _14 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _5\n                            /// @src 8:14457:14506  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                            if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _5, /** @src 8:14457:14506  \"saleContract.getUserInvestmentAmount(userAddress)\" */ returndatasize()) { _14 := returndatasize() }\n                            finalize_allocation(_12, _14)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            if slt(sub(/** @src 8:14457:14506  \"saleContract.getUserInvestmentAmount(userAddress)\" */ add(_12, _14), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _12), _5) { revert(_4, _4) }\n                            /// @src 8:14457:14506  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                            expr_1 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_12)\n                        }\n                        /// @src 8:14373:14507  \"userTotalVestingAmount = calculateSaleTokenAmount(saleContract.getSaleTokenPrice(), saleContract.getUserInvestmentAmount(userAddress))\"\n                        var_userTotalVestingAmount := /** @src 8:14398:14507  \"calculateSaleTokenAmount(saleContract.getSaleTokenPrice(), saleContract.getUserInvestmentAmount(userAddress))\" */ fun_calculateSaleTokenAmount(expr, expr_1)\n                    }\n                    default /// @src 8:14144:14522  \"if (vestingSettings.saleTokenPrice > 0) {...\"\n                    {\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let cleaned_1 := and(sload(/** @src 8:14284:14296  \"saleContract\" */ 0x13), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _2)\n                        /// @src 8:14284:14333  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                        let _15 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_6)\n                        /// @src 8:14284:14333  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                        mstore(_15, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(225, 0x2f43f2d3))\n                        mstore(/** @src 8:14284:14333  \"saleContract.getUserInvestmentAmount(userAddress)\" */ add(_15, 4), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3)\n                        /// @src 8:14284:14333  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                        let _16 := staticcall(gas(), cleaned_1, _15, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36, /** @src 8:14284:14333  \"saleContract.getUserInvestmentAmount(userAddress)\" */ _15, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _5)\n                        /// @src 8:14284:14333  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                        if iszero(_16)\n                        {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let pos_2 := mload(_6)\n                            returndatacopy(pos_2, _4, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 8:14284:14333  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                        let expr_2 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4\n                        /// @src 8:14284:14333  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                        if _16\n                        {\n                            let _17 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _5\n                            /// @src 8:14284:14333  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                            if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _5, /** @src 8:14284:14333  \"saleContract.getUserInvestmentAmount(userAddress)\" */ returndatasize()) { _17 := returndatasize() }\n                            finalize_allocation(_15, _17)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            if slt(sub(/** @src 8:14284:14333  \"saleContract.getUserInvestmentAmount(userAddress)\" */ add(_15, _17), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _15), _5) { revert(_4, _4) }\n                            /// @src 8:14284:14333  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                            expr_2 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_15)\n                        }\n                        /// @src 8:14202:14334  \"userTotalVestingAmount = calculateSaleTokenAmount(vestingSettings.saleTokenPrice, saleContract.getUserInvestmentAmount(userAddress))\"\n                        var_userTotalVestingAmount := /** @src 8:14227:14334  \"calculateSaleTokenAmount(vestingSettings.saleTokenPrice, saleContract.getUserInvestmentAmount(userAddress))\" */ fun_calculateSaleTokenAmount(_8, expr_2)\n                    }\n                }\n                /// @src 8:3843:3844  \"_\"\n                _1 := var_userTotalVestingAmount\n            }\n            /// @ast-id 2723 @src 8:14728:14934  \"function calculateSaleTokenAmount(uint256 saleTokenPrice, uint256 investmentAmount) public view returns (uint256) {...\"\n            function fun_calculateSaleTokenAmount(var_saleTokenPrice, var_investmentAmount) -> var\n            {\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                if iszero(var_saleTokenPrice)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x12)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x24)\n                }\n                let cleaned := and(sload(/** @src 8:14905:14914  \"saleToken\" */ 0x12), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1))\n                /// @src 8:14905:14925  \"saleToken.decimals()\"\n                let _1 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                /// @src 8:14905:14925  \"saleToken.decimals()\"\n                mstore(_1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x313ce567))\n                /// @src 8:14905:14925  \"saleToken.decimals()\"\n                let _2 := staticcall(gas(), cleaned, _1, 4, _1, 32)\n                if iszero(_2)\n                {\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let pos := mload(64)\n                    returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 8:14905:14925  \"saleToken.decimals()\"\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 8:14905:14925  \"saleToken.decimals()\"\n                if _2\n                {\n                    let _3 := 32\n                    if gt(_3, returndatasize()) { _3 := returndatasize() }\n                    finalize_allocation(_1, _3)\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    if slt(sub(/** @src 8:14905:14925  \"saleToken.decimals()\" */ add(_1, _3), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _1), /** @src 8:14905:14925  \"saleToken.decimals()\" */ 32)\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    {\n                        revert(/** @src -1:-1:-1 */ expr, expr)\n                    }\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let value := mload(_1)\n                    if iszero(eq(value, and(value, 0xff)))\n                    {\n                        revert(/** @src -1:-1:-1 */ expr, expr)\n                    }\n                    /// @src 8:14905:14925  \"saleToken.decimals()\"\n                    expr := value\n                }\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                let exponent := and(expr, 0xff)\n                if gt(exponent, 77)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                    mstore(/** @src 8:14905:14925  \"saleToken.decimals()\" */ 4, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x24)\n                }\n                /// @src 8:14852:14927  \"return ((investmentAmount / saleTokenPrice) * (10 ** saleToken.decimals()))\"\n                var := /** @src 8:14860:14926  \"(investmentAmount / saleTokenPrice) * (10 ** saleToken.decimals())\" */ checked_mul_uint256(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ div(var_investmentAmount, var_saleTokenPrice), exp(10, exponent))\n            }\n            /// @ast-id 2860 @src 8:14940:16410  \"function getVestingClaimable(address userAddress, uint256 vestingIndex) public view returns (bool) {...\"\n            function fun_getVestingClaimable(var_userAddress, var_vestingIndex) -> var\n            {\n                /// @src 8:15049:15110  \"IDappadVesting.Vesting memory currentVesting = defaultVesting\"\n                let var_currentVesting_2736_mpos := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting_37989()\n                let _1 := and(var_userAddress, sub(shl(160, 1), 1))\n                /// @src -1:-1:-1\n                let _2 := 0\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _1)\n                let _3 := 0x20\n                mstore(_3, /** @src 8:15125:15139  \"customVestings\" */ 0x0f)\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                let _4 := 0x40\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4)\n                /// @src 8:15121:15240  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                if /** @src 8:15125:15169  \"customVestings[userAddress].vestingCount > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(dataSlot)))\n                /// @src 8:15121:15240  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                {\n                    /// @src 8:15185:15229  \"currentVesting = customVestings[userAddress]\"\n                    var_currentVesting_2736_mpos := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting(dataSlot)\n                }\n                /// @src 8:15250:15339  \"if (vestingIndex >= currentVesting.vestingCount) revert Errors.InvalidVestingIndexError()\"\n                if /** @src 8:15254:15297  \"vestingIndex >= currentVesting.vestingCount\" */ iszero(lt(var_vestingIndex, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:15270:15297  \"currentVesting.vestingCount\" */ var_currentVesting_2736_mpos)))\n                /// @src 8:15250:15339  \"if (vestingIndex >= currentVesting.vestingCount) revert Errors.InvalidVestingIndexError()\"\n                {\n                    /// @src 8:15306:15339  \"Errors.InvalidVestingIndexError()\"\n                    let _5 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_4)\n                    /// @src 8:15306:15339  \"Errors.InvalidVestingIndexError()\"\n                    mstore(_5, shl(224, 0x690cd635))\n                    revert(_5, 4)\n                }\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _1)\n                mstore(_3, /** @src 8:15353:15367  \"vestingClaimed\" */ 0x10)\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                let dataSlot_1 := keccak256(/** @src -1:-1:-1 */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4)\n                mstore(/** @src -1:-1:-1 */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ var_vestingIndex)\n                mstore(_3, dataSlot_1)\n                /// @src 8:15350:16404  \"if(vestingClaimed[userAddress][vestingIndex]) {...\"\n                switch /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4)), 0xff)\n                case /** @src 8:15350:16404  \"if(vestingClaimed[userAddress][vestingIndex]) {...\" */ 0 {\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let _6 := sload(/** @src 8:15473:15488  \"vestingSettings\" */ 0x06)\n                    /// @src 8:15513:16394  \"if(vestingIndex == 0) {...\"\n                    switch /** @src 8:15516:15533  \"vestingIndex == 0\" */ iszero(var_vestingIndex)\n                    case /** @src 8:15513:16394  \"if(vestingIndex == 0) {...\" */ 0 {\n                        /// @src 8:16033:16068  \"currentVesting.vestingCliffDuration\"\n                        let _7 := add(var_currentVesting_2736_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4)\n                        /// @src 8:16030:16380  \"if(currentVesting.vestingCliffDuration > 0) {...\"\n                        switch /** @src 8:16033:16072  \"currentVesting.vestingCliffDuration > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:16033:16068  \"currentVesting.vestingCliffDuration\" */ _7)))\n                        case /** @src 8:16030:16380  \"if(currentVesting.vestingCliffDuration > 0) {...\" */ 0 {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let _8 := mload(/** @src 8:16308:16338  \"currentVesting.vestingDuration\" */ add(var_currentVesting_2736_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3))\n                            let sum := add(var_vestingIndex, /** @src 8:15096:15110  \"defaultVesting\" */ 0x01)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            if gt(var_vestingIndex, sum)\n                            {\n                                mstore(/** @src -1:-1:-1 */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(/** @src -1:-1:-1 */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x24)\n                            }\n                            /// @src 8:16268:16361  \"return block.timestamp >= (startDate + (currentVesting.vestingDuration * (vestingIndex + 1)))\"\n                            var := /** @src 8:16275:16361  \"block.timestamp >= (startDate + (currentVesting.vestingDuration * (vestingIndex + 1)))\" */ iszero(lt(/** @src 8:16275:16290  \"block.timestamp\" */ timestamp(), /** @src 8:16295:16360  \"startDate + (currentVesting.vestingDuration * (vestingIndex + 1))\" */ checked_add_uint256(_6, /** @src 8:16308:16359  \"currentVesting.vestingDuration * (vestingIndex + 1)\" */ checked_mul_uint256(_8, /** @src 8:16342:16358  \"vestingIndex + 1\" */ sum))))\n                            /// @src 8:16268:16361  \"return block.timestamp >= (startDate + (currentVesting.vestingDuration * (vestingIndex + 1)))\"\n                            leave\n                        }\n                        default /// @src 8:16030:16380  \"if(currentVesting.vestingCliffDuration > 0) {...\"\n                        {\n                            /// @src 8:16123:16170  \"startDate + currentVesting.vestingCliffDuration\"\n                            let expr := checked_add_uint256(_6, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:16135:16170  \"currentVesting.vestingCliffDuration\" */ _7))\n                            /// @src 8:16096:16221  \"return block.timestamp >= (startDate + currentVesting.vestingCliffDuration + (currentVesting.vestingDuration * vestingIndex))\"\n                            var := /** @src 8:16103:16221  \"block.timestamp >= (startDate + currentVesting.vestingCliffDuration + (currentVesting.vestingDuration * vestingIndex))\" */ iszero(lt(/** @src 8:16103:16118  \"block.timestamp\" */ timestamp(), /** @src 8:16123:16220  \"startDate + currentVesting.vestingCliffDuration + (currentVesting.vestingDuration * vestingIndex)\" */ checked_add_uint256(expr, /** @src 8:16174:16219  \"currentVesting.vestingDuration * vestingIndex\" */ checked_mul_uint256(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:16174:16204  \"currentVesting.vestingDuration\" */ add(var_currentVesting_2736_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3)), /** @src 8:16174:16219  \"currentVesting.vestingDuration * vestingIndex\" */ var_vestingIndex))))\n                            /// @src 8:16096:16221  \"return block.timestamp >= (startDate + currentVesting.vestingCliffDuration + (currentVesting.vestingDuration * vestingIndex))\"\n                            leave\n                        }\n                    }\n                    default /// @src 8:15513:16394  \"if(vestingIndex == 0) {...\"\n                    {\n                        /// @src 8:15553:15992  \"if(currentVesting.onTGE) {...\"\n                        switch /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ iszero(iszero(mload(/** @src 8:15556:15576  \"currentVesting.onTGE\" */ add(var_currentVesting_2736_mpos, 128))))\n                        case /** @src 8:15553:15992  \"if(currentVesting.onTGE) {...\" */ 0 {\n                            /// @src 8:15661:15696  \"currentVesting.vestingCliffDuration\"\n                            let _9 := add(var_currentVesting_2736_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4)\n                            /// @src 8:15658:15974  \"if(currentVesting.vestingCliffDuration > 0) {...\"\n                            switch /** @src 8:15661:15700  \"currentVesting.vestingCliffDuration > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:15661:15696  \"currentVesting.vestingCliffDuration\" */ _9)))\n                            case /** @src 8:15658:15974  \"if(currentVesting.vestingCliffDuration > 0) {...\" */ 0 {\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let _10 := mload(/** @src 8:15898:15928  \"currentVesting.vestingDuration\" */ add(var_currentVesting_2736_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3))\n                                let sum_1 := add(var_vestingIndex, /** @src 8:15096:15110  \"defaultVesting\" */ 0x01)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                if gt(var_vestingIndex, sum_1)\n                                {\n                                    mstore(/** @src -1:-1:-1 */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(/** @src -1:-1:-1 */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x24)\n                                }\n                                /// @src 8:15858:15951  \"return block.timestamp >= (startDate + (currentVesting.vestingDuration * (vestingIndex + 1)))\"\n                                var := /** @src 8:15865:15951  \"block.timestamp >= (startDate + (currentVesting.vestingDuration * (vestingIndex + 1)))\" */ iszero(lt(/** @src 8:15865:15880  \"block.timestamp\" */ timestamp(), /** @src 8:15885:15950  \"startDate + (currentVesting.vestingDuration * (vestingIndex + 1))\" */ checked_add_uint256(_6, /** @src 8:15898:15949  \"currentVesting.vestingDuration * (vestingIndex + 1)\" */ checked_mul_uint256(_10, /** @src 8:15932:15948  \"vestingIndex + 1\" */ sum_1))))\n                                /// @src 8:15858:15951  \"return block.timestamp >= (startDate + (currentVesting.vestingDuration * (vestingIndex + 1)))\"\n                                leave\n                            }\n                            default /// @src 8:15658:15974  \"if(currentVesting.vestingCliffDuration > 0) {...\"\n                            {\n                                /// @src 8:15728:15803  \"return block.timestamp >= (startDate + currentVesting.vestingCliffDuration)\"\n                                var := /** @src 8:15735:15803  \"block.timestamp >= (startDate + currentVesting.vestingCliffDuration)\" */ iszero(lt(/** @src 8:15735:15750  \"block.timestamp\" */ timestamp(), /** @src 8:15755:15802  \"startDate + currentVesting.vestingCliffDuration\" */ checked_add_uint256(_6, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:15767:15802  \"currentVesting.vestingCliffDuration\" */ _9))))\n                                /// @src 8:15728:15803  \"return block.timestamp >= (startDate + currentVesting.vestingCliffDuration)\"\n                                leave\n                            }\n                        }\n                        default /// @src 8:15553:15992  \"if(currentVesting.onTGE) {...\"\n                        {\n                            /// @src 8:15600:15611  \"return true\"\n                            var := /** @src 8:15096:15110  \"defaultVesting\" */ 0x01\n                            /// @src 8:15600:15611  \"return true\"\n                            leave\n                        }\n                    }\n                }\n                default /// @src 8:15350:16404  \"if(vestingClaimed[userAddress][vestingIndex]) {...\"\n                {\n                    /// @src 8:15410:15422  \"return false\"\n                    var := /** @src -1:-1:-1 */ _2\n                    /// @src 8:15410:15422  \"return false\"\n                    leave\n                }\n            }\n            /// @src 8:16416:16926  \"function getAnyVestingClaimed(address userAddress) external view notZeroAddress(userAddress) returns (bool) {...\"\n            function fun_getAnyVestingClaimed_inner(var_userAddress) -> var\n            {\n                /// @src 8:16534:16595  \"IDappadVesting.Vesting memory currentVesting = defaultVesting\"\n                let var_currentVesting_mpos := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting_37989()\n                let _1 := and(var_userAddress, sub(shl(160, 1), 1))\n                let _2 := 0\n                mstore(_2, _1)\n                let _3 := 0x20\n                mstore(_3, /** @src 8:16610:16624  \"customVestings\" */ 0x0f)\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                let _4 := 0x40\n                let dataSlot := keccak256(_2, _4)\n                /// @src 8:16606:16725  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                if /** @src 8:16610:16654  \"customVestings[userAddress].vestingCount > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(dataSlot)))\n                /// @src 8:16606:16725  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                {\n                    /// @src 8:16670:16714  \"currentVesting = customVestings[userAddress]\"\n                    var_currentVesting_mpos := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting(dataSlot)\n                }\n                /// @src 8:16740:16753  \"uint256 i = 0\"\n                let var_i := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _2\n                /// @src 8:16735:16897  \"for (uint256 i = 0; i < currentVesting.vestingCount; i++) {...\"\n                for { }\n                /** @src 8:16581:16595  \"defaultVesting\" */ 0x01\n                /// @src 8:16740:16753  \"uint256 i = 0\"\n                {\n                    /// @src 8:16788:16791  \"i++\"\n                    var_i := increment_uint256(var_i)\n                }\n                {\n                    /// @src 8:16755:16786  \"i < currentVesting.vestingCount\"\n                    if iszero(lt(var_i, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:16759:16786  \"currentVesting.vestingCount\" */ var_currentVesting_mpos)))\n                    /// @src 8:16755:16786  \"i < currentVesting.vestingCount\"\n                    { break }\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    mstore(_2, _1)\n                    mstore(_3, /** @src 8:16811:16825  \"vestingClaimed\" */ 0x10)\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let dataSlot_1 := keccak256(_2, _4)\n                    mstore(_2, var_i)\n                    mstore(_3, dataSlot_1)\n                    /// @src 8:16807:16887  \"if (vestingClaimed[userAddress][i]) {...\"\n                    if /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(_2, _4)), 0xff)\n                    /// @src 8:16807:16887  \"if (vestingClaimed[userAddress][i]) {...\"\n                    {\n                        /// @src 8:16861:16872  \"return true\"\n                        var := /** @src 8:16581:16595  \"defaultVesting\" */ 0x01\n                        /// @src 8:16861:16872  \"return true\"\n                        leave\n                    }\n                }\n                /// @src 8:16907:16919  \"return false\"\n                var := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _2\n            }\n            /// @src 8:19475:20598  \"function getNextUnlockDate(address userAddress) external view notZeroAddress(userAddress) returns (uint256) {...\"\n            function fun_getNextUnlockDate_inner(var_userAddress) -> var\n            {\n                /// @src 8:19593:19654  \"IDappadVesting.Vesting memory currentVesting = defaultVesting\"\n                let var_currentVesting_mpos := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting_37989()\n                let _1 := 0\n                mstore(_1, and(var_userAddress, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 8:19669:19683  \"customVestings\" */ 0x0f)\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                let dataSlot := keccak256(_1, 0x40)\n                /// @src 8:19665:19784  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                if /** @src 8:19669:19713  \"customVestings[userAddress].vestingCount > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(dataSlot)))\n                /// @src 8:19665:19784  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                {\n                    /// @src 8:19729:19773  \"currentVesting = customVestings[userAddress]\"\n                    var_currentVesting_mpos := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting(dataSlot)\n                }\n                /// @src 8:19817:19853  \"getUserNextVestingIndex(userAddress)\"\n                let expr := /** @src 8:20707:20714  \"uint256\" */ modifier_notZeroAddress_37971(/** @src 8:19817:19853  \"getUserNextVestingIndex(userAddress)\" */ var_userAddress)\n                /// @src 8:19864:20592  \"if (currentVesting.onTGE) {...\"\n                switch /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ iszero(iszero(mload(/** @src 8:19868:19888  \"currentVesting.onTGE\" */ add(var_currentVesting_mpos, 128))))\n                case /** @src 8:19864:20592  \"if (currentVesting.onTGE) {...\" */ 0 {\n                    /// @src 8:20261:20296  \"currentVesting.vestingCliffDuration\"\n                    let _2 := add(var_currentVesting_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                    /// @src 8:20258:20582  \"if(currentVesting.vestingCliffDuration > 0) {...\"\n                    switch /** @src 8:20261:20300  \"currentVesting.vestingCliffDuration > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:20261:20296  \"currentVesting.vestingCliffDuration\" */ _2)))\n                    case /** @src 8:20258:20582  \"if(currentVesting.vestingCliffDuration > 0) {...\" */ 0 {\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _3 := sload(/** @src 8:20492:20507  \"vestingSettings\" */ 0x06)\n                        /// @src 8:20485:20567  \"return vestingSettings.startDate + (currentVesting.vestingDuration * vestingIndex)\"\n                        var := /** @src 8:20492:20567  \"vestingSettings.startDate + (currentVesting.vestingDuration * vestingIndex)\" */ checked_add_uint256(_3, /** @src 8:20521:20566  \"currentVesting.vestingDuration * vestingIndex\" */ checked_mul_uint256(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:20521:20551  \"currentVesting.vestingDuration\" */ add(var_currentVesting_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x20)), /** @src 8:20521:20566  \"currentVesting.vestingDuration * vestingIndex\" */ expr))\n                        /// @src 8:20485:20567  \"return vestingSettings.startDate + (currentVesting.vestingDuration * vestingIndex)\"\n                        leave\n                    }\n                    default /// @src 8:20258:20582  \"if(currentVesting.vestingCliffDuration > 0) {...\"\n                    {\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _4 := sload(/** @src 8:20327:20342  \"vestingSettings\" */ 0x06)\n                        /// @src 8:20327:20390  \"vestingSettings.startDate + currentVesting.vestingCliffDuration\"\n                        let expr_1 := checked_add_uint256(_4, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:20355:20390  \"currentVesting.vestingCliffDuration\" */ _2))\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _5 := mload(/** @src 8:20394:20424  \"currentVesting.vestingDuration\" */ add(var_currentVesting_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x20))\n                        let diff := add(expr, not(0))\n                        if gt(diff, expr)\n                        {\n                            mstore(_1, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(_1, 0x24)\n                        }\n                        /// @src 8:20320:20446  \"return vestingSettings.startDate + currentVesting.vestingCliffDuration + (currentVesting.vestingDuration * (vestingIndex - 1))\"\n                        var := /** @src 8:20327:20446  \"vestingSettings.startDate + currentVesting.vestingCliffDuration + (currentVesting.vestingDuration * (vestingIndex - 1))\" */ checked_add_uint256(expr_1, /** @src 8:20394:20445  \"currentVesting.vestingDuration * (vestingIndex - 1)\" */ checked_mul_uint256(_5, /** @src 8:20428:20444  \"vestingIndex - 1\" */ diff))\n                        /// @src 8:20320:20446  \"return vestingSettings.startDate + currentVesting.vestingCliffDuration + (currentVesting.vestingDuration * (vestingIndex - 1))\"\n                        leave\n                    }\n                }\n                default /// @src 8:19864:20592  \"if (currentVesting.onTGE) {...\"\n                {\n                    /// @src 8:19907:19942  \"currentVesting.vestingCliffDuration\"\n                    let _6 := add(var_currentVesting_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                    /// @src 8:19904:20228  \"if(currentVesting.vestingCliffDuration > 0) {...\"\n                    switch /** @src 8:19907:19946  \"currentVesting.vestingCliffDuration > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:19907:19942  \"currentVesting.vestingCliffDuration\" */ _6)))\n                    case /** @src 8:19904:20228  \"if(currentVesting.vestingCliffDuration > 0) {...\" */ 0 {\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _7 := sload(/** @src 8:20138:20153  \"vestingSettings\" */ 0x06)\n                        /// @src 8:20131:20213  \"return vestingSettings.startDate + (currentVesting.vestingDuration * vestingIndex)\"\n                        var := /** @src 8:20138:20213  \"vestingSettings.startDate + (currentVesting.vestingDuration * vestingIndex)\" */ checked_add_uint256(_7, /** @src 8:20167:20212  \"currentVesting.vestingDuration * vestingIndex\" */ checked_mul_uint256(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:20167:20197  \"currentVesting.vestingDuration\" */ add(var_currentVesting_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x20)), /** @src 8:20167:20212  \"currentVesting.vestingDuration * vestingIndex\" */ expr))\n                        /// @src 8:20131:20213  \"return vestingSettings.startDate + (currentVesting.vestingDuration * vestingIndex)\"\n                        leave\n                    }\n                    default /// @src 8:19904:20228  \"if(currentVesting.vestingCliffDuration > 0) {...\"\n                    {\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _8 := sload(/** @src 8:19973:19988  \"vestingSettings\" */ 0x06)\n                        /// @src 8:19973:20036  \"vestingSettings.startDate + currentVesting.vestingCliffDuration\"\n                        let expr_2 := checked_add_uint256(_8, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:20001:20036  \"currentVesting.vestingCliffDuration\" */ _6))\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _9 := mload(/** @src 8:20040:20070  \"currentVesting.vestingDuration\" */ add(var_currentVesting_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x20))\n                        let diff_1 := add(expr, not(0))\n                        if gt(diff_1, expr)\n                        {\n                            mstore(_1, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(_1, 0x24)\n                        }\n                        /// @src 8:19966:20092  \"return vestingSettings.startDate + currentVesting.vestingCliffDuration + (currentVesting.vestingDuration * (vestingIndex - 1))\"\n                        var := /** @src 8:19973:20092  \"vestingSettings.startDate + currentVesting.vestingCliffDuration + (currentVesting.vestingDuration * (vestingIndex - 1))\" */ checked_add_uint256(expr_2, /** @src 8:20040:20091  \"currentVesting.vestingDuration * (vestingIndex - 1)\" */ checked_mul_uint256(_9, /** @src 8:20074:20090  \"vestingIndex - 1\" */ diff_1))\n                        /// @src 8:19966:20092  \"return vestingSettings.startDate + currentVesting.vestingCliffDuration + (currentVesting.vestingDuration * (vestingIndex - 1))\"\n                        leave\n                    }\n                }\n            }\n            /// @ast-id 1492 @src 8:3756:3851  \"modifier notZeroAddress(address _address) {...\"\n            function modifier_notZeroAddress_37971(var_userAddress) -> _1\n            {\n                /// @src 8:3824:3832  \"_address\"\n                fun_notZeroAddress(var_userAddress)\n                /// @src 8:20726:20787  \"IDappadVesting.Vesting memory currentVesting = defaultVesting\"\n                let var_currentVesting_mpos := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting_37989()\n                let _2 := and(var_userAddress, sub(shl(160, 1), 1))\n                let _3 := 0\n                mstore(_3, _2)\n                let _4 := 0x20\n                mstore(_4, /** @src 8:20802:20816  \"customVestings\" */ 0x0f)\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                let _5 := 0x40\n                let dataSlot := keccak256(_3, _5)\n                /// @src 8:20798:20917  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                if /** @src 8:20802:20846  \"customVestings[userAddress].vestingCount > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(dataSlot)))\n                /// @src 8:20798:20917  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                {\n                    /// @src 8:20862:20906  \"currentVesting = customVestings[userAddress]\"\n                    var_currentVesting_mpos := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting(dataSlot)\n                }\n                /// @src 8:20927:20951  \"uint256 vestingIndex = 0\"\n                let var_vestingIndex := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3\n                /// @src 8:20967:20980  \"uint256 i = 0\"\n                let var_i := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3\n                /// @src 8:20962:21129  \"for (uint256 i = 0; i < currentVesting.vestingCount; i++) {...\"\n                for { }\n                /** @src 8:20773:20787  \"defaultVesting\" */ 0x01\n                /// @src 8:20967:20980  \"uint256 i = 0\"\n                {\n                    /// @src 8:21015:21018  \"i++\"\n                    var_i := increment_uint256(var_i)\n                }\n                {\n                    /// @src 8:20982:21013  \"i < currentVesting.vestingCount\"\n                    if iszero(lt(var_i, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:20986:21013  \"currentVesting.vestingCount\" */ var_currentVesting_mpos)))\n                    /// @src 8:20982:21013  \"i < currentVesting.vestingCount\"\n                    { break }\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    mstore(_3, _2)\n                    mstore(_4, /** @src 8:21038:21052  \"vestingClaimed\" */ 0x10)\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let dataSlot_1 := keccak256(_3, _5)\n                    mstore(_3, var_i)\n                    mstore(_4, dataSlot_1)\n                    /// @src 8:21034:21119  \"if (vestingClaimed[userAddress][i]) {...\"\n                    if /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(_3, _5)), 0xff)\n                    /// @src 8:21034:21119  \"if (vestingClaimed[userAddress][i]) {...\"\n                    {\n                        /// @src 8:21088:21104  \"vestingIndex = i\"\n                        var_vestingIndex := var_i\n                    }\n                }\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                let sum := add(var_vestingIndex, /** @src 8:20773:20787  \"defaultVesting\" */ 0x01)\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                if gt(var_vestingIndex, sum)\n                {\n                    mstore(_3, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(_3, 0x24)\n                }\n                /// @src 8:3843:3844  \"_\"\n                _1 := sum\n            }\n            /// @ast-id 3415 @src 8:21889:22023  \"function _notZeroAddress(address _address) internal pure {...\"\n            function fun_notZeroAddress(var__address)\n            {\n                /// @src 8:21956:22016  \"if (_address == address(0)) revert Errors.ZeroAddressError()\"\n                if /** @src 8:21960:21982  \"_address == address(0)\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(/** @src 8:21960:21982  \"_address == address(0)\" */ var__address, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                /// @src 8:21956:22016  \"if (_address == address(0)) revert Errors.ZeroAddressError()\"\n                {\n                    /// @src 8:21991:22016  \"Errors.ZeroAddressError()\"\n                    let _1 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                    /// @src 8:21991:22016  \"Errors.ZeroAddressError()\"\n                    mstore(_1, /** @src 8:11848:11873  \"Errors.ZeroAddressError()\" */ shl(224, 0x3efa09af))\n                    /// @src 8:21991:22016  \"Errors.ZeroAddressError()\"\n                    revert(_1, 4)\n                }\n            }\n            /// @ast-id 3455 @src 8:22168:22337  \"function _onlyOwnerOrAdmin(address _address) internal view {...\"\n            function fun_onlyOwnerOrAdmin(var_address)\n            {\n                /// @src 0:2954:2960  \"_roles\"\n                let _1 := 0x00\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:335:353  \"keccak256(\\\"OWNER\\\")\" */ 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b)\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                let _2 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                let _3 := and(var_address, sub(shl(160, 1), 1))\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3)\n                mstore(0x20, _2)\n                /// @src 8:22241:22295  \"!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)\"\n                let expr := /** @src 8:22241:22266  \"!hasRole(OWNER, _address)\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)), 0xff))\n                /// @src 8:22241:22295  \"!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)\"\n                if expr\n                {\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42)\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let _4 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3)\n                    mstore(0x20, _4)\n                    /// @src 8:22241:22295  \"!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)\"\n                    expr := /** @src 8:22270:22295  \"!hasRole(ADMIN, _address)\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)), 0xff))\n                }\n                /// @src 8:22237:22330  \"if (!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)) revert Errors.UnauthorizedError()\"\n                if expr\n                {\n                    /// @src 8:22304:22330  \"Errors.UnauthorizedError()\"\n                    let _5 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(0x40)\n                    /// @src 8:22304:22330  \"Errors.UnauthorizedError()\"\n                    mstore(_5, shl(224, 0x8b5701f7))\n                    revert(_5, 4)\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220b67f83c1094808ce039eec8df40a31911f8f14dfce2edd589119fc7a9b7f8d4764736f6c63430008140033\"\n    }\n}\n","hash":"01000a817e174227101447765ac20b7e0d63499aeed18265e7b727b47a86e424","factoryDependencies":{}}},"contracts/core/DappadVestingFactory.sol":{"DappadVestingFactory":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"adminAddress","type":"address"}],"internalType":"struct IDappadVestingFactory.VestingFactoryParams","name":"vestingFactoryParams","type":"tuple"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"EmptyVestingPercentageError","type":"error"},{"inputs":[],"name":"InvalidVestingDurationError","type":"error"},{"inputs":[],"name":"InvalidVestingIndexError","type":"error"},{"inputs":[],"name":"UnauthorizedError","type":"error"},{"inputs":[],"name":"ZeroAddressError","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_stakeContractAddress","type":"address"}],"name":"StakeContractAddressUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"vestingCount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"vestingDuration","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"vestingCliffDuration","type":"uint256"},{"indexed":false,"internalType":"uint256[]","name":"vestingPercentages","type":"uint256[]"},{"indexed":false,"internalType":"bool","name":"onTGE","type":"bool"},{"indexed":false,"internalType":"address","name":"saleTokenAddress","type":"address"},{"indexed":false,"internalType":"address","name":"saleContractAddress","type":"address"},{"indexed":false,"internalType":"address","name":"factoryContractAddress","type":"address"}],"name":"VestingCreated","type":"event"},{"inputs":[],"name":"ADMIN","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OWNER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allVestings","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"uint256","name":"vestingCount","type":"uint256"},{"internalType":"uint256","name":"vestingDuration","type":"uint256"},{"internalType":"uint256","name":"vestingCliffDuration","type":"uint256"},{"internalType":"uint256[]","name":"vestingPercentages","type":"uint256[]"},{"internalType":"bool","name":"onTGE","type":"bool"}],"internalType":"struct IDappadVesting.Vesting","name":"defaultVesting","type":"tuple"},{"components":[{"internalType":"address","name":"saleTokenAddress","type":"address"},{"internalType":"address","name":"factoryContractAddress","type":"address"},{"internalType":"address","name":"saleContractAddress","type":"address"},{"internalType":"address","name":"ownerAddress","type":"address"},{"internalType":"address","name":"adminAddress","type":"address"}],"internalType":"struct IDappadVesting.VestingAddresses","name":"vestingAddresses","type":"tuple"},{"components":[{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"saleTokenPrice","type":"uint256"}],"internalType":"struct IDappadVesting.VestingSettings","name":"vestingSettings","type":"tuple"}],"internalType":"struct IDappadVesting.VestingParams","name":"_vestingParams","type":"tuple"}],"name":"createVesting","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getVesting","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVestingCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"adminAddress\",\"type\":\"address\"}],\"internalType\":\"struct IDappadVestingFactory.VestingFactoryParams\",\"name\":\"vestingFactoryParams\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyVestingPercentageError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVestingDurationError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVestingIndexError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressError\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_stakeContractAddress\",\"type\":\"address\"}],\"name\":\"StakeContractAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vestingCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vestingDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vestingCliffDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"vestingPercentages\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"onTGE\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"saleTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"saleContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factoryContractAddress\",\"type\":\"address\"}],\"name\":\"VestingCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OWNER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allVestings\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"vestingCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingCliffDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"vestingPercentages\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"onTGE\",\"type\":\"bool\"}],\"internalType\":\"struct IDappadVesting.Vesting\",\"name\":\"defaultVesting\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"saleTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factoryContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"saleContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"adminAddress\",\"type\":\"address\"}],\"internalType\":\"struct IDappadVesting.VestingAddresses\",\"name\":\"vestingAddresses\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleTokenPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IDappadVesting.VestingSettings\",\"name\":\"vestingSettings\",\"type\":\"tuple\"}],\"internalType\":\"struct IDappadVesting.VestingParams\",\"name\":\"_vestingParams\",\"type\":\"tuple\"}],\"name\":\"createVesting\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getVesting\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVestingCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/DappadVestingFactory.sol\":\"DappadVestingFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/core/DappadVesting.sol\":{\"keccak256\":\"0x7bbae398c8e56da3bfc92472160bb85f9dc37e5643dfed7a398373ae1fa39720\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7ff1ed53b05252e8aa1e698dbf6411fb78a0b089e9df27523d97a99ddc8d951\",\"dweb:/ipfs/QmduGR1S3DwXSx5rSUZd5uts1tZoqnpLR5Lhn1mkMCNghS\"]},\"contracts/core/DappadVestingFactory.sol\":{\"keccak256\":\"0xdb0ea4655b021c3128fc3d587ff9439b0147896b1b6338f5617c01f55b79eadc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d9bba4bac243c8aa39e3aba75f0d8dba99cf8742797ca29a11cd88134ad8e95\",\"dweb:/ipfs/QmQguZAkSTBytBZY2wUZ6cJ47aq4gfmYKm7FtoXhenTswh\"]},\"contracts/errors/Errors.sol\":{\"keccak256\":\"0x1e7bd8e98aaf625e63f63fa8d2bf4f8b4beb93313e33dfb6affdcdd9a7524f70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0613414bf0ad19a7ebc66e8eba189869aacf94f9e734536488a75216942650\",\"dweb:/ipfs/QmRGKqDpx3ef5D3MXMyoR7U23HWqDZmj9Kt2QJgcgD37YR\"]},\"contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xcee038fff82ea087fcca9ccabcc0e8e8d98fe8e907c3d781e16b653badd7bd42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8437b64a0e7587e2d0ab0f37767f9be8bce72b41ecb3c340940a301f35422f48\",\"dweb:/ipfs/QmYy6hA9PY78CDsq71zPsYxBKJxGgSSpSmhXSW4kSLke4a\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":null,"zk_version":"1.3.23"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"DappadVestingFactory.sol:DappadVestingFactory\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[4]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_15[0], r2, r4\n\tjump.le\t@.BB0_27\n\tsub.s!\t@CPI0_16[0], r2, r4\n\tjump.le\t@.BB0_35\n\tsub.s!\t@CPI0_17[0], r2, r4\n\tjump.gt\t@.BB0_41\n\tsub.s!\t@CPI0_20[0], r2, r4\n\tjump.eq\t@.BB0_141\n\tsub.s!\t@CPI0_21[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tst.1\t128, r0\n\tadd\t@CPI0_33[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_1[0], r3, r2\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tjump.gt\t@.BB0_5\n.BB0_4:\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_55[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_5:\n\tadd\t159, r3, r2\n\tand\t@CPI0_3[0], r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_156\n\tadd\tr0, r0, r5\n.BB0_7:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_7\n.BB0_156:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_9\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_9:\n\tsub.s!\t32, r3, r1\n\tjump.ge\t@.BB0_10\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_27:\n\tsub.s!\t@CPI0_25[0], r2, r4\n\tjump.gt\t@.BB0_31\n\tsub.s!\t@CPI0_29[0], r2, r4\n\tjump.eq\t@.BB0_43\n\tsub.s!\t@CPI0_30[0], r2, r1\n\tjump.eq\t@.BB0_47\n\tsub.s!\t@CPI0_31[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_6[0], r0, r1\n\tjump\t@.BB0_50\n.BB0_10:\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_4[0], r2, r1\n\tjump.gt\t@.BB0_4\n\tadd\tr2, r0, stack-[4]\n\tadd\t32, r2, r1\n\tst.1\t64, r1\n\tld.1\t128, r1\n\tsub.s!\t@CPI0_5[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[4], r0, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r6\n\tadd\t@CPI0_6[0], r0, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_9[0], r0, r4\n\tadd\t@CPI0_6[0], r0, r5\n\tadd\t@CPI0_6[0], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t@CPI0_10[0], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r6\n\tadd\t@CPI0_6[0], r0, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_9[0], r0, r4\n\tadd\t@CPI0_10[0], r0, r5\n\tadd\t@CPI0_6[0], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[2]\n\tand\t@CPI0_5[0], r1, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tadd\t@CPI0_11[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_20\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_11[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_12[0], r0, r4\n\tadd\t@CPI0_6[0], r0, r5\n\tadd\tstack-[3], r0, r6\n\tadd\tstack-[2], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_20:\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_5[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t@CPI0_13[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_24\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_13[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_12[0], r0, r4\n\tadd\t@CPI0_10[0], r0, r5\n\tadd\tstack-[4], r0, r6\n\tadd\tstack-[2], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_24:\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_14[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_35:\n\tsub.s!\t@CPI0_22[0], r2, r4\n\tjump.eq\t@.BB0_113\n\tsub.s!\t@CPI0_23[0], r2, r4\n\tjump.eq\t@.BB0_128\n\tsub.s!\t@CPI0_24[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\t1, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.lt\t@.BB0_140\n\tadd\t@CPI0_34[0], r0, r1\n\tjump\t@.BB0_133\n.BB0_31:\n\tsub.s!\t@CPI0_26[0], r2, r4\n\tjump.eq\t@.BB0_53\n\tsub.s!\t@CPI0_27[0], r2, r4\n\tjump.eq\t@.BB0_108\n\tsub.s!\t@CPI0_28[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_10[0], r0, r1\n\tjump\t@.BB0_50\n.BB0_41:\n\tsub.s!\t@CPI0_18[0], r2, r4\n\tjump.eq\t@.BB0_147\n\tsub.s!\t@CPI0_19[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[4]\n\tsub.s!\t@CPI0_5[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tnear_call\tr0, @fun_checkRole, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r1\n\tadd\tstack-[4], r0, r2\n\tjump\t@.BB0_135\n.BB0_141:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[4]\n\tsub.s!\t@CPI0_5[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[3], r0, r2\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_50\n.BB0_147:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\t1, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.ge\t@.BB0_2\n.BB0_140:\n\tnear_call\tr0, @storage_array_index_access_address_dyn, @DEFAULT_UNWIND\n\tshl.s\t3, r2, r2\n\tsload\tr1, r1\n\tshr\tr1, r2, r1\n\tand\t@CPI0_5[0], r1, r1\n\tsub.s!\t255, r2, r2\n\tadd.gt\tr0, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_32[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_113:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[4]\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t@CPI0_5[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_121\n\tld.1\t64, r1\n\tadd\t36, r1, r2\n\tadd\tstack-[2], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_37[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[1], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_38[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_128:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_5[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr2\n\tsub!\tr3, r2, r3\n\tjump.ne\t@.BB0_132\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n.BB0_135:\n\tnear_call\tr0, @fun_revokeRole, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_43:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_56[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t@CPI0_57[0], r1, r2\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tsub.s!\t@CPI0_58[0], r1, r1\n\tor.eq\t1, r2, r2\n\tand\t1, r2, r1\n\tjump\t@.BB0_50\n.BB0_53:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r6\n\tsub.s!\t32, r6, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_39[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tsub\tr3, r4, r2\n\tadd\t@CPI0_40[0], r0, r5\n\tsub.s!\t260, r2, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr5, r0, r7\n\tand\t@CPI0_40[0], r2, r8\n\tsub!\tr8, r0, r9\n\tadd.le\tr0, r0, r5\n\tsub.s!\t@CPI0_40[0], r8, r8\n\tadd.ne\tr7, r0, r5\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB0_2\n\tadd\t224, r0, r5\n\tst.1\t64, r5\n\tadd\t4, r4, r7\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI0_39[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tadd\tr7, r4, r8\n\tsub\tr6, r8, r6\n\tadd\t@CPI0_40[0], r0, r7\n\tsub.s!\t160, r6, r9\n\tadd\tr0, r0, r9\n\tadd.lt\tr7, r0, r9\n\tand\t@CPI0_40[0], r6, r6\n\tsub!\tr6, r0, r10\n\tadd.le\tr0, r0, r7\n\tsub.s!\t@CPI0_40[0], r6, r6\n\tadd.ne\tr9, r0, r7\n\tsub!\tr7, r0, r6\n\tjump.ne\t@.BB0_2\n\tadd\t384, r0, r6\n\tst.1\t64, r6\n\tadd\t4, r8, r7\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\t224, r7\n\tadd\t36, r8, r7\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\t256, r7\n\tadd\t68, r8, r7\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\t288, r7\n\tadd\t100, r8, r7\n\tptr.add\tr1, r7, r9\n\tld\tr9, r9\n\tsub.s!\t@CPI0_39[0], r9, r10\n\tjump.gt\t@.BB0_2\n\tadd\tr9, r8, r8\n\tadd\t35, r8, r9\n\tsub!\tr9, r3, r9\n\tjump.ge\t@.BB0_2\n\tadd\t4, r8, r9\n\tptr.add\tr1, r9, r9\n\tld\tr9, r10\n\tsub.s!\t@CPI0_39[0], r10, r9\n\tjump.gt\t@.BB0_4\n\tshl.s\t5, r10, r9\n\tadd\t447, r9, r11\n\tsub.s\t32, r0, r12\n\tand\tr11, r12, r11\n\tsub.s!\t@CPI0_39[0], r11, r12\n\tjump.gt\t@.BB0_4\n\tst.1\t64, r11\n\tst.1\t384, r10\n\tadd\t36, r8, r8\n\tadd\tr9, r8, r9\n\tsub!\tr9, r3, r3\n\tjump.gt\t@.BB0_2\n\tsub!\tr10, r0, r3\n\tjump.eq\t@.BB0_67\n\tadd\t416, r0, r3\n.BB0_66:\n\tptr.add\tr1, r8, r10\n\tld\tr10, r10\n\tst.1.inc\tr3, r10, r3\n\tadd\t32, r8, r8\n\tsub!\tr8, r9, r10\n\tjump.lt\t@.BB0_66\n.BB0_67:\n\tst.1\t320, r6\n\tadd\t32, r7, r3\n\tptr.add\tr1, r3, r3\n\tld\tr3, r3\n\tsub!\tr3, r0, r6\n\tadd\t0, r0, r6\n\tadd.ne\t1, r0, r6\n\tsub!\tr3, r6, r6\n\tjump.ne\t@.BB0_2\n\tsub.s\t36, r2, r6\n\tadd\t@CPI0_40[0], r0, r7\n\tsub.s!\t160, r6, r8\n\tadd\tr0, r0, r8\n\tadd.lt\tr7, r0, r8\n\tand\t@CPI0_40[0], r6, r6\n\tsub!\tr6, r0, r9\n\tadd.le\tr0, r0, r7\n\tsub.s!\t@CPI0_40[0], r6, r6\n\tadd.ne\tr8, r0, r7\n\tst.1\t352, r3\n\tst.1\t128, r5\n\tsub!\tr7, r0, r3\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r3\n\tsub.s!\t@CPI0_41[0], r3, r5\n\tjump.gt\t@.BB0_4\n\tadd\t160, r3, r5\n\tst.1\t64, r5\n\tadd\t36, r4, r4\n\tptr.add\tr1, r4, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI0_5[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr3, r5, r5\n\tadd\t32, r4, r4\n\tptr.add\tr1, r4, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI0_5[0], r6, r7\n\tjump.gt\t@.BB0_2\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tptr.add\tr1, r4, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI0_5[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tadd\t64, r3, r6\n\tst.1\tr6, r5\n\tadd\t32, r4, r4\n\tptr.add\tr1, r4, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI0_5[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tadd\t96, r3, r6\n\tst.1\tr6, r5\n\tadd\t32, r4, r4\n\tptr.add\tr1, r4, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI0_5[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tadd\t128, r3, r6\n\tst.1\tr6, r5\n\tst.1\t160, r3\n\tsub.s\t196, r2, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_42[0], r2, r3\n\tjump.gt\t@.BB0_4\n\tadd\t64, r2, r3\n\tst.1\t64, r3\n\tadd\t32, r4, r3\n\tptr.add\tr1, r3, r3\n\tld\tr3, r3\n\tst.1.inc\tr2, r3, r3\n\tadd\t64, r4, r4\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tst.1\tr3, r1\n\tst.1\t192, r2\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t@CPI0_11[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_82\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_13[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_82\n\tld.1\t64, r1\n\tadd\t@CPI0_53[0], r0, r2\n\tjump\t@.BB0_84\n.BB0_47:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tjump\t@.BB0_49\n.BB0_108:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\t1, r1, r1\n.BB0_49:\n\tsload\tr1, r1\n.BB0_50:\n\tst.1\t128, r1\n\tadd\t@CPI0_33[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_132:\n\tadd\t@CPI0_36[0], r0, r1\n.BB0_133:\n\tst.1\t128, r1\n\tadd\t@CPI0_35[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_121:\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_127\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_12[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[3], r0, r6\n\tadd\tstack-[1], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_127:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_82:\n\tld.1\t64, r1\n\tld.1\t160, r2\n\tld.1\tr2, r2\n\tand!\t@CPI0_5[0], r2, r2\n\tjump.ne\t@.BB0_85\n\tadd\t@CPI0_52[0], r0, r2\n\tjump\t@.BB0_84\n.BB0_85:\n\tld.1\t128, r2\n\tadd\t96, r2, r3\n\tld.1\tr3, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_87\n\tadd\t@CPI0_51[0], r0, r2\n\tjump\t@.BB0_84\n.BB0_87:\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_89\n\tadd\t@CPI0_49[0], r0, r2\n.BB0_84:\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_50[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_89:\n\tsub.s!\t@CPI0_43[0], r1, r2\n\tjump.gt\t@.BB0_4\n\tadd\t132, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t@CPI0_44[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t164, r1, r2\n\tld.1\t128, r3\n\tadd\t256, r0, r4\n\tadd\tr4, r0, stack-[4]\n\tst.1\tr2, r4\n\tadd\t420, r1, r2\n\tld.1.inc\tr3, r4, r5\n\tst.1\tr2, r4\n\tld.1\tr5, r2\n\tadd\t452, r1, r4\n\tst.1\tr4, r2\n\tadd\t64, r3, r2\n\tld.1\tr2, r2\n\tadd\t484, r1, r4\n\tst.1\tr4, r2\n\tadd\t96, r3, r2\n\tld.1\tr2, r4\n\tadd\t516, r1, r2\n\tadd\t160, r0, r5\n\tst.1\tr2, r5\n\tadd\t580, r1, r2\n\tld.1\tr4, r5\n\tst.1\tr2, r5\n\tadd\t612, r1, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_93\n\tadd\tr0, r0, r6\n.BB0_92:\n\tadd\t32, r4, r4\n\tld.1\tr4, r7\n\tst.1.inc\tr2, r7, r2\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_92\n.BB0_93:\n\tadd\t128, r3, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tadd\t548, r1, r4\n\tst.1\tr4, r3\n\tld.1\t160, r3\n\tld.1.inc\tr3, r4, r5\n\tand\t@CPI0_5[0], r4, r4\n\tadd\t196, r1, r6\n\tst.1\tr6, r4\n\tld.1\tr5, r4\n\tand\t@CPI0_5[0], r4, r4\n\tadd\t228, r1, r5\n\tst.1\tr5, r4\n\tadd\t64, r3, r4\n\tld.1\tr4, r4\n\tand\t@CPI0_5[0], r4, r4\n\tadd\t260, r1, r5\n\tst.1\tr5, r4\n\tadd\t96, r3, r4\n\tld.1\tr4, r4\n\tand\t@CPI0_5[0], r4, r4\n\tadd\t292, r1, r5\n\tst.1\tr5, r4\n\tadd\t128, r3, r3\n\tld.1\tr3, r3\n\tand\t@CPI0_5[0], r3, r3\n\tadd\t324, r1, r4\n\tst.1\tr4, r3\n\tadd\t356, r1, r3\n\tld.1\t192, r4\n\tld.1.inc\tr4, r4, r5\n\tst.1\tr3, r4\n\tld.1\tr5, r3\n\tadd\t388, r1, r4\n\tst.1\tr4, r3\n\tsub\tr2, r1, r2\n\tsub.s\t132, r2, r3\n\tadd\t100, r1, r4\n\tcontext.gas_left\tr5\n\tst.1\tr4, r3\n\tadd\t68, r1, r3\n\tadd\t96, r0, r4\n\tst.1\tr3, r4\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr1, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI0_0[0], r2, r6\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tadd\t@CPI0_45[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t4, r1, r1\n\tst.1\tr1, r0\n\tsub.s!\t@CPI0_0[0], r5, r1\n\tadd.ge\tr3, r0, r5\n\tshl.s\t192, r5, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_94\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_102\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_97\n.BB0_94:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_97:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_155\n\tadd\tr0, r0, r6\n.BB0_99:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_99\n.BB0_155:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_101\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_101:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r1\n\tshl.s\t64, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_102:\n\tadd\t1, r0, r3\n\tsload\tr3, r2\n\tsub.s!\t@CPI0_39[0], r2, r4\n\tjump.gt\t@.BB0_4\n\tadd\t1, r2, r4\n\tsstore\tr3, r4\n\tst.1\t0, r3\n\tand\t@CPI0_5[0], r1, r1\n\tadd\t@CPI0_46[0], r2, r2\n\tsload\tr2, r3\n\tand\t@CPI0_47[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tld.1\t128, r1\n\tadd\t128, r1, r2\n\tld.1\tr2, r5\n\tld.1\t160, r2\n\tadd\t64, r2, r3\n\tld.1\tr3, r6\n\tld.1\tr2, r4\n\tadd\t96, r1, r2\n\tld.1\tr2, r2\n\tadd\t32, r1, r3\n\tld.1\tr3, r3\n\tld.1\tr1, r7\n\tadd\t64, r1, r1\n\tld.1\tr1, r8\n\tld.1\t64, r1\n\tadd\t96, r1, r9\n\tadd\tstack-[4], r0, r10\n\tst.1\tr9, r10\n\tadd\t64, r1, r9\n\tst.1\tr9, r8\n\tadd\t32, r1, r8\n\tst.1\tr8, r3\n\tst.1\tr1, r7\n\tadd\t256, r1, r3\n\tld.1\tr2, r7\n\tst.1\tr3, r7\n\tadd\t288, r1, r3\n\tand\t@CPI0_5[0], r4, r4\n\tand\t@CPI0_5[0], r6, r6\n\tsub!\tr5, r0, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tsub!\tr7, r0, r8\n\tjump.eq\t@.BB0_106\n\tadd\tr0, r0, r8\n.BB0_105:\n\tadd\t32, r2, r2\n\tld.1\tr2, r9\n\tst.1.inc\tr3, r9, r3\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_105\n.BB0_106:\n\tadd\t224, r1, r2\n\tcontext.this\tr7\n\tst.1\tr2, r7\n\tadd\t192, r1, r2\n\tst.1\tr2, r6\n\tadd\t160, r1, r2\n\tst.1\tr2, r4\n\tadd\t128, r1, r2\n\tst.1\tr2, r5\n\tsub\tr3, r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\tr3, r0, stack-[4]\n\tadd\t@CPI0_48[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_32[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nstorage_array_index_access_address_dyn:\n.func_begin1:\n\tadd\t1, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB1_1\n\tst.1\t0, r2\n\tadd\t@CPI1_2[0], r1, r1\n\tadd\tr0, r0, r2\n\tret\n.BB1_1:\n\tadd\t@CPI1_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nfun_checkRole:\n.func_begin2:\n\tnop\tstack+=[2]\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI2_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_1\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI2_0[0], r1, r2\n\tadd.ge\t@CPI2_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB2_4\n\tret\n.BB2_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_4:\n\tld.1\t64, r1\n\tadd\t36, r1, r2\n\tadd\tstack-[2], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[1], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_0[0], r0, r2\n\tsub.s!\t@CPI2_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfun_revokeRole:\n.func_begin3:\n\tnop\tstack+=[2]\n\tadd\tr2, r0, stack-[1]\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI3_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tand\t@CPI3_2[0], r2, r2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tadd.ge\t@CPI3_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB3_4\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI3_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tadd.ge\t@CPI3_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t@CPI3_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI3_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tcontext.caller\tr7\n\tadd\t@CPI3_4[0], r0, r4\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[1], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_1\n.BB3_4:\n\tret\n.BB3_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\n__sha3:\n.func_begin4:\n\tadd\t@CPI4_0[0], r0, r3\n\tsub.s!\t@CPI4_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI4_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_2\n\tld\tr1, r1\n\tret\n.BB4_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\n__farcall:\n.func_begin5:\n.tmp0:\n\tfar_call\tr1, r2, @.BB5_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB5_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end5:\n\n__staticcall:\n.func_begin6:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB6_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB6_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end6:\n\n\t.data\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI2_0:\nCPI3_0:\nCPI4_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -18446744073709551457\nCPI0_2:\n\t.cell -18446744073709551489\nCPI0_3:\n\t.cell 8589934560\nCPI0_4:\n\t.cell 18446744073709551583\nCPI0_5:\nCPI3_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_6:\n\t.cell 44526186701075355232631374653616046072493505541712997730802846168811969624347\nCPI0_7:\nCPI2_1:\nCPI3_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_8:\nCPI3_3:\nCPI4_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_9:\n\t.cell -30089899419605041018653467143256047862277360661533364420289869028242106941185\nCPI0_10:\n\t.cell -14680205516121397737035688839673284388258461471861438888035447495382811677630\nCPI0_11:\n\t.cell 8413219402807569600188236340312512697289764467612919156476723688445633815681\nCPI0_12:\n\t.cell 21498167346302451094516930465084812798900530214793017313261708129848854408973\nCPI0_13:\n\t.cell 41951636634120538608643499135161621920062445191352822996721339533853370279351\nCPI0_14:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_15:\n\t.cell 791671132\nCPI0_16:\n\t.cell 2446411859\nCPI0_17:\n\t.cell 3210351490\nCPI0_18:\n\t.cell 3210351491\nCPI0_19:\n\t.cell 3578229791\nCPI0_20:\n\t.cell 2446411860\nCPI0_21:\n\t.cell 2719481311\nCPI0_22:\n\t.cell 791671133\nCPI0_23:\n\t.cell 911641278\nCPI0_24:\n\t.cell 1632720349\nCPI0_25:\n\t.cell 434095474\nCPI0_26:\n\t.cell 434095475\nCPI0_27:\n\t.cell 613063843\nCPI0_28:\n\t.cell 705350762\nCPI0_29:\n\t.cell 33540519\nCPI0_30:\n\t.cell 237265523\nCPI0_31:\n\t.cell 293077987\nCPI0_32:\n\t.cell 2535301200456458802993406410752\nCPI0_33:\n\t.cell 2535301202817642044428229017600\nCPI0_34:\n\t.cell 47515529668615697930788456545084891623119947194867843879179380243836367273984\nCPI0_35:\n\t.cell 316912652418240591808998408192\nCPI0_36:\n\t.cell 46403934321121769725732295381905508642689279562898648152983186649040421912576\nCPI0_37:\nCPI2_2:\n\t.cell -13425406428480953669539741299640702691354761304596208544390623898567197065216\nCPI0_38:\nCPI2_3:\n\t.cell 5387515050969974956360988622848\nCPI0_39:\n\t.cell 18446744073709551615\nCPI0_40:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_41:\n\t.cell 18446744073709551455\nCPI0_42:\n\t.cell 18446744073709551551\nCPI0_43:\n\t.cell 18446744073709551483\nCPI0_44:\n\t.cell 452385357158771060998684467029394011296628411937994908399718610751990457380\nCPI0_45:\n\t.cell -45094662312588414058508742492242807367897819822786606328124609013070528553987\nCPI0_46:\nCPI1_2:\n\t.cell -35707666377435648211887908874984608119992236509074197713628505308453184860938\nCPI0_47:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_48:\n\t.cell 21137803827385061697274093746608738344926522162262244080390892745458936014535\nCPI0_49:\n\t.cell 18457842087669267078745905534306278950895359806081545934687301794307636199424\nCPI0_50:\n\t.cell 316912650057057350374175801344\nCPI0_51:\n\t.cell 17713933852887379431334077066978788449950929452687385889564686577376096681984\nCPI0_52:\n\t.cell 28485175212064900027977973286507733033835135331909752320915715833089423835136\nCPI0_53:\n\t.cell -52766874028753274426233363142178672704313577740706715646393811206488134254592\nCPI0_54:\nCPI1_0:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_55:\nCPI1_1:\n\t.cell 2852213850513516153367582212096\nCPI0_56:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_57:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI0_58:\n\t.cell 54909818011127210282586622383458683342160741266077104324147033802515469565952\nCPI3_4:\n\t.cell -4422201763333249725673726406278620787883548942654356884866643620688883542245\n","bytecode":{"object":""},"methodIdentifiers":{"ADMIN()":"2a0acc6a","DEFAULT_ADMIN_ROLE()":"a217fddf","OWNER()":"117803e3","allVestings(uint256)":"bf5a1383","createVesting(((uint256,uint256,uint256,uint256[],bool),(address,address,address,address,address),(uint256,uint256)))":"19dfc573","getRoleAdmin(bytes32)":"248a9ca3","getVesting(uint256)":"615155dd","getVestingCount()":"0e246273","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 1:\"@openzeppelin/contracts/access/IAccessControl.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 6:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 7:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\", 9:\"contracts/core/DappadVestingFactory.sol\"\nobject \"DappadVestingFactory_3779\" {\n    code {\n        {\n            /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"DappadVestingFactory_3779\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            let _2 := sub(shl(64, 1), 1)\n            if or(gt(newFreePtr, _2), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0x24)\n            }\n            let _3 := 64\n            mstore(_3, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n            let memPtr := mload(_3)\n            let newFreePtr_1 := add(memPtr, 32)\n            if or(gt(newFreePtr_1, _2), lt(newFreePtr_1, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0x24)\n            }\n            mstore(_3, newFreePtr_1)\n            let value := mload(_1)\n            let _4 := sub(shl(160, 1), 1)\n            if iszero(eq(value, and(value, _4)))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n            mstore(memPtr, value)\n            /// @src 9:303:321  \"keccak256(\\\"OWNER\\\")\"\n            let _5 := 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b\n            /// @src -1:-1:-1\n            let _6 := 0\n            /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ _6, /** @src 9:303:321  \"keccak256(\\\"OWNER\\\")\" */ _5)\n            /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n            mstore(32, /** @src -1:-1:-1 */ _6)\n            /// @src 0:3901:3923  \"_roles[role].adminRole\"\n            let _7 := add(/** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ _6, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ _3), /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n            /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n            let _8 := sload(_7)\n            sstore(_7, /** @src 9:303:321  \"keccak256(\\\"OWNER\\\")\" */ _5)\n            /// @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\"\n            let _9 := 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff\n            log4(/** @src -1:-1:-1 */ _6, _6, /** @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\" */ _9, /** @src 9:303:321  \"keccak256(\\\"OWNER\\\")\" */ _5, /** @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\" */ _8, /** @src 9:303:321  \"keccak256(\\\"OWNER\\\")\" */ _5)\n            /// @src 9:359:377  \"keccak256(\\\"ADMIN\\\")\"\n            let _10 := 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n            /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ _6, /** @src 9:359:377  \"keccak256(\\\"ADMIN\\\")\" */ _10)\n            /// @src 0:3901:3923  \"_roles[role].adminRole\"\n            let _11 := add(/** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ _6, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ _3), /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n            /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n            let _12 := sload(_11)\n            sstore(_11, /** @src 9:303:321  \"keccak256(\\\"OWNER\\\")\" */ _5)\n            /// @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\"\n            log4(/** @src -1:-1:-1 */ _6, _6, /** @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\" */ _9, /** @src 9:359:377  \"keccak256(\\\"ADMIN\\\")\" */ _10, /** @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\" */ _12, /** @src 9:303:321  \"keccak256(\\\"OWNER\\\")\" */ _5)\n            /// @src 9:961:990  \"_grantRole(OWNER, msg.sender)\"\n            pop(fun_grantRole(/** @src 9:979:989  \"msg.sender\" */ caller()))\n            /// @src 9:1000:1052  \"_grantRole(ADMIN, vestingFactoryParams.adminAddress)\"\n            pop(fun_grantRole_689(/** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ and(/** @src 9:359:377  \"keccak256(\\\"ADMIN\\\")\" */ mload(/** @src 9:1018:1051  \"vestingFactoryParams.adminAddress\" */ memPtr), /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ _4)))\n            let _13 := mload(_3)\n            let _14 := datasize(\"DappadVestingFactory_3779_deployed\")\n            codecopy(_13, dataoffset(\"DappadVestingFactory_3779_deployed\"), _14)\n            return(_13, _14)\n        }\n        /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n        function fun_grantRole(var_account) -> var_\n        {\n            /// @src 9:303:321  \"keccak256(\\\"OWNER\\\")\"\n            let _1 := 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b\n            /// @src 0:2954:2960  \"_roles\"\n            let _2 := 0x00\n            /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n            mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:303:321  \"keccak256(\\\"OWNER\\\")\" */ _1)\n            /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _2)\n            /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n            let _3 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0x40)\n            let _4 := and(var_account, sub(shl(160, 1), 1))\n            mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ _4)\n            mstore(0x20, _3)\n            /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0x40)), 0xff))\n            case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                /// @src 0:6466:6478  \"return false\"\n                var_ := /** @src 0:2954:2960  \"_roles\" */ _2\n                /// @src 0:6466:6478  \"return false\"\n                leave\n            }\n            default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:303:321  \"keccak256(\\\"OWNER\\\")\" */ _1)\n                /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _2)\n                /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                let _5 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0x40)\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ _4)\n                mstore(0x20, _5)\n                let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0x40)\n                sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 0:2954:2960  \"_roles\" */ _2, _2, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 9:303:321  \"keccak256(\\\"OWNER\\\")\" */ _1, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ _4, /** @src 4:735:745  \"msg.sender\" */ caller())\n                /// @src 0:6424:6435  \"return true\"\n                var_ := /** @src 0:6347:6351  \"true\" */ 0x01\n                /// @src 0:6424:6435  \"return true\"\n                leave\n            }\n        }\n        /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n        function fun_grantRole_689(var_account) -> var\n        {\n            /// @src 9:359:377  \"keccak256(\\\"ADMIN\\\")\"\n            let _1 := 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n            /// @src 0:2954:2960  \"_roles\"\n            let _2 := 0x00\n            /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n            mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:359:377  \"keccak256(\\\"ADMIN\\\")\" */ _1)\n            /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _2)\n            /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n            let _3 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0x40)\n            let _4 := and(var_account, sub(shl(160, 1), 1))\n            mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ _4)\n            mstore(0x20, _3)\n            /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0x40)), 0xff))\n            case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                /// @src 0:6466:6478  \"return false\"\n                var := /** @src 0:2954:2960  \"_roles\" */ _2\n                /// @src 0:6466:6478  \"return false\"\n                leave\n            }\n            default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:359:377  \"keccak256(\\\"ADMIN\\\")\" */ _1)\n                /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _2)\n                /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                let _5 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0x40)\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ _4)\n                mstore(0x20, _5)\n                let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0x40)\n                sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 0:2954:2960  \"_roles\" */ _2, _2, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 9:359:377  \"keccak256(\\\"ADMIN\\\")\" */ _1, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ _4, /** @src 4:735:745  \"msg.sender\" */ caller())\n                /// @src 0:6424:6435  \"return true\"\n                var := /** @src 0:6347:6351  \"true\" */ 0x01\n                /// @src 0:6424:6435  \"return true\"\n                leave\n            }\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 6:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 9:\"contracts/core/DappadVestingFactory.sol\"\n    object \"DappadVestingFactory_3779_deployed\" {\n        code {\n            {\n                /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _2 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _2)) { revert(0, 0) }\n                        /// @src 0:2673:2760  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        let expr := /** @src 0:2673:2720  \"interfaceId == type(IAccessControl).interfaceId\" */ eq(/** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ _2, /** @src 0:2688:2720  \"type(IAccessControl).interfaceId\" */ shl(224, 0x7965db0b))\n                        /// @src 0:2673:2760  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 6:861:901  \"interfaceId == type(IERC165).interfaceId\" */ eq(_2, /** @src 6:876:901  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                        }\n                        /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                        mstore(_1, iszero(iszero(expr)))\n                        return(_1, 32)\n                    }\n                    case 0x0e246273 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let length := sload(/** @src 9:2646:2657  \"allVestings\" */ 0x01)\n                        /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, length)\n                        return(memPos, 32)\n                    }\n                    case 0x117803e3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, /** @src 9:303:321  \"keccak256(\\\"OWNER\\\")\" */ 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b)\n                        /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                        return(memPos_1, 32)\n                    }\n                    case 0x19dfc573 {\n                        if callvalue() { revert(0, 0) }\n                        let _3 := not(3)\n                        if slt(add(calldatasize(), _3), 32) { revert(0, 0) }\n                        if gt(calldataload(4), 0xffffffffffffffff) { revert(0, 0) }\n                        if slt(add(sub(calldatasize(), calldataload(4)), _3), 0x0100) { revert(0, 0) }\n                        let memPtr := mload(64)\n                        let newFreePtr := add(memPtr, 0x60)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                        let offset := calldataload(add(4, calldataload(4)))\n                        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                        if slt(add(sub(calldatasize(), add(calldataload(4), offset)), _3), 0xa0) { revert(0, 0) }\n                        let value_1 := allocate_memory()\n                        mstore(value_1, calldataload(add(add(calldataload(4), offset), 4)))\n                        mstore(add(value_1, 32), calldataload(add(add(calldataload(4), offset), 36)))\n                        mstore(add(value_1, 64), calldataload(add(add(calldataload(4), offset), 68)))\n                        let offset_1 := calldataload(add(add(calldataload(4), offset), 100))\n                        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(add(add(calldataload(4), offset), offset_1), 35), calldatasize())) { revert(0, 0) }\n                        if gt(calldataload(add(add(add(calldataload(4), offset), offset_1), 4)), 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        let memPtr_1 := mload(64)\n                        if or(gt(add(memPtr_1, and(add(shl(5, calldataload(add(add(add(calldataload(4), offset), offset_1), 4))), 63), not(31))), 0xffffffffffffffff), lt(add(memPtr_1, and(add(shl(5, calldataload(add(add(add(calldataload(4), offset), offset_1), 4))), 63), not(31))), memPtr_1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        mstore(64, add(memPtr_1, and(add(shl(5, calldataload(add(add(add(calldataload(4), offset), offset_1), 4))), 63), not(31))))\n                        let dst := memPtr_1\n                        mstore(memPtr_1, calldataload(add(add(add(calldataload(4), offset), offset_1), 4)))\n                        dst := add(memPtr_1, 32)\n                        if gt(add(add(add(add(calldataload(4), offset), offset_1), shl(5, calldataload(add(add(add(calldataload(4), offset), offset_1), 4)))), 36), calldatasize()) { revert(0, 0) }\n                        let src := add(add(add(calldataload(4), offset), offset_1), 36)\n                        for { }\n                        lt(src, add(add(add(add(calldataload(4), offset), offset_1), shl(5, calldataload(add(add(add(calldataload(4), offset), offset_1), 4)))), 36))\n                        { src := add(src, 32) }\n                        {\n                            mstore(dst, calldataload(src))\n                            dst := add(dst, 32)\n                        }\n                        mstore(add(value_1, 0x60), memPtr_1)\n                        let value_2 := calldataload(add(add(calldataload(4), offset), 132))\n                        if iszero(eq(value_2, iszero(iszero(value_2)))) { revert(0, 0) }\n                        mstore(add(value_1, 128), value_2)\n                        mstore(memPtr, value_1)\n                        if slt(add(sub(calldatasize(), calldataload(4)), not(35)), 0xa0) { revert(0, 0) }\n                        let value_3 := allocate_memory()\n                        mstore(value_3, abi_decode_address(add(calldataload(4), 36)))\n                        mstore(add(value_3, 32), abi_decode_address(add(calldataload(4), 68)))\n                        mstore(add(value_3, 64), abi_decode_address(add(calldataload(4), 100)))\n                        mstore(add(value_3, 0x60), abi_decode_address(add(calldataload(4), 132)))\n                        mstore(add(value_3, 128), abi_decode_address(add(calldataload(4), 164)))\n                        mstore(add(memPtr, 32), value_3)\n                        if slt(add(sub(calldatasize(), calldataload(4)), not(195)), 64) { revert(0, 0) }\n                        let memPtr_2 := mload(64)\n                        let newFreePtr_1 := add(memPtr_2, 64)\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr_2))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        mstore(64, newFreePtr_1)\n                        mstore(memPtr_2, calldataload(add(calldataload(4), 196)))\n                        mstore(add(memPtr_2, 32), calldataload(add(calldataload(4), 228)))\n                        mstore(add(memPtr, 64), memPtr_2)\n                        mstore(0, /** @src 9:303:321  \"keccak256(\\\"OWNER\\\")\" */ 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b)\n                        /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                        mstore(32, 0)\n                        let _4 := keccak256(0, 64)\n                        mstore(0, /** @src 9:1477:1487  \"msg.sender\" */ caller())\n                        /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                        mstore(32, _4)\n                        /// @src 9:3251:3305  \"!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)\"\n                        let expr_1 := /** @src 9:3251:3276  \"!hasRole(OWNER, _address)\" */ iszero(/** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ and(sload(keccak256(0, 64)), 0xff))\n                        /// @src 9:3251:3305  \"!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)\"\n                        if expr_1\n                        {\n                            /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                            mstore(0, /** @src 9:359:377  \"keccak256(\\\"ADMIN\\\")\" */ 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42)\n                            /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                            mstore(32, 0)\n                            let _5 := keccak256(0, 64)\n                            mstore(0, /** @src 9:1477:1487  \"msg.sender\" */ caller())\n                            /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                            mstore(32, _5)\n                            /// @src 9:3251:3305  \"!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)\"\n                            expr_1 := /** @src 9:3280:3305  \"!hasRole(ADMIN, _address)\" */ iszero(/** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ and(sload(keccak256(0, 64)), 0xff))\n                        }\n                        /// @src 9:3247:3340  \"if (!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)) revert Errors.UnauthorizedError()\"\n                        if expr_1\n                        {\n                            /// @src 9:3314:3340  \"Errors.UnauthorizedError()\"\n                            let _6 := /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ mload(64)\n                            /// @src 9:3314:3340  \"Errors.UnauthorizedError()\"\n                            mstore(_6, shl(224, 0x8b5701f7))\n                            revert(_6, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 4)\n                        }\n                        /// @src 9:2966:3026  \"if (_address == address(0)) revert Errors.ZeroAddressError()\"\n                        if /** @src 9:2970:2992  \"_address == address(0)\" */ iszero(/** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ and(mload(/** @src 9:1512:1543  \"_vestingParams.vestingAddresses\" */ mload(/** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ add(memPtr, 32))), sub(shl(160, 1), 1)))\n                        /// @src 9:2966:3026  \"if (_address == address(0)) revert Errors.ZeroAddressError()\"\n                        {\n                            /// @src 9:3001:3026  \"Errors.ZeroAddressError()\"\n                            let _7 := /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ mload(64)\n                            /// @src 9:3001:3026  \"Errors.ZeroAddressError()\"\n                            mstore(_7, shl(224, 0x3efa09af))\n                            revert(_7, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 4)\n                        }\n                        /// @src 9:1676:1809  \"if (vestingParams.defaultVesting.vestingPercentages.length == 0) {...\"\n                        if /** @src 9:1680:1739  \"vestingParams.defaultVesting.vestingPercentages.length == 0\" */ iszero(/** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ mload(/** @src 9:1680:1727  \"vestingParams.defaultVesting.vestingPercentages\" */ mload(add(/** @src 9:1680:1708  \"vestingParams.defaultVesting\" */ mload(memPtr), /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0x60))))\n                        /// @src 9:1676:1809  \"if (vestingParams.defaultVesting.vestingPercentages.length == 0) {...\"\n                        {\n                            /// @src 9:1762:1798  \"Errors.EmptyVestingPercentageError()\"\n                            let _8 := /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ mload(64)\n                            /// @src 9:1762:1798  \"Errors.EmptyVestingPercentageError()\"\n                            mstore(_8, shl(226, 0x09ca6ecd))\n                            revert(_8, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 4)\n                        }\n                        /// @src 9:1818:1941  \"if (vestingParams.defaultVesting.vestingDuration == 0) {...\"\n                        if /** @src 9:1822:1871  \"vestingParams.defaultVesting.vestingDuration == 0\" */ iszero(/** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ mload(/** @src 9:1822:1866  \"vestingParams.defaultVesting.vestingDuration\" */ add(/** @src 9:1822:1850  \"vestingParams.defaultVesting\" */ mload(memPtr), /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 32)))\n                        /// @src 9:1818:1941  \"if (vestingParams.defaultVesting.vestingDuration == 0) {...\"\n                        {\n                            /// @src 9:1894:1930  \"Errors.InvalidVestingDurationError()\"\n                            let _9 := /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ mload(64)\n                            /// @src 9:1894:1930  \"Errors.InvalidVestingDurationError()\"\n                            mstore(_9, shl(225, 0x1467625b))\n                            revert(_9, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 4)\n                        }\n                        /// @src 9:1978:2010  \"new DappadVesting(vestingParams)\"\n                        let _10 := /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ mload(64)\n                        /// @src 9:1978:2010  \"new DappadVesting(vestingParams)\"\n                        let _11 := datasize(\"DappadVesting_3487\")\n                        if or(gt(add(_10, _11), /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0xffffffffffffffff), /** @src 9:1978:2010  \"new DappadVesting(vestingParams)\" */ lt(add(_10, _11), _10))\n                        {\n                            /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        /// @src 9:1978:2010  \"new DappadVesting(vestingParams)\"\n                        datacopy(_10, dataoffset(\"DappadVesting_3487\"), _11)\n                        /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                        mstore(/** @src 9:1978:2010  \"new DappadVesting(vestingParams)\" */ add(_10, _11), /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 32)\n                        let memberValue0 := mload(memPtr)\n                        mstore(add(/** @src 9:1978:2010  \"new DappadVesting(vestingParams)\" */ add(_10, _11), /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 32), 0x0100)\n                        let tail := add(/** @src 9:1978:2010  \"new DappadVesting(vestingParams)\" */ add(_10, _11), /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 448)\n                        mstore(add(/** @src 9:1978:2010  \"new DappadVesting(vestingParams)\" */ add(_10, _11), /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 288), mload(memberValue0))\n                        mstore(add(/** @src 9:1978:2010  \"new DappadVesting(vestingParams)\" */ add(_10, _11), /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 320), mload(add(memberValue0, 32)))\n                        mstore(add(/** @src 9:1978:2010  \"new DappadVesting(vestingParams)\" */ add(_10, _11), /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 352), mload(add(memberValue0, 64)))\n                        let memberValue0_1 := mload(add(memberValue0, 0x60))\n                        mstore(add(/** @src 9:1978:2010  \"new DappadVesting(vestingParams)\" */ add(_10, _11), /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 384), 0xa0)\n                        let pos := tail\n                        let length_1 := mload(memberValue0_1)\n                        mstore(tail, length_1)\n                        pos := add(/** @src 9:1978:2010  \"new DappadVesting(vestingParams)\" */ add(_10, _11), /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 480)\n                        let srcPtr := add(memberValue0_1, 32)\n                        let i := 0\n                        for { } lt(i, length_1) { i := add(i, 1) }\n                        {\n                            mstore(pos, mload(srcPtr))\n                            pos := add(pos, 32)\n                            srcPtr := add(srcPtr, 32)\n                        }\n                        mstore(add(/** @src 9:1978:2010  \"new DappadVesting(vestingParams)\" */ add(_10, _11), /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 416), iszero(iszero(mload(add(memberValue0, 128)))))\n                        let memberValue0_2 := mload(add(memPtr, 32))\n                        mstore(add(/** @src 9:1978:2010  \"new DappadVesting(vestingParams)\" */ add(_10, _11), /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 64), and(mload(memberValue0_2), sub(shl(160, 1), 1)))\n                        mstore(add(/** @src 9:1978:2010  \"new DappadVesting(vestingParams)\" */ add(_10, _11), /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0x60), and(mload(add(memberValue0_2, 32)), sub(shl(160, 1), 1)))\n                        mstore(add(/** @src 9:1978:2010  \"new DappadVesting(vestingParams)\" */ add(_10, _11), /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 128), and(mload(add(memberValue0_2, 64)), sub(shl(160, 1), 1)))\n                        mstore(add(/** @src 9:1978:2010  \"new DappadVesting(vestingParams)\" */ add(_10, _11), /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0xa0), and(mload(add(memberValue0_2, 0x60)), sub(shl(160, 1), 1)))\n                        mstore(add(/** @src 9:1978:2010  \"new DappadVesting(vestingParams)\" */ add(_10, _11), /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 192), and(mload(add(memberValue0_2, 128)), sub(shl(160, 1), 1)))\n                        let memberValue0_3 := mload(add(memPtr, 64))\n                        mstore(add(/** @src 9:1978:2010  \"new DappadVesting(vestingParams)\" */ add(_10, _11), /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 224), mload(memberValue0_3))\n                        mstore(add(/** @src 9:1978:2010  \"new DappadVesting(vestingParams)\" */ add(_10, _11), /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0x0100), mload(add(memberValue0_3, 32)))\n                        /// @src 9:1978:2010  \"new DappadVesting(vestingParams)\"\n                        let expr_address := create(/** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0, /** @src 9:1978:2010  \"new DappadVesting(vestingParams)\" */ _10, sub(pos, _10))\n                        if iszero(expr_address)\n                        {\n                            /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                            let pos_1 := mload(64)\n                            returndatacopy(pos_1, 0, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        let _12 := 1\n                        let oldLen := sload(_12)\n                        if iszero(lt(oldLen, 18446744073709551616))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        sstore(_12, add(oldLen, _12))\n                        let slot, offset_2 := storage_array_index_access_address_dyn(oldLen)\n                        let _13 := sload(slot)\n                        let shiftBits := shl(3, offset_2)\n                        sstore(slot, or(and(_13, not(shl(shiftBits, sub(shl(160, 1), 1)))), shl(shiftBits, and(/** @src 9:2038:2057  \"address(newVesting)\" */ expr_address, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ sub(shl(160, 1), 1)))))\n                        /// @src 9:2102:2130  \"vestingParams.defaultVesting\"\n                        let _mpos := mload(memPtr)\n                        /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                        let _14 := mload(/** @src 9:2102:2143  \"vestingParams.defaultVesting.vestingCount\" */ _mpos)\n                        /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                        let _15 := mload(/** @src 9:2157:2201  \"vestingParams.defaultVesting.vestingDuration\" */ add(_mpos, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 32))\n                        let _16 := mload(/** @src 9:2215:2264  \"vestingParams.defaultVesting.vestingCliffDuration\" */ add(_mpos, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 64))\n                        /// @src 9:2278:2325  \"vestingParams.defaultVesting.vestingPercentages\"\n                        let _mpos_1 := mload(add(_mpos, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0x60))\n                        let cleaned := iszero(iszero(mload(/** @src 9:2339:2373  \"vestingParams.defaultVesting.onTGE\" */ add(_mpos, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 128))))\n                        /// @src 9:2387:2417  \"vestingParams.vestingAddresses\"\n                        let _mpos_2 := mload(/** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ add(memPtr, 32))\n                        let cleaned_1 := and(mload(/** @src 9:2387:2434  \"vestingParams.vestingAddresses.saleTokenAddress\" */ _mpos_2), /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ sub(shl(160, 1), 1))\n                        let cleaned_2 := and(mload(/** @src 9:2448:2498  \"vestingParams.vestingAddresses.saleContractAddress\" */ add(_mpos_2, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 64)), sub(shl(160, 1), 1))\n                        /// @src 9:2074:2535  \"VestingCreated(...\"\n                        let _17 := /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ mload(64)\n                        let tail_1 := add(_17, 0x0100)\n                        mstore(_17, _14)\n                        mstore(add(_17, 32), _15)\n                        mstore(add(_17, 64), _16)\n                        mstore(add(_17, 0x60), 0x0100)\n                        let pos_2 := tail_1\n                        let length_2 := mload(_mpos_1)\n                        mstore(tail_1, length_2)\n                        pos_2 := add(_17, 288)\n                        let srcPtr_1 := add(_mpos_1, 32)\n                        let i_1 := 0\n                        for { } lt(i_1, length_2) { i_1 := add(i_1, _12) }\n                        {\n                            mstore(pos_2, mload(srcPtr_1))\n                            pos_2 := add(pos_2, 32)\n                            srcPtr_1 := add(srcPtr_1, 32)\n                        }\n                        mstore(add(_17, 128), cleaned)\n                        mstore(add(_17, 0xa0), cleaned_1)\n                        mstore(add(_17, 192), cleaned_2)\n                        mstore(add(_17, 224), /** @src 9:2520:2524  \"this\" */ address())\n                        /// @src 9:2074:2535  \"VestingCreated(...\"\n                        log1(_17, sub(pos_2, _17), 0x2ebb92afaf83ff700c8cbb7d86e0d28a975ab60bfa47c9a003c7f01dcb1166c7)\n                        /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, _12)\n                        return(memPos_2, 32)\n                    }\n                    case 0x248a9ca3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, 0)\n                        let _18 := sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ keccak256(0, 64), 1))\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, _18)\n                        return(memPos_3, 32)\n                    }\n                    case 0x2a0acc6a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, /** @src 9:359:377  \"keccak256(\\\"ADMIN\\\")\" */ 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42)\n                        /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                        return(memPos_4, 32)\n                    }\n                    case 0x2f2ff15d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_4 := calldataload(4)\n                        let value1 := abi_decode_address_9881()\n                        mstore(0, value_4)\n                        mstore(32, 0)\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole(/** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ keccak256(0, 64), 1)))\n                        /// @src 0:4330:4355  \"_grantRole(role, account)\"\n                        pop(fun_grantRole(value_4, value1))\n                        /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x36568abe {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1_1 := abi_decode_address_9881()\n                        /// @src 0:5417:5519  \"if (callerConfirmation != _msgSender()) {...\"\n                        if /** @src 0:5421:5455  \"callerConfirmation != _msgSender()\" */ iszero(eq(/** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ and(/** @src 0:5421:5455  \"callerConfirmation != _msgSender()\" */ value1_1, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 4:735:745  \"msg.sender\" */ caller()))\n                        /// @src 0:5417:5519  \"if (callerConfirmation != _msgSender()) {...\"\n                        {\n                            /// @src 0:5478:5508  \"AccessControlBadConfirmation()\"\n                            let _19 := /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ mload(64)\n                            /// @src 0:5478:5508  \"AccessControlBadConfirmation()\"\n                            mstore(_19, shl(225, 0x334bd919))\n                            revert(_19, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 4)\n                        }\n                        /// @src 0:5529:5566  \"_revokeRole(role, callerConfirmation)\"\n                        pop(fun_revokeRole(/** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ calldataload(4), /** @src 0:5529:5566  \"_revokeRole(role, callerConfirmation)\" */ value1_1))\n                        /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x615155dd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_5 := calldataload(4)\n                        /// @src 9:2754:2852  \"if (index >= allVestings.length) {...\"\n                        if /** @src 9:2758:2785  \"index >= allVestings.length\" */ iszero(lt(value_5, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ sload(1)))\n                        /// @src 9:2754:2852  \"if (index >= allVestings.length) {...\"\n                        {\n                            /// @src 9:2808:2841  \"Errors.InvalidVestingIndexError()\"\n                            let _20 := /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ mload(64)\n                            /// @src 9:2808:2841  \"Errors.InvalidVestingIndexError()\"\n                            mstore(_20, shl(224, 0x690cd635))\n                            revert(_20, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 4)\n                        }\n                        /// @src 9:2868:2886  \"allVestings[index]\"\n                        let _21, _22 := storage_array_index_access_address_dyn(value_5)\n                        /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                        let _23 := sload(/** @src 9:2868:2886  \"allVestings[index]\" */ _21)\n                        /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, and(shr(shl(3, _22), _23), sub(shl(160, 1), 1)))\n                        return(memPos_5, 32)\n                    }\n                    case 0x91d14854 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1_2 := abi_decode_address_9881()\n                        mstore(0, calldataload(4))\n                        mstore(32, 0)\n                        let _24 := keccak256(0, 64)\n                        mstore(0, and(value1_2, sub(shl(160, 1), 1)))\n                        mstore(32, _24)\n                        let value_6 := and(sload(keccak256(0, 64)), 0xff)\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, iszero(iszero(value_6)))\n                        return(memPos_6, 32)\n                    }\n                    case 0xa217fddf {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, 0)\n                        return(memPos_7, 32)\n                    }\n                    case 0xbf5a1383 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_7 := calldataload(4)\n                        /// @src 9:384:412  \"address[] public allVestings\"\n                        if iszero(lt(value_7, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ sload(1)))\n                        /// @src 9:384:412  \"address[] public allVestings\"\n                        {\n                            revert(/** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0, 0)\n                        }\n                        /// @src 9:384:412  \"address[] public allVestings\"\n                        let slot_1, offset_3 := storage_array_index_access_address_dyn(value_7)\n                        /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                        let _25 := sload(/** @src 9:384:412  \"address[] public allVestings\" */ slot_1)\n                        /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, and(shr(shl(3, offset_3), _25), sub(shl(160, 1), 1)))\n                        return(memPos_8, 32)\n                    }\n                    case 0xd547741f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_8 := calldataload(4)\n                        let value1_3 := abi_decode_address_9881()\n                        mstore(0, value_8)\n                        mstore(32, 0)\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole(/** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ keccak256(0, 64), 1)))\n                        /// @src 0:4747:4773  \"_revokeRole(role, account)\"\n                        pop(fun_revokeRole(value_8, value1_3))\n                        /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                        return(0, 0)\n                    }\n                }\n                revert(0, 0)\n            }\n            function allocate_memory() -> memPtr\n            {\n                memPtr := mload(64)\n                let newFreePtr := add(memPtr, 0xa0)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_decode_address_9881() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address(offset) -> value\n            {\n                value := calldataload(offset)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function storage_array_index_access_address_dyn(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 9:2021:2032  \"allVestings\" */ 0x01)))\n                /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 9:2021:2032  \"allVestings\" */ 0x01)\n                /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                slot := add(80084422859880547211683076133703299733277748156566366325829078699459944778998, index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @ast-id 93 @src 0:3199:3302  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun_checkRole(var_role)\n            {\n                /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x00)\n                /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                let _1 := keccak256(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0x40)\n                mstore(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 4:735:745  \"msg.sender\" */ caller())\n                /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                mstore(0x20, _1)\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                if /** @src 0:3519:3542  \"!hasRole(role, account)\" */ iszero(/** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0x40)), 0xff))\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    let _2 := /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ mload(0x40)\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(_2, shl(224, 0xe2517d3f))\n                    /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                    mstore(/** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ add(_2, 4), /** @src 4:735:745  \"msg.sender\" */ caller())\n                    /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                    mstore(add(/** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ _2, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 36), var_role)\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(_2, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 68)\n                }\n            }\n            /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_grantRole(var_role, var_account) -> var\n            {\n                /// @src 0:2954:2960  \"_roles\"\n                let _1 := 0x00\n                /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                let _2 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0x40)\n                let _3 := and(var_account, sub(shl(160, 1), 1))\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ _3)\n                mstore(0x20, _2)\n                /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0x40)), 0xff))\n                case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:6466:6478  \"return false\"\n                    var := /** @src 0:2954:2960  \"_roles\" */ _1\n                    /// @src 0:6466:6478  \"return false\"\n                    leave\n                }\n                default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ var_role)\n                    mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                    /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                    let _4 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0x40)\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ _3)\n                    mstore(0x20, _4)\n                    let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0x40)\n                    sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                    /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 0:2954:2960  \"_roles\" */ _1, _1, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, var_role, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ _3, /** @src 4:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:6424:6435  \"return true\"\n                    var := /** @src 0:6347:6351  \"true\" */ 0x01\n                    /// @src 0:6424:6435  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 294 @src 0:6730:7047  \"function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_revokeRole(var_role, var_account) -> var\n            {\n                /// @src 0:2954:2960  \"_roles\"\n                let _1 := 0x00\n                /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                let _2 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0x40)\n                let _3 := and(var_account, sub(shl(160, 1), 1))\n                mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ _3)\n                mstore(0x20, _2)\n                /// @src 0:6824:7041  \"if (hasRole(role, account)) {...\"\n                switch /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0x40)), 0xff)\n                case /** @src 0:6824:7041  \"if (hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:7018:7030  \"return false\"\n                    var := /** @src 0:2954:2960  \"_roles\" */ _1\n                    /// @src 0:7018:7030  \"return false\"\n                    leave\n                }\n                default /// @src 0:6824:7041  \"if (hasRole(role, account)) {...\"\n                {\n                    /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ var_role)\n                    mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                    /// @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\"\n                    let _4 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0x40)\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ _3)\n                    mstore(0x20, _4)\n                    let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 0x40)\n                    sstore(dataSlot, and(sload(dataSlot), not(255)))\n                    /// @src 0:6922:6962  \"RoleRevoked(role, account, _msgSender())\"\n                    log4(/** @src 0:2954:2960  \"_roles\" */ _1, _1, /** @src 0:6922:6962  \"RoleRevoked(role, account, _msgSender())\" */ 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b, var_role, /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ _3, /** @src 4:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:6976:6987  \"return true\"\n                    var := /** @src 9:218:3349  \"contract DappadVestingFactory is AccessControl {...\" */ 1\n                    /// @src 0:6976:6987  \"return true\"\n                    leave\n                }\n            }\n        }\n        /// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 1:\"@openzeppelin/contracts/access/IAccessControl.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 6:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 7:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\", 8:\"contracts/core/DappadVesting.sol\"\n        object \"DappadVesting_3487\" {\n            code {\n                {\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    mstore(64, memoryguard(0x80))\n                    if callvalue() { revert(0, 0) }\n                    let programSize := datasize(\"DappadVesting_3487\")\n                    let argSize := sub(codesize(), programSize)\n                    let memoryDataOffset := allocate_memory(argSize)\n                    codecopy(memoryDataOffset, programSize, argSize)\n                    let _1 := add(memoryDataOffset, argSize)\n                    if slt(sub(_1, memoryDataOffset), 32)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let offset := mload(memoryDataOffset)\n                    if gt(offset, sub(shl(64, 1), 1))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let _2 := add(memoryDataOffset, offset)\n                    let _3 := sub(_1, _2)\n                    if slt(_3, 0x0100)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let memPtr := mload(64)\n                    let newFreePtr := add(memPtr, 0x60)\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                    let offset_1 := mload(_2)\n                    if gt(offset_1, sub(shl(64, 1), 1))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let _4 := add(_2, offset_1)\n                    if slt(sub(_1, _4), 0xa0)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let value := allocate_memory_9855()\n                    mstore(value, mload(_4))\n                    mstore(add(value, 32), mload(add(_4, 32)))\n                    mstore(add(value, 64), mload(add(_4, 64)))\n                    let offset_2 := mload(add(_4, 0x60))\n                    if gt(offset_2, sub(shl(64, 1), 1))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let _5 := add(_4, offset_2)\n                    if iszero(slt(add(_5, 0x1f), _1))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let _6 := mload(_5)\n                    let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_6))\n                    let dst_1 := dst\n                    mstore(dst, _6)\n                    dst := add(dst, 32)\n                    let srcEnd := add(add(_5, shl(5, _6)), 32)\n                    if gt(srcEnd, _1)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let src := add(_5, 32)\n                    for { } lt(src, srcEnd) { src := add(src, 32) }\n                    {\n                        mstore(dst, mload(src))\n                        dst := add(dst, 32)\n                    }\n                    mstore(add(value, 0x60), dst_1)\n                    let value_1 := mload(add(_4, 128))\n                    if iszero(eq(value_1, iszero(iszero(value_1))))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    mstore(add(value, 128), value_1)\n                    mstore(memPtr, value)\n                    if slt(add(_3, not(31)), 0xa0)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let value_2 := allocate_memory_9855()\n                    mstore(value_2, abi_decode_address_fromMemory(add(_2, 32)))\n                    mstore(add(value_2, 32), abi_decode_address_fromMemory(add(_2, 64)))\n                    mstore(add(value_2, 64), abi_decode_address_fromMemory(add(_2, 0x60)))\n                    mstore(add(value_2, 0x60), abi_decode_address_fromMemory(add(_2, 128)))\n                    mstore(add(value_2, 128), abi_decode_address_fromMemory(add(_2, 0xa0)))\n                    mstore(add(memPtr, 32), value_2)\n                    if slt(add(_3, not(191)), 64)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let memPtr_1 := mload(64)\n                    let newFreePtr_1 := add(memPtr_1, 64)\n                    if or(gt(newFreePtr_1, sub(shl(64, 1), 1)), lt(newFreePtr_1, memPtr_1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x24)\n                    }\n                    mstore(64, newFreePtr_1)\n                    mstore(memPtr_1, mload(add(_2, 192)))\n                    mstore(add(memPtr_1, 32), mload(add(_2, 224)))\n                    mstore(add(memPtr, 64), memPtr_1)\n                    /// @src 8:3824:3832  \"_address\"\n                    fun_notZeroAddress(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(mload(/** @src 8:2009:2039  \"vestingParams.vestingAddresses\" */ mload(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ add(memPtr, 32))), sub(shl(160, 1), 1)))\n                    /// @src 8:3824:3832  \"_address\"\n                    fun_notZeroAddress(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(mload(/** @src 8:2082:2135  \"vestingParams.vestingAddresses.factoryContractAddress\" */ add(/** @src 8:2082:2112  \"vestingParams.vestingAddresses\" */ mload(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ add(memPtr, 32)), 32)), sub(shl(160, 1), 1)))\n                    /// @src 8:3824:3832  \"_address\"\n                    fun_notZeroAddress(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(mload(/** @src 8:2161:2204  \"vestingParams.vestingAddresses.ownerAddress\" */ add(/** @src 8:2161:2191  \"vestingParams.vestingAddresses\" */ mload(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ add(memPtr, 32)), 0x60)), sub(shl(160, 1), 1)))\n                    /// @src 8:3824:3832  \"_address\"\n                    fun_notZeroAddress(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(mload(/** @src 8:2230:2273  \"vestingParams.vestingAddresses.adminAddress\" */ add(/** @src 8:2230:2260  \"vestingParams.vestingAddresses\" */ mload(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ add(memPtr, 32)), 128)), sub(shl(160, 1), 1)))\n                    /// @src 8:335:353  \"keccak256(\\\"OWNER\\\")\"\n                    let _7 := 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 8:335:353  \"keccak256(\\\"OWNER\\\")\" */ _7)\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    mstore(32, /** @src -1:-1:-1 */ 0)\n                    /// @src 0:3901:3923  \"_roles[role].adminRole\"\n                    let _8 := add(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 64), /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let _9 := sload(_8)\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(_8, /** @src 8:335:353  \"keccak256(\\\"OWNER\\\")\" */ _7)\n                    /// @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\"\n                    let _10 := 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff\n                    log4(/** @src -1:-1:-1 */ 0, 0, /** @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\" */ _10, /** @src 8:335:353  \"keccak256(\\\"OWNER\\\")\" */ _7, /** @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\" */ _9, /** @src 8:335:353  \"keccak256(\\\"OWNER\\\")\" */ _7)\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    let _11 := 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ _11)\n                    /// @src 0:3901:3923  \"_roles[role].adminRole\"\n                    let _12 := add(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 64), /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let _13 := sload(_12)\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(_12, /** @src 8:335:353  \"keccak256(\\\"OWNER\\\")\" */ _7)\n                    /// @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\"\n                    log4(/** @src -1:-1:-1 */ 0, 0, /** @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\" */ _10, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ _11, /** @src 0:5886:5938  \"RoleAdminChanged(role, previousAdminRole, adminRole)\" */ _13, /** @src 8:335:353  \"keccak256(\\\"OWNER\\\")\" */ _7)\n                    /// @src 8:2365:2427  \"_grantRole(OWNER, vestingParams.vestingAddresses.ownerAddress)\"\n                    pop(fun_grantRole_9860(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(mload(/** @src 8:2383:2426  \"vestingParams.vestingAddresses.ownerAddress\" */ add(/** @src 8:2383:2413  \"vestingParams.vestingAddresses\" */ mload(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ add(memPtr, 32)), 0x60)), sub(shl(160, 1), 1))))\n                    /// @src 8:2437:2499  \"_grantRole(ADMIN, vestingParams.vestingAddresses.adminAddress)\"\n                    pop(fun_grantRole(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(mload(/** @src 8:2455:2498  \"vestingParams.vestingAddresses.adminAddress\" */ add(/** @src 8:2455:2485  \"vestingParams.vestingAddresses\" */ mload(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ add(memPtr, 32)), 128)), sub(shl(160, 1), 1))))\n                    /// @src 8:2518:2626  \"if (vestingParams.defaultVesting.vestingPercentages.length == 0) revert Errors.EmptyVestingPercentageError()\"\n                    if /** @src 8:2522:2581  \"vestingParams.defaultVesting.vestingPercentages.length == 0\" */ iszero(/** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ mload(/** @src 8:2522:2569  \"vestingParams.defaultVesting.vestingPercentages\" */ mload(add(/** @src 8:2522:2550  \"vestingParams.defaultVesting\" */ mload(memPtr), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x60))))\n                    /// @src 8:2518:2626  \"if (vestingParams.defaultVesting.vestingPercentages.length == 0) revert Errors.EmptyVestingPercentageError()\"\n                    {\n                        /// @src 8:2590:2626  \"Errors.EmptyVestingPercentageError()\"\n                        let _14 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                        /// @src 8:2590:2626  \"Errors.EmptyVestingPercentageError()\"\n                        mstore(_14, shl(226, 0x09ca6ecd))\n                        revert(_14, 4)\n                    }\n                    /// @src 8:2636:2734  \"if (vestingParams.defaultVesting.vestingDuration <= 0) revert Errors.InvalidVestingDurationError()\"\n                    if /** @src 8:2640:2689  \"vestingParams.defaultVesting.vestingDuration <= 0\" */ iszero(/** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ mload(/** @src 8:2640:2684  \"vestingParams.defaultVesting.vestingDuration\" */ add(/** @src 8:2640:2668  \"vestingParams.defaultVesting\" */ mload(memPtr), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32)))\n                    /// @src 8:2636:2734  \"if (vestingParams.defaultVesting.vestingDuration <= 0) revert Errors.InvalidVestingDurationError()\"\n                    {\n                        /// @src 8:2698:2734  \"Errors.InvalidVestingDurationError()\"\n                        let _15 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                        /// @src 8:2698:2734  \"Errors.InvalidVestingDurationError()\"\n                        mstore(_15, shl(225, 0x1467625b))\n                        revert(_15, 4)\n                    }\n                    /// @src 8:2762:2790  \"vestingParams.defaultVesting\"\n                    let _16 := mload(memPtr)\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ mload(_16))\n                    sstore(2, mload(add(_16, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32)))\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(3, mload(add(_16, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 64)))\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    let _17 := mload(add(_16, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x60))\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    let length := mload(_17)\n                    if gt(length, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(64, 1), 1))\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    {\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 4, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x24)\n                    }\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    if gt(length, 18446744073709551616)\n                    {\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 4, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x24)\n                    }\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    let oldLen := sload(4)\n                    sstore(4, length)\n                    if lt(length, oldLen)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 4)\n                        let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32)\n                        /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                        let start := add(data, length)\n                        for { }\n                        lt(start, add(data, oldLen))\n                        {\n                            start := add(start, /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n                        }\n                        /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                        {\n                            sstore(start, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    let srcPtr := add(_17, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32)\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 4)\n                    let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32)\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    for { }\n                    lt(i, length)\n                    {\n                        i := add(i, /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n                    }\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    {\n                        let _18 := mload(srcPtr)\n                        srcPtr := add(srcPtr, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32)\n                        /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                        sstore(add(data_1, i), _18)\n                    }\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let _19 := iszero(iszero(/** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ mload(add(_16, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 128))))\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    let value_3 := and(sload(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 5), /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ not(255))\n                    sstore(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 5, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ or(value_3, and(_19, 255)))\n                    /// @src 8:2828:2858  \"vestingParams.vestingAddresses\"\n                    let _mpos := mload(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ add(memPtr, 32))\n                    let cleaned := and(mload(/** @src 8:2828:2875  \"vestingParams.vestingAddresses.saleTokenAddress\" */ _mpos), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1))\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    let _20 := not(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1))\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(/** @src 8:2801:2876  \"saleToken = IERC20Extented(vestingParams.vestingAddresses.saleTokenAddress)\" */ 0x12, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ or(and(sload(/** @src 8:2801:2876  \"saleToken = IERC20Extented(vestingParams.vestingAddresses.saleTokenAddress)\" */ 0x12), /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ _20), cleaned))\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let cleaned_1 := and(mload(/** @src 8:2891:2941  \"vestingParams.vestingAddresses.saleContractAddress\" */ add(_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 64)), sub(shl(160, 1), 1))\n                    /// @src 8:2887:3060  \"if (vestingParams.vestingAddresses.saleContractAddress != address(0)) {...\"\n                    if /** @src 8:2891:2955  \"vestingParams.vestingAddresses.saleContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ cleaned_1))\n                    /// @src 8:2887:3060  \"if (vestingParams.vestingAddresses.saleContractAddress != address(0)) {...\"\n                    {\n                        /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                        sstore(/** @src 8:2971:3049  \"saleContract = IDappadSale(vestingParams.vestingAddresses.saleContractAddress)\" */ 0x13, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ or(and(sload(/** @src 8:2971:3049  \"saleContract = IDappadSale(vestingParams.vestingAddresses.saleContractAddress)\" */ 0x13), /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ _20), cleaned_1))\n                    }\n                    /// @src 8:3088:3117  \"vestingParams.vestingSettings\"\n                    let _21 := mload(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ add(memPtr, 64))\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(/** @src 8:3070:3117  \"vestingSettings = vestingParams.vestingSettings\" */ 0x06, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ mload(_21))\n                    sstore(7, mload(add(_21, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32)))\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(/** @src 8:3136:3185  \"vestingAddresses = vestingParams.vestingAddresses\" */ 0x08, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ or(and(sload(/** @src 8:3136:3185  \"vestingAddresses = vestingParams.vestingAddresses\" */ 0x08), /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ _20), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ cleaned))\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(9, or(and(sload(9), _20), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(mload(/** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ add(_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32)), sub(shl(160, 1), 1))))\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(10, or(and(sload(10), _20), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ cleaned_1))\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(11, or(and(sload(11), _20), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(mload(/** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ add(_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x60)), sub(shl(160, 1), 1))))\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    sstore(12, or(and(sload(12), _20), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(mload(/** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ add(_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 128)), sub(shl(160, 1), 1))))\n                    /// @src 8:3196:3230  \"uint256 totalVestingPercentage = 0\"\n                    let var_totalVestingPercentage := /** @src -1:-1:-1 */ 0\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    let length_1 := mload(/** @src 8:3291:3338  \"vestingParams.defaultVesting.vestingPercentages\" */ mload(add(/** @src 8:3291:3319  \"vestingParams.defaultVesting\" */ mload(memPtr), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x60)))\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    let memPtr_2 := allocate_memory(array_allocation_size_array_uint256_dyn(length_1))\n                    mstore(memPtr_2, length_1)\n                    let dataSize := array_allocation_size_array_uint256_dyn(length_1)\n                    let dataStart := add(memPtr_2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32)\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    calldatacopy(dataStart, calldatasize(), add(dataSize, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ not(31)))\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    let length_2 := mload(memPtr_2)\n                    if gt(length_2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(64, 1), 1))\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    {\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 4, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x24)\n                    }\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    if gt(length_2, 18446744073709551616)\n                    {\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 4, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x24)\n                    }\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    let oldLen_1 := sload(4)\n                    sstore(4, length_2)\n                    if lt(length_2, oldLen_1)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 4)\n                        let data_2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32)\n                        /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                        let _22 := add(data_2, oldLen_1)\n                        let start_1 := add(data_2, length_2)\n                        for { }\n                        lt(start_1, _22)\n                        {\n                            start_1 := add(start_1, /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n                        }\n                        /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                        {\n                            sstore(start_1, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    let srcPtr_1 := dataStart\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 4)\n                    let data_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32)\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    let i_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    for { }\n                    lt(i_1, length_2)\n                    {\n                        i_1 := add(i_1, /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n                    }\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    {\n                        let _23 := mload(srcPtr_1)\n                        srcPtr_1 := add(srcPtr_1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32)\n                        /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                        sstore(add(data_3, i_1), _23)\n                    }\n                    /// @src 8:3369:3382  \"uint256 i = 0\"\n                    let var_i := /** @src -1:-1:-1 */ 0\n                    /// @src 8:3365:3653  \"for(uint256 i = 0; i < vestingParams.defaultVesting.vestingPercentages.length; i++) {...\"\n                    for { }\n                    /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1\n                    /// @src 8:3369:3382  \"uint256 i = 0\"\n                    {\n                        /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                        if eq(var_i, not(0))\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                            mstore(4, 0x11)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 0x24)\n                        }\n                        /// @src 8:3444:3447  \"i++\"\n                        var_i := /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ add(var_i, /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1)\n                    }\n                    /// @src 8:3444:3447  \"i++\"\n                    {\n                        /// @src 8:3388:3435  \"vestingParams.defaultVesting.vestingPercentages\"\n                        let _mpos_1 := mload(add(/** @src 8:3388:3416  \"vestingParams.defaultVesting\" */ mload(memPtr), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x60))\n                        /// @src 8:3384:3442  \"i < vestingParams.defaultVesting.vestingPercentages.length\"\n                        if iszero(lt(var_i, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ mload(/** @src 8:3388:3442  \"vestingParams.defaultVesting.vestingPercentages.length\" */ _mpos_1)))\n                        /// @src 8:3384:3442  \"i < vestingParams.defaultVesting.vestingPercentages.length\"\n                        { break }\n                        /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                        let _24 := mload(/** @src 8:3502:3552  \"vestingParams.defaultVesting.vestingPercentages[i]\" */ memory_array_index_access_uint256_dyn(_mpos_1, var_i))\n                        /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                        if iszero(lt(var_i, sload(4)))\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                            mstore(4, 0x32)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 0x24)\n                        }\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 4)\n                        sstore(add(keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32), /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ var_i), _24)\n                        let sum := add(var_totalVestingPercentage, mload(/** @src 8:3592:3642  \"vestingParams.defaultVesting.vestingPercentages[i]\" */ memory_array_index_access_uint256_dyn(/** @src 8:3592:3639  \"vestingParams.defaultVesting.vestingPercentages\" */ mload(add(/** @src 8:3592:3620  \"vestingParams.defaultVesting\" */ mload(memPtr), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x60)), /** @src 8:3592:3642  \"vestingParams.defaultVesting.vestingPercentages[i]\" */ var_i)))\n                        /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                        if gt(var_totalVestingPercentage, sum)\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                            /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                            mstore(4, 0x11)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 0x24)\n                        }\n                        /// @src 8:3566:3642  \"totalVestingPercentage += vestingParams.defaultVesting.vestingPercentages[i]\"\n                        var_totalVestingPercentage := sum\n                    }\n                    /// @src 8:3663:3743  \"if (totalVestingPercentage != 10000) revert Errors.TotalVestingPercentageError()\"\n                    if /** @src 8:3667:3698  \"totalVestingPercentage != 10000\" */ iszero(eq(var_totalVestingPercentage, /** @src 8:3693:3698  \"10000\" */ 0x2710))\n                    /// @src 8:3663:3743  \"if (totalVestingPercentage != 10000) revert Errors.TotalVestingPercentageError()\"\n                    {\n                        /// @src 8:3707:3743  \"Errors.TotalVestingPercentageError()\"\n                        let _25 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                        /// @src 8:3707:3743  \"Errors.TotalVestingPercentageError()\"\n                        mstore(_25, shl(225, 0x74b8a881))\n                        revert(_25, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 4)\n                    }\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let _26 := mload(64)\n                    let _27 := datasize(\"DappadVesting_3487_deployed\")\n                    codecopy(_26, dataoffset(\"DappadVesting_3487_deployed\"), _27)\n                    return(_26, _27)\n                }\n                function allocate_memory_9855() -> memPtr\n                {\n                    memPtr := mload(64)\n                    let newFreePtr := add(memPtr, 0xa0)\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                function allocate_memory(size) -> memPtr\n                {\n                    memPtr := mload(64)\n                    let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                function array_allocation_size_array_uint256_dyn(length) -> size\n                {\n                    if gt(length, sub(shl(64, 1), 1))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    size := add(shl(5, length), 0x20)\n                }\n                function abi_decode_address_fromMemory(offset) -> value\n                {\n                    value := mload(offset)\n                    if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                }\n                /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                function memory_array_index_access_uint256_dyn(baseRef, index) -> addr\n                {\n                    if iszero(lt(index, mload(baseRef)))\n                    {\n                        mstore(0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                        /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                        mstore(4, 0x32)\n                        revert(0, 0x24)\n                    }\n                    addr := add(add(baseRef, shl(5, index)), 32)\n                }\n                /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n                function fun_grantRole_9860(var_account) -> var_\n                {\n                    /// @src 8:335:353  \"keccak256(\\\"OWNER\\\")\"\n                    let _1 := 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b\n                    /// @src 0:2954:2960  \"_roles\"\n                    let _2 := 0x00\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:335:353  \"keccak256(\\\"OWNER\\\")\" */ _1)\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _2)\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let _3 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                    let _4 := and(var_account, sub(shl(160, 1), 1))\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4)\n                    mstore(0x20, _3)\n                    /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                    switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)), 0xff))\n                    case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                        /// @src 0:6466:6478  \"return false\"\n                        var_ := /** @src 0:2954:2960  \"_roles\" */ _2\n                        /// @src 0:6466:6478  \"return false\"\n                        leave\n                    }\n                    default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                    {\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:335:353  \"keccak256(\\\"OWNER\\\")\" */ _1)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _2)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _5 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                        mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4)\n                        mstore(0x20, _5)\n                        let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                        /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                        sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                        /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                        log4(/** @src 0:2954:2960  \"_roles\" */ _2, _2, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 8:335:353  \"keccak256(\\\"OWNER\\\")\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4, /** @src 4:735:745  \"msg.sender\" */ caller())\n                        /// @src 0:6424:6435  \"return true\"\n                        var_ := /** @src 0:6347:6351  \"true\" */ 0x01\n                        /// @src 0:6424:6435  \"return true\"\n                        leave\n                    }\n                }\n                /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n                function fun_grantRole(var_account) -> var\n                {\n                    /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                    let _1 := 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n                    /// @src 0:2954:2960  \"_roles\"\n                    let _2 := 0x00\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ _1)\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _2)\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    let _3 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                    let _4 := and(var_account, sub(shl(160, 1), 1))\n                    mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4)\n                    mstore(0x20, _3)\n                    /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                    switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)), 0xff))\n                    case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                        /// @src 0:6466:6478  \"return false\"\n                        var := /** @src 0:2954:2960  \"_roles\" */ _2\n                        /// @src 0:6466:6478  \"return false\"\n                        leave\n                    }\n                    default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                    {\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ _1)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _2)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _5 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                        mstore(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4)\n                        mstore(0x20, _5)\n                        let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                        /// @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\"\n                        sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                        /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                        log4(/** @src 0:2954:2960  \"_roles\" */ _2, _2, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4, /** @src 4:735:745  \"msg.sender\" */ caller())\n                        /// @src 0:6424:6435  \"return true\"\n                        var := /** @src 0:6347:6351  \"true\" */ 0x01\n                        /// @src 0:6424:6435  \"return true\"\n                        leave\n                    }\n                }\n                /// @ast-id 3415 @src 8:21889:22023  \"function _notZeroAddress(address _address) internal pure {...\"\n                function fun_notZeroAddress(var_address)\n                {\n                    /// @src 8:21956:22016  \"if (_address == address(0)) revert Errors.ZeroAddressError()\"\n                    if /** @src 8:21960:21982  \"_address == address(0)\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(/** @src 8:21960:21982  \"_address == address(0)\" */ var_address, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    /// @src 8:21956:22016  \"if (_address == address(0)) revert Errors.ZeroAddressError()\"\n                    {\n                        /// @src 8:21991:22016  \"Errors.ZeroAddressError()\"\n                        let _1 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                        /// @src 8:21991:22016  \"Errors.ZeroAddressError()\"\n                        mstore(_1, shl(224, 0x3efa09af))\n                        revert(_1, 4)\n                    }\n                }\n            }\n            /// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 6:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 8:\"contracts/core/DappadVesting.sol\"\n            object \"DappadVesting_3487_deployed\" {\n                code {\n                    {\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _1 := memoryguard(0x80)\n                        mstore(64, _1)\n                        if iszero(lt(calldatasize(), 4))\n                        {\n                            switch shr(224, calldataload(0))\n                            case 0x01ffc9a7 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value := calldataload(4)\n                                let _2 := and(value, shl(224, 0xffffffff))\n                                if iszero(eq(value, _2)) { revert(0, 0) }\n                                /// @src 0:2673:2760  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                                let expr := /** @src 0:2673:2720  \"interfaceId == type(IAccessControl).interfaceId\" */ eq(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _2, /** @src 0:2688:2720  \"type(IAccessControl).interfaceId\" */ shl(224, 0x7965db0b))\n                                /// @src 0:2673:2760  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                                if iszero(expr)\n                                {\n                                    expr := /** @src 6:861:901  \"interfaceId == type(IERC165).interfaceId\" */ eq(_2, /** @src 6:876:901  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                                }\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                mstore(_1, iszero(iszero(expr)))\n                                return(_1, 32)\n                            }\n                            case 0x117803e3 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPos := mload(64)\n                                mstore(memPos, /** @src 8:335:353  \"keccak256(\\\"OWNER\\\")\" */ 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                return(memPos, 32)\n                            }\n                            case 0x17a76955 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let _3 := sload(/** @src 8:21576:21593  \"vestingStatistics\" */ 0x0d)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let memPos_1 := mload(64)\n                                mstore(memPos_1, _3)\n                                return(memPos_1, 32)\n                            }\n                            case 0x1ac7eaf5 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let pos := mload(64)\n                                let pos_1 := pos\n                                let length := sload(4)\n                                mstore(pos, length)\n                                let _4 := 0x20\n                                pos := add(pos, _4)\n                                mstore(0, 4)\n                                let srcPtr := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                                let i := 0\n                                for { } lt(i, length) { i := add(i, 1) }\n                                {\n                                    mstore(pos, sload(srcPtr))\n                                    pos := add(pos, _4)\n                                    srcPtr := add(srcPtr, 1)\n                                }\n                                finalize_allocation(pos_1, sub(pos, pos_1))\n                                let memPos_2 := mload(64)\n                                mstore(memPos_2, _4)\n                                return(memPos_2, sub(abi_encode_array_uint256_dyn(pos_1, add(memPos_2, _4)), memPos_2))\n                            }\n                            case 0x248a9ca3 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, calldataload(4))\n                                mstore(32, 0)\n                                let _5 := sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ keccak256(0, 64), 1))\n                                let memPos_3 := mload(64)\n                                mstore(memPos_3, _5)\n                                return(memPos_3, 32)\n                            }\n                            case 0x274dab5a {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                /// @src 8:20707:20714  \"uint256\"\n                                let var := modifier_notZeroAddress_37971(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ abi_decode_address())\n                                let memPos_4 := mload(64)\n                                mstore(memPos_4, var)\n                                return(memPos_4, 32)\n                            }\n                            case 0x2a0acc6a {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPos_5 := mload(64)\n                                mstore(memPos_5, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                return(memPos_5, 32)\n                            }\n                            case 0x2dee1fe8 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let cleaned := and(sload(/** @src 8:21705:21721  \"vestingAddresses\" */ 0x08), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1))\n                                let memPos_6 := mload(64)\n                                mstore(memPos_6, cleaned)\n                                return(memPos_6, 32)\n                            }\n                            case 0x2f2ff15d {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value_1 := calldataload(4)\n                                let value1 := abi_decode_address_37972()\n                                mstore(0, value_1)\n                                mstore(32, 0)\n                                /// @src 0:2475:2479  \"role\"\n                                fun_checkRole(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ keccak256(0, 64), 1)))\n                                /// @src 0:4330:4355  \"_grantRole(role, account)\"\n                                pop(fun_grantRole(value_1, value1))\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                return(0, 0)\n                            }\n                            case 0x334aa9f1 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 160) { revert(0, 0) }\n                                let memPtr := mload(64)\n                                finalize_allocation_37973(memPtr)\n                                mstore(memPtr, abi_decode_address())\n                                let _6 := abi_decode_address_37972()\n                                let _7 := add(memPtr, 32)\n                                mstore(_7, _6)\n                                let value_2 := calldataload(68)\n                                let _8 := sub(shl(160, 1), 1)\n                                if iszero(eq(value_2, and(value_2, _8))) { revert(0, 0) }\n                                let _9 := add(memPtr, 64)\n                                mstore(_9, value_2)\n                                let value_3 := calldataload(100)\n                                if iszero(eq(value_3, and(value_3, _8))) { revert(0, 0) }\n                                let _10 := add(memPtr, 96)\n                                mstore(_10, value_3)\n                                let value_4 := calldataload(132)\n                                if iszero(eq(value_4, and(value_4, _8))) { revert(0, 0) }\n                                let _11 := add(memPtr, 128)\n                                mstore(_11, value_4)\n                                /// @src 8:4020:4028  \"_address\"\n                                fun_onlyOwnerOrAdmin(/** @src 8:13218:13228  \"msg.sender\" */ caller())\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let cleaned_1 := and(mload(memPtr), _8)\n                                let _12 := shl(160, 0xffffffffffffffffffffffff)\n                                sstore(/** @src 8:13255:13293  \"vestingAddresses = newVestingAddresses\" */ 0x08, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ or(and(sload(/** @src 8:13255:13293  \"vestingAddresses = newVestingAddresses\" */ 0x08), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _12), cleaned_1))\n                                sstore(9, or(and(sload(9), _12), and(mload(_7), _8)))\n                                let cleaned_2 := and(mload(_9), _8)\n                                sstore(10, or(and(sload(10), _12), cleaned_2))\n                                sstore(11, or(and(sload(11), _12), and(mload(_10), _8)))\n                                sstore(12, or(and(sload(12), _12), and(mload(_11), _8)))\n                                /// @src 8:13304:13449  \"if (newVestingAddresses.saleTokenAddress != address(0)) {...\"\n                                if /** @src 8:13308:13358  \"newVestingAddresses.saleTokenAddress != address(0)\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ cleaned_1))\n                                /// @src 8:13304:13449  \"if (newVestingAddresses.saleTokenAddress != address(0)) {...\"\n                                {\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    sstore(/** @src 8:13374:13438  \"saleToken = IERC20Extented(newVestingAddresses.saleTokenAddress)\" */ 0x12, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ or(and(sload(/** @src 8:13374:13438  \"saleToken = IERC20Extented(newVestingAddresses.saleTokenAddress)\" */ 0x12), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _12), cleaned_1))\n                                }\n                                /// @src 8:13459:13610  \"if (newVestingAddresses.saleContractAddress != address(0)) {...\"\n                                if /** @src 8:13463:13516  \"newVestingAddresses.saleContractAddress != address(0)\" */ iszero(iszero(cleaned_2))\n                                /// @src 8:13459:13610  \"if (newVestingAddresses.saleContractAddress != address(0)) {...\"\n                                {\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    sstore(/** @src 8:13532:13599  \"saleContract = IDappadSale(newVestingAddresses.saleContractAddress)\" */ 0x13, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ or(and(sload(/** @src 8:13532:13599  \"saleContract = IDappadSale(newVestingAddresses.saleContractAddress)\" */ 0x13), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _12), cleaned_2))\n                                }\n                                /// @src 8:13625:13669  \"VestingAddressesUpdated(newVestingAddresses)\"\n                                let _13 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                mstore(_13, cleaned_1)\n                                mstore(add(_13, 32), and(mload(_7), _8))\n                                mstore(add(_13, 64), and(mload(_9), _8))\n                                mstore(add(_13, 96), and(mload(_10), _8))\n                                mstore(add(_13, 128), and(mload(_11), _8))\n                                /// @src 8:13625:13669  \"VestingAddressesUpdated(newVestingAddresses)\"\n                                log1(_13, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 160, /** @src 8:13625:13669  \"VestingAddressesUpdated(newVestingAddresses)\" */ 0xb2405cc84542f567f9b670db7d7ec04b9907b651cddfdfcd11f8474cb8f16e79)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let memPos_7 := mload(64)\n                                mstore(memPos_7, 1)\n                                return(memPos_7, 32)\n                            }\n                            case 0x36568abe {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value1_1 := abi_decode_address_37972()\n                                /// @src 0:5417:5519  \"if (callerConfirmation != _msgSender()) {...\"\n                                if /** @src 0:5421:5455  \"callerConfirmation != _msgSender()\" */ iszero(eq(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(/** @src 0:5421:5455  \"callerConfirmation != _msgSender()\" */ value1_1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 4:735:745  \"msg.sender\" */ caller()))\n                                /// @src 0:5417:5519  \"if (callerConfirmation != _msgSender()) {...\"\n                                {\n                                    /// @src 0:5478:5508  \"AccessControlBadConfirmation()\"\n                                    let _14 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 0:5478:5508  \"AccessControlBadConfirmation()\"\n                                    mstore(_14, shl(225, 0x334bd919))\n                                    revert(_14, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                }\n                                /// @src 0:5529:5566  \"_revokeRole(role, callerConfirmation)\"\n                                pop(fun_revokeRole(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ calldataload(4), /** @src 0:5529:5566  \"_revokeRole(role, callerConfirmation)\" */ value1_1))\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                return(0, 0)\n                            }\n                            case 0x3c8ffc64 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let _15 := sload(/** @src 8:466:519  \"IDappadVesting.VestingSettings public vestingSettings\" */ 6)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let _16 := sload(/** @src 8:466:519  \"IDappadVesting.VestingSettings public vestingSettings\" */ 7)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let memPos_8 := mload(64)\n                                mstore(memPos_8, _15)\n                                mstore(add(memPos_8, 32), _16)\n                                return(memPos_8, 64)\n                            }\n                            case 0x3e1043bf {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value0 := abi_decode_address()\n                                /// @src 8:3824:3832  \"_address\"\n                                fun_notZeroAddress(value0)\n                                /// @src 8:3843:3844  \"_\"\n                                let _17 := fun_getNextUnlockDate_inner(value0)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let memPos_9 := mload(64)\n                                mstore(memPos_9, _17)\n                                return(memPos_9, 32)\n                            }\n                            case 0x50ef5d4a {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_1 := abi_decode_address()\n                                let value_5 := calldataload(36)\n                                /// @src 8:4020:4028  \"_address\"\n                                fun_onlyOwnerOrAdmin(/** @src 8:9104:9114  \"msg.sender\" */ caller())\n                                /// @src 8:9141:9192  \"if (amount == 0) revert Errors.InvalidAmountError()\"\n                                if /** @src 8:9145:9156  \"amount == 0\" */ iszero(value_5)\n                                /// @src 8:9141:9192  \"if (amount == 0) revert Errors.InvalidAmountError()\"\n                                {\n                                    /// @src 8:9165:9192  \"Errors.InvalidAmountError()\"\n                                    let _18 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:9165:9192  \"Errors.InvalidAmountError()\"\n                                    mstore(_18, shl(227, 0x0f51ac85))\n                                    revert(_18, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                }\n                                mstore(0, and(value0_1, sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 8:9203:9220  \"investmentAmounts\" */ 0x11)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                sstore(keccak256(0, 64), value_5)\n                                /// @src 8:9258:9306  \"UserInvestmentAmountUpdated(userAddress, amount)\"\n                                let _19 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                /// @src 8:9258:9306  \"UserInvestmentAmountUpdated(userAddress, amount)\"\n                                log1(_19, sub(abi_encode_address_uint256(_19, value0_1, value_5), _19), 0x2a0deec9b25e9145e93f5ac49843d67610cc09e31d9010fdaa4bf410888a259a)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let memPos_10 := mload(64)\n                                mstore(memPos_10, 1)\n                                return(memPos_10, 32)\n                            }\n                            case 0x5410c77b {\n                                if callvalue() { revert(0, 0) }\n                                let _20 := 32\n                                if slt(add(calldatasize(), not(3)), _20) { revert(0, 0) }\n                                let value0_2 := abi_decode_address()\n                                /// @src 8:3824:3832  \"_address\"\n                                fun_notZeroAddress(value0_2)\n                                /// @src 8:18809:18870  \"IDappadVesting.Vesting memory currentVesting = defaultVesting\"\n                                let var_currentVesting_mpos := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting_37989()\n                                let _21 := and(value0_2, sub(shl(160, 1), 1))\n                                mstore(0, _21)\n                                mstore(_20, /** @src 8:18885:18899  \"customVestings\" */ 0x0f)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let dataSlot := keccak256(0, 64)\n                                /// @src 8:18881:19000  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                                if /** @src 8:18885:18929  \"customVestings[userAddress].vestingCount > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(dataSlot)))\n                                /// @src 8:18881:19000  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                                {\n                                    /// @src 8:18945:18989  \"currentVesting = customVestings[userAddress]\"\n                                    var_currentVesting_mpos := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting(dataSlot)\n                                }\n                                /// @src 8:19018:19049  \"uint256 unlockedTokenAmount = 0\"\n                                let var_unlockedTokenAmount := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                /// @src 8:19092:19130  \"getUserTotalVestingAmount(userAddress)\"\n                                let expr_1 := /** @src 8:13809:13816  \"uint256\" */ modifier_notZeroAddress(/** @src 8:19092:19130  \"getUserTotalVestingAmount(userAddress)\" */ value0_2)\n                                /// @src 8:19146:19159  \"uint256 i = 0\"\n                                let var_i := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                /// @src 8:19141:19426  \"for (uint256 i = 0; i < currentVesting.vestingCount; i++) {...\"\n                                for { }\n                                /** @src 8:18856:18870  \"defaultVesting\" */ 0x01\n                                /// @src 8:19146:19159  \"uint256 i = 0\"\n                                {\n                                    /// @src 8:19194:19197  \"i++\"\n                                    var_i := increment_uint256(var_i)\n                                }\n                                {\n                                    /// @src 8:19161:19192  \"i < currentVesting.vestingCount\"\n                                    if iszero(lt(var_i, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:19165:19192  \"currentVesting.vestingCount\" */ var_currentVesting_mpos)))\n                                    /// @src 8:19161:19192  \"i < currentVesting.vestingCount\"\n                                    { break }\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    mstore(0, _21)\n                                    mstore(_20, /** @src 8:19218:19232  \"vestingClaimed\" */ 0x10)\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    let dataSlot_1 := keccak256(0, 64)\n                                    mstore(0, var_i)\n                                    mstore(_20, dataSlot_1)\n                                    /// @src 8:19217:19287  \"!vestingClaimed[userAddress][i] && getVestingClaimable(userAddress, i)\"\n                                    let expr_2 := /** @src 8:19217:19248  \"!vestingClaimed[userAddress][i]\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(0, 64)), 0xff))\n                                    /// @src 8:19217:19287  \"!vestingClaimed[userAddress][i] && getVestingClaimable(userAddress, i)\"\n                                    if expr_2\n                                    {\n                                        expr_2 := /** @src 8:19252:19287  \"getVestingClaimable(userAddress, i)\" */ fun_getVestingClaimable(value0_2, var_i)\n                                    }\n                                    /// @src 8:19213:19416  \"if (!vestingClaimed[userAddress][i] && getVestingClaimable(userAddress, i)) {...\"\n                                    if expr_2\n                                    {\n                                        /// @src 8:19307:19401  \"unlockedTokenAmount += (userTotalVestingAmount * currentVesting.vestingPercentages[i]) / 10000\"\n                                        var_unlockedTokenAmount := checked_add_uint256(var_unlockedTokenAmount, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ div(/** @src 8:19331:19392  \"userTotalVestingAmount * currentVesting.vestingPercentages[i]\" */ checked_mul_uint256(expr_1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:19356:19392  \"currentVesting.vestingPercentages[i]\" */ memory_array_index_access_uint256_dyn(/** @src 8:19356:19389  \"currentVesting.vestingPercentages\" */ mload(add(var_currentVesting_mpos, 96)), /** @src 8:19356:19392  \"currentVesting.vestingPercentages[i]\" */ var_i))), /** @src 8:19396:19401  \"10000\" */ 0x2710))\n                                    }\n                                }\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let memPos_11 := mload(64)\n                                mstore(memPos_11, var_unlockedTokenAmount)\n                                return(memPos_11, _20)\n                            }\n                            case 0x5679a0ed {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_3 := abi_decode_address()\n                                let ret := fun_getVestingClaimable(value0_3, calldataload(36))\n                                let memPos_12 := mload(64)\n                                mstore(memPos_12, iszero(iszero(ret)))\n                                return(memPos_12, 32)\n                            }\n                            case 0x63b8476b {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let cleaned_3 := and(sload(/** @src 8:21837:21876  \"vestingAddresses.factoryContractAddress\" */ 9), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1))\n                                let memPos_13 := mload(64)\n                                mstore(memPos_13, cleaned_3)\n                                return(memPos_13, 32)\n                            }\n                            case 0x75420c99 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value_6 := calldataload(4)\n                                /// @src 8:4020:4028  \"_address\"\n                                fun_onlyOwnerOrAdmin(/** @src 8:12937:12947  \"msg.sender\" */ caller())\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                sstore(/** @src 8:12974:12991  \"vestingStatistics\" */ 0x0d, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ value_6)\n                                /// @src 8:13035:13068  \"TotalVestingAmountUpdated(amount)\"\n                                let _22 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                mstore(_22, value_6)\n                                /// @src 8:13035:13068  \"TotalVestingAmountUpdated(amount)\"\n                                log1(_22, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32, /** @src 8:13035:13068  \"TotalVestingAmountUpdated(amount)\" */ 0xf7d6bdf3ee749ac722ba01e58fd4c87234b2948c0d9b5a0232d6be227c8be2fa)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let memPos_14 := mload(64)\n                                mstore(memPos_14, 1)\n                                return(memPos_14, 32)\n                            }\n                            case 0x786b4456 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value0_4 := abi_decode_address()\n                                /// @src 8:3824:3832  \"_address\"\n                                fun_notZeroAddress(value0_4)\n                                /// @src 8:3843:3844  \"_\"\n                                let _23 := fun_getAnyVestingClaimed_inner(value0_4)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let memPos_15 := mload(64)\n                                mstore(memPos_15, iszero(iszero(_23)))\n                                return(memPos_15, 32)\n                            }\n                            case 0x7eb16ac2 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_5 := abi_decode_address()\n                                /// @src 8:3824:3832  \"_address\"\n                                fun_notZeroAddress(value0_5)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                mstore(0, and(value0_5, sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 8:17076:17090  \"vestingClaimed\" */ 0x10)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let dataSlot_2 := keccak256(0, 64)\n                                mstore(0, calldataload(36))\n                                mstore(32, dataSlot_2)\n                                let value_7 := and(sload(keccak256(0, 64)), 0xff)\n                                let memPos_16 := mload(64)\n                                mstore(memPos_16, iszero(iszero(value_7)))\n                                return(memPos_16, 32)\n                            }\n                            case 0x85489f23 {\n                                if callvalue() { revert(0, 0) }\n                                let _24 := 32\n                                if slt(add(calldatasize(), not(3)), _24) { revert(0, 0) }\n                                let value0_6 := abi_decode_address()\n                                /// @src 8:3824:3832  \"_address\"\n                                fun_notZeroAddress(value0_6)\n                                /// @src 8:18021:18082  \"IDappadVesting.Vesting memory currentVesting = defaultVesting\"\n                                let var_currentVesting_mpos_1 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting_37989()\n                                let _25 := and(value0_6, sub(shl(160, 1), 1))\n                                mstore(0, _25)\n                                mstore(_24, /** @src 8:18097:18111  \"customVestings\" */ 0x0f)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let dataSlot_3 := keccak256(0, 64)\n                                /// @src 8:18093:18212  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                                if /** @src 8:18097:18141  \"customVestings[userAddress].vestingCount > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(dataSlot_3)))\n                                /// @src 8:18093:18212  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                                {\n                                    /// @src 8:18157:18201  \"currentVesting = customVestings[userAddress]\"\n                                    var_currentVesting_mpos_1 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting(dataSlot_3)\n                                }\n                                /// @src 8:18230:18259  \"uint256 lockedTokenAmount = 0\"\n                                let var_lockedTokenAmount := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                /// @src 8:18302:18340  \"getUserTotalVestingAmount(userAddress)\"\n                                let expr_3 := /** @src 8:13809:13816  \"uint256\" */ modifier_notZeroAddress(/** @src 8:18302:18340  \"getUserTotalVestingAmount(userAddress)\" */ value0_6)\n                                /// @src 8:18356:18369  \"uint256 i = 0\"\n                                let var_i_1 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                /// @src 8:18351:18635  \"for (uint256 i = 0; i < currentVesting.vestingCount; i++) {...\"\n                                for { }\n                                /** @src 8:18068:18082  \"defaultVesting\" */ 0x01\n                                /// @src 8:18356:18369  \"uint256 i = 0\"\n                                {\n                                    /// @src 8:18404:18407  \"i++\"\n                                    var_i_1 := increment_uint256(var_i_1)\n                                }\n                                {\n                                    /// @src 8:18371:18402  \"i < currentVesting.vestingCount\"\n                                    if iszero(lt(var_i_1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:18375:18402  \"currentVesting.vestingCount\" */ var_currentVesting_mpos_1)))\n                                    /// @src 8:18371:18402  \"i < currentVesting.vestingCount\"\n                                    { break }\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    mstore(0, _25)\n                                    mstore(_24, /** @src 8:18428:18442  \"vestingClaimed\" */ 0x10)\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    let dataSlot_4 := keccak256(0, 64)\n                                    mstore(0, var_i_1)\n                                    mstore(_24, dataSlot_4)\n                                    /// @src 8:18427:18498  \"!vestingClaimed[userAddress][i] && !getVestingClaimable(userAddress, i)\"\n                                    let expr_4 := /** @src 8:18427:18458  \"!vestingClaimed[userAddress][i]\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(0, 64)), 0xff))\n                                    /// @src 8:18427:18498  \"!vestingClaimed[userAddress][i] && !getVestingClaimable(userAddress, i)\"\n                                    if expr_4\n                                    {\n                                        expr_4 := /** @src 8:18462:18498  \"!getVestingClaimable(userAddress, i)\" */ iszero(/** @src 8:18463:18498  \"getVestingClaimable(userAddress, i)\" */ fun_getVestingClaimable(value0_6, var_i_1))\n                                    }\n                                    /// @src 8:18423:18625  \"if (!vestingClaimed[userAddress][i] && !getVestingClaimable(userAddress, i)) {...\"\n                                    if expr_4\n                                    {\n                                        /// @src 8:18518:18610  \"lockedTokenAmount += (userTotalVestingAmount * currentVesting.vestingPercentages[i]) / 10000\"\n                                        var_lockedTokenAmount := checked_add_uint256(var_lockedTokenAmount, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ div(/** @src 8:18540:18601  \"userTotalVestingAmount * currentVesting.vestingPercentages[i]\" */ checked_mul_uint256(expr_3, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:18565:18601  \"currentVesting.vestingPercentages[i]\" */ memory_array_index_access_uint256_dyn(/** @src 8:18565:18598  \"currentVesting.vestingPercentages\" */ mload(add(var_currentVesting_mpos_1, 96)), /** @src 8:18565:18601  \"currentVesting.vestingPercentages[i]\" */ var_i_1))), /** @src 8:18605:18610  \"10000\" */ 0x2710))\n                                    }\n                                }\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let memPos_17 := mload(64)\n                                mstore(memPos_17, var_lockedTokenAmount)\n                                return(memPos_17, _24)\n                            }\n                            case 0x91d14854 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value1_2 := abi_decode_address_37972()\n                                mstore(0, calldataload(4))\n                                mstore(32, 0)\n                                let _26 := keccak256(0, 64)\n                                mstore(0, and(value1_2, sub(shl(160, 1), 1)))\n                                mstore(32, _26)\n                                let value_8 := and(sload(keccak256(0, 64)), 0xff)\n                                let memPos_18 := mload(64)\n                                mstore(memPos_18, iszero(iszero(value_8)))\n                                return(memPos_18, 32)\n                            }\n                            case 0x928978a0 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let _27 := sub(shl(160, 1), 1)\n                                let cleaned_4 := and(sload(/** @src 8:525:580  \"IDappadVesting.VestingAddresses public vestingAddresses\" */ 8), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _27)\n                                let cleaned_5 := and(sload(/** @src 8:525:580  \"IDappadVesting.VestingAddresses public vestingAddresses\" */ 9), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _27)\n                                let cleaned_6 := and(sload(/** @src 8:525:580  \"IDappadVesting.VestingAddresses public vestingAddresses\" */ 10), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _27)\n                                let cleaned_7 := and(sload(/** @src 8:525:580  \"IDappadVesting.VestingAddresses public vestingAddresses\" */ 11), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _27)\n                                let cleaned_8 := and(sload(/** @src 8:525:580  \"IDappadVesting.VestingAddresses public vestingAddresses\" */ 12), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _27)\n                                let memPos_19 := mload(64)\n                                mstore(memPos_19, cleaned_4)\n                                mstore(add(memPos_19, 32), cleaned_5)\n                                mstore(add(memPos_19, 64), cleaned_6)\n                                mstore(add(memPos_19, 96), cleaned_7)\n                                mstore(add(memPos_19, 128), cleaned_8)\n                                return(memPos_19, 160)\n                            }\n                            case 0x9903a4c1 {\n                                if callvalue() { revert(0, 0) }\n                                let _28 := 32\n                                if slt(add(calldatasize(), not(3)), _28) { revert(0, 0) }\n                                let value_9 := calldataload(4)\n                                /// @src 8:4020:4028  \"_address\"\n                                fun_onlyOwnerOrAdmin(/** @src 8:8474:8484  \"msg.sender\" */ caller())\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let cleaned_9 := and(sload(/** @src 8:8505:8514  \"saleToken\" */ 0x12), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1))\n                                /// @src 8:22479:22522  \"token.allowance(userAddress, address(this))\"\n                                let _29 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                /// @src 8:22479:22522  \"token.allowance(userAddress, address(this))\"\n                                mstore(_29, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(225, 0x6eb1769f))\n                                mstore(/** @src 8:22479:22522  \"token.allowance(userAddress, address(this))\" */ add(_29, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:8474:8484  \"msg.sender\" */ caller())\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                mstore(add(/** @src 8:22479:22522  \"token.allowance(userAddress, address(this))\" */ _29, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36), /** @src 8:22516:22520  \"this\" */ address())\n                                /// @src 8:22479:22522  \"token.allowance(userAddress, address(this))\"\n                                let _30 := staticcall(gas(), cleaned_9, _29, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 68, /** @src 8:22479:22522  \"token.allowance(userAddress, address(this))\" */ _29, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _28)\n                                /// @src 8:22479:22522  \"token.allowance(userAddress, address(this))\"\n                                if iszero(_30)\n                                {\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    let pos_2 := mload(64)\n                                    returndatacopy(pos_2, 0, returndatasize())\n                                    revert(pos_2, returndatasize())\n                                }\n                                /// @src 8:22479:22522  \"token.allowance(userAddress, address(this))\"\n                                let expr_5 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                /// @src 8:22479:22522  \"token.allowance(userAddress, address(this))\"\n                                if _30\n                                {\n                                    let _31 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _28\n                                    /// @src 8:22479:22522  \"token.allowance(userAddress, address(this))\"\n                                    if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _28, /** @src 8:22479:22522  \"token.allowance(userAddress, address(this))\" */ returndatasize()) { _31 := returndatasize() }\n                                    finalize_allocation(_29, _31)\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    if slt(sub(/** @src 8:22479:22522  \"token.allowance(userAddress, address(this))\" */ add(_29, _31), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _29), _28) { revert(0, 0) }\n                                    /// @src 8:22479:22522  \"token.allowance(userAddress, address(this))\"\n                                    expr_5 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_29)\n                                }\n                                /// @src 8:22532:22601  \"if(amount > userAllowance) revert Errors.InsufficientAllowanceError()\"\n                                if /** @src 8:22535:22557  \"amount > userAllowance\" */ gt(value_9, expr_5)\n                                /// @src 8:22532:22601  \"if(amount > userAllowance) revert Errors.InsufficientAllowanceError()\"\n                                {\n                                    /// @src 8:22566:22601  \"Errors.InsufficientAllowanceError()\"\n                                    let _32 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:22566:22601  \"Errors.InsufficientAllowanceError()\"\n                                    mstore(_32, shl(227, 0x0e74e94f))\n                                    revert(_32, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:8565:8596  \"saleToken.balanceOf(msg.sender)\"\n                                let _33 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                /// @src 8:8565:8596  \"saleToken.balanceOf(msg.sender)\"\n                                mstore(_33, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x70a08231))\n                                mstore(/** @src 8:8565:8596  \"saleToken.balanceOf(msg.sender)\" */ add(_33, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:8474:8484  \"msg.sender\" */ caller())\n                                /// @src 8:8565:8596  \"saleToken.balanceOf(msg.sender)\"\n                                let _34 := staticcall(gas(), cleaned_9, _33, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36, /** @src 8:8565:8596  \"saleToken.balanceOf(msg.sender)\" */ _33, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _28)\n                                /// @src 8:8565:8596  \"saleToken.balanceOf(msg.sender)\"\n                                if iszero(_34)\n                                {\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    let pos_3 := mload(64)\n                                    returndatacopy(pos_3, 0, returndatasize())\n                                    revert(pos_3, returndatasize())\n                                }\n                                /// @src 8:8565:8596  \"saleToken.balanceOf(msg.sender)\"\n                                let expr_6 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                /// @src 8:8565:8596  \"saleToken.balanceOf(msg.sender)\"\n                                if _34\n                                {\n                                    let _35 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _28\n                                    /// @src 8:8565:8596  \"saleToken.balanceOf(msg.sender)\"\n                                    if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _28, /** @src 8:8565:8596  \"saleToken.balanceOf(msg.sender)\" */ returndatasize()) { _35 := returndatasize() }\n                                    finalize_allocation(_33, _35)\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    if slt(sub(/** @src 8:8565:8596  \"saleToken.balanceOf(msg.sender)\" */ add(_33, _35), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _33), _28) { revert(0, 0) }\n                                    /// @src 8:8565:8596  \"saleToken.balanceOf(msg.sender)\"\n                                    expr_6 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_33)\n                                }\n                                /// @src 8:8561:8647  \"if (saleToken.balanceOf(msg.sender) < amount) revert Errors.InsufficientBalanceError()\"\n                                if /** @src 8:8565:8605  \"saleToken.balanceOf(msg.sender) < amount\" */ lt(expr_6, value_9)\n                                /// @src 8:8561:8647  \"if (saleToken.balanceOf(msg.sender) < amount) revert Errors.InsufficientBalanceError()\"\n                                {\n                                    /// @src 8:8614:8647  \"Errors.InsufficientBalanceError()\"\n                                    let _36 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:8614:8647  \"Errors.InsufficientBalanceError()\"\n                                    mstore(_36, shl(224, 0x384d3c59))\n                                    revert(_36, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:8658:8706  \"vestingStatistics.totalSaleTokenAmount += amount\"\n                                let _37 := checked_add_uint256(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(/** @src 8:8658:8696  \"vestingStatistics.totalSaleTokenAmount\" */ 14), /** @src 8:8658:8706  \"vestingStatistics.totalSaleTokenAmount += amount\" */ value_9)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                sstore(/** @src 8:8658:8696  \"vestingStatistics.totalSaleTokenAmount\" */ 14, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _37)\n                                /// @src 8:8722:8796  \"SaleTokenAdded(msg.sender, amount, vestingStatistics.totalSaleTokenAmount)\"\n                                let _38 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                mstore(_38, /** @src 8:8474:8484  \"msg.sender\" */ caller())\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                mstore(add(_38, _28), value_9)\n                                mstore(add(_38, 64), _37)\n                                /// @src 8:8722:8796  \"SaleTokenAdded(msg.sender, amount, vestingStatistics.totalSaleTokenAmount)\"\n                                log1(_38, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 96, /** @src 8:8722:8796  \"SaleTokenAdded(msg.sender, amount, vestingStatistics.totalSaleTokenAmount)\" */ 0x3d3828369183a98b7c1119e7cea475fa7365971789c1ba8451f5b30d7f3c149b)\n                                /// @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\"\n                                let _39 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                /// @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\"\n                                mstore(_39, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x23b872dd))\n                                mstore(/** @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\" */ add(_39, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:8474:8484  \"msg.sender\" */ caller())\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                mstore(add(/** @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\" */ _39, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36), /** @src 8:22516:22520  \"this\" */ address())\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                mstore(add(/** @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\" */ _39, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 68), value_9)\n                                /// @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\"\n                                let _40 := call(gas(), cleaned_9, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0, /** @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\" */ _39, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 100, /** @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\" */ _39, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _28)\n                                /// @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\"\n                                if iszero(_40)\n                                {\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    let pos_4 := mload(64)\n                                    returndatacopy(pos_4, 0, returndatasize())\n                                    revert(pos_4, returndatasize())\n                                }\n                                /// @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\"\n                                let expr_7 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                /// @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\"\n                                if _40\n                                {\n                                    let _41 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _28\n                                    /// @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\"\n                                    if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _28, /** @src 8:8837:8894  \"saleToken.transferFrom(msg.sender, address(this), amount)\" */ returndatasize()) { _41 := returndatasize() }\n                                    finalize_allocation(_39, _41)\n                                    expr_7 := abi_decode_bool_fromMemory(_39, add(_39, _41))\n                                }\n                                /// @src 8:8904:8973  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                                if /** @src 8:8908:8931  \"!successfullyTransfered\" */ iszero(expr_7)\n                                /// @src 8:8904:8973  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                                {\n                                    /// @src 8:8940:8973  \"Errors.TokenTransferFailedError()\"\n                                    let _42 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:8940:8973  \"Errors.TokenTransferFailedError()\"\n                                    mstore(_42, shl(224, 0xf83e23f5))\n                                    revert(_42, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                }\n                                let memPos_20 := mload(64)\n                                mstore(memPos_20, 1)\n                                return(memPos_20, _28)\n                            }\n                            case 0x9a68404d {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 8:3824:3832  \"_address\"\n                                fun_notZeroAddress(/** @src 8:8062:8072  \"msg.sender\" */ caller())\n                                /// @src 8:4020:4028  \"_address\"\n                                fun_onlyOwnerOrAdmin(/** @src 8:8062:8072  \"msg.sender\" */ caller())\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let cleaned_10 := and(sload(/** @src 8:8131:8140  \"saleToken\" */ 0x12), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1))\n                                /// @src 8:8131:8165  \"saleToken.balanceOf(address(this))\"\n                                let _43 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                let _44 := shl(224, 0x70a08231)\n                                /// @src 8:8131:8165  \"saleToken.balanceOf(address(this))\"\n                                mstore(_43, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _44)\n                                mstore(/** @src 8:8131:8165  \"saleToken.balanceOf(address(this))\" */ add(_43, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:8159:8163  \"this\" */ address())\n                                /// @src 8:8131:8165  \"saleToken.balanceOf(address(this))\"\n                                let _45 := 32\n                                let _46 := staticcall(gas(), cleaned_10, _43, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36, /** @src 8:8131:8165  \"saleToken.balanceOf(address(this))\" */ _43, _45)\n                                if iszero(_46)\n                                {\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    let pos_5 := mload(64)\n                                    returndatacopy(pos_5, 0, returndatasize())\n                                    revert(pos_5, returndatasize())\n                                }\n                                /// @src 8:8131:8165  \"saleToken.balanceOf(address(this))\"\n                                let expr_8 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                /// @src 8:8131:8165  \"saleToken.balanceOf(address(this))\"\n                                if _46\n                                {\n                                    let _47 := _45\n                                    if gt(_45, returndatasize()) { _47 := returndatasize() }\n                                    finalize_allocation(_43, _47)\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    if slt(sub(/** @src 8:8131:8165  \"saleToken.balanceOf(address(this))\" */ add(_43, _47), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _43), /** @src 8:8131:8165  \"saleToken.balanceOf(address(this))\" */ _45)\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    { revert(0, 0) }\n                                    /// @src 8:8131:8165  \"saleToken.balanceOf(address(this))\"\n                                    expr_8 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_43)\n                                }\n                                /// @src 8:8128:8375  \"if(saleToken.balanceOf(address(this)) > 0) {...\"\n                                if /** @src 8:8131:8169  \"saleToken.balanceOf(address(this)) > 0\" */ iszero(iszero(expr_8))\n                                /// @src 8:8128:8375  \"if(saleToken.balanceOf(address(this)) > 0) {...\"\n                                {\n                                    /// @src 8:8246:8280  \"saleToken.balanceOf(address(this))\"\n                                    let _48 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:8246:8280  \"saleToken.balanceOf(address(this))\"\n                                    mstore(_48, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _44)\n                                    mstore(/** @src 8:8246:8280  \"saleToken.balanceOf(address(this))\" */ add(_48, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:8159:8163  \"this\" */ address())\n                                    /// @src 8:8246:8280  \"saleToken.balanceOf(address(this))\"\n                                    let _49 := staticcall(gas(), cleaned_10, _48, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36, /** @src 8:8246:8280  \"saleToken.balanceOf(address(this))\" */ _48, /** @src 8:8131:8165  \"saleToken.balanceOf(address(this))\" */ _45)\n                                    /// @src 8:8246:8280  \"saleToken.balanceOf(address(this))\"\n                                    if iszero(_49)\n                                    {\n                                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                        let pos_6 := mload(64)\n                                        returndatacopy(pos_6, 0, returndatasize())\n                                        revert(pos_6, returndatasize())\n                                    }\n                                    /// @src 8:8246:8280  \"saleToken.balanceOf(address(this))\"\n                                    let expr_9 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                    /// @src 8:8246:8280  \"saleToken.balanceOf(address(this))\"\n                                    if _49\n                                    {\n                                        let _50 := /** @src 8:8131:8165  \"saleToken.balanceOf(address(this))\" */ _45\n                                        /// @src 8:8246:8280  \"saleToken.balanceOf(address(this))\"\n                                        if gt(/** @src 8:8131:8165  \"saleToken.balanceOf(address(this))\" */ _45, /** @src 8:8246:8280  \"saleToken.balanceOf(address(this))\" */ returndatasize()) { _50 := returndatasize() }\n                                        finalize_allocation(_48, _50)\n                                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                        if slt(sub(/** @src 8:8246:8280  \"saleToken.balanceOf(address(this))\" */ add(_48, _50), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _48), /** @src 8:8131:8165  \"saleToken.balanceOf(address(this))\" */ _45)\n                                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                        { revert(0, 0) }\n                                        /// @src 8:8246:8280  \"saleToken.balanceOf(address(this))\"\n                                        expr_9 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_48)\n                                    }\n                                    /// @src 8:8215:8281  \"saleToken.transfer(msg.sender, saleToken.balanceOf(address(this)))\"\n                                    let _51 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:8215:8281  \"saleToken.transfer(msg.sender, saleToken.balanceOf(address(this)))\"\n                                    mstore(_51, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0xa9059cbb))\n                                    /// @src 8:8215:8281  \"saleToken.transfer(msg.sender, saleToken.balanceOf(address(this)))\"\n                                    let _52 := call(gas(), cleaned_10, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0, /** @src 8:8215:8281  \"saleToken.transfer(msg.sender, saleToken.balanceOf(address(this)))\" */ _51, sub(abi_encode_address_uint256(add(_51, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:8062:8072  \"msg.sender\" */ caller(), /** @src 8:8215:8281  \"saleToken.transfer(msg.sender, saleToken.balanceOf(address(this)))\" */ expr_9), _51), _51, /** @src 8:8131:8165  \"saleToken.balanceOf(address(this))\" */ _45)\n                                    /// @src 8:8215:8281  \"saleToken.transfer(msg.sender, saleToken.balanceOf(address(this)))\"\n                                    if iszero(_52)\n                                    {\n                                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                        let pos_7 := mload(64)\n                                        returndatacopy(pos_7, 0, returndatasize())\n                                        revert(pos_7, returndatasize())\n                                    }\n                                    /// @src 8:8215:8281  \"saleToken.transfer(msg.sender, saleToken.balanceOf(address(this)))\"\n                                    let expr_10 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                    /// @src 8:8215:8281  \"saleToken.transfer(msg.sender, saleToken.balanceOf(address(this)))\"\n                                    if _52\n                                    {\n                                        let _53 := /** @src 8:8131:8165  \"saleToken.balanceOf(address(this))\" */ _45\n                                        /// @src 8:8215:8281  \"saleToken.transfer(msg.sender, saleToken.balanceOf(address(this)))\"\n                                        if gt(/** @src 8:8131:8165  \"saleToken.balanceOf(address(this))\" */ _45, /** @src 8:8215:8281  \"saleToken.transfer(msg.sender, saleToken.balanceOf(address(this)))\" */ returndatasize()) { _53 := returndatasize() }\n                                        finalize_allocation(_51, _53)\n                                        expr_10 := abi_decode_bool_fromMemory(_51, add(_51, _53))\n                                    }\n                                    /// @src 8:8295:8364  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                                    if /** @src 8:8299:8322  \"!successfullyTransfered\" */ iszero(expr_10)\n                                    /// @src 8:8295:8364  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                                    {\n                                        /// @src 8:8331:8364  \"Errors.TokenTransferFailedError()\"\n                                        let _54 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                        /// @src 8:8331:8364  \"Errors.TokenTransferFailedError()\"\n                                        mstore(_54, /** @src 8:8940:8973  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                                        /// @src 8:8331:8364  \"Errors.TokenTransferFailedError()\"\n                                        revert(_54, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                    }\n                                }\n                                let memPos_21 := mload(64)\n                                mstore(memPos_21, /** @src 8:8393:8397  \"true\" */ 0x01)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                return(memPos_21, /** @src 8:8131:8165  \"saleToken.balanceOf(address(this))\" */ _45)\n                            }\n                            case /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x9bb395b0 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 8:21435:21449  \"customVestings\" */ 0x0f)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let converted := copy_array_from_storage_to_memory_array_uint256_dyn(/** @src 8:21435:21481  \"customVestings[userAddress].vestingPercentages\" */ add(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ keccak256(0, 64), /** @src 8:21435:21481  \"customVestings[userAddress].vestingPercentages\" */ 3))\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let memPos_22 := mload(64)\n                                mstore(memPos_22, 32)\n                                return(memPos_22, sub(abi_encode_array_uint256_dyn(converted, add(memPos_22, 32)), memPos_22))\n                            }\n                            case 0xa217fddf {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPos_23 := mload(64)\n                                mstore(memPos_23, 0)\n                                return(memPos_23, 32)\n                            }\n                            case 0xa37f9d25 {\n                                if callvalue() { revert(0, 0) }\n                                let _55 := 32\n                                if slt(add(calldatasize(), not(3)), _55) { revert(0, 0) }\n                                let offset := calldataload(4)\n                                let _56 := 0xffffffffffffffff\n                                if gt(offset, _56) { revert(0, 0) }\n                                let value0_7 := abi_decode_struct_Vesting(add(4, offset), calldatasize())\n                                /// @src 8:4020:4028  \"_address\"\n                                fun_onlyOwnerOrAdmin(/** @src 8:10066:10076  \"msg.sender\" */ caller())\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let _57 := mload(value0_7)\n                                /// @src 8:10103:10127  \"defaultVesting = vesting\"\n                                let _58 := 0x01\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                sstore(/** @src 8:10103:10127  \"defaultVesting = vesting\" */ _58, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _57)\n                                sstore(2, mload(add(value0_7, _55)))\n                                sstore(3, mload(add(value0_7, 64)))\n                                let _59 := add(value0_7, 96)\n                                let _60 := mload(_59)\n                                let length_1 := mload(_60)\n                                if gt(length_1, _56)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                resize_array_array_uint256_dyn_storage_38000(length_1)\n                                let srcPtr_1 := add(_60, _55)\n                                mstore(0, 4)\n                                let i_1 := 0\n                                for { }\n                                lt(i_1, length_1)\n                                {\n                                    i_1 := add(i_1, /** @src 8:10103:10127  \"defaultVesting = vesting\" */ _58)\n                                }\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                {\n                                    let _61 := mload(srcPtr_1)\n                                    srcPtr_1 := add(srcPtr_1, _55)\n                                    sstore(add(62514009886607029107290561805838585334079798074568712924583230797734656856475, i_1), _61)\n                                }\n                                let _62 := iszero(iszero(mload(add(value0_7, 128))))\n                                let value_10 := and(sload(5), not(255))\n                                sstore(5, or(value_10, and(_62, 255)))\n                                /// @src 8:10138:10172  \"uint256 totalVestingPercentage = 0\"\n                                let var_totalVestingPercentage := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                /// @src 8:10219:10267  \"new uint256[](vesting.vestingPercentages.length)\"\n                                let _63 := allocate_and_zero_memory_array_array_uint256_dyn(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:10233:10259  \"vesting.vestingPercentages\" */ mload(_59)))\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let length_2 := mload(_63)\n                                if gt(length_2, _56)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                resize_array_array_uint256_dyn_storage_38000(length_2)\n                                let srcPtr_2 := add(_63, _55)\n                                mstore(0, 4)\n                                let i_2 := 0\n                                for { }\n                                lt(i_2, length_2)\n                                {\n                                    i_2 := add(i_2, /** @src 8:10103:10127  \"defaultVesting = vesting\" */ _58)\n                                }\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                {\n                                    let itemValue := mload(srcPtr_2)\n                                    srcPtr_2 := add(srcPtr_2, _55)\n                                    sstore(add(62514009886607029107290561805838585334079798074568712924583230797734656856475, i_2), itemValue)\n                                }\n                                /// @src 8:10282:10295  \"uint256 i = 0\"\n                                let var_i_2 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                /// @src 8:10277:10490  \"for (uint256 i = 0; i < vesting.vestingCount; i++) {...\"\n                                for { }\n                                /** @src 8:10103:10127  \"defaultVesting = vesting\" */ _58\n                                /// @src 8:10282:10295  \"uint256 i = 0\"\n                                {\n                                    /// @src 8:10323:10326  \"i++\"\n                                    var_i_2 := increment_uint256(var_i_2)\n                                }\n                                {\n                                    /// @src 8:10297:10321  \"i < vesting.vestingCount\"\n                                    if iszero(lt(var_i_2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:10301:10321  \"vesting.vestingCount\" */ value0_7)))\n                                    /// @src 8:10297:10321  \"i < vesting.vestingCount\"\n                                    { break }\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    let _64 := mload(/** @src 8:10381:10410  \"vesting.vestingPercentages[i]\" */ memory_array_index_access_uint256_dyn(/** @src 8:10381:10407  \"vesting.vestingPercentages\" */ mload(_59), /** @src 8:10381:10410  \"vesting.vestingPercentages[i]\" */ var_i_2))\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    if iszero(lt(var_i_2, sload(4)))\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(4, 0x32)\n                                        revert(0, 0x24)\n                                    }\n                                    mstore(0, 4)\n                                    sstore(add(62514009886607029107290561805838585334079798074568712924583230797734656856475, var_i_2), _64)\n                                    /// @src 8:10424:10479  \"totalVestingPercentage += vesting.vestingPercentages[i]\"\n                                    var_totalVestingPercentage := checked_add_uint256(var_totalVestingPercentage, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:10450:10479  \"vesting.vestingPercentages[i]\" */ memory_array_index_access_uint256_dyn(/** @src 8:10450:10476  \"vesting.vestingPercentages\" */ mload(_59), /** @src 8:10450:10479  \"vesting.vestingPercentages[i]\" */ var_i_2)))\n                                }\n                                /// @src 8:10500:10580  \"if (totalVestingPercentage != 10000) revert Errors.TotalVestingPercentageError()\"\n                                if /** @src 8:10504:10535  \"totalVestingPercentage != 10000\" */ iszero(eq(var_totalVestingPercentage, /** @src 8:10530:10535  \"10000\" */ 0x2710))\n                                /// @src 8:10500:10580  \"if (totalVestingPercentage != 10000) revert Errors.TotalVestingPercentageError()\"\n                                {\n                                    /// @src 8:10544:10580  \"Errors.TotalVestingPercentageError()\"\n                                    let _65 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:10544:10580  \"Errors.TotalVestingPercentageError()\"\n                                    mstore(_65, shl(225, 0x74b8a881))\n                                    revert(_65, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:10627:10653  \"vesting.vestingPercentages\"\n                                let _mpos := mload(_59)\n                                /// @src 8:10596:10654  \"DefaultVestingUpdated(vesting, vesting.vestingPercentages)\"\n                                let _66 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                mstore(_66, 64)\n                                let tail := abi_encode_struct_Vesting(value0_7, add(_66, 64))\n                                mstore(add(_66, _55), sub(tail, _66))\n                                /// @src 8:10596:10654  \"DefaultVestingUpdated(vesting, vesting.vestingPercentages)\"\n                                log1(_66, sub(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ abi_encode_array_uint256_dyn(_mpos, tail), /** @src 8:10596:10654  \"DefaultVestingUpdated(vesting, vesting.vestingPercentages)\" */ _66), 0x4a7d91d48d7631fbad39b1025ee81e57e99a3babe757f2a29b9fd407349d0855)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let memPos_24 := mload(64)\n                                mstore(memPos_24, /** @src 8:10103:10127  \"defaultVesting = vesting\" */ _58)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                return(memPos_24, _55)\n                            }\n                            case 0xac97b417 {\n                                if callvalue() { revert(0, 0) }\n                                let _67 := 32\n                                if slt(add(calldatasize(), not(3)), _67) { revert(0, 0) }\n                                let value_11 := calldataload(4)\n                                /// @src 8:3824:3832  \"_address\"\n                                fun_notZeroAddress(/** @src 8:4289:4299  \"msg.sender\" */ caller())\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let _68 := sub(shl(160, 1), 1)\n                                /// @src 8:4326:4770  \"if(vestingAddresses.saleContractAddress != address(0)) {...\"\n                                switch /** @src 8:4329:4379  \"vestingAddresses.saleContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(/** @src 8:4329:4365  \"vestingAddresses.saleContractAddress\" */ 10), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _68)))\n                                case /** @src 8:4326:4770  \"if(vestingAddresses.saleContractAddress != address(0)) {...\" */ 0 {\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    mstore(0, /** @src 8:4289:4299  \"msg.sender\" */ caller())\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    mstore(_67, /** @src 8:4689:4706  \"investmentAmounts\" */ 0x11)\n                                    /// @src 8:4685:4759  \"if (investmentAmounts[msg.sender] == 0) revert Errors.NotJoinedSaleError()\"\n                                    if /** @src 8:4689:4723  \"investmentAmounts[msg.sender] == 0\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(keccak256(0, 64)))\n                                    /// @src 8:4685:4759  \"if (investmentAmounts[msg.sender] == 0) revert Errors.NotJoinedSaleError()\"\n                                    {\n                                        /// @src 8:4732:4759  \"Errors.NotJoinedSaleError()\"\n                                        let _69 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                        /// @src 8:4732:4759  \"Errors.NotJoinedSaleError()\"\n                                        mstore(_69, shl(224, 0x2f0e159d))\n                                        revert(_69, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                    }\n                                }\n                                default /// @src 8:4326:4770  \"if(vestingAddresses.saleContractAddress != address(0)) {...\"\n                                {\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    let cleaned_11 := and(sload(/** @src 8:4399:4411  \"saleContract\" */ 0x13), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _68)\n                                    /// @src 8:4399:4447  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                                    let _70 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:4399:4447  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                                    mstore(_70, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(225, 0x2f43f2d3))\n                                    mstore(/** @src 8:4399:4447  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ add(_70, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:4289:4299  \"msg.sender\" */ caller())\n                                    /// @src 8:4399:4447  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                                    let _71 := staticcall(gas(), cleaned_11, _70, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36, /** @src 8:4399:4447  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ _70, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67)\n                                    /// @src 8:4399:4447  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                                    if iszero(_71)\n                                    {\n                                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                        let pos_8 := mload(64)\n                                        returndatacopy(pos_8, 0, returndatasize())\n                                        revert(pos_8, returndatasize())\n                                    }\n                                    /// @src 8:4399:4447  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                                    let expr_11 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                    /// @src 8:4399:4447  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                                    if _71\n                                    {\n                                        let _72 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67\n                                        /// @src 8:4399:4447  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                                        if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67, /** @src 8:4399:4447  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ returndatasize()) { _72 := returndatasize() }\n                                        finalize_allocation(_70, _72)\n                                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                        if slt(sub(/** @src 8:4399:4447  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ add(_70, _72), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _70), _67) { revert(0, 0) }\n                                        /// @src 8:4399:4447  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                                        expr_11 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_70)\n                                    }\n                                    /// @src 8:4395:4488  \"if (saleContract.getUserInvestmentAmount(msg.sender) == 0) revert Errors.NotJoinedSaleError()\"\n                                    if /** @src 8:4399:4452  \"saleContract.getUserInvestmentAmount(msg.sender) == 0\" */ iszero(expr_11)\n                                    /// @src 8:4395:4488  \"if (saleContract.getUserInvestmentAmount(msg.sender) == 0) revert Errors.NotJoinedSaleError()\"\n                                    {\n                                        /// @src 8:4461:4488  \"Errors.NotJoinedSaleError()\"\n                                        let _73 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                        /// @src 8:4461:4488  \"Errors.NotJoinedSaleError()\"\n                                        mstore(_73, /** @src 8:4732:4759  \"Errors.NotJoinedSaleError()\" */ shl(224, 0x2f0e159d))\n                                        /// @src 8:4461:4488  \"Errors.NotJoinedSaleError()\"\n                                        revert(_73, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                    }\n                                    /// @src 8:4507:4538  \"saleContract.getRefundEnabled()\"\n                                    let _74 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:4507:4538  \"saleContract.getRefundEnabled()\"\n                                    mstore(_74, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(225, 0x42e037d5))\n                                    /// @src 8:4507:4538  \"saleContract.getRefundEnabled()\"\n                                    let _75 := staticcall(gas(), cleaned_11, _74, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4, /** @src 8:4507:4538  \"saleContract.getRefundEnabled()\" */ _74, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67)\n                                    /// @src 8:4507:4538  \"saleContract.getRefundEnabled()\"\n                                    if iszero(_75)\n                                    {\n                                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                        let pos_9 := mload(64)\n                                        returndatacopy(pos_9, 0, returndatasize())\n                                        revert(pos_9, returndatasize())\n                                    }\n                                    /// @src 8:4507:4538  \"saleContract.getRefundEnabled()\"\n                                    let expr_12 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                    /// @src 8:4507:4538  \"saleContract.getRefundEnabled()\"\n                                    if _75\n                                    {\n                                        let _76 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67\n                                        /// @src 8:4507:4538  \"saleContract.getRefundEnabled()\"\n                                        if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67, /** @src 8:4507:4538  \"saleContract.getRefundEnabled()\" */ returndatasize()) { _76 := returndatasize() }\n                                        finalize_allocation(_74, _76)\n                                        expr_12 := abi_decode_bool_fromMemory(_74, add(_74, _76))\n                                    }\n                                    /// @src 8:4503:4655  \"if (saleContract.getRefundEnabled()) {...\"\n                                    if expr_12\n                                    {\n                                        /// @src 8:4562:4602  \"saleContract.getUserRefunded(msg.sender)\"\n                                        let _77 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                        /// @src 8:4562:4602  \"saleContract.getUserRefunded(msg.sender)\"\n                                        mstore(_77, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0xcf72d3db))\n                                        mstore(/** @src 8:4562:4602  \"saleContract.getUserRefunded(msg.sender)\" */ add(_77, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:4289:4299  \"msg.sender\" */ caller())\n                                        /// @src 8:4562:4602  \"saleContract.getUserRefunded(msg.sender)\"\n                                        let _78 := staticcall(gas(), cleaned_11, _77, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36, /** @src 8:4562:4602  \"saleContract.getUserRefunded(msg.sender)\" */ _77, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67)\n                                        /// @src 8:4562:4602  \"saleContract.getUserRefunded(msg.sender)\"\n                                        if iszero(_78)\n                                        {\n                                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                            let pos_10 := mload(64)\n                                            returndatacopy(pos_10, 0, returndatasize())\n                                            revert(pos_10, returndatasize())\n                                        }\n                                        /// @src 8:4562:4602  \"saleContract.getUserRefunded(msg.sender)\"\n                                        let expr_13 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                        /// @src 8:4562:4602  \"saleContract.getUserRefunded(msg.sender)\"\n                                        if _78\n                                        {\n                                            let _79 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67\n                                            /// @src 8:4562:4602  \"saleContract.getUserRefunded(msg.sender)\"\n                                            if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67, /** @src 8:4562:4602  \"saleContract.getUserRefunded(msg.sender)\" */ returndatasize()) { _79 := returndatasize() }\n                                            finalize_allocation(_77, _79)\n                                            expr_13 := abi_decode_bool_fromMemory(_77, add(_77, _79))\n                                        }\n                                        /// @src 8:4558:4640  \"if (saleContract.getUserRefunded(msg.sender)) revert Errors.AlreadyRefundedError()\"\n                                        if expr_13\n                                        {\n                                            /// @src 8:4611:4640  \"Errors.AlreadyRefundedError()\"\n                                            let _80 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                            /// @src 8:4611:4640  \"Errors.AlreadyRefundedError()\"\n                                            mstore(_80, shl(226, 0x2321792f))\n                                            revert(_80, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                        }\n                                    }\n                                }\n                                mstore(0, /** @src 8:4289:4299  \"msg.sender\" */ caller())\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                mstore(_67, /** @src 8:4784:4798  \"vestingClaimed\" */ 0x10)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let dataSlot_5 := keccak256(0, 64)\n                                mstore(0, value_11)\n                                mstore(_67, dataSlot_5)\n                                /// @src 8:4780:4861  \"if (vestingClaimed[msg.sender][vestingIndex]) revert Errors.AlreadyClaimedError()\"\n                                if /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(0, 64)), 0xff)\n                                /// @src 8:4780:4861  \"if (vestingClaimed[msg.sender][vestingIndex]) revert Errors.AlreadyClaimedError()\"\n                                {\n                                    /// @src 8:4833:4861  \"Errors.AlreadyClaimedError()\"\n                                    let _81 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:4833:4861  \"Errors.AlreadyClaimedError()\"\n                                    mstore(_81, shl(224, 0x5f1e377d))\n                                    revert(_81, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:4872:4933  \"IDappadVesting.Vesting memory currentVesting = defaultVesting\"\n                                let var_currentVesting_mpos_2 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting_37989()\n                                mstore(0, /** @src 8:4289:4299  \"msg.sender\" */ caller())\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                mstore(_67, /** @src 8:4948:4962  \"customVestings\" */ 0x0f)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let dataSlot_6 := keccak256(0, 64)\n                                /// @src 8:4944:5061  \"if (customVestings[msg.sender].vestingCount > 0) {...\"\n                                if /** @src 8:4948:4991  \"customVestings[msg.sender].vestingCount > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(dataSlot_6)))\n                                /// @src 8:4944:5061  \"if (customVestings[msg.sender].vestingCount > 0) {...\"\n                                {\n                                    /// @src 8:5007:5050  \"currentVesting = customVestings[msg.sender]\"\n                                    var_currentVesting_mpos_2 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting(dataSlot_6)\n                                }\n                                /// @src 8:5071:5162  \"if (block.timestamp <= vestingSettings.startDate) revert Errors.VestingsNotClaimableError()\"\n                                if /** @src 8:5075:5119  \"block.timestamp <= vestingSettings.startDate\" */ iszero(gt(/** @src 8:5075:5090  \"block.timestamp\" */ timestamp(), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(/** @src 8:5094:5109  \"vestingSettings\" */ 0x06)))\n                                /// @src 8:5071:5162  \"if (block.timestamp <= vestingSettings.startDate) revert Errors.VestingsNotClaimableError()\"\n                                {\n                                    /// @src 8:5128:5162  \"Errors.VestingsNotClaimableError()\"\n                                    let _82 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:5128:5162  \"Errors.VestingsNotClaimableError()\"\n                                    mstore(_82, shl(228, 0x08f78e53))\n                                    revert(_82, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:5253:5309  \"if (!claimable) revert Errors.VestingNotClaimableError()\"\n                                if /** @src 8:5257:5267  \"!claimable\" */ iszero(/** @src 8:5198:5243  \"getVestingClaimable(msg.sender, vestingIndex)\" */ fun_getVestingClaimable(/** @src 8:4289:4299  \"msg.sender\" */ caller(), /** @src 8:5198:5243  \"getVestingClaimable(msg.sender, vestingIndex)\" */ value_11))\n                                /// @src 8:5253:5309  \"if (!claimable) revert Errors.VestingNotClaimableError()\"\n                                {\n                                    /// @src 8:5276:5309  \"Errors.VestingNotClaimableError()\"\n                                    let _83 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:5276:5309  \"Errors.VestingNotClaimableError()\"\n                                    mstore(_83, shl(226, 0x08fb25e7))\n                                    revert(_83, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                }\n                                mstore(0, /** @src 8:4289:4299  \"msg.sender\" */ caller())\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                mstore(_67, /** @src 8:4784:4798  \"vestingClaimed\" */ 0x10)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let dataSlot_7 := keccak256(0, 64)\n                                mstore(0, value_11)\n                                mstore(_67, dataSlot_7)\n                                let dataSlot_8 := keccak256(0, 64)\n                                sstore(dataSlot_8, or(and(sload(dataSlot_8), not(255)), 1))\n                                /// @src 8:5404:5441  \"getUserTotalVestingAmount(msg.sender)\"\n                                let expr_14 := /** @src 8:13809:13816  \"uint256\" */ modifier_notZeroAddress(/** @src 8:4289:4299  \"msg.sender\" */ caller())\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let r := div(/** @src 8:5474:5539  \"saleTokenAmount * currentVesting.vestingPercentages[vestingIndex]\" */ checked_mul_uint256(expr_14, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:5492:5539  \"currentVesting.vestingPercentages[vestingIndex]\" */ memory_array_index_access_uint256_dyn(/** @src 8:5492:5525  \"currentVesting.vestingPercentages\" */ mload(add(var_currentVesting_mpos_2, 96)), /** @src 8:5492:5539  \"currentVesting.vestingPercentages[vestingIndex]\" */ value_11))), /** @src 8:5543:5548  \"10000\" */ 0x2710)\n                                /// @src 8:5559:5620  \"if(claimAmount == 0) revert Errors.VestingNotClaimableError()\"\n                                if /** @src 8:5562:5578  \"claimAmount == 0\" */ iszero(r)\n                                /// @src 8:5559:5620  \"if(claimAmount == 0) revert Errors.VestingNotClaimableError()\"\n                                {\n                                    /// @src 8:5587:5620  \"Errors.VestingNotClaimableError()\"\n                                    let _84 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:5587:5620  \"Errors.VestingNotClaimableError()\"\n                                    mstore(_84, /** @src 8:5276:5309  \"Errors.VestingNotClaimableError()\" */ shl(226, 0x08fb25e7))\n                                    /// @src 8:5587:5620  \"Errors.VestingNotClaimableError()\"\n                                    revert(_84, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                }\n                                let cleaned_12 := and(sload(/** @src 8:5635:5644  \"saleToken\" */ 0x12), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _68)\n                                /// @src 8:5635:5669  \"saleToken.balanceOf(address(this))\"\n                                let _85 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                /// @src 8:5635:5669  \"saleToken.balanceOf(address(this))\"\n                                mstore(_85, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x70a08231))\n                                mstore(/** @src 8:5635:5669  \"saleToken.balanceOf(address(this))\" */ add(_85, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:5663:5667  \"this\" */ address())\n                                /// @src 8:5635:5669  \"saleToken.balanceOf(address(this))\"\n                                let _86 := staticcall(gas(), cleaned_12, _85, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36, /** @src 8:5635:5669  \"saleToken.balanceOf(address(this))\" */ _85, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67)\n                                /// @src 8:5635:5669  \"saleToken.balanceOf(address(this))\"\n                                if iszero(_86)\n                                {\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    let pos_11 := mload(64)\n                                    returndatacopy(pos_11, 0, returndatasize())\n                                    revert(pos_11, returndatasize())\n                                }\n                                /// @src 8:5635:5669  \"saleToken.balanceOf(address(this))\"\n                                let expr_15 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                /// @src 8:5635:5669  \"saleToken.balanceOf(address(this))\"\n                                if _86\n                                {\n                                    let _87 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67\n                                    /// @src 8:5635:5669  \"saleToken.balanceOf(address(this))\"\n                                    if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67, /** @src 8:5635:5669  \"saleToken.balanceOf(address(this))\" */ returndatasize()) { _87 := returndatasize() }\n                                    finalize_allocation(_85, _87)\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    if slt(sub(/** @src 8:5635:5669  \"saleToken.balanceOf(address(this))\" */ add(_85, _87), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _85), _67) { revert(0, 0) }\n                                    /// @src 8:5635:5669  \"saleToken.balanceOf(address(this))\"\n                                    expr_15 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_85)\n                                }\n                                /// @src 8:5631:5733  \"if (saleToken.balanceOf(address(this)) < claimAmount) revert Errors.InsufficientContractBalanceError()\"\n                                if /** @src 8:5635:5683  \"saleToken.balanceOf(address(this)) < claimAmount\" */ lt(expr_15, r)\n                                /// @src 8:5631:5733  \"if (saleToken.balanceOf(address(this)) < claimAmount) revert Errors.InsufficientContractBalanceError()\"\n                                {\n                                    /// @src 8:5692:5733  \"Errors.InsufficientContractBalanceError()\"\n                                    let _88 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:5692:5733  \"Errors.InsufficientContractBalanceError()\"\n                                    mstore(_88, shl(224, 0xe23f04e1))\n                                    revert(_88, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:5744:5795  \"vestingStatistics.totalVestingAmount -= claimAmount\"\n                                let _89 := checked_sub_uint256(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(/** @src 8:5744:5761  \"vestingStatistics\" */ 0x0d), /** @src 8:5744:5795  \"vestingStatistics.totalVestingAmount -= claimAmount\" */ r)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                sstore(/** @src 8:5744:5761  \"vestingStatistics\" */ 0x0d, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _89)\n                                /// @src 8:5811:5940  \"UserClaimedVesting(msg.sender, vestingIndex, claimAmount, saleTokenAmount, vestingStatistics.totalVestingAmount, block.timestamp)\"\n                                let _90 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                mstore(_90, /** @src 8:4289:4299  \"msg.sender\" */ caller())\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                mstore(add(_90, _67), value_11)\n                                mstore(add(_90, 64), r)\n                                mstore(add(_90, /** @src 8:5492:5525  \"currentVesting.vestingPercentages\" */ 96), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ expr_14)\n                                mstore(add(_90, 128), _89)\n                                mstore(add(_90, 160), /** @src 8:5075:5090  \"block.timestamp\" */ timestamp())\n                                /// @src 8:5811:5940  \"UserClaimedVesting(msg.sender, vestingIndex, claimAmount, saleTokenAmount, vestingStatistics.totalVestingAmount, block.timestamp)\"\n                                log1(_90, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 192, /** @src 8:5811:5940  \"UserClaimedVesting(msg.sender, vestingIndex, claimAmount, saleTokenAmount, vestingStatistics.totalVestingAmount, block.timestamp)\" */ 0x3d8339dd16c2311bf6ab491c826f9ecd3fe1858e58fe77f10c63eb2b03fdbc14)\n                                /// @src 8:5981:6024  \"saleToken.transfer(msg.sender, claimAmount)\"\n                                let _91 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                /// @src 8:5981:6024  \"saleToken.transfer(msg.sender, claimAmount)\"\n                                mstore(_91, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0xa9059cbb))\n                                /// @src 8:5981:6024  \"saleToken.transfer(msg.sender, claimAmount)\"\n                                let _92 := call(gas(), cleaned_12, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0, /** @src 8:5981:6024  \"saleToken.transfer(msg.sender, claimAmount)\" */ _91, sub(abi_encode_address_uint256(add(_91, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:4289:4299  \"msg.sender\" */ caller(), /** @src 8:5981:6024  \"saleToken.transfer(msg.sender, claimAmount)\" */ r), _91), _91, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67)\n                                /// @src 8:5981:6024  \"saleToken.transfer(msg.sender, claimAmount)\"\n                                if iszero(_92)\n                                {\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    let pos_12 := mload(64)\n                                    returndatacopy(pos_12, 0, returndatasize())\n                                    revert(pos_12, returndatasize())\n                                }\n                                /// @src 8:5981:6024  \"saleToken.transfer(msg.sender, claimAmount)\"\n                                let expr_16 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                /// @src 8:5981:6024  \"saleToken.transfer(msg.sender, claimAmount)\"\n                                if _92\n                                {\n                                    let _93 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67\n                                    /// @src 8:5981:6024  \"saleToken.transfer(msg.sender, claimAmount)\"\n                                    if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _67, /** @src 8:5981:6024  \"saleToken.transfer(msg.sender, claimAmount)\" */ returndatasize()) { _93 := returndatasize() }\n                                    finalize_allocation(_91, _93)\n                                    expr_16 := abi_decode_bool_fromMemory(_91, add(_91, _93))\n                                }\n                                /// @src 8:6034:6103  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                                if /** @src 8:6038:6061  \"!successfullyTransfered\" */ iszero(expr_16)\n                                /// @src 8:6034:6103  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                                {\n                                    /// @src 8:6070:6103  \"Errors.TokenTransferFailedError()\"\n                                    let _94 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:6070:6103  \"Errors.TokenTransferFailedError()\"\n                                    mstore(_94, /** @src 8:8940:8973  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                                    /// @src 8:6070:6103  \"Errors.TokenTransferFailedError()\"\n                                    revert(_94, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                }\n                                let memPos_25 := mload(64)\n                                mstore(memPos_25, 1)\n                                return(memPos_25, _67)\n                            }\n                            case 0xad4222c7 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 8:792:844  \"mapping(address => uint256) public investmentAmounts\" */ 17)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let _95 := sload(keccak256(0, 64))\n                                let memPos_26 := mload(64)\n                                mstore(memPos_26, _95)\n                                return(memPos_26, 32)\n                            }\n                            case 0xb9edb3a5 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let _96 := sload(/** @src 8:416:460  \"IDappadVesting.Vesting public defaultVesting\" */ 1)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let _97 := sload(/** @src 8:416:460  \"IDappadVesting.Vesting public defaultVesting\" */ 2)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let _98 := sload(/** @src 8:416:460  \"IDappadVesting.Vesting public defaultVesting\" */ 3)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let value_12 := and(sload(/** @src 8:416:460  \"IDappadVesting.Vesting public defaultVesting\" */ 5), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0xff)\n                                let memPos_27 := mload(64)\n                                return(memPos_27, sub(abi_encode_uint256_uint256_uint256_bool(memPos_27, _96, _97, _98, value_12), memPos_27))\n                            }\n                            case 0xbf5a0c59 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                /// @src 8:13809:13816  \"uint256\"\n                                let var_1 := modifier_notZeroAddress(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ abi_decode_address())\n                                let memPos_28 := mload(64)\n                                mstore(memPos_28, var_1)\n                                return(memPos_28, 32)\n                            }\n                            case 0xcd861e16 {\n                                if callvalue() { revert(0, 0) }\n                                let _99 := 32\n                                if slt(add(calldatasize(), not(3)), _99) { revert(0, 0) }\n                                let value0_8 := abi_decode_address()\n                                /// @src 8:3824:3832  \"_address\"\n                                fun_notZeroAddress(value0_8)\n                                /// @src 8:17258:17319  \"IDappadVesting.Vesting memory currentVesting = defaultVesting\"\n                                let var_currentVesting_mpos_3 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting_37989()\n                                let _100 := and(value0_8, sub(shl(160, 1), 1))\n                                mstore(0, _100)\n                                mstore(_99, /** @src 8:17334:17348  \"customVestings\" */ 0x0f)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let dataSlot_9 := keccak256(0, 64)\n                                /// @src 8:17330:17449  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                                if /** @src 8:17334:17378  \"customVestings[userAddress].vestingCount > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(dataSlot_9)))\n                                /// @src 8:17330:17449  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                                {\n                                    /// @src 8:17394:17438  \"currentVesting = customVestings[userAddress]\"\n                                    var_currentVesting_mpos_3 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting(dataSlot_9)\n                                }\n                                /// @src 8:17467:17499  \"uint256 unclaimedTokenAmount = 0\"\n                                let var_unclaimedTokenAmount := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                /// @src 8:17542:17580  \"getUserTotalVestingAmount(userAddress)\"\n                                let expr_17 := /** @src 8:13809:13816  \"uint256\" */ modifier_notZeroAddress(/** @src 8:17542:17580  \"getUserTotalVestingAmount(userAddress)\" */ value0_8)\n                                /// @src 8:17596:17609  \"uint256 i = 0\"\n                                let var_i_3 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                /// @src 8:17591:17838  \"for (uint256 i = 0; i < currentVesting.vestingCount; i++) {...\"\n                                for { }\n                                /** @src 8:17305:17319  \"defaultVesting\" */ 0x01\n                                /// @src 8:17596:17609  \"uint256 i = 0\"\n                                {\n                                    /// @src 8:17644:17647  \"i++\"\n                                    var_i_3 := increment_uint256(var_i_3)\n                                }\n                                {\n                                    /// @src 8:17611:17642  \"i < currentVesting.vestingCount\"\n                                    if iszero(lt(var_i_3, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:17615:17642  \"currentVesting.vestingCount\" */ var_currentVesting_mpos_3)))\n                                    /// @src 8:17611:17642  \"i < currentVesting.vestingCount\"\n                                    { break }\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    mstore(0, _100)\n                                    mstore(_99, /** @src 8:17668:17682  \"vestingClaimed\" */ 0x10)\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    let dataSlot_10 := keccak256(0, 64)\n                                    mstore(0, var_i_3)\n                                    mstore(_99, dataSlot_10)\n                                    /// @src 8:17663:17828  \"if (!vestingClaimed[userAddress][i]) {...\"\n                                    if /** @src 8:17667:17698  \"!vestingClaimed[userAddress][i]\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(0, 64)), 0xff))\n                                    /// @src 8:17663:17828  \"if (!vestingClaimed[userAddress][i]) {...\"\n                                    {\n                                        /// @src 8:17718:17813  \"unclaimedTokenAmount += (userTotalVestingAmount * currentVesting.vestingPercentages[i]) / 10000\"\n                                        var_unclaimedTokenAmount := checked_add_uint256(var_unclaimedTokenAmount, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ div(/** @src 8:17743:17804  \"userTotalVestingAmount * currentVesting.vestingPercentages[i]\" */ checked_mul_uint256(expr_17, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:17768:17804  \"currentVesting.vestingPercentages[i]\" */ memory_array_index_access_uint256_dyn(/** @src 8:17768:17801  \"currentVesting.vestingPercentages\" */ mload(add(var_currentVesting_mpos_3, 96)), /** @src 8:17768:17804  \"currentVesting.vestingPercentages[i]\" */ var_i_3))), /** @src 8:17808:17813  \"10000\" */ 0x2710))\n                                    }\n                                }\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let memPos_29 := mload(64)\n                                mstore(memPos_29, var_unclaimedTokenAmount)\n                                return(memPos_29, _99)\n                            }\n                            case 0xcfa0ef64 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_9 := abi_decode_address()\n                                let offset_1 := calldataload(36)\n                                let _101 := 0xffffffffffffffff\n                                if gt(offset_1, _101) { revert(0, 0) }\n                                let value1_3 := abi_decode_struct_Vesting(add(4, offset_1), calldatasize())\n                                /// @src 8:4020:4028  \"_address\"\n                                fun_onlyOwnerOrAdmin(/** @src 8:10801:10811  \"msg.sender\" */ caller())\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let _102 := and(value0_9, sub(shl(160, 1), 1))\n                                mstore(0, _102)\n                                /// @src 8:10838:10852  \"customVestings\"\n                                let _103 := 0x0f\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let _104 := 32\n                                mstore(_104, /** @src 8:10838:10852  \"customVestings\" */ _103)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let dataSlot_11 := keccak256(0, 64)\n                                sstore(dataSlot_11, mload(value1_3))\n                                let _105 := 1\n                                sstore(add(dataSlot_11, _105), mload(add(value1_3, _104)))\n                                sstore(add(dataSlot_11, 2), mload(add(value1_3, 64)))\n                                let _106 := 3\n                                let memberSlot := add(dataSlot_11, _106)\n                                let _107 := add(value1_3, 96)\n                                let _108 := mload(_107)\n                                let length_3 := mload(_108)\n                                if gt(length_3, _101)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 36)\n                                }\n                                resize_array_array_uint256_dyn_storage(memberSlot, length_3)\n                                let srcPtr_3 := add(_108, _104)\n                                mstore(0, memberSlot)\n                                let data := keccak256(0, _104)\n                                let i_3 := 0\n                                for { } lt(i_3, length_3) { i_3 := add(i_3, _105) }\n                                {\n                                    let _109 := mload(srcPtr_3)\n                                    srcPtr_3 := add(srcPtr_3, _104)\n                                    sstore(add(data, i_3), _109)\n                                }\n                                update_storage_value_offsett_bool_to_bool(add(dataSlot_11, 4), iszero(iszero(mload(add(value1_3, 128)))))\n                                /// @src 8:10886:10920  \"uint256 totalVestingPercentage = 0\"\n                                let var_totalVestingPercentage_1 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                /// @src 8:10980:11028  \"new uint256[](vesting.vestingPercentages.length)\"\n                                let _110 := allocate_and_zero_memory_array_array_uint256_dyn(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:10994:11020  \"vesting.vestingPercentages\" */ mload(_107)))\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                mstore(0, _102)\n                                mstore(_104, /** @src 8:10838:10852  \"customVestings\" */ _103)\n                                /// @src 8:10931:10977  \"customVestings[userAddress].vestingPercentages\"\n                                let _111 := add(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ keccak256(0, 64), _106)\n                                let length_4 := mload(_110)\n                                if gt(length_4, _101)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 36)\n                                }\n                                resize_array_array_uint256_dyn_storage(_111, length_4)\n                                let srcPtr_4 := add(_110, _104)\n                                mstore(0, _111)\n                                let data_1 := keccak256(0, _104)\n                                let i_4 := 0\n                                for { } lt(i_4, length_4) { i_4 := add(i_4, _105) }\n                                {\n                                    let itemValue_1 := mload(srcPtr_4)\n                                    srcPtr_4 := add(srcPtr_4, _104)\n                                    sstore(add(data_1, i_4), itemValue_1)\n                                }\n                                /// @src 8:11043:11056  \"uint256 i = 0\"\n                                let var_i_4 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                /// @src 8:11038:11264  \"for (uint256 i = 0; i < vesting.vestingCount; i++) {...\"\n                                for { }\n                                /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _105\n                                /// @src 8:11043:11056  \"uint256 i = 0\"\n                                {\n                                    /// @src 8:11084:11087  \"i++\"\n                                    var_i_4 := increment_uint256(var_i_4)\n                                }\n                                {\n                                    /// @src 8:11058:11082  \"i < vesting.vestingCount\"\n                                    if iszero(lt(var_i_4, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:11062:11082  \"vesting.vestingCount\" */ value1_3)))\n                                    /// @src 8:11058:11082  \"i < vesting.vestingCount\"\n                                    { break }\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    let _112 := mload(/** @src 8:11155:11184  \"vesting.vestingPercentages[i]\" */ memory_array_index_access_uint256_dyn(/** @src 8:11155:11181  \"vesting.vestingPercentages\" */ mload(_107), /** @src 8:11155:11184  \"vesting.vestingPercentages[i]\" */ var_i_4))\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    mstore(0, _102)\n                                    mstore(_104, /** @src 8:10838:10852  \"customVestings\" */ _103)\n                                    /// @src 8:11103:11152  \"customVestings[userAddress].vestingPercentages[i]\"\n                                    let _113, _114 := storage_array_index_access_uint256_dyn(/** @src 8:11103:11149  \"customVestings[userAddress].vestingPercentages\" */ add(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ keccak256(0, 64), _106), /** @src 8:11103:11152  \"customVestings[userAddress].vestingPercentages[i]\" */ var_i_4)\n                                    /// @src 8:11103:11184  \"customVestings[userAddress].vestingPercentages[i] = vesting.vestingPercentages[i]\"\n                                    update_storage_value_uint256_to_uint256(_113, _114, _112)\n                                    /// @src 8:11198:11253  \"totalVestingPercentage += vesting.vestingPercentages[i]\"\n                                    var_totalVestingPercentage_1 := checked_add_uint256(var_totalVestingPercentage_1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:11224:11253  \"vesting.vestingPercentages[i]\" */ memory_array_index_access_uint256_dyn(/** @src 8:11224:11250  \"vesting.vestingPercentages\" */ mload(_107), /** @src 8:11224:11253  \"vesting.vestingPercentages[i]\" */ var_i_4)))\n                                }\n                                /// @src 8:11274:11354  \"if (totalVestingPercentage != 10000) revert Errors.TotalVestingPercentageError()\"\n                                if /** @src 8:11278:11309  \"totalVestingPercentage != 10000\" */ iszero(eq(var_totalVestingPercentage_1, /** @src 8:11304:11309  \"10000\" */ 0x2710))\n                                /// @src 8:11274:11354  \"if (totalVestingPercentage != 10000) revert Errors.TotalVestingPercentageError()\"\n                                {\n                                    /// @src 8:11318:11354  \"Errors.TotalVestingPercentageError()\"\n                                    let _115 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:11318:11354  \"Errors.TotalVestingPercentageError()\"\n                                    mstore(_115, /** @src 8:10544:10580  \"Errors.TotalVestingPercentageError()\" */ shl(225, 0x74b8a881))\n                                    /// @src 8:11318:11354  \"Errors.TotalVestingPercentageError()\"\n                                    revert(_115, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:11413:11439  \"vesting.vestingPercentages\"\n                                let _mpos_1 := mload(_107)\n                                /// @src 8:11370:11440  \"CustomVestingUpdated(userAddress, vesting, vesting.vestingPercentages)\"\n                                let _116 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                mstore(_116, _102)\n                                mstore(add(_116, _104), 96)\n                                let tail_1 := abi_encode_struct_Vesting(value1_3, add(_116, 96))\n                                mstore(add(_116, 64), sub(tail_1, _116))\n                                /// @src 8:11370:11440  \"CustomVestingUpdated(userAddress, vesting, vesting.vestingPercentages)\"\n                                log1(_116, sub(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ abi_encode_array_uint256_dyn(_mpos_1, tail_1), /** @src 8:11370:11440  \"CustomVestingUpdated(userAddress, vesting, vesting.vestingPercentages)\" */ _116), 0x3bde95f8dbdfe169f6663dd0f17dd76cfe84cca069d48fcda8275c0ef25646d6)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let memPos_30 := mload(64)\n                                mstore(memPos_30, _105)\n                                return(memPos_30, _104)\n                            }\n                            case 0xd547741f {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value_13 := calldataload(4)\n                                let value1_4 := abi_decode_address_37972()\n                                mstore(0, value_13)\n                                mstore(32, 0)\n                                /// @src 0:2475:2479  \"role\"\n                                fun_checkRole(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ keccak256(0, 64), 1)))\n                                /// @src 0:4747:4773  \"_revokeRole(role, account)\"\n                                pop(fun_revokeRole(value_13, value1_4))\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                return(0, 0)\n                            }\n                            case 0xd8f3c99d {\n                                if callvalue() { revert(0, 0) }\n                                let param, param_1, param_2, param_3 := abi_decode_array_address_dyn_calldatat_array_struct_Vesting_calldata_dyn_calldata(calldatasize())\n                                /// @src 8:4020:4028  \"_address\"\n                                fun_onlyOwnerOrAdmin(/** @src 8:11606:11616  \"msg.sender\" */ caller())\n                                /// @src 8:11643:11729  \"if (userAddresses.length != vestings.length) revert Errors.ArraysLengthMismatchError()\"\n                                if /** @src 8:11647:11686  \"userAddresses.length != vestings.length\" */ iszero(eq(param_1, param_3))\n                                /// @src 8:11643:11729  \"if (userAddresses.length != vestings.length) revert Errors.ArraysLengthMismatchError()\"\n                                {\n                                    /// @src 8:11695:11729  \"Errors.ArraysLengthMismatchError()\"\n                                    let _117 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:11695:11729  \"Errors.ArraysLengthMismatchError()\"\n                                    mstore(_117, shl(225, 0x07cf3473))\n                                    revert(_117, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:11745:11758  \"uint256 i = 0\"\n                                let var_i_5 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                /// @src 8:11740:12581  \"for (uint256 i = 0; i < userAddresses.length; i++) {...\"\n                                for { }\n                                /** @src 8:11760:11784  \"i < userAddresses.length\" */ lt(var_i_5, param_1)\n                                /// @src 8:11745:11758  \"uint256 i = 0\"\n                                {\n                                    /// @src 8:11786:11789  \"i++\"\n                                    var_i_5 := increment_uint256(var_i_5)\n                                }\n                                {\n                                    /// @src 8:11805:11873  \"if (userAddresses[i] == address(0)) revert Errors.ZeroAddressError()\"\n                                    if /** @src 8:11809:11839  \"userAddresses[i] == address(0)\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(/** @src 8:11809:11825  \"userAddresses[i]\" */ read_from_calldatat_address(calldata_array_index_access_uint256_dyn_calldata(param, param_1, var_i_5)), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                                    /// @src 8:11805:11873  \"if (userAddresses[i] == address(0)) revert Errors.ZeroAddressError()\"\n                                    {\n                                        /// @src 8:11848:11873  \"Errors.ZeroAddressError()\"\n                                        let _118 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                        /// @src 8:11848:11873  \"Errors.ZeroAddressError()\"\n                                        mstore(_118, shl(224, 0x3efa09af))\n                                        revert(_118, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                    }\n                                    /// @src 8:11923:11934  \"vestings[i]\"\n                                    let _119 := calldata_array_index_access_struct_Vesting_calldata_dyn_calldata(param_2, param_3, var_i_5)\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    mstore(0, and(/** @src 8:11903:11919  \"userAddresses[i]\" */ read_from_calldatat_address(calldata_array_index_access_uint256_dyn_calldata(param, param_1, var_i_5)), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                                    mstore(0x20, /** @src 8:11888:11902  \"customVestings\" */ 0x0f)\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    let dataSlot_12 := keccak256(0, 64)\n                                    sstore(dataSlot_12, calldataload(_119))\n                                    sstore(add(dataSlot_12, 1), calldataload(add(_119, 0x20)))\n                                    sstore(add(dataSlot_12, 2), calldataload(add(_119, 64)))\n                                    let memberSlot_1 := add(dataSlot_12, 3)\n                                    let memberValue, memberValue_1 := access_calldata_tail_array_uint256_dyn_calldata(_119, add(_119, 96))\n                                    if gt(memberValue_1, 0xffffffffffffffff)\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(0, 0x24)\n                                    }\n                                    resize_array_array_uint256_dyn_storage(memberSlot_1, memberValue_1)\n                                    let srcPtr_5 := memberValue\n                                    mstore(0, memberSlot_1)\n                                    let data_2 := keccak256(0, 0x20)\n                                    let i_5 := 0\n                                    for { } lt(i_5, memberValue_1) { i_5 := add(i_5, 1) }\n                                    {\n                                        let itemValue_2 := calldataload(srcPtr_5)\n                                        srcPtr_5 := add(srcPtr_5, 0x20)\n                                        sstore(add(data_2, i_5), itemValue_2)\n                                    }\n                                    if iszero(eq(calldataload(add(_119, 128)), iszero(iszero(calldataload(add(_119, 128)))))) { revert(0, 0) }\n                                    update_storage_value_offsett_bool_to_bool(add(dataSlot_12, 4), calldataload(add(_119, 128)))\n                                    /// @src 8:11949:11983  \"uint256 totalVestingPercentage = 0\"\n                                    let var_totalVestingPercentage_2 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                    /// @src 8:12066:12077  \"vestings[i]\"\n                                    let expr_offset := calldata_array_index_access_struct_Vesting_calldata_dyn_calldata(param_2, param_3, var_i_5)\n                                    /// @src 8:12066:12096  \"vestings[i].vestingPercentages\"\n                                    let expr_offset_1, expr_length := access_calldata_tail_array_uint256_dyn_calldata(expr_offset, add(expr_offset, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 96))\n                                    /// @src 8:12052:12104  \"new uint256[](vestings[i].vestingPercentages.length)\"\n                                    let _120 := allocate_and_zero_memory_array_array_uint256_dyn(/** @src 8:12066:12103  \"vestings[i].vestingPercentages.length\" */ expr_length)\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    mstore(0, and(/** @src 8:12013:12029  \"userAddresses[i]\" */ read_from_calldatat_address(calldata_array_index_access_uint256_dyn_calldata(param, param_1, var_i_5)), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                                    mstore(0x20, /** @src 8:11888:11902  \"customVestings\" */ 0x0f)\n                                    /// @src 8:11998:12049  \"customVestings[userAddresses[i]].vestingPercentages\"\n                                    let _121 := add(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ keccak256(0, 64), 3)\n                                    let length_5 := mload(_120)\n                                    if gt(length_5, 0xffffffffffffffff)\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(0, 0x24)\n                                    }\n                                    resize_array_array_uint256_dyn_storage(_121, length_5)\n                                    let srcPtr_6 := add(_120, 0x20)\n                                    mstore(0, _121)\n                                    let data_3 := keccak256(0, 0x20)\n                                    let i_6 := 0\n                                    for { } lt(i_6, length_5) { i_6 := add(i_6, 1) }\n                                    {\n                                        let itemValue_3 := mload(srcPtr_6)\n                                        srcPtr_6 := add(srcPtr_6, 0x20)\n                                        sstore(add(data_3, i_6), itemValue_3)\n                                    }\n                                    /// @src 8:12123:12136  \"uint256 j = 0\"\n                                    let var_j := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                    /// @src 8:12118:12373  \"for (uint256 j = 0; j < vestings[i].vestingCount; j++) {...\"\n                                    for { }\n                                    /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 1\n                                    /// @src 8:12123:12136  \"uint256 j = 0\"\n                                    {\n                                        /// @src 8:12168:12171  \"j++\"\n                                        var_j := increment_uint256(var_j)\n                                    }\n                                    {\n                                        /// @src 8:12138:12166  \"j < vestings[i].vestingCount\"\n                                        if iszero(lt(var_j, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ calldataload(/** @src 8:12142:12153  \"vestings[i]\" */ calldata_array_index_access_struct_Vesting_calldata_dyn_calldata(param_2, param_3, var_i_5))))\n                                        /// @src 8:12138:12166  \"j < vestings[i].vestingCount\"\n                                        { break }\n                                        /// @src 8:12248:12259  \"vestings[i]\"\n                                        let expr_offset_2 := calldata_array_index_access_struct_Vesting_calldata_dyn_calldata(param_2, param_3, var_i_5)\n                                        /// @src 8:12248:12278  \"vestings[i].vestingPercentages\"\n                                        let expr_offset_3, expr_length_1 := access_calldata_tail_array_uint256_dyn_calldata(expr_offset_2, add(expr_offset_2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 96))\n                                        let value_14 := calldataload(/** @src 8:12248:12281  \"vestings[i].vestingPercentages[j]\" */ calldata_array_index_access_uint256_dyn_calldata(expr_offset_3, expr_length_1, var_j))\n                                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                        mstore(0, and(/** @src 8:12206:12222  \"userAddresses[i]\" */ read_from_calldatat_address(calldata_array_index_access_uint256_dyn_calldata(param, param_1, var_i_5)), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                                        mstore(0x20, /** @src 8:11888:11902  \"customVestings\" */ 0x0f)\n                                        /// @src 8:12191:12245  \"customVestings[userAddresses[i]].vestingPercentages[j]\"\n                                        let _122, _123 := storage_array_index_access_uint256_dyn(/** @src 8:12191:12242  \"customVestings[userAddresses[i]].vestingPercentages\" */ add(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ keccak256(0, 64), 3), /** @src 8:12191:12245  \"customVestings[userAddresses[i]].vestingPercentages[j]\" */ var_j)\n                                        /// @src 8:12191:12281  \"customVestings[userAddresses[i]].vestingPercentages[j] = vestings[i].vestingPercentages[j]\"\n                                        update_storage_value_uint256_to_uint256(_122, _123, value_14)\n                                        /// @src 8:12325:12336  \"vestings[i]\"\n                                        let expr_offset_4 := calldata_array_index_access_struct_Vesting_calldata_dyn_calldata(param_2, param_3, var_i_5)\n                                        /// @src 8:12325:12355  \"vestings[i].vestingPercentages\"\n                                        let expr_offset_5, expr_length_2 := access_calldata_tail_array_uint256_dyn_calldata(expr_offset_4, add(expr_offset_4, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 96))\n                                        /// @src 8:12299:12358  \"totalVestingPercentage += vestings[i].vestingPercentages[j]\"\n                                        var_totalVestingPercentage_2 := checked_add_uint256(var_totalVestingPercentage_2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ calldataload(/** @src 8:12325:12358  \"vestings[i].vestingPercentages[j]\" */ calldata_array_index_access_uint256_dyn_calldata(expr_offset_5, expr_length_2, var_j)))\n                                    }\n                                    /// @src 8:12387:12467  \"if (totalVestingPercentage != 10000) revert Errors.TotalVestingPercentageError()\"\n                                    if /** @src 8:12391:12422  \"totalVestingPercentage != 10000\" */ iszero(eq(var_totalVestingPercentage_2, /** @src 8:12417:12422  \"10000\" */ 0x2710))\n                                    /// @src 8:12387:12467  \"if (totalVestingPercentage != 10000) revert Errors.TotalVestingPercentageError()\"\n                                    {\n                                        /// @src 8:12431:12467  \"Errors.TotalVestingPercentageError()\"\n                                        let _124 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                        /// @src 8:12431:12467  \"Errors.TotalVestingPercentageError()\"\n                                        mstore(_124, /** @src 8:10544:10580  \"Errors.TotalVestingPercentageError()\" */ shl(225, 0x74b8a881))\n                                        /// @src 8:12431:12467  \"Errors.TotalVestingPercentageError()\"\n                                        revert(_124, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                    }\n                                    /// @src 8:12508:12524  \"userAddresses[i]\"\n                                    let expr_18 := read_from_calldatat_address(calldata_array_index_access_uint256_dyn_calldata(param, param_1, var_i_5))\n                                    /// @src 8:12526:12537  \"vestings[i]\"\n                                    let expr_offset_6 := calldata_array_index_access_struct_Vesting_calldata_dyn_calldata(param_2, param_3, var_i_5)\n                                    /// @src 8:12539:12550  \"vestings[i]\"\n                                    let expr_offset_7 := calldata_array_index_access_struct_Vesting_calldata_dyn_calldata(param_2, param_3, var_i_5)\n                                    /// @src 8:12539:12569  \"vestings[i].vestingPercentages\"\n                                    let expr_offset_8, expr_length_3 := access_calldata_tail_array_uint256_dyn_calldata(expr_offset_7, add(expr_offset_7, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 96))\n                                    /// @src 8:12487:12570  \"CustomVestingUpdated(userAddresses[i], vestings[i], vestings[i].vestingPercentages)\"\n                                    let _125 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    mstore(_125, and(expr_18, sub(shl(160, 1), 1)))\n                                    mstore(add(_125, 0x20), 96)\n                                    mstore(add(_125, 96), calldataload(expr_offset_6))\n                                    mstore(add(_125, 128), calldataload(add(expr_offset_6, 0x20)))\n                                    let _126 := 0xa0\n                                    mstore(add(_125, _126), calldataload(add(expr_offset_6, 64)))\n                                    let rel_offset_of_tail := calldataload(add(expr_offset_6, 96))\n                                    if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), expr_offset_6), not(30)))) { revert(0, 0) }\n                                    let value_15 := add(rel_offset_of_tail, expr_offset_6)\n                                    let length_6 := calldataload(value_15)\n                                    let value_16 := add(value_15, 0x20)\n                                    if gt(length_6, 0xffffffffffffffff) { revert(0, 0) }\n                                    if sgt(value_16, sub(calldatasize(), shl(5, length_6))) { revert(0, 0) }\n                                    mstore(add(_125, 192), _126)\n                                    let tail_2 := abi_encode_array_uint256_dyn_calldata(value_16, length_6, add(_125, 256))\n                                    mstore(add(_125, 224), iszero(iszero(abi_decode_bool(add(expr_offset_6, 128)))))\n                                    mstore(add(_125, 64), sub(tail_2, _125))\n                                    /// @src 8:12487:12570  \"CustomVestingUpdated(userAddresses[i], vestings[i], vestings[i].vestingPercentages)\"\n                                    log1(_125, sub(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ abi_encode_array_uint256_dyn_calldata(expr_offset_8, expr_length_3, tail_2), /** @src 8:12487:12570  \"CustomVestingUpdated(userAddresses[i], vestings[i], vestings[i].vestingPercentages)\" */ _125), 0x3bde95f8dbdfe169f6663dd0f17dd76cfe84cca069d48fcda8275c0ef25646d6)\n                                }\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let memPos_31 := mload(64)\n                                mstore(memPos_31, 1)\n                                return(memPos_31, 0x20)\n                            }\n                            case 0xdaf6ca30 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let value_17 := and(sload(/** @src 8:888:919  \"IDappadSale public saleContract\" */ 19), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1))\n                                let memPos_32 := mload(64)\n                                mstore(memPos_32, value_17)\n                                return(memPos_32, 32)\n                            }\n                            case 0xe31e62d9 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 8:720:786  \"mapping(address => mapping(uint256 => bool)) public vestingClaimed\" */ 16)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let dataSlot_13 := keccak256(0, 64)\n                                mstore(0, calldataload(36))\n                                mstore(32, dataSlot_13)\n                                let value_18 := and(sload(keccak256(0, 64)), 0xff)\n                                let memPos_33 := mload(64)\n                                mstore(memPos_33, iszero(iszero(value_18)))\n                                return(memPos_33, 32)\n                            }\n                            case 0xe480bd79 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let _127 := sload(/** @src 8:586:643  \"IDappadVesting.VestingStatistics public vestingStatistics\" */ 13)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let _128 := sload(/** @src 8:586:643  \"IDappadVesting.VestingStatistics public vestingStatistics\" */ 14)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let memPos_34 := mload(64)\n                                mstore(memPos_34, _127)\n                                mstore(add(memPos_34, 32), _128)\n                                return(memPos_34, 64)\n                            }\n                            case 0xe49f6835 {\n                                if callvalue() { revert(0, 0) }\n                                let param_4, param_5, param_6, param_7 := abi_decode_array_address_dyn_calldatat_array_struct_Vesting_calldata_dyn_calldata(calldatasize())\n                                /// @src 8:4020:4028  \"_address\"\n                                fun_onlyOwnerOrAdmin(/** @src 8:9463:9473  \"msg.sender\" */ caller())\n                                /// @src 8:9500:9585  \"if (userAddresses.length != amounts.length) revert Errors.ArraysLengthMismatchError()\"\n                                if /** @src 8:9504:9542  \"userAddresses.length != amounts.length\" */ iszero(eq(param_5, param_7))\n                                /// @src 8:9500:9585  \"if (userAddresses.length != amounts.length) revert Errors.ArraysLengthMismatchError()\"\n                                {\n                                    /// @src 8:9551:9585  \"Errors.ArraysLengthMismatchError()\"\n                                    let _129 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:9551:9585  \"Errors.ArraysLengthMismatchError()\"\n                                    mstore(_129, /** @src 8:11695:11729  \"Errors.ArraysLengthMismatchError()\" */ shl(225, 0x07cf3473))\n                                    /// @src 8:9551:9585  \"Errors.ArraysLengthMismatchError()\"\n                                    revert(_129, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:9601:9614  \"uint256 i = 0\"\n                                let var_i_6 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                /// @src 8:9596:9872  \"for (uint256 i = 0; i < userAddresses.length; i++) {...\"\n                                for { }\n                                /** @src 8:9616:9640  \"i < userAddresses.length\" */ lt(var_i_6, param_5)\n                                /// @src 8:9601:9614  \"uint256 i = 0\"\n                                {\n                                    /// @src 8:9642:9645  \"i++\"\n                                    var_i_6 := increment_uint256(var_i_6)\n                                }\n                                {\n                                    /// @src 8:9661:9716  \"if (amounts[i] == 0) revert Errors.InvalidAmountError()\"\n                                    if /** @src 8:9665:9680  \"amounts[i] == 0\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ calldataload(/** @src 8:9665:9675  \"amounts[i]\" */ calldata_array_index_access_uint256_dyn_calldata(param_6, param_7, var_i_6)))\n                                    /// @src 8:9661:9716  \"if (amounts[i] == 0) revert Errors.InvalidAmountError()\"\n                                    {\n                                        /// @src 8:9689:9716  \"Errors.InvalidAmountError()\"\n                                        let _130 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                        /// @src 8:9689:9716  \"Errors.InvalidAmountError()\"\n                                        mstore(_130, /** @src 8:9165:9192  \"Errors.InvalidAmountError()\" */ shl(227, 0x0f51ac85))\n                                        /// @src 8:9689:9716  \"Errors.InvalidAmountError()\"\n                                        revert(_130, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                    }\n                                    let _131 := sub(shl(160, 1), 1)\n                                    /// @src 8:9730:9798  \"if (userAddresses[i] == address(0)) revert Errors.ZeroAddressError()\"\n                                    if /** @src 8:9734:9764  \"userAddresses[i] == address(0)\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(/** @src 8:9734:9750  \"userAddresses[i]\" */ read_from_calldatat_address(calldata_array_index_access_uint256_dyn_calldata(param_4, param_5, var_i_6)), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _131))\n                                    /// @src 8:9730:9798  \"if (userAddresses[i] == address(0)) revert Errors.ZeroAddressError()\"\n                                    {\n                                        /// @src 8:9773:9798  \"Errors.ZeroAddressError()\"\n                                        let _132 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                        /// @src 8:9773:9798  \"Errors.ZeroAddressError()\"\n                                        mstore(_132, /** @src 8:11848:11873  \"Errors.ZeroAddressError()\" */ shl(224, 0x3efa09af))\n                                        /// @src 8:9773:9798  \"Errors.ZeroAddressError()\"\n                                        revert(_132, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                    }\n                                    let value_19 := calldataload(/** @src 8:9851:9861  \"amounts[i]\" */ calldata_array_index_access_uint256_dyn_calldata(param_6, param_7, var_i_6))\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    mstore(0, and(/** @src 8:9831:9847  \"userAddresses[i]\" */ read_from_calldatat_address(calldata_array_index_access_uint256_dyn_calldata(param_4, param_5, var_i_6)), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _131))\n                                    mstore(0x20, /** @src 8:9813:9830  \"investmentAmounts\" */ 0x11)\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    sstore(keccak256(0, 64), value_19)\n                                }\n                                /// @src 8:9887:9939  \"UserInvestmentAmountsUpdated(userAddresses, amounts)\"\n                                let _133 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                let tail_3 := add(_133, 64)\n                                mstore(_133, 64)\n                                let pos_13 := tail_3\n                                mstore(tail_3, param_5)\n                                pos_13 := add(_133, 96)\n                                let srcPtr_7 := param_4\n                                let i_7 := 0\n                                for { } lt(i_7, param_5) { i_7 := add(i_7, 1) }\n                                {\n                                    let value_20 := calldataload(srcPtr_7)\n                                    let _134 := and(value_20, sub(shl(160, 1), 1))\n                                    if iszero(eq(value_20, _134)) { revert(0, 0) }\n                                    mstore(pos_13, _134)\n                                    let _135 := 0x20\n                                    pos_13 := add(pos_13, _135)\n                                    srcPtr_7 := add(srcPtr_7, _135)\n                                }\n                                mstore(add(_133, 0x20), sub(pos_13, _133))\n                                /// @src 8:9887:9939  \"UserInvestmentAmountsUpdated(userAddresses, amounts)\"\n                                log1(_133, sub(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ abi_encode_array_uint256_dyn_calldata(param_6, param_7, pos_13), /** @src 8:9887:9939  \"UserInvestmentAmountsUpdated(userAddresses, amounts)\" */ _133), 0x7b9af4016ea794462793972f3d17adc8c498aac9f3baf41022e8469fa8f76bb2)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let memPos_35 := mload(64)\n                                mstore(memPos_35, 1)\n                                return(memPos_35, 0x20)\n                            }\n                            case 0xe7b6167d {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value_21 := calldataload(4)\n                                /// @src 8:4020:4028  \"_address\"\n                                fun_onlyOwnerOrAdmin(/** @src 8:12694:12704  \"msg.sender\" */ caller())\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                sstore(/** @src 8:12731:12769  \"vestingStatistics.totalSaleTokenAmount\" */ 14, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ value_21)\n                                /// @src 8:12794:12829  \"TotalSaleTokenAmountUpdated(amount)\"\n                                let _136 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                mstore(_136, value_21)\n                                /// @src 8:12794:12829  \"TotalSaleTokenAmountUpdated(amount)\"\n                                log1(_136, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 32, /** @src 8:12794:12829  \"TotalSaleTokenAmountUpdated(amount)\" */ 0x8feb0a7153cadea0dc333f048b85018294754240c350d2b2c10a4c0b8ccac44d)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let memPos_36 := mload(64)\n                                mstore(memPos_36, 1)\n                                return(memPos_36, 32)\n                            }\n                            case 0xe985e367 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let value_22 := and(sload(/** @src 8:851:882  \"IERC20Extented public saleToken\" */ 18), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1))\n                                let memPos_37 := mload(64)\n                                mstore(memPos_37, value_22)\n                                return(memPos_37, 32)\n                            }\n                            case 0xed6e45c8 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 8:3824:3832  \"_address\"\n                                fun_notZeroAddress(/** @src 8:6198:6208  \"msg.sender\" */ caller())\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let _137 := sub(shl(160, 1), 1)\n                                /// @src 8:6235:6679  \"if(vestingAddresses.saleContractAddress != address(0)) {...\"\n                                switch /** @src 8:6238:6288  \"vestingAddresses.saleContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(/** @src 8:6238:6274  \"vestingAddresses.saleContractAddress\" */ 10), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _137)))\n                                case /** @src 8:6235:6679  \"if(vestingAddresses.saleContractAddress != address(0)) {...\" */ 0 {\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    mstore(0, /** @src 8:6198:6208  \"msg.sender\" */ caller())\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    mstore(0x20, /** @src 8:6598:6615  \"investmentAmounts\" */ 0x11)\n                                    /// @src 8:6594:6668  \"if (investmentAmounts[msg.sender] == 0) revert Errors.NotJoinedSaleError()\"\n                                    if /** @src 8:6598:6632  \"investmentAmounts[msg.sender] == 0\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(keccak256(0, 64)))\n                                    /// @src 8:6594:6668  \"if (investmentAmounts[msg.sender] == 0) revert Errors.NotJoinedSaleError()\"\n                                    {\n                                        /// @src 8:6641:6668  \"Errors.NotJoinedSaleError()\"\n                                        let _138 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                        /// @src 8:6641:6668  \"Errors.NotJoinedSaleError()\"\n                                        mstore(_138, /** @src 8:4732:4759  \"Errors.NotJoinedSaleError()\" */ shl(224, 0x2f0e159d))\n                                        /// @src 8:6641:6668  \"Errors.NotJoinedSaleError()\"\n                                        revert(_138, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                    }\n                                }\n                                default /// @src 8:6235:6679  \"if(vestingAddresses.saleContractAddress != address(0)) {...\"\n                                {\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    let cleaned_13 := and(sload(/** @src 8:6308:6320  \"saleContract\" */ 0x13), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _137)\n                                    /// @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                                    let _139 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                                    mstore(_139, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(225, 0x2f43f2d3))\n                                    mstore(/** @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ add(_139, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:6198:6208  \"msg.sender\" */ caller())\n                                    /// @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                                    let _140 := 32\n                                    let _141 := staticcall(gas(), cleaned_13, _139, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36, /** @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ _139, _140)\n                                    if iszero(_141)\n                                    {\n                                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                        let pos_14 := mload(64)\n                                        returndatacopy(pos_14, 0, returndatasize())\n                                        revert(pos_14, returndatasize())\n                                    }\n                                    /// @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                                    let expr_19 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                    /// @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                                    if _141\n                                    {\n                                        let _142 := _140\n                                        if gt(_140, returndatasize()) { _142 := returndatasize() }\n                                        finalize_allocation(_139, _142)\n                                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                        if slt(sub(/** @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ add(_139, _142), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _139), /** @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ _140)\n                                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                        { revert(0, 0) }\n                                        /// @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\"\n                                        expr_19 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_139)\n                                    }\n                                    /// @src 8:6304:6397  \"if (saleContract.getUserInvestmentAmount(msg.sender) == 0) revert Errors.NotJoinedSaleError()\"\n                                    if /** @src 8:6308:6361  \"saleContract.getUserInvestmentAmount(msg.sender) == 0\" */ iszero(expr_19)\n                                    /// @src 8:6304:6397  \"if (saleContract.getUserInvestmentAmount(msg.sender) == 0) revert Errors.NotJoinedSaleError()\"\n                                    {\n                                        /// @src 8:6370:6397  \"Errors.NotJoinedSaleError()\"\n                                        let _143 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                        /// @src 8:6370:6397  \"Errors.NotJoinedSaleError()\"\n                                        mstore(_143, /** @src 8:4732:4759  \"Errors.NotJoinedSaleError()\" */ shl(224, 0x2f0e159d))\n                                        /// @src 8:6370:6397  \"Errors.NotJoinedSaleError()\"\n                                        revert(_143, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                    }\n                                    /// @src 8:6416:6447  \"saleContract.getRefundEnabled()\"\n                                    let _144 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:6416:6447  \"saleContract.getRefundEnabled()\"\n                                    mstore(_144, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(225, 0x42e037d5))\n                                    /// @src 8:6416:6447  \"saleContract.getRefundEnabled()\"\n                                    let _145 := staticcall(gas(), cleaned_13, _144, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4, /** @src 8:6416:6447  \"saleContract.getRefundEnabled()\" */ _144, /** @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ _140)\n                                    /// @src 8:6416:6447  \"saleContract.getRefundEnabled()\"\n                                    if iszero(_145)\n                                    {\n                                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                        let pos_15 := mload(64)\n                                        returndatacopy(pos_15, 0, returndatasize())\n                                        revert(pos_15, returndatasize())\n                                    }\n                                    /// @src 8:6416:6447  \"saleContract.getRefundEnabled()\"\n                                    let expr_20 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                    /// @src 8:6416:6447  \"saleContract.getRefundEnabled()\"\n                                    if _145\n                                    {\n                                        let _146 := /** @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ _140\n                                        /// @src 8:6416:6447  \"saleContract.getRefundEnabled()\"\n                                        if gt(/** @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ _140, /** @src 8:6416:6447  \"saleContract.getRefundEnabled()\" */ returndatasize()) { _146 := returndatasize() }\n                                        finalize_allocation(_144, _146)\n                                        expr_20 := abi_decode_bool_fromMemory(_144, add(_144, _146))\n                                    }\n                                    /// @src 8:6412:6564  \"if (saleContract.getRefundEnabled()) {...\"\n                                    if expr_20\n                                    {\n                                        /// @src 8:6471:6511  \"saleContract.getUserRefunded(msg.sender)\"\n                                        let _147 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                        /// @src 8:6471:6511  \"saleContract.getUserRefunded(msg.sender)\"\n                                        mstore(_147, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0xcf72d3db))\n                                        mstore(/** @src 8:6471:6511  \"saleContract.getUserRefunded(msg.sender)\" */ add(_147, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:6198:6208  \"msg.sender\" */ caller())\n                                        /// @src 8:6471:6511  \"saleContract.getUserRefunded(msg.sender)\"\n                                        let _148 := staticcall(gas(), cleaned_13, _147, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36, /** @src 8:6471:6511  \"saleContract.getUserRefunded(msg.sender)\" */ _147, /** @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ _140)\n                                        /// @src 8:6471:6511  \"saleContract.getUserRefunded(msg.sender)\"\n                                        if iszero(_148)\n                                        {\n                                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                            let pos_16 := mload(64)\n                                            returndatacopy(pos_16, 0, returndatasize())\n                                            revert(pos_16, returndatasize())\n                                        }\n                                        /// @src 8:6471:6511  \"saleContract.getUserRefunded(msg.sender)\"\n                                        let expr_21 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                        /// @src 8:6471:6511  \"saleContract.getUserRefunded(msg.sender)\"\n                                        if _148\n                                        {\n                                            let _149 := /** @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ _140\n                                            /// @src 8:6471:6511  \"saleContract.getUserRefunded(msg.sender)\"\n                                            if gt(/** @src 8:6308:6356  \"saleContract.getUserInvestmentAmount(msg.sender)\" */ _140, /** @src 8:6471:6511  \"saleContract.getUserRefunded(msg.sender)\" */ returndatasize()) { _149 := returndatasize() }\n                                            finalize_allocation(_147, _149)\n                                            expr_21 := abi_decode_bool_fromMemory(_147, add(_147, _149))\n                                        }\n                                        /// @src 8:6467:6549  \"if (saleContract.getUserRefunded(msg.sender)) revert Errors.AlreadyRefundedError()\"\n                                        if expr_21\n                                        {\n                                            /// @src 8:6520:6549  \"Errors.AlreadyRefundedError()\"\n                                            let _150 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                            /// @src 8:6520:6549  \"Errors.AlreadyRefundedError()\"\n                                            mstore(_150, /** @src 8:4611:4640  \"Errors.AlreadyRefundedError()\" */ shl(226, 0x2321792f))\n                                            /// @src 8:6520:6549  \"Errors.AlreadyRefundedError()\"\n                                            revert(_150, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                        }\n                                    }\n                                }\n                                /// @src 8:6715:6752  \"getUserTotalVestingAmount(msg.sender)\"\n                                let expr_22 := /** @src 8:13809:13816  \"uint256\" */ modifier_notZeroAddress(/** @src 8:6198:6208  \"msg.sender\" */ caller())\n                                /// @src 8:6762:6785  \"uint256 claimAmount = 0\"\n                                let var_claimAmount := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                /// @src 8:6796:6857  \"IDappadVesting.Vesting memory currentVesting = defaultVesting\"\n                                let var_currentVesting_mpos_4 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting_37989()\n                                mstore(0, /** @src 8:6198:6208  \"msg.sender\" */ caller())\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let _151 := 0x20\n                                mstore(_151, /** @src 8:6872:6886  \"customVestings\" */ 0x0f)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let dataSlot_14 := keccak256(0, 64)\n                                /// @src 8:6868:6985  \"if (customVestings[msg.sender].vestingCount > 0) {...\"\n                                if /** @src 8:6872:6915  \"customVestings[msg.sender].vestingCount > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(dataSlot_14)))\n                                /// @src 8:6868:6985  \"if (customVestings[msg.sender].vestingCount > 0) {...\"\n                                {\n                                    /// @src 8:6931:6974  \"currentVesting = customVestings[msg.sender]\"\n                                    var_currentVesting_mpos_4 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting(dataSlot_14)\n                                }\n                                /// @src 8:6995:7086  \"if (block.timestamp <= vestingSettings.startDate) revert Errors.VestingsNotClaimableError()\"\n                                if /** @src 8:6999:7043  \"block.timestamp <= vestingSettings.startDate\" */ iszero(gt(/** @src 8:6999:7014  \"block.timestamp\" */ timestamp(), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(/** @src 8:7018:7033  \"vestingSettings\" */ 0x06)))\n                                /// @src 8:6995:7086  \"if (block.timestamp <= vestingSettings.startDate) revert Errors.VestingsNotClaimableError()\"\n                                {\n                                    /// @src 8:7052:7086  \"Errors.VestingsNotClaimableError()\"\n                                    let _152 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:7052:7086  \"Errors.VestingsNotClaimableError()\"\n                                    mstore(_152, /** @src 8:5128:5162  \"Errors.VestingsNotClaimableError()\" */ shl(228, 0x08f78e53))\n                                    /// @src 8:7052:7086  \"Errors.VestingsNotClaimableError()\"\n                                    revert(_152, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:7102:7115  \"uint256 i = 0\"\n                                let var_i_7 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                /// @src 8:7097:7425  \"for (uint256 i = 0; i < currentVesting.vestingCount; i++) {...\"\n                                for { }\n                                /** @src 8:6843:6857  \"defaultVesting\" */ 0x01\n                                /// @src 8:7102:7115  \"uint256 i = 0\"\n                                {\n                                    /// @src 8:7150:7153  \"i++\"\n                                    var_i_7 := increment_uint256(var_i_7)\n                                }\n                                {\n                                    /// @src 8:7117:7148  \"i < currentVesting.vestingCount\"\n                                    if iszero(lt(var_i_7, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:7121:7148  \"currentVesting.vestingCount\" */ var_currentVesting_mpos_4)))\n                                    /// @src 8:7117:7148  \"i < currentVesting.vestingCount\"\n                                    { break }\n                                    /// @src 8:7234:7415  \"if (claimable) {...\"\n                                    if /** @src 8:7186:7220  \"getVestingClaimable(msg.sender, i)\" */ fun_getVestingClaimable(/** @src 8:6198:6208  \"msg.sender\" */ caller(), /** @src 8:7186:7220  \"getVestingClaimable(msg.sender, i)\" */ var_i_7)\n                                    /// @src 8:7234:7415  \"if (claimable) {...\"\n                                    {\n                                        /// @src 8:7267:7346  \"claimAmount += (saleTokenAmount * currentVesting.vestingPercentages[i]) / 10000\"\n                                        var_claimAmount := checked_add_uint256(var_claimAmount, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ div(/** @src 8:7283:7337  \"saleTokenAmount * currentVesting.vestingPercentages[i]\" */ checked_mul_uint256(expr_22, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:7301:7337  \"currentVesting.vestingPercentages[i]\" */ memory_array_index_access_uint256_dyn(/** @src 8:7301:7334  \"currentVesting.vestingPercentages\" */ mload(add(var_currentVesting_mpos_4, 96)), /** @src 8:7301:7337  \"currentVesting.vestingPercentages[i]\" */ var_i_7))), /** @src 8:7341:7346  \"10000\" */ 0x2710))\n                                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                        mstore(0, /** @src 8:6198:6208  \"msg.sender\" */ caller())\n                                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                        mstore(_151, /** @src 8:7364:7378  \"vestingClaimed\" */ 0x10)\n                                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                        let dataSlot_15 := keccak256(0, 64)\n                                        mstore(0, var_i_7)\n                                        mstore(_151, dataSlot_15)\n                                        let dataSlot_16 := keccak256(0, 64)\n                                        sstore(dataSlot_16, or(and(sload(dataSlot_16), not(255)), /** @src 8:6843:6857  \"defaultVesting\" */ 0x01))\n                                    }\n                                }\n                                /// @src 8:7435:7497  \"if(claimAmount == 0) revert Errors.VestingsNotClaimableError()\"\n                                if /** @src 8:7438:7454  \"claimAmount == 0\" */ iszero(var_claimAmount)\n                                /// @src 8:7435:7497  \"if(claimAmount == 0) revert Errors.VestingsNotClaimableError()\"\n                                {\n                                    /// @src 8:7463:7497  \"Errors.VestingsNotClaimableError()\"\n                                    let _153 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:7463:7497  \"Errors.VestingsNotClaimableError()\"\n                                    mstore(_153, /** @src 8:5128:5162  \"Errors.VestingsNotClaimableError()\" */ shl(228, 0x08f78e53))\n                                    /// @src 8:7463:7497  \"Errors.VestingsNotClaimableError()\"\n                                    revert(_153, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                }\n                                let cleaned_14 := and(sload(/** @src 8:7512:7521  \"saleToken\" */ 0x12), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _137)\n                                /// @src 8:7512:7546  \"saleToken.balanceOf(address(this))\"\n                                let _154 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                /// @src 8:7512:7546  \"saleToken.balanceOf(address(this))\"\n                                mstore(_154, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x70a08231))\n                                mstore(/** @src 8:7512:7546  \"saleToken.balanceOf(address(this))\" */ add(_154, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:7540:7544  \"this\" */ address())\n                                /// @src 8:7512:7546  \"saleToken.balanceOf(address(this))\"\n                                let _155 := staticcall(gas(), cleaned_14, _154, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36, /** @src 8:7512:7546  \"saleToken.balanceOf(address(this))\" */ _154, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _151)\n                                /// @src 8:7512:7546  \"saleToken.balanceOf(address(this))\"\n                                if iszero(_155)\n                                {\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    let pos_17 := mload(64)\n                                    returndatacopy(pos_17, 0, returndatasize())\n                                    revert(pos_17, returndatasize())\n                                }\n                                /// @src 8:7512:7546  \"saleToken.balanceOf(address(this))\"\n                                let expr_23 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                /// @src 8:7512:7546  \"saleToken.balanceOf(address(this))\"\n                                if _155\n                                {\n                                    let _156 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _151\n                                    /// @src 8:7512:7546  \"saleToken.balanceOf(address(this))\"\n                                    if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _151, /** @src 8:7512:7546  \"saleToken.balanceOf(address(this))\" */ returndatasize()) { _156 := returndatasize() }\n                                    finalize_allocation(_154, _156)\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    if slt(sub(/** @src 8:7512:7546  \"saleToken.balanceOf(address(this))\" */ add(_154, _156), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _154), _151) { revert(0, 0) }\n                                    /// @src 8:7512:7546  \"saleToken.balanceOf(address(this))\"\n                                    expr_23 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_154)\n                                }\n                                /// @src 8:7508:7610  \"if (saleToken.balanceOf(address(this)) < claimAmount) revert Errors.InsufficientContractBalanceError()\"\n                                if /** @src 8:7512:7560  \"saleToken.balanceOf(address(this)) < claimAmount\" */ lt(expr_23, var_claimAmount)\n                                /// @src 8:7508:7610  \"if (saleToken.balanceOf(address(this)) < claimAmount) revert Errors.InsufficientContractBalanceError()\"\n                                {\n                                    /// @src 8:7569:7610  \"Errors.InsufficientContractBalanceError()\"\n                                    let _157 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:7569:7610  \"Errors.InsufficientContractBalanceError()\"\n                                    mstore(_157, /** @src 8:5692:5733  \"Errors.InsufficientContractBalanceError()\" */ shl(224, 0xe23f04e1))\n                                    /// @src 8:7569:7610  \"Errors.InsufficientContractBalanceError()\"\n                                    revert(_157, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                }\n                                /// @src 8:7621:7672  \"vestingStatistics.totalVestingAmount -= claimAmount\"\n                                let _158 := checked_sub_uint256(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(/** @src 8:7621:7638  \"vestingStatistics\" */ 0x0d), /** @src 8:7621:7672  \"vestingStatistics.totalVestingAmount -= claimAmount\" */ var_claimAmount)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                sstore(/** @src 8:7621:7638  \"vestingStatistics\" */ 0x0d, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _158)\n                                /// @src 8:7688:7815  \"UserClaimedAllUnlockedVestings(msg.sender, claimAmount, saleTokenAmount, vestingStatistics.totalVestingAmount, block.timestamp)\"\n                                let _159 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                mstore(_159, /** @src 8:6198:6208  \"msg.sender\" */ caller())\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                mstore(add(_159, _151), var_claimAmount)\n                                mstore(add(_159, 64), expr_22)\n                                mstore(add(_159, 96), _158)\n                                mstore(add(_159, 128), /** @src 8:6999:7014  \"block.timestamp\" */ timestamp())\n                                /// @src 8:7688:7815  \"UserClaimedAllUnlockedVestings(msg.sender, claimAmount, saleTokenAmount, vestingStatistics.totalVestingAmount, block.timestamp)\"\n                                log1(_159, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 160, /** @src 8:7688:7815  \"UserClaimedAllUnlockedVestings(msg.sender, claimAmount, saleTokenAmount, vestingStatistics.totalVestingAmount, block.timestamp)\" */ 0x37a4c2c80e2c1b068fbe7ab8e6153e26f6abf47b430cb36b03f6c39b2db35799)\n                                /// @src 8:7856:7899  \"saleToken.transfer(msg.sender, claimAmount)\"\n                                let _160 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                /// @src 8:7856:7899  \"saleToken.transfer(msg.sender, claimAmount)\"\n                                mstore(_160, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0xa9059cbb))\n                                /// @src 8:7856:7899  \"saleToken.transfer(msg.sender, claimAmount)\"\n                                let _161 := call(gas(), cleaned_14, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0, /** @src 8:7856:7899  \"saleToken.transfer(msg.sender, claimAmount)\" */ _160, sub(abi_encode_address_uint256(add(_160, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4), /** @src 8:6198:6208  \"msg.sender\" */ caller(), /** @src 8:7856:7899  \"saleToken.transfer(msg.sender, claimAmount)\" */ var_claimAmount), _160), _160, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _151)\n                                /// @src 8:7856:7899  \"saleToken.transfer(msg.sender, claimAmount)\"\n                                if iszero(_161)\n                                {\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    let pos_18 := mload(64)\n                                    returndatacopy(pos_18, 0, returndatasize())\n                                    revert(pos_18, returndatasize())\n                                }\n                                /// @src 8:7856:7899  \"saleToken.transfer(msg.sender, claimAmount)\"\n                                let expr_24 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0\n                                /// @src 8:7856:7899  \"saleToken.transfer(msg.sender, claimAmount)\"\n                                if _161\n                                {\n                                    let _162 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _151\n                                    /// @src 8:7856:7899  \"saleToken.transfer(msg.sender, claimAmount)\"\n                                    if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _151, /** @src 8:7856:7899  \"saleToken.transfer(msg.sender, claimAmount)\" */ returndatasize()) { _162 := returndatasize() }\n                                    finalize_allocation(_160, _162)\n                                    expr_24 := abi_decode_bool_fromMemory(_160, add(_160, _162))\n                                }\n                                /// @src 8:7909:7978  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                                if /** @src 8:7913:7936  \"!successfullyTransfered\" */ iszero(expr_24)\n                                /// @src 8:7909:7978  \"if (!successfullyTransfered) revert Errors.TokenTransferFailedError()\"\n                                {\n                                    /// @src 8:7945:7978  \"Errors.TokenTransferFailedError()\"\n                                    let _163 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                                    /// @src 8:7945:7978  \"Errors.TokenTransferFailedError()\"\n                                    mstore(_163, /** @src 8:8940:8973  \"Errors.TokenTransferFailedError()\" */ shl(224, 0xf83e23f5))\n                                    /// @src 8:7945:7978  \"Errors.TokenTransferFailedError()\"\n                                    revert(_163, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                                }\n                                let memPos_38 := mload(64)\n                                mstore(memPos_38, /** @src 8:6843:6857  \"defaultVesting\" */ 0x01)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                return(memPos_38, _151)\n                            }\n                            case 0xfe0d7fbf {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 8:650:714  \"mapping(address => IDappadVesting.Vesting) public customVestings\" */ 15)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let dataSlot_17 := keccak256(0, 64)\n                                let _164 := sload(/** @src 8:650:714  \"mapping(address => IDappadVesting.Vesting) public customVestings\" */ dataSlot_17)\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let _165 := sload(/** @src 8:650:714  \"mapping(address => IDappadVesting.Vesting) public customVestings\" */ add(dataSlot_17, 1))\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let _166 := sload(/** @src 8:650:714  \"mapping(address => IDappadVesting.Vesting) public customVestings\" */ add(dataSlot_17, 2))\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let value_23 := and(sload(/** @src 8:650:714  \"mapping(address => IDappadVesting.Vesting) public customVestings\" */ add(dataSlot_17, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)), 0xff)\n                                let memPos_39 := mload(64)\n                                return(memPos_39, sub(abi_encode_uint256_uint256_uint256_bool(memPos_39, _164, _165, _166, value_23), memPos_39))\n                            }\n                            case 0xfe671bdc {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let ret_1 := fun_calculateSaleTokenAmount(calldataload(4), calldataload(36))\n                                let memPos_40 := mload(64)\n                                mstore(memPos_40, ret_1)\n                                return(memPos_40, 32)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_encode_array_uint256_dyn(value, pos) -> end\n                    {\n                        let length := mload(value)\n                        mstore(pos, length)\n                        let _1 := 0x20\n                        pos := add(pos, _1)\n                        let srcPtr := add(value, _1)\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        for { } lt(i, length) { i := add(i, 1) }\n                        {\n                            mstore(pos, mload(srcPtr))\n                            pos := add(pos, _1)\n                            srcPtr := add(srcPtr, _1)\n                        }\n                        end := pos\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_address_37972() -> value\n                    {\n                        value := calldataload(36)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function finalize_allocation_37973(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, 160)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function array_allocation_size_array_uint256_dyn(length) -> size\n                    {\n                        if gt(length, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        size := add(shl(5, length), 0x20)\n                    }\n                    function abi_decode_bool(offset) -> value\n                    {\n                        value := calldataload(offset)\n                        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n                    }\n                    function abi_decode_struct_Vesting(headStart, end) -> value\n                    {\n                        if slt(sub(end, headStart), 0xa0) { revert(0, 0) }\n                        let memPtr := mload(64)\n                        finalize_allocation_37973(memPtr)\n                        value := memPtr\n                        mstore(memPtr, calldataload(headStart))\n                        let _1 := 32\n                        mstore(add(memPtr, _1), calldataload(add(headStart, _1)))\n                        mstore(add(memPtr, 64), calldataload(add(headStart, 64)))\n                        let offset := calldataload(add(headStart, 96))\n                        if gt(offset, 0xffffffffffffffff)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _2 := add(headStart, offset)\n                        if iszero(slt(add(_2, 0x1f), end))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _3 := calldataload(_2)\n                        let _4 := array_allocation_size_array_uint256_dyn(_3)\n                        let memPtr_1 := mload(64)\n                        finalize_allocation(memPtr_1, _4)\n                        let dst := memPtr_1\n                        mstore(memPtr_1, _3)\n                        dst := add(memPtr_1, _1)\n                        let srcEnd := add(add(_2, shl(5, _3)), _1)\n                        if gt(srcEnd, end)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let src := add(_2, _1)\n                        for { } lt(src, srcEnd) { src := add(src, _1) }\n                        {\n                            mstore(dst, calldataload(src))\n                            dst := add(dst, _1)\n                        }\n                        mstore(add(memPtr, 96), memPtr_1)\n                        mstore(add(memPtr, 128), abi_decode_bool(add(headStart, 128)))\n                    }\n                    function abi_encode_uint256_uint256_uint256_bool(headStart, value0, value1, value2, value3) -> tail\n                    {\n                        tail := add(headStart, 128)\n                        mstore(headStart, value0)\n                        mstore(add(headStart, 32), value1)\n                        mstore(add(headStart, 64), value2)\n                        mstore(add(headStart, 96), iszero(iszero(value3)))\n                    }\n                    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n                    {\n                        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                        length := calldataload(offset)\n                        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                        arrayPos := add(offset, 0x20)\n                        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n                    }\n                    function abi_decode_array_address_dyn_calldatat_array_struct_Vesting_calldata_dyn_calldata(dataEnd) -> value0, value1, value2, value3\n                    {\n                        if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                        let offset := calldataload(4)\n                        let _1 := 0xffffffffffffffff\n                        if gt(offset, _1) { revert(0, 0) }\n                        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(4, offset), dataEnd)\n                        value0 := value0_1\n                        value1 := value1_1\n                        let offset_1 := calldataload(36)\n                        if gt(offset_1, _1) { revert(0, 0) }\n                        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(4, offset_1), dataEnd)\n                        value2 := value2_1\n                        value3 := value3_1\n                    }\n                    /// @ast-id 93 @src 0:3199:3302  \"function _checkRole(bytes32 role) internal view virtual {...\"\n                    function fun_checkRole(var_role)\n                    {\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ var_role)\n                        mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x00)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _1 := keccak256(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                        mstore(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 4:735:745  \"msg.sender\" */ caller())\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(0x20, _1)\n                        /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                        if /** @src 0:3519:3542  \"!hasRole(role, account)\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ 0x00, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)), 0xff))\n                        /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                        {\n                            /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                            let _2 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(0x40)\n                            /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                            mstore(_2, shl(224, 0xe2517d3f))\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            mstore(/** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ add(_2, 4), /** @src 4:735:745  \"msg.sender\" */ caller())\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            mstore(add(/** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36), var_role)\n                            /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                            revert(_2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 68)\n                        }\n                    }\n                    function update_storage_value_offsett_bool_to_bool(slot, value)\n                    {\n                        let value_1 := and(sload(slot), not(255))\n                        sstore(slot, or(value_1, and(iszero(iszero(value)), 255)))\n                    }\n                    /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n                    function fun_grantRole(var_role, var_account) -> var\n                    {\n                        /// @src 0:2954:2960  \"_roles\"\n                        let _1 := 0x00\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ var_role)\n                        mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _2 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                        let _3 := and(var_account, sub(shl(160, 1), 1))\n                        mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3)\n                        mstore(0x20, _2)\n                        /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                        switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)), 0xff))\n                        case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                            /// @src 0:6466:6478  \"return false\"\n                            var := /** @src 0:2954:2960  \"_roles\" */ _1\n                            /// @src 0:6466:6478  \"return false\"\n                            leave\n                        }\n                        default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                        {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ var_role)\n                            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let _4 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                            mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3)\n                            mstore(0x20, _4)\n                            let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                            sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                            /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                            log4(/** @src 0:2954:2960  \"_roles\" */ _1, _1, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, var_role, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3, /** @src 4:735:745  \"msg.sender\" */ caller())\n                            /// @src 0:6424:6435  \"return true\"\n                            var := /** @src 0:6347:6351  \"true\" */ 0x01\n                            /// @src 0:6424:6435  \"return true\"\n                            leave\n                        }\n                    }\n                    /// @ast-id 294 @src 0:6730:7047  \"function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n                    function fun_revokeRole(var_role, var_account) -> var\n                    {\n                        /// @src 0:2954:2960  \"_roles\"\n                        let _1 := 0x00\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ var_role)\n                        mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _2 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                        let _3 := and(var_account, sub(shl(160, 1), 1))\n                        mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3)\n                        mstore(0x20, _2)\n                        /// @src 0:6824:7041  \"if (hasRole(role, account)) {...\"\n                        switch /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)), 0xff)\n                        case /** @src 0:6824:7041  \"if (hasRole(role, account)) {...\" */ 0 {\n                            /// @src 0:7018:7030  \"return false\"\n                            var := /** @src 0:2954:2960  \"_roles\" */ _1\n                            /// @src 0:7018:7030  \"return false\"\n                            leave\n                        }\n                        default /// @src 0:6824:7041  \"if (hasRole(role, account)) {...\"\n                        {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ var_role)\n                            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let _4 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                            mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3)\n                            mstore(0x20, _4)\n                            let dataSlot := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                            sstore(dataSlot, and(sload(dataSlot), not(255)))\n                            /// @src 0:6922:6962  \"RoleRevoked(role, account, _msgSender())\"\n                            log4(/** @src 0:2954:2960  \"_roles\" */ _1, _1, /** @src 0:6922:6962  \"RoleRevoked(role, account, _msgSender())\" */ 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b, var_role, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3, /** @src 4:735:745  \"msg.sender\" */ caller())\n                            /// @src 0:6976:6987  \"return true\"\n                            var := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 1\n                            /// @src 0:6976:6987  \"return true\"\n                            leave\n                        }\n                    }\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n                    {\n                        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                        let value := mload(headStart)\n                        if iszero(eq(value, iszero(iszero(value))))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        value0 := value\n                    }\n                    function copy_array_from_storage_to_memory_array_uint256_dyn(slot) -> memPtr\n                    {\n                        memPtr := mload(64)\n                        let pos := memPtr\n                        let length := sload(slot)\n                        mstore(memPtr, length)\n                        let _1 := 0x20\n                        pos := add(memPtr, _1)\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ slot)\n                        let srcPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _1)\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        for { } lt(i, length) { i := add(i, 1) }\n                        {\n                            mstore(pos, sload(srcPtr))\n                            pos := add(pos, _1)\n                            srcPtr := add(srcPtr, 1)\n                        }\n                        finalize_allocation(memPtr, sub(pos, memPtr))\n                    }\n                    function read_from_storage_reference_type_struct_Vesting_37989() -> value\n                    {\n                        let memPtr := mload(64)\n                        finalize_allocation_37973(memPtr)\n                        value := memPtr\n                        /// @src 8:18856:18870  \"defaultVesting\"\n                        let _1 := 0x01\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(memPtr, sload(/** @src 8:18856:18870  \"defaultVesting\" */ _1))\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _2 := sload(2)\n                        let _3 := 32\n                        mstore(add(memPtr, _3), _2)\n                        mstore(add(memPtr, 64), sload(3))\n                        let pos := mload(64)\n                        let pos_1 := pos\n                        let length := sload(4)\n                        mstore(pos, length)\n                        pos := add(pos, _3)\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                        let srcPtr := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        for { }\n                        lt(i, length)\n                        {\n                            i := add(i, /** @src 8:18856:18870  \"defaultVesting\" */ _1)\n                        }\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        {\n                            mstore(pos, sload(srcPtr))\n                            pos := add(pos, _3)\n                            srcPtr := add(srcPtr, /** @src 8:18856:18870  \"defaultVesting\" */ _1)\n                        }\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        finalize_allocation(pos_1, sub(pos, pos_1))\n                        mstore(add(memPtr, 96), pos_1)\n                        mstore(add(memPtr, 128), iszero(iszero(and(sload(5), 0xff))))\n                    }\n                    function read_from_storage_reference_type_struct_Vesting(slot) -> value\n                    {\n                        let memPtr := mload(64)\n                        finalize_allocation_37973(memPtr)\n                        value := memPtr\n                        mstore(memPtr, sload(slot))\n                        mstore(add(memPtr, 32), sload(add(slot, 1)))\n                        mstore(add(memPtr, 64), sload(add(slot, 2)))\n                        mstore(add(memPtr, 96), copy_array_from_storage_to_memory_array_uint256_dyn(add(slot, 3)))\n                        mstore(add(memPtr, 128), iszero(iszero(and(sload(add(slot, 4)), 0xff))))\n                    }\n                    function memory_array_index_access_uint256_dyn(baseRef, index) -> addr\n                    {\n                        if iszero(lt(index, mload(baseRef)))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(0, 0x24)\n                        }\n                        addr := add(add(baseRef, shl(5, index)), 32)\n                    }\n                    function checked_mul_uint256(x, y) -> product\n                    {\n                        product := mul(x, y)\n                        if iszero(or(iszero(x), eq(y, div(product, x))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    function checked_sub_uint256(x, y) -> diff\n                    {\n                        diff := sub(x, y)\n                        if gt(diff, x)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    function abi_encode_address_uint256(headStart, value0, value1) -> tail\n                    {\n                        tail := add(headStart, 64)\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                        mstore(add(headStart, 32), value1)\n                    }\n                    function increment_uint256(value) -> ret\n                    {\n                        if eq(value, not(0))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        ret := add(value, 1)\n                    }\n                    function checked_add_uint256(x, y) -> sum\n                    {\n                        sum := add(x, y)\n                        if gt(x, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    function calldata_array_index_access_uint256_dyn_calldata(base_ref, length, index) -> addr\n                    {\n                        if iszero(lt(index, length))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(0, 0x24)\n                        }\n                        addr := add(base_ref, shl(5, index))\n                    }\n                    function read_from_calldatat_address(ptr) -> returnValue\n                    {\n                        let value := calldataload(ptr)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        returnValue := value\n                    }\n                    function abi_encode_array_uint256_dyn_calldata(start, length, pos) -> end\n                    {\n                        mstore(pos, length)\n                        if gt(length, sub(shl(251, 1), 1))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let length_1 := shl(5, length)\n                        calldatacopy(add(pos, 0x20), start, length_1)\n                        end := add(add(pos, length_1), 0x20)\n                    }\n                    function update_storage_value_uint256_to_uint256(slot, offset, value)\n                    {\n                        let _1 := sload(slot)\n                        let shiftBits := shl(3, offset)\n                        sstore(slot, or(and(_1, not(shl(shiftBits, not(0)))), shl(shiftBits, value)))\n                    }\n                    function resize_array_array_uint256_dyn_storage_38000(newLen)\n                    {\n                        if gt(newLen, 18446744073709551616)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let oldLen := sload(4)\n                        sstore(4, newLen)\n                        if lt(newLen, oldLen)\n                        {\n                            /// @src -1:-1:-1\n                            let _1 := 0\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 4)\n                            let _2 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                            let _3 := add(_2, oldLen)\n                            let start := add(_2, newLen)\n                            for { } lt(start, _3) { start := add(start, 1) }\n                            {\n                                sstore(start, /** @src -1:-1:-1 */ _1)\n                            }\n                        }\n                    }\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    function resize_array_array_uint256_dyn_storage(array, newLen)\n                    {\n                        if gt(newLen, 18446744073709551616)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let oldLen := sload(array)\n                        sstore(array, newLen)\n                        if lt(newLen, oldLen)\n                        {\n                            /// @src -1:-1:-1\n                            let _1 := 0\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ array)\n                            let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x20)\n                            let _2 := add(data, oldLen)\n                            let start := add(data, newLen)\n                            for { } lt(start, _2) { start := add(start, 1) }\n                            {\n                                sstore(start, /** @src -1:-1:-1 */ _1)\n                            }\n                        }\n                    }\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    function allocate_and_zero_memory_array_array_uint256_dyn(length) -> memPtr\n                    {\n                        let _1 := array_allocation_size_array_uint256_dyn(length)\n                        let memPtr_1 := mload(64)\n                        finalize_allocation(memPtr_1, _1)\n                        mstore(memPtr_1, length)\n                        memPtr := memPtr_1\n                        calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_array_uint256_dyn(length), not(31)))\n                    }\n                    function storage_array_index_access_uint256_dyn(array, index) -> slot, offset\n                    {\n                        if iszero(lt(index, sload(array)))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(0, 0x24)\n                        }\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ array)\n                        slot := add(keccak256(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x20), index)\n                        offset := /** @src -1:-1:-1 */ 0\n                    }\n                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                    function abi_encode_struct_Vesting(value, pos) -> end\n                    {\n                        let tail := add(pos, 0xa0)\n                        mstore(pos, mload(value))\n                        let _1 := 0x20\n                        mstore(add(pos, _1), mload(add(value, _1)))\n                        mstore(add(pos, 0x40), mload(add(value, 0x40)))\n                        let memberValue0 := mload(add(value, 0x60))\n                        mstore(add(pos, 0x60), 0xa0)\n                        let pos_1 := tail\n                        let length := mload(memberValue0)\n                        mstore(tail, length)\n                        pos_1 := add(pos, 192)\n                        let srcPtr := add(memberValue0, _1)\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, 1) }\n                        {\n                            mstore(pos_1, mload(srcPtr))\n                            pos_1 := add(pos_1, _1)\n                            srcPtr := add(srcPtr, _1)\n                        }\n                        mstore(add(pos, 0x80), iszero(iszero(mload(add(value, 0x80)))))\n                        end := pos_1\n                    }\n                    function calldata_array_index_access_struct_Vesting_calldata_dyn_calldata(base_ref, length, index) -> addr\n                    {\n                        if iszero(lt(index, length))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(0, 0x24)\n                        }\n                        let rel_offset_of_tail := calldataload(add(base_ref, shl(5, index)))\n                        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(158))))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        addr := add(base_ref, rel_offset_of_tail)\n                    }\n                    function access_calldata_tail_array_uint256_dyn_calldata(base_ref, ptr_to_tail) -> addr, length\n                    {\n                        let rel_offset_of_tail := calldataload(ptr_to_tail)\n                        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                        let addr_1 := add(base_ref, rel_offset_of_tail)\n                        length := calldataload(addr_1)\n                        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                        addr := add(addr_1, 0x20)\n                        if sgt(addr, sub(calldatasize(), shl(5, length))) { revert(0, 0) }\n                    }\n                    /// @ast-id 1492 @src 8:3756:3851  \"modifier notZeroAddress(address _address) {...\"\n                    function modifier_notZeroAddress(var_userAddress) -> _1\n                    {\n                        /// @src 8:3824:3832  \"_address\"\n                        fun_notZeroAddress(var_userAddress)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        pop(read_from_storage_reference_type_struct_Vesting_37989())\n                        let _2 := sub(shl(160, 1), 1)\n                        let _3 := and(var_userAddress, _2)\n                        let _4 := 0\n                        mstore(_4, _3)\n                        let _5 := 0x20\n                        mstore(_5, /** @src 8:13904:13918  \"customVestings\" */ 0x0f)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _6 := 0x40\n                        let dataSlot := keccak256(_4, _6)\n                        /// @src 8:13900:14019  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                        if /** @src 8:13904:13948  \"customVestings[userAddress].vestingCount > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(dataSlot)))\n                        /// @src 8:13900:14019  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                        {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            pop(read_from_storage_reference_type_struct_Vesting(dataSlot))\n                        }\n                        /// @src 8:14029:14063  \"uint256 userTotalVestingAmount = 0\"\n                        let var_userTotalVestingAmount := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4\n                        /// @src 8:14074:14676  \"if (vestingAddresses.saleContractAddress != address(0)) {...\"\n                        switch /** @src 8:14078:14128  \"vestingAddresses.saleContractAddress != address(0)\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(/** @src 8:14078:14114  \"vestingAddresses.saleContractAddress\" */ 10), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _2)))\n                        case /** @src 8:14074:14676  \"if (vestingAddresses.saleContractAddress != address(0)) {...\" */ 0 {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let _7 := sload(/** @src 8:14602:14632  \"vestingSettings.saleTokenPrice\" */ 7)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            mstore(_4, _3)\n                            mstore(_5, /** @src 8:14634:14651  \"investmentAmounts\" */ 0x11)\n                            /// @src 8:14552:14665  \"userTotalVestingAmount = calculateSaleTokenAmount(vestingSettings.saleTokenPrice, investmentAmounts[userAddress])\"\n                            var_userTotalVestingAmount := /** @src 8:14577:14665  \"calculateSaleTokenAmount(vestingSettings.saleTokenPrice, investmentAmounts[userAddress])\" */ fun_calculateSaleTokenAmount(_7, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(keccak256(_4, _6)))\n                        }\n                        default /// @src 8:14074:14676  \"if (vestingAddresses.saleContractAddress != address(0)) {...\"\n                        {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let _8 := sload(/** @src 8:14148:14178  \"vestingSettings.saleTokenPrice\" */ 7)\n                            /// @src 8:14144:14522  \"if (vestingSettings.saleTokenPrice > 0) {...\"\n                            switch /** @src 8:14148:14182  \"vestingSettings.saleTokenPrice > 0\" */ iszero(iszero(_8))\n                            case /** @src 8:14144:14522  \"if (vestingSettings.saleTokenPrice > 0) {...\" */ 0 {\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let cleaned := and(sload(/** @src 8:14423:14435  \"saleContract\" */ 0x13), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _2)\n                                /// @src 8:14423:14455  \"saleContract.getSaleTokenPrice()\"\n                                let _9 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_6)\n                                /// @src 8:14423:14455  \"saleContract.getSaleTokenPrice()\"\n                                mstore(_9, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(225, 0x0364718b))\n                                /// @src 8:14423:14455  \"saleContract.getSaleTokenPrice()\"\n                                let _10 := staticcall(gas(), cleaned, _9, 4, _9, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _5)\n                                /// @src 8:14423:14455  \"saleContract.getSaleTokenPrice()\"\n                                if iszero(_10)\n                                {\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    let pos := mload(_6)\n                                    returndatacopy(pos, _4, returndatasize())\n                                    revert(pos, returndatasize())\n                                }\n                                /// @src 8:14423:14455  \"saleContract.getSaleTokenPrice()\"\n                                let expr := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4\n                                /// @src 8:14423:14455  \"saleContract.getSaleTokenPrice()\"\n                                if _10\n                                {\n                                    let _11 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _5\n                                    /// @src 8:14423:14455  \"saleContract.getSaleTokenPrice()\"\n                                    if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _5, /** @src 8:14423:14455  \"saleContract.getSaleTokenPrice()\" */ returndatasize()) { _11 := returndatasize() }\n                                    finalize_allocation(_9, _11)\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    if slt(sub(/** @src 8:14423:14455  \"saleContract.getSaleTokenPrice()\" */ add(_9, _11), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _9), _5) { revert(_4, _4) }\n                                    /// @src 8:14423:14455  \"saleContract.getSaleTokenPrice()\"\n                                    expr := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_9)\n                                }\n                                /// @src 8:14457:14506  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                                let _12 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_6)\n                                /// @src 8:14457:14506  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                                mstore(_12, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(225, 0x2f43f2d3))\n                                mstore(/** @src 8:14457:14506  \"saleContract.getUserInvestmentAmount(userAddress)\" */ add(_12, /** @src 8:14423:14455  \"saleContract.getSaleTokenPrice()\" */ 4), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3)\n                                /// @src 8:14457:14506  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                                let _13 := staticcall(gas(), cleaned, _12, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36, /** @src 8:14457:14506  \"saleContract.getUserInvestmentAmount(userAddress)\" */ _12, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _5)\n                                /// @src 8:14457:14506  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                                if iszero(_13)\n                                {\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    let pos_1 := mload(_6)\n                                    returndatacopy(pos_1, _4, returndatasize())\n                                    revert(pos_1, returndatasize())\n                                }\n                                /// @src 8:14457:14506  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                                let expr_1 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4\n                                /// @src 8:14457:14506  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                                if _13\n                                {\n                                    let _14 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _5\n                                    /// @src 8:14457:14506  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                                    if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _5, /** @src 8:14457:14506  \"saleContract.getUserInvestmentAmount(userAddress)\" */ returndatasize()) { _14 := returndatasize() }\n                                    finalize_allocation(_12, _14)\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    if slt(sub(/** @src 8:14457:14506  \"saleContract.getUserInvestmentAmount(userAddress)\" */ add(_12, _14), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _12), _5) { revert(_4, _4) }\n                                    /// @src 8:14457:14506  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                                    expr_1 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_12)\n                                }\n                                /// @src 8:14373:14507  \"userTotalVestingAmount = calculateSaleTokenAmount(saleContract.getSaleTokenPrice(), saleContract.getUserInvestmentAmount(userAddress))\"\n                                var_userTotalVestingAmount := /** @src 8:14398:14507  \"calculateSaleTokenAmount(saleContract.getSaleTokenPrice(), saleContract.getUserInvestmentAmount(userAddress))\" */ fun_calculateSaleTokenAmount(expr, expr_1)\n                            }\n                            default /// @src 8:14144:14522  \"if (vestingSettings.saleTokenPrice > 0) {...\"\n                            {\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let cleaned_1 := and(sload(/** @src 8:14284:14296  \"saleContract\" */ 0x13), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _2)\n                                /// @src 8:14284:14333  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                                let _15 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_6)\n                                /// @src 8:14284:14333  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                                mstore(_15, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(225, 0x2f43f2d3))\n                                mstore(/** @src 8:14284:14333  \"saleContract.getUserInvestmentAmount(userAddress)\" */ add(_15, 4), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3)\n                                /// @src 8:14284:14333  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                                let _16 := staticcall(gas(), cleaned_1, _15, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 36, /** @src 8:14284:14333  \"saleContract.getUserInvestmentAmount(userAddress)\" */ _15, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _5)\n                                /// @src 8:14284:14333  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                                if iszero(_16)\n                                {\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    let pos_2 := mload(_6)\n                                    returndatacopy(pos_2, _4, returndatasize())\n                                    revert(pos_2, returndatasize())\n                                }\n                                /// @src 8:14284:14333  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                                let expr_2 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4\n                                /// @src 8:14284:14333  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                                if _16\n                                {\n                                    let _17 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _5\n                                    /// @src 8:14284:14333  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                                    if gt(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _5, /** @src 8:14284:14333  \"saleContract.getUserInvestmentAmount(userAddress)\" */ returndatasize()) { _17 := returndatasize() }\n                                    finalize_allocation(_15, _17)\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    if slt(sub(/** @src 8:14284:14333  \"saleContract.getUserInvestmentAmount(userAddress)\" */ add(_15, _17), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _15), _5) { revert(_4, _4) }\n                                    /// @src 8:14284:14333  \"saleContract.getUserInvestmentAmount(userAddress)\"\n                                    expr_2 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_15)\n                                }\n                                /// @src 8:14202:14334  \"userTotalVestingAmount = calculateSaleTokenAmount(vestingSettings.saleTokenPrice, saleContract.getUserInvestmentAmount(userAddress))\"\n                                var_userTotalVestingAmount := /** @src 8:14227:14334  \"calculateSaleTokenAmount(vestingSettings.saleTokenPrice, saleContract.getUserInvestmentAmount(userAddress))\" */ fun_calculateSaleTokenAmount(_8, expr_2)\n                            }\n                        }\n                        /// @src 8:3843:3844  \"_\"\n                        _1 := var_userTotalVestingAmount\n                    }\n                    /// @ast-id 2723 @src 8:14728:14934  \"function calculateSaleTokenAmount(uint256 saleTokenPrice, uint256 investmentAmount) public view returns (uint256) {...\"\n                    function fun_calculateSaleTokenAmount(var_saleTokenPrice, var_investmentAmount) -> var\n                    {\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        if iszero(var_saleTokenPrice)\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x12)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x24)\n                        }\n                        let cleaned := and(sload(/** @src 8:14905:14914  \"saleToken\" */ 0x12), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1))\n                        /// @src 8:14905:14925  \"saleToken.decimals()\"\n                        let _1 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                        /// @src 8:14905:14925  \"saleToken.decimals()\"\n                        mstore(_1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x313ce567))\n                        /// @src 8:14905:14925  \"saleToken.decimals()\"\n                        let _2 := staticcall(gas(), cleaned, _1, 4, _1, 32)\n                        if iszero(_2)\n                        {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 8:14905:14925  \"saleToken.decimals()\"\n                        let expr := /** @src -1:-1:-1 */ 0\n                        /// @src 8:14905:14925  \"saleToken.decimals()\"\n                        if _2\n                        {\n                            let _3 := 32\n                            if gt(_3, returndatasize()) { _3 := returndatasize() }\n                            finalize_allocation(_1, _3)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            if slt(sub(/** @src 8:14905:14925  \"saleToken.decimals()\" */ add(_1, _3), /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _1), /** @src 8:14905:14925  \"saleToken.decimals()\" */ 32)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            {\n                                revert(/** @src -1:-1:-1 */ expr, expr)\n                            }\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let value := mload(_1)\n                            if iszero(eq(value, and(value, 0xff)))\n                            {\n                                revert(/** @src -1:-1:-1 */ expr, expr)\n                            }\n                            /// @src 8:14905:14925  \"saleToken.decimals()\"\n                            expr := value\n                        }\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let exponent := and(expr, 0xff)\n                        if gt(exponent, 77)\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 8:14905:14925  \"saleToken.decimals()\" */ 4, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x11)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x24)\n                        }\n                        /// @src 8:14852:14927  \"return ((investmentAmount / saleTokenPrice) * (10 ** saleToken.decimals()))\"\n                        var := /** @src 8:14860:14926  \"(investmentAmount / saleTokenPrice) * (10 ** saleToken.decimals())\" */ checked_mul_uint256(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ div(var_investmentAmount, var_saleTokenPrice), exp(10, exponent))\n                    }\n                    /// @ast-id 2860 @src 8:14940:16410  \"function getVestingClaimable(address userAddress, uint256 vestingIndex) public view returns (bool) {...\"\n                    function fun_getVestingClaimable(var_userAddress, var_vestingIndex) -> var\n                    {\n                        /// @src 8:15049:15110  \"IDappadVesting.Vesting memory currentVesting = defaultVesting\"\n                        let var_currentVesting_2736_mpos := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting_37989()\n                        let _1 := and(var_userAddress, sub(shl(160, 1), 1))\n                        /// @src -1:-1:-1\n                        let _2 := 0\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _1)\n                        let _3 := 0x20\n                        mstore(_3, /** @src 8:15125:15139  \"customVestings\" */ 0x0f)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _4 := 0x40\n                        let dataSlot := keccak256(/** @src -1:-1:-1 */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4)\n                        /// @src 8:15121:15240  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                        if /** @src 8:15125:15169  \"customVestings[userAddress].vestingCount > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(dataSlot)))\n                        /// @src 8:15121:15240  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                        {\n                            /// @src 8:15185:15229  \"currentVesting = customVestings[userAddress]\"\n                            var_currentVesting_2736_mpos := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting(dataSlot)\n                        }\n                        /// @src 8:15250:15339  \"if (vestingIndex >= currentVesting.vestingCount) revert Errors.InvalidVestingIndexError()\"\n                        if /** @src 8:15254:15297  \"vestingIndex >= currentVesting.vestingCount\" */ iszero(lt(var_vestingIndex, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:15270:15297  \"currentVesting.vestingCount\" */ var_currentVesting_2736_mpos)))\n                        /// @src 8:15250:15339  \"if (vestingIndex >= currentVesting.vestingCount) revert Errors.InvalidVestingIndexError()\"\n                        {\n                            /// @src 8:15306:15339  \"Errors.InvalidVestingIndexError()\"\n                            let _5 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(_4)\n                            /// @src 8:15306:15339  \"Errors.InvalidVestingIndexError()\"\n                            mstore(_5, shl(224, 0x690cd635))\n                            revert(_5, 4)\n                        }\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _1)\n                        mstore(_3, /** @src 8:15353:15367  \"vestingClaimed\" */ 0x10)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let dataSlot_1 := keccak256(/** @src -1:-1:-1 */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4)\n                        mstore(/** @src -1:-1:-1 */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ var_vestingIndex)\n                        mstore(_3, dataSlot_1)\n                        /// @src 8:15350:16404  \"if(vestingClaimed[userAddress][vestingIndex]) {...\"\n                        switch /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4)), 0xff)\n                        case /** @src 8:15350:16404  \"if(vestingClaimed[userAddress][vestingIndex]) {...\" */ 0 {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let _6 := sload(/** @src 8:15473:15488  \"vestingSettings\" */ 0x06)\n                            /// @src 8:15513:16394  \"if(vestingIndex == 0) {...\"\n                            switch /** @src 8:15516:15533  \"vestingIndex == 0\" */ iszero(var_vestingIndex)\n                            case /** @src 8:15513:16394  \"if(vestingIndex == 0) {...\" */ 0 {\n                                /// @src 8:16033:16068  \"currentVesting.vestingCliffDuration\"\n                                let _7 := add(var_currentVesting_2736_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4)\n                                /// @src 8:16030:16380  \"if(currentVesting.vestingCliffDuration > 0) {...\"\n                                switch /** @src 8:16033:16072  \"currentVesting.vestingCliffDuration > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:16033:16068  \"currentVesting.vestingCliffDuration\" */ _7)))\n                                case /** @src 8:16030:16380  \"if(currentVesting.vestingCliffDuration > 0) {...\" */ 0 {\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    let _8 := mload(/** @src 8:16308:16338  \"currentVesting.vestingDuration\" */ add(var_currentVesting_2736_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3))\n                                    let sum := add(var_vestingIndex, /** @src 8:15096:15110  \"defaultVesting\" */ 0x01)\n                                    /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                    if gt(var_vestingIndex, sum)\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                                        mstore(4, 0x11)\n                                        revert(/** @src -1:-1:-1 */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x24)\n                                    }\n                                    /// @src 8:16268:16361  \"return block.timestamp >= (startDate + (currentVesting.vestingDuration * (vestingIndex + 1)))\"\n                                    var := /** @src 8:16275:16361  \"block.timestamp >= (startDate + (currentVesting.vestingDuration * (vestingIndex + 1)))\" */ iszero(lt(/** @src 8:16275:16290  \"block.timestamp\" */ timestamp(), /** @src 8:16295:16360  \"startDate + (currentVesting.vestingDuration * (vestingIndex + 1))\" */ checked_add_uint256(_6, /** @src 8:16308:16359  \"currentVesting.vestingDuration * (vestingIndex + 1)\" */ checked_mul_uint256(_8, /** @src 8:16342:16358  \"vestingIndex + 1\" */ sum))))\n                                    /// @src 8:16268:16361  \"return block.timestamp >= (startDate + (currentVesting.vestingDuration * (vestingIndex + 1)))\"\n                                    leave\n                                }\n                                default /// @src 8:16030:16380  \"if(currentVesting.vestingCliffDuration > 0) {...\"\n                                {\n                                    /// @src 8:16123:16170  \"startDate + currentVesting.vestingCliffDuration\"\n                                    let expr := checked_add_uint256(_6, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:16135:16170  \"currentVesting.vestingCliffDuration\" */ _7))\n                                    /// @src 8:16096:16221  \"return block.timestamp >= (startDate + currentVesting.vestingCliffDuration + (currentVesting.vestingDuration * vestingIndex))\"\n                                    var := /** @src 8:16103:16221  \"block.timestamp >= (startDate + currentVesting.vestingCliffDuration + (currentVesting.vestingDuration * vestingIndex))\" */ iszero(lt(/** @src 8:16103:16118  \"block.timestamp\" */ timestamp(), /** @src 8:16123:16220  \"startDate + currentVesting.vestingCliffDuration + (currentVesting.vestingDuration * vestingIndex)\" */ checked_add_uint256(expr, /** @src 8:16174:16219  \"currentVesting.vestingDuration * vestingIndex\" */ checked_mul_uint256(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:16174:16204  \"currentVesting.vestingDuration\" */ add(var_currentVesting_2736_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3)), /** @src 8:16174:16219  \"currentVesting.vestingDuration * vestingIndex\" */ var_vestingIndex))))\n                                    /// @src 8:16096:16221  \"return block.timestamp >= (startDate + currentVesting.vestingCliffDuration + (currentVesting.vestingDuration * vestingIndex))\"\n                                    leave\n                                }\n                            }\n                            default /// @src 8:15513:16394  \"if(vestingIndex == 0) {...\"\n                            {\n                                /// @src 8:15553:15992  \"if(currentVesting.onTGE) {...\"\n                                switch /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ iszero(iszero(mload(/** @src 8:15556:15576  \"currentVesting.onTGE\" */ add(var_currentVesting_2736_mpos, 128))))\n                                case /** @src 8:15553:15992  \"if(currentVesting.onTGE) {...\" */ 0 {\n                                    /// @src 8:15661:15696  \"currentVesting.vestingCliffDuration\"\n                                    let _9 := add(var_currentVesting_2736_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _4)\n                                    /// @src 8:15658:15974  \"if(currentVesting.vestingCliffDuration > 0) {...\"\n                                    switch /** @src 8:15661:15700  \"currentVesting.vestingCliffDuration > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:15661:15696  \"currentVesting.vestingCliffDuration\" */ _9)))\n                                    case /** @src 8:15658:15974  \"if(currentVesting.vestingCliffDuration > 0) {...\" */ 0 {\n                                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                        let _10 := mload(/** @src 8:15898:15928  \"currentVesting.vestingDuration\" */ add(var_currentVesting_2736_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3))\n                                        let sum_1 := add(var_vestingIndex, /** @src 8:15096:15110  \"defaultVesting\" */ 0x01)\n                                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                        if gt(var_vestingIndex, sum_1)\n                                        {\n                                            mstore(/** @src -1:-1:-1 */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ shl(224, 0x4e487b71))\n                                            mstore(4, 0x11)\n                                            revert(/** @src -1:-1:-1 */ _2, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x24)\n                                        }\n                                        /// @src 8:15858:15951  \"return block.timestamp >= (startDate + (currentVesting.vestingDuration * (vestingIndex + 1)))\"\n                                        var := /** @src 8:15865:15951  \"block.timestamp >= (startDate + (currentVesting.vestingDuration * (vestingIndex + 1)))\" */ iszero(lt(/** @src 8:15865:15880  \"block.timestamp\" */ timestamp(), /** @src 8:15885:15950  \"startDate + (currentVesting.vestingDuration * (vestingIndex + 1))\" */ checked_add_uint256(_6, /** @src 8:15898:15949  \"currentVesting.vestingDuration * (vestingIndex + 1)\" */ checked_mul_uint256(_10, /** @src 8:15932:15948  \"vestingIndex + 1\" */ sum_1))))\n                                        /// @src 8:15858:15951  \"return block.timestamp >= (startDate + (currentVesting.vestingDuration * (vestingIndex + 1)))\"\n                                        leave\n                                    }\n                                    default /// @src 8:15658:15974  \"if(currentVesting.vestingCliffDuration > 0) {...\"\n                                    {\n                                        /// @src 8:15728:15803  \"return block.timestamp >= (startDate + currentVesting.vestingCliffDuration)\"\n                                        var := /** @src 8:15735:15803  \"block.timestamp >= (startDate + currentVesting.vestingCliffDuration)\" */ iszero(lt(/** @src 8:15735:15750  \"block.timestamp\" */ timestamp(), /** @src 8:15755:15802  \"startDate + currentVesting.vestingCliffDuration\" */ checked_add_uint256(_6, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:15767:15802  \"currentVesting.vestingCliffDuration\" */ _9))))\n                                        /// @src 8:15728:15803  \"return block.timestamp >= (startDate + currentVesting.vestingCliffDuration)\"\n                                        leave\n                                    }\n                                }\n                                default /// @src 8:15553:15992  \"if(currentVesting.onTGE) {...\"\n                                {\n                                    /// @src 8:15600:15611  \"return true\"\n                                    var := /** @src 8:15096:15110  \"defaultVesting\" */ 0x01\n                                    /// @src 8:15600:15611  \"return true\"\n                                    leave\n                                }\n                            }\n                        }\n                        default /// @src 8:15350:16404  \"if(vestingClaimed[userAddress][vestingIndex]) {...\"\n                        {\n                            /// @src 8:15410:15422  \"return false\"\n                            var := /** @src -1:-1:-1 */ _2\n                            /// @src 8:15410:15422  \"return false\"\n                            leave\n                        }\n                    }\n                    /// @src 8:16416:16926  \"function getAnyVestingClaimed(address userAddress) external view notZeroAddress(userAddress) returns (bool) {...\"\n                    function fun_getAnyVestingClaimed_inner(var_userAddress) -> var\n                    {\n                        /// @src 8:16534:16595  \"IDappadVesting.Vesting memory currentVesting = defaultVesting\"\n                        let var_currentVesting_mpos := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting_37989()\n                        let _1 := and(var_userAddress, sub(shl(160, 1), 1))\n                        let _2 := 0\n                        mstore(_2, _1)\n                        let _3 := 0x20\n                        mstore(_3, /** @src 8:16610:16624  \"customVestings\" */ 0x0f)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _4 := 0x40\n                        let dataSlot := keccak256(_2, _4)\n                        /// @src 8:16606:16725  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                        if /** @src 8:16610:16654  \"customVestings[userAddress].vestingCount > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(dataSlot)))\n                        /// @src 8:16606:16725  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                        {\n                            /// @src 8:16670:16714  \"currentVesting = customVestings[userAddress]\"\n                            var_currentVesting_mpos := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting(dataSlot)\n                        }\n                        /// @src 8:16740:16753  \"uint256 i = 0\"\n                        let var_i := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _2\n                        /// @src 8:16735:16897  \"for (uint256 i = 0; i < currentVesting.vestingCount; i++) {...\"\n                        for { }\n                        /** @src 8:16581:16595  \"defaultVesting\" */ 0x01\n                        /// @src 8:16740:16753  \"uint256 i = 0\"\n                        {\n                            /// @src 8:16788:16791  \"i++\"\n                            var_i := increment_uint256(var_i)\n                        }\n                        {\n                            /// @src 8:16755:16786  \"i < currentVesting.vestingCount\"\n                            if iszero(lt(var_i, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:16759:16786  \"currentVesting.vestingCount\" */ var_currentVesting_mpos)))\n                            /// @src 8:16755:16786  \"i < currentVesting.vestingCount\"\n                            { break }\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            mstore(_2, _1)\n                            mstore(_3, /** @src 8:16811:16825  \"vestingClaimed\" */ 0x10)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let dataSlot_1 := keccak256(_2, _4)\n                            mstore(_2, var_i)\n                            mstore(_3, dataSlot_1)\n                            /// @src 8:16807:16887  \"if (vestingClaimed[userAddress][i]) {...\"\n                            if /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(_2, _4)), 0xff)\n                            /// @src 8:16807:16887  \"if (vestingClaimed[userAddress][i]) {...\"\n                            {\n                                /// @src 8:16861:16872  \"return true\"\n                                var := /** @src 8:16581:16595  \"defaultVesting\" */ 0x01\n                                /// @src 8:16861:16872  \"return true\"\n                                leave\n                            }\n                        }\n                        /// @src 8:16907:16919  \"return false\"\n                        var := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _2\n                    }\n                    /// @src 8:19475:20598  \"function getNextUnlockDate(address userAddress) external view notZeroAddress(userAddress) returns (uint256) {...\"\n                    function fun_getNextUnlockDate_inner(var_userAddress) -> var\n                    {\n                        /// @src 8:19593:19654  \"IDappadVesting.Vesting memory currentVesting = defaultVesting\"\n                        let var_currentVesting_mpos := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting_37989()\n                        let _1 := 0\n                        mstore(_1, and(var_userAddress, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 8:19669:19683  \"customVestings\" */ 0x0f)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let dataSlot := keccak256(_1, 0x40)\n                        /// @src 8:19665:19784  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                        if /** @src 8:19669:19713  \"customVestings[userAddress].vestingCount > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(dataSlot)))\n                        /// @src 8:19665:19784  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                        {\n                            /// @src 8:19729:19773  \"currentVesting = customVestings[userAddress]\"\n                            var_currentVesting_mpos := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting(dataSlot)\n                        }\n                        /// @src 8:19817:19853  \"getUserNextVestingIndex(userAddress)\"\n                        let expr := /** @src 8:20707:20714  \"uint256\" */ modifier_notZeroAddress_37971(/** @src 8:19817:19853  \"getUserNextVestingIndex(userAddress)\" */ var_userAddress)\n                        /// @src 8:19864:20592  \"if (currentVesting.onTGE) {...\"\n                        switch /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ iszero(iszero(mload(/** @src 8:19868:19888  \"currentVesting.onTGE\" */ add(var_currentVesting_mpos, 128))))\n                        case /** @src 8:19864:20592  \"if (currentVesting.onTGE) {...\" */ 0 {\n                            /// @src 8:20261:20296  \"currentVesting.vestingCliffDuration\"\n                            let _2 := add(var_currentVesting_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                            /// @src 8:20258:20582  \"if(currentVesting.vestingCliffDuration > 0) {...\"\n                            switch /** @src 8:20261:20300  \"currentVesting.vestingCliffDuration > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:20261:20296  \"currentVesting.vestingCliffDuration\" */ _2)))\n                            case /** @src 8:20258:20582  \"if(currentVesting.vestingCliffDuration > 0) {...\" */ 0 {\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let _3 := sload(/** @src 8:20492:20507  \"vestingSettings\" */ 0x06)\n                                /// @src 8:20485:20567  \"return vestingSettings.startDate + (currentVesting.vestingDuration * vestingIndex)\"\n                                var := /** @src 8:20492:20567  \"vestingSettings.startDate + (currentVesting.vestingDuration * vestingIndex)\" */ checked_add_uint256(_3, /** @src 8:20521:20566  \"currentVesting.vestingDuration * vestingIndex\" */ checked_mul_uint256(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:20521:20551  \"currentVesting.vestingDuration\" */ add(var_currentVesting_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x20)), /** @src 8:20521:20566  \"currentVesting.vestingDuration * vestingIndex\" */ expr))\n                                /// @src 8:20485:20567  \"return vestingSettings.startDate + (currentVesting.vestingDuration * vestingIndex)\"\n                                leave\n                            }\n                            default /// @src 8:20258:20582  \"if(currentVesting.vestingCliffDuration > 0) {...\"\n                            {\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let _4 := sload(/** @src 8:20327:20342  \"vestingSettings\" */ 0x06)\n                                /// @src 8:20327:20390  \"vestingSettings.startDate + currentVesting.vestingCliffDuration\"\n                                let expr_1 := checked_add_uint256(_4, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:20355:20390  \"currentVesting.vestingCliffDuration\" */ _2))\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let _5 := mload(/** @src 8:20394:20424  \"currentVesting.vestingDuration\" */ add(var_currentVesting_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x20))\n                                let diff := add(expr, not(0))\n                                if gt(diff, expr)\n                                {\n                                    mstore(_1, shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(_1, 0x24)\n                                }\n                                /// @src 8:20320:20446  \"return vestingSettings.startDate + currentVesting.vestingCliffDuration + (currentVesting.vestingDuration * (vestingIndex - 1))\"\n                                var := /** @src 8:20327:20446  \"vestingSettings.startDate + currentVesting.vestingCliffDuration + (currentVesting.vestingDuration * (vestingIndex - 1))\" */ checked_add_uint256(expr_1, /** @src 8:20394:20445  \"currentVesting.vestingDuration * (vestingIndex - 1)\" */ checked_mul_uint256(_5, /** @src 8:20428:20444  \"vestingIndex - 1\" */ diff))\n                                /// @src 8:20320:20446  \"return vestingSettings.startDate + currentVesting.vestingCliffDuration + (currentVesting.vestingDuration * (vestingIndex - 1))\"\n                                leave\n                            }\n                        }\n                        default /// @src 8:19864:20592  \"if (currentVesting.onTGE) {...\"\n                        {\n                            /// @src 8:19907:19942  \"currentVesting.vestingCliffDuration\"\n                            let _6 := add(var_currentVesting_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                            /// @src 8:19904:20228  \"if(currentVesting.vestingCliffDuration > 0) {...\"\n                            switch /** @src 8:19907:19946  \"currentVesting.vestingCliffDuration > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:19907:19942  \"currentVesting.vestingCliffDuration\" */ _6)))\n                            case /** @src 8:19904:20228  \"if(currentVesting.vestingCliffDuration > 0) {...\" */ 0 {\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let _7 := sload(/** @src 8:20138:20153  \"vestingSettings\" */ 0x06)\n                                /// @src 8:20131:20213  \"return vestingSettings.startDate + (currentVesting.vestingDuration * vestingIndex)\"\n                                var := /** @src 8:20138:20213  \"vestingSettings.startDate + (currentVesting.vestingDuration * vestingIndex)\" */ checked_add_uint256(_7, /** @src 8:20167:20212  \"currentVesting.vestingDuration * vestingIndex\" */ checked_mul_uint256(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:20167:20197  \"currentVesting.vestingDuration\" */ add(var_currentVesting_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x20)), /** @src 8:20167:20212  \"currentVesting.vestingDuration * vestingIndex\" */ expr))\n                                /// @src 8:20131:20213  \"return vestingSettings.startDate + (currentVesting.vestingDuration * vestingIndex)\"\n                                leave\n                            }\n                            default /// @src 8:19904:20228  \"if(currentVesting.vestingCliffDuration > 0) {...\"\n                            {\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let _8 := sload(/** @src 8:19973:19988  \"vestingSettings\" */ 0x06)\n                                /// @src 8:19973:20036  \"vestingSettings.startDate + currentVesting.vestingCliffDuration\"\n                                let expr_2 := checked_add_uint256(_8, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:20001:20036  \"currentVesting.vestingCliffDuration\" */ _6))\n                                /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                                let _9 := mload(/** @src 8:20040:20070  \"currentVesting.vestingDuration\" */ add(var_currentVesting_mpos, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x20))\n                                let diff_1 := add(expr, not(0))\n                                if gt(diff_1, expr)\n                                {\n                                    mstore(_1, shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(_1, 0x24)\n                                }\n                                /// @src 8:19966:20092  \"return vestingSettings.startDate + currentVesting.vestingCliffDuration + (currentVesting.vestingDuration * (vestingIndex - 1))\"\n                                var := /** @src 8:19973:20092  \"vestingSettings.startDate + currentVesting.vestingCliffDuration + (currentVesting.vestingDuration * (vestingIndex - 1))\" */ checked_add_uint256(expr_2, /** @src 8:20040:20091  \"currentVesting.vestingDuration * (vestingIndex - 1)\" */ checked_mul_uint256(_9, /** @src 8:20074:20090  \"vestingIndex - 1\" */ diff_1))\n                                /// @src 8:19966:20092  \"return vestingSettings.startDate + currentVesting.vestingCliffDuration + (currentVesting.vestingDuration * (vestingIndex - 1))\"\n                                leave\n                            }\n                        }\n                    }\n                    /// @ast-id 1492 @src 8:3756:3851  \"modifier notZeroAddress(address _address) {...\"\n                    function modifier_notZeroAddress_37971(var_userAddress) -> _1\n                    {\n                        /// @src 8:3824:3832  \"_address\"\n                        fun_notZeroAddress(var_userAddress)\n                        /// @src 8:20726:20787  \"IDappadVesting.Vesting memory currentVesting = defaultVesting\"\n                        let var_currentVesting_mpos := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting_37989()\n                        let _2 := and(var_userAddress, sub(shl(160, 1), 1))\n                        let _3 := 0\n                        mstore(_3, _2)\n                        let _4 := 0x20\n                        mstore(_4, /** @src 8:20802:20816  \"customVestings\" */ 0x0f)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _5 := 0x40\n                        let dataSlot := keccak256(_3, _5)\n                        /// @src 8:20798:20917  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                        if /** @src 8:20802:20846  \"customVestings[userAddress].vestingCount > 0\" */ iszero(iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sload(dataSlot)))\n                        /// @src 8:20798:20917  \"if (customVestings[userAddress].vestingCount > 0) {...\"\n                        {\n                            /// @src 8:20862:20906  \"currentVesting = customVestings[userAddress]\"\n                            var_currentVesting_mpos := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ read_from_storage_reference_type_struct_Vesting(dataSlot)\n                        }\n                        /// @src 8:20927:20951  \"uint256 vestingIndex = 0\"\n                        let var_vestingIndex := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3\n                        /// @src 8:20967:20980  \"uint256 i = 0\"\n                        let var_i := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3\n                        /// @src 8:20962:21129  \"for (uint256 i = 0; i < currentVesting.vestingCount; i++) {...\"\n                        for { }\n                        /** @src 8:20773:20787  \"defaultVesting\" */ 0x01\n                        /// @src 8:20967:20980  \"uint256 i = 0\"\n                        {\n                            /// @src 8:21015:21018  \"i++\"\n                            var_i := increment_uint256(var_i)\n                        }\n                        {\n                            /// @src 8:20982:21013  \"i < currentVesting.vestingCount\"\n                            if iszero(lt(var_i, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(/** @src 8:20986:21013  \"currentVesting.vestingCount\" */ var_currentVesting_mpos)))\n                            /// @src 8:20982:21013  \"i < currentVesting.vestingCount\"\n                            { break }\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            mstore(_3, _2)\n                            mstore(_4, /** @src 8:21038:21052  \"vestingClaimed\" */ 0x10)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let dataSlot_1 := keccak256(_3, _5)\n                            mstore(_3, var_i)\n                            mstore(_4, dataSlot_1)\n                            /// @src 8:21034:21119  \"if (vestingClaimed[userAddress][i]) {...\"\n                            if /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(_3, _5)), 0xff)\n                            /// @src 8:21034:21119  \"if (vestingClaimed[userAddress][i]) {...\"\n                            {\n                                /// @src 8:21088:21104  \"vestingIndex = i\"\n                                var_vestingIndex := var_i\n                            }\n                        }\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let sum := add(var_vestingIndex, /** @src 8:20773:20787  \"defaultVesting\" */ 0x01)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        if gt(var_vestingIndex, sum)\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(_3, 0x24)\n                        }\n                        /// @src 8:3843:3844  \"_\"\n                        _1 := sum\n                    }\n                    /// @ast-id 3415 @src 8:21889:22023  \"function _notZeroAddress(address _address) internal pure {...\"\n                    function fun_notZeroAddress(var__address)\n                    {\n                        /// @src 8:21956:22016  \"if (_address == address(0)) revert Errors.ZeroAddressError()\"\n                        if /** @src 8:21960:21982  \"_address == address(0)\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(/** @src 8:21960:21982  \"_address == address(0)\" */ var__address, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 8:21956:22016  \"if (_address == address(0)) revert Errors.ZeroAddressError()\"\n                        {\n                            /// @src 8:21991:22016  \"Errors.ZeroAddressError()\"\n                            let _1 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(64)\n                            /// @src 8:21991:22016  \"Errors.ZeroAddressError()\"\n                            mstore(_1, /** @src 8:11848:11873  \"Errors.ZeroAddressError()\" */ shl(224, 0x3efa09af))\n                            /// @src 8:21991:22016  \"Errors.ZeroAddressError()\"\n                            revert(_1, 4)\n                        }\n                    }\n                    /// @ast-id 3455 @src 8:22168:22337  \"function _onlyOwnerOrAdmin(address _address) internal view {...\"\n                    function fun_onlyOwnerOrAdmin(var_address)\n                    {\n                        /// @src 0:2954:2960  \"_roles\"\n                        let _1 := 0x00\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:335:353  \"keccak256(\\\"OWNER\\\")\" */ 0x6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                        /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                        let _2 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                        let _3 := and(var_address, sub(shl(160, 1), 1))\n                        mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3)\n                        mstore(0x20, _2)\n                        /// @src 8:22241:22295  \"!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)\"\n                        let expr := /** @src 8:22241:22266  \"!hasRole(OWNER, _address)\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)), 0xff))\n                        /// @src 8:22241:22295  \"!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)\"\n                        if expr\n                        {\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:391:409  \"keccak256(\\\"ADMIN\\\")\" */ 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ _1)\n                            /// @src 8:257:22610  \"contract DappadVesting is AccessControl {...\"\n                            let _4 := keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)\n                            mstore(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ _3)\n                            mstore(0x20, _4)\n                            /// @src 8:22241:22295  \"!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)\"\n                            expr := /** @src 8:22270:22295  \"!hasRole(ADMIN, _address)\" */ iszero(/** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ and(sload(keccak256(/** @src 0:2954:2960  \"_roles\" */ _1, /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ 0x40)), 0xff))\n                        }\n                        /// @src 8:22237:22330  \"if (!hasRole(OWNER, _address) && !hasRole(ADMIN, _address)) revert Errors.UnauthorizedError()\"\n                        if expr\n                        {\n                            /// @src 8:22304:22330  \"Errors.UnauthorizedError()\"\n                            let _5 := /** @src 8:257:22610  \"contract DappadVesting is AccessControl {...\" */ mload(0x40)\n                            /// @src 8:22304:22330  \"Errors.UnauthorizedError()\"\n                            mstore(_5, shl(224, 0x8b5701f7))\n                            revert(_5, 4)\n                        }\n                    }\n                }\n                data \".metadata\" hex\"a2646970667358221220b67f83c1094808ce039eec8df40a31911f8f14dfce2edd589119fc7a9b7f8d4764736f6c63430008140033\"\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122044f2b35db933746c19ffc731e23710e1de3f6e1bc150bcadb58f518e3bc6c15464736f6c63430008140033\"\n    }\n}\n","hash":"0100017fc9a9011c3afd6b188a945ff661d6169f7c0432198b260946bd970886","factoryDependencies":{"01000a817e174227101447765ac20b7e0d63499aeed18265e7b727b47a86e424":"contracts/core/DappadVesting.sol:DappadVesting"}}},"contracts/errors/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"AlreadyClaimedError","type":"error"},{"inputs":[],"name":"AlreadyJoinedSaleError","type":"error"},{"inputs":[],"name":"AlreadyRefundedError","type":"error"},{"inputs":[],"name":"ArraysLengthMismatchError","type":"error"},{"inputs":[],"name":"EmergencyOverAmountError","type":"error"},{"inputs":[],"name":"EmergencyOverRewardError","type":"error"},{"inputs":[],"name":"EmptySaleNameError","type":"error"},{"inputs":[],"name":"EmptyTierDetailsError","type":"error"},{"inputs":[],"name":"EmptyVestingPercentageError","type":"error"},{"inputs":[],"name":"FCFSSaleAlreadyStartedError","type":"error"},{"inputs":[],"name":"FCFSSaleNotEnabledError","type":"error"},{"inputs":[],"name":"FCFSSaleNotStartedError","type":"error"},{"inputs":[],"name":"FailedToAddToken","type":"error"},{"inputs":[],"name":"FirstVestingAlreadyClaimedError","type":"error"},{"inputs":[],"name":"InsufficientAllowanceError","type":"error"},{"inputs":[],"name":"InsufficientBalanceError","type":"error"},{"inputs":[],"name":"InsufficientContractBalanceError","type":"error"},{"inputs":[],"name":"InvalidAmountError","type":"error"},{"inputs":[],"name":"InvalidInterestRateError","type":"error"},{"inputs":[],"name":"InvalidLockDurationError","type":"error"},{"inputs":[],"name":"InvalidMaxInvestmentAmountError","type":"error"},{"inputs":[],"name":"InvalidPaymasterInputLengthError","type":"error"},{"inputs":[],"name":"InvalidSaleDurationError","type":"error"},{"inputs":[],"name":"InvalidSaleEndDateError","type":"error"},{"inputs":[],"name":"InvalidSaleIndexError","type":"error"},{"inputs":[],"name":"InvalidSaleStartDateError","type":"error"},{"inputs":[],"name":"InvalidStakeContractAddressError","type":"error"},{"inputs":[],"name":"InvalidStakeIndexError","type":"error"},{"inputs":[],"name":"InvalidTierIndexError","type":"error"},{"inputs":[],"name":"InvalidTokenError","type":"error"},{"inputs":[],"name":"InvalidVestingDurationError","type":"error"},{"inputs":[],"name":"InvalidVestingIndexError","type":"error"},{"inputs":[],"name":"MaxNodeCountPerUserReachedError","type":"error"},{"inputs":[],"name":"MaxNodeCountReachedError","type":"error"},{"inputs":[],"name":"MaxTierInvestmentReachedError","type":"error"},{"inputs":[],"name":"MaxTotalInvestmentReachedError","type":"error"},{"inputs":[],"name":"MaximumInvestmentReachedError","type":"error"},{"inputs":[],"name":"MaximumNodeTierReachedError","type":"error"},{"inputs":[],"name":"MinimumInvestmentNotReachedError","type":"error"},{"inputs":[],"name":"MinimumNodeTierNotReachedError","type":"error"},{"inputs":[],"name":"MinimumStakePointsNotReachedError","type":"error"},{"inputs":[],"name":"MinimumUserTierNotReachedError","type":"error"},{"inputs":[],"name":"NoRewardToHarvestError","type":"error"},{"inputs":[],"name":"NoRewardToReInvestError","type":"error"},{"inputs":[],"name":"NoTierDetailsFoundError","type":"error"},{"inputs":[],"name":"NotEnabledError","type":"error"},{"inputs":[],"name":"NotJoinedSaleError","type":"error"},{"inputs":[],"name":"OnlyBootloaderError","type":"error"},{"inputs":[],"name":"RefundNotEnabledError","type":"error"},{"inputs":[],"name":"RefundPeriodOverError","type":"error"},{"inputs":[],"name":"RegisterAlreadyEndedError","type":"error"},{"inputs":[],"name":"RegisterNotStartedError","type":"error"},{"inputs":[],"name":"SaleAlreadyEndedError","type":"error"},{"inputs":[],"name":"SaleIsPausedError","type":"error"},{"inputs":[],"name":"SaleNotEndedError","type":"error"},{"inputs":[],"name":"SaleNotStartedError","type":"error"},{"inputs":[],"name":"StakeIsPausedError","type":"error"},{"inputs":[],"name":"StakePeriodNotOverError","type":"error"},{"inputs":[],"name":"TierOneCannotJoinStakerRoundError","type":"error"},{"inputs":[],"name":"TokenTransferFailedError","type":"error"},{"inputs":[],"name":"TotalVestingPercentageError","type":"error"},{"inputs":[],"name":"TxTransferFailedError","type":"error"},{"inputs":[],"name":"UnauthorizedError","type":"error"},{"inputs":[],"name":"UnsupportedPaymasterFlowError","type":"error"},{"inputs":[],"name":"UserAlreadyRegisteredError","type":"error"},{"inputs":[],"name":"UserHasNoNFTError","type":"error"},{"inputs":[],"name":"UserHasNoNFTsError","type":"error"},{"inputs":[],"name":"UserHasNoStakedAmountError","type":"error"},{"inputs":[],"name":"UserNotRegisteredError","type":"error"},{"inputs":[],"name":"UserNotWhitelistedError","type":"error"},{"inputs":[],"name":"VestingNotClaimableError","type":"error"},{"inputs":[],"name":"VestingsNotClaimableError","type":"error"},{"inputs":[],"name":"ZeroAddressError","type":"error"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyClaimedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyJoinedSaleError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyRefundedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArraysLengthMismatchError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmergencyOverAmountError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmergencyOverRewardError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptySaleNameError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyTierDetailsError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyVestingPercentageError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FCFSSaleAlreadyStartedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FCFSSaleNotEnabledError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FCFSSaleNotStartedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedToAddToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FirstVestingAlreadyClaimedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAllowanceError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalanceError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientContractBalanceError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmountError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInterestRateError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLockDurationError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaxInvestmentAmountError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPaymasterInputLengthError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSaleDurationError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSaleEndDateError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSaleIndexError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSaleStartDateError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidStakeContractAddressError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidStakeIndexError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTierIndexError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVestingDurationError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVestingIndexError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxNodeCountPerUserReachedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxNodeCountReachedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxTierInvestmentReachedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxTotalInvestmentReachedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaximumInvestmentReachedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaximumNodeTierReachedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinimumInvestmentNotReachedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinimumNodeTierNotReachedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinimumStakePointsNotReachedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinimumUserTierNotReachedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoRewardToHarvestError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoRewardToReInvestError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoTierDetailsFoundError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnabledError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotJoinedSaleError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyBootloaderError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RefundNotEnabledError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RefundPeriodOverError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RegisterAlreadyEndedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RegisterNotStartedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SaleAlreadyEndedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SaleIsPausedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SaleNotEndedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SaleNotStartedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StakeIsPausedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StakePeriodNotOverError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TierOneCannotJoinStakerRoundError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenTransferFailedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TotalVestingPercentageError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TxTransferFailedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedPaymasterFlowError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserAlreadyRegisteredError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserHasNoNFTError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserHasNoNFTsError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserHasNoStakedAmountError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserNotRegisteredError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserNotWhitelistedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VestingNotClaimableError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VestingsNotClaimableError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressError\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/errors/Errors.sol\":\"Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/errors/Errors.sol\":{\"keccak256\":\"0x1e7bd8e98aaf625e63f63fa8d2bf4f8b4beb93313e33dfb6affdcdd9a7524f70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0613414bf0ad19a7ebc66e8eba189869aacf94f9e734536488a75216942650\",\"dweb:/ipfs/QmRGKqDpx3ef5D3MXMyoR7U23HWqDZmj9Kt2QJgcgD37YR\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"contracts/interfaces/Interfaces.sol":{"IDappadSale":{"abi":[{"inputs":[],"name":"addSaleToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getIsSaleActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRefundEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSaleEndDate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSaleTokenPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserInvestmentAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserRefunded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"addSaleToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIsSaleActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRefundEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSaleEndDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSaleTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserInvestmentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserRefunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/Interfaces.sol\":\"IDappadSale\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xcee038fff82ea087fcca9ccabcc0e8e8d98fe8e907c3d781e16b653badd7bd42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8437b64a0e7587e2d0ab0f37767f9be8bce72b41ecb3c340940a301f35422f48\",\"dweb:/ipfs/QmYy6hA9PY78CDsq71zPsYxBKJxGgSSpSmhXSW4kSLke4a\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"addSaleToken()":"f15ce722","getIsSaleActive()":"c077da9e","getRefundEnabled()":"85c06faa","getSaleEndDate()":"2ecad13f","getSaleTokenPrice()":"06c8e316","getUserInvestmentAmount(address)":"5e87e5a6","getUserRefunded(address)":"cf72d3db"}},"irOptimized":""},"IDappadSaleFactory":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/Interfaces.sol\":\"IDappadSaleFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xcee038fff82ea087fcca9ccabcc0e8e8d98fe8e907c3d781e16b653badd7bd42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8437b64a0e7587e2d0ab0f37767f9be8bce72b41ecb3c340940a301f35422f48\",\"dweb:/ipfs/QmYy6hA9PY78CDsq71zPsYxBKJxGgSSpSmhXSW4kSLke4a\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""},"IDappadStake":{"abi":[{"inputs":[],"name":"getStakeStatistics","outputs":[{"components":[{"internalType":"uint256","name":"rewardBalance","type":"uint256"},{"internalType":"uint256","name":"totalStakedAmount","type":"uint256"},{"internalType":"uint256","name":"totalHarvestedRewardAmount","type":"uint256"},{"internalType":"uint256","name":"totalParticipants","type":"uint256"}],"internalType":"struct IDappadStake.StakeStatistics","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserStake","outputs":[{"components":[{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"totalStakedAmount","type":"uint256"},{"internalType":"uint256","name":"totalStakePoints","type":"uint256"},{"internalType":"uint256","name":"stakeCount","type":"uint256"},{"components":[{"internalType":"uint256","name":"interestRate","type":"uint256"},{"internalType":"uint256","name":"stakeTime","type":"uint256"},{"internalType":"uint256","name":"stakedAmount","type":"uint256"}],"internalType":"struct IDappadStake.StakeFeatures[]","name":"stakeFeatures","type":"tuple[]"}],"internalType":"struct IDappadStake.Stake","name":"","type":"tuple"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getStakeStatistics\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rewardBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalHarvestedRewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalParticipants\",\"type\":\"uint256\"}],\"internalType\":\"struct IDappadStake.StakeStatistics\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserStake\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakePoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeCount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct IDappadStake.StakeFeatures[]\",\"name\":\"stakeFeatures\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IDappadStake.Stake\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/Interfaces.sol\":\"IDappadStake\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xcee038fff82ea087fcca9ccabcc0e8e8d98fe8e907c3d781e16b653badd7bd42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8437b64a0e7587e2d0ab0f37767f9be8bce72b41ecb3c340940a301f35422f48\",\"dweb:/ipfs/QmYy6hA9PY78CDsq71zPsYxBKJxGgSSpSmhXSW4kSLke4a\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"getStakeStatistics()":"5a129248","getUserStake(address)":"bbadc93a"}},"irOptimized":""},"IDappadStakeController":{"abi":[{"inputs":[],"name":"getTierCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserTierIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getTierCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserTierIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/Interfaces.sol\":\"IDappadStakeController\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xcee038fff82ea087fcca9ccabcc0e8e8d98fe8e907c3d781e16b653badd7bd42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8437b64a0e7587e2d0ab0f37767f9be8bce72b41ecb3c340940a301f35422f48\",\"dweb:/ipfs/QmYy6hA9PY78CDsq71zPsYxBKJxGgSSpSmhXSW4kSLke4a\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"getTierCount()":"67184e28","getUserTierIndex(address)":"bb9d537b"}},"irOptimized":""},"IDappadStakeControllerFactory":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/Interfaces.sol\":\"IDappadStakeControllerFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xcee038fff82ea087fcca9ccabcc0e8e8d98fe8e907c3d781e16b653badd7bd42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8437b64a0e7587e2d0ab0f37767f9be8bce72b41ecb3c340940a301f35422f48\",\"dweb:/ipfs/QmYy6hA9PY78CDsq71zPsYxBKJxGgSSpSmhXSW4kSLke4a\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""},"IDappadStakeFactory":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/Interfaces.sol\":\"IDappadStakeFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xcee038fff82ea087fcca9ccabcc0e8e8d98fe8e907c3d781e16b653badd7bd42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8437b64a0e7587e2d0ab0f37767f9be8bce72b41ecb3c340940a301f35422f48\",\"dweb:/ipfs/QmYy6hA9PY78CDsq71zPsYxBKJxGgSSpSmhXSW4kSLke4a\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""},"IDappadVesting":{"abi":[{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getAnyVestingClaimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalVestingAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserTotalVestingAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserUnclaimedTokenAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"uint256","name":"vestingIndex","type":"uint256"}],"name":"getVestingClaimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"setTotalVestingAmount","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getAnyVestingClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalVestingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserTotalVestingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserUnclaimedTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"vestingIndex\",\"type\":\"uint256\"}],\"name\":\"getVestingClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setTotalVestingAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/Interfaces.sol\":\"IDappadVesting\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xcee038fff82ea087fcca9ccabcc0e8e8d98fe8e907c3d781e16b653badd7bd42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8437b64a0e7587e2d0ab0f37767f9be8bce72b41ecb3c340940a301f35422f48\",\"dweb:/ipfs/QmYy6hA9PY78CDsq71zPsYxBKJxGgSSpSmhXSW4kSLke4a\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"getAnyVestingClaimed(address)":"786b4456","getTotalVestingAmount()":"17a76955","getUserTotalVestingAmount(address)":"bf5a0c59","getUserUnclaimedTokenAmount(address)":"cd861e16","getVestingClaimed(address,uint256)":"7eb16ac2","setTotalVestingAmount(uint256)":"75420c99"}},"irOptimized":""},"IDappadVestingFactory":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/Interfaces.sol\":\"IDappadVestingFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xcee038fff82ea087fcca9ccabcc0e8e8d98fe8e907c3d781e16b653badd7bd42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8437b64a0e7587e2d0ab0f37767f9be8bce72b41ecb3c340940a301f35422f48\",\"dweb:/ipfs/QmYy6hA9PY78CDsq71zPsYxBKJxGgSSpSmhXSW4kSLke4a\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""},"IERC20Extented":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/Interfaces.sol\":\"IERC20Extented\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xcee038fff82ea087fcca9ccabcc0e8e8d98fe8e907c3d781e16b653badd7bd42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8437b64a0e7587e2d0ab0f37767f9be8bce72b41ecb3c340940a301f35422f48\",\"dweb:/ipfs/QmYy6hA9PY78CDsq71zPsYxBKJxGgSSpSmhXSW4kSLke4a\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""},"IERC721Extented":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"tokensOfOwner","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/Interfaces.sol\":\"IERC721Extented\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/interfaces/Interfaces.sol\":{\"keccak256\":\"0xcee038fff82ea087fcca9ccabcc0e8e8d98fe8e907c3d781e16b653badd7bd42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8437b64a0e7587e2d0ab0f37767f9be8bce72b41ecb3c340940a301f35422f48\",\"dweb:/ipfs/QmYy6hA9PY78CDsq71zPsYxBKJxGgSSpSmhXSW4kSLke4a\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokensOfOwner(address)":"8462151c","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}}}}}